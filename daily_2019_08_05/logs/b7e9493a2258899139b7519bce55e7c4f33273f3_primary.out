cset: moving following pidspec: 14856
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341812434 seconds)
loading group "string"... done (took 0.536768413 seconds)
loading group "linalg"... done (took 6.749389642 seconds)
loading group "parallel"... done (took 0.156609078 seconds)
loading group "find"... done (took 1.174793317 seconds)
loading group "tuple"... done (took 1.766021392 seconds)
loading group "dates"... done (took 1.208093638 seconds)
loading group "micro"... done (took 0.295159082 seconds)
loading group "io"... done (took 0.902998744 seconds)
loading group "scalar"... done (took 38.177990789 seconds)
loading group "sparse"... done (took 11.434662879 seconds)
loading group "broadcast"... done (took 0.916746876 seconds)
loading group "union"... done (took 12.474792005 seconds)
loading group "simd"... done (took 4.494630809 seconds)
loading group "random"... done (took 8.592716567 seconds)
loading group "problem"... done (took 1.874930861 seconds)
loading group "array"... done (took 19.950555713 seconds)
loading group "misc"... done (took 1.683065724 seconds)
loading group "sort"... done (took 3.109170386 seconds)
loading group "collection"... done (took 16.795684032 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.47950935 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121449072 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113523392 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117344122 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138649725 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113869227 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121446503 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083249233 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.773826409 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.139795071 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118284107 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.408339312 seconds)
done (took 4.893387387 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170610911 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081451369 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080574156 seconds)
  done (took 1.281348941 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065140308 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120627311 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065956221 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065993894 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066106105 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065255926 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06506763 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064926212 seconds)
  done (took 1.633956343 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071787483 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067141582 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067988892 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066725666 seconds)
  done (took 1.393821274 seconds)
done (took 5.675078238 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.761677238 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198904896 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18175004 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.391115223 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125686635 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.161322502 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.6405472 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.301471826 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180935016 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079605079 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101823111 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318461398 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105649017 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643674411 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07577278 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088844724 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136532835 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.440685046 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066160644 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.0812326 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088274379 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.1271722 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084142924 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075148209 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143242714 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067134462 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127649345 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079314667 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065516433 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.204843306 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171731864 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654226089 seconds)
  done (took 10.127012775 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095305212 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096169759 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067681787 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122165023 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095556597 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068665618 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070220038 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066519428 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085893648 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127203007 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087806608 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10035664 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064568942 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068558899 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083848109 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202296227 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079159398 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080183301 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070266907 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074495673 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104701449 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077629765 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077228337 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077200382 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127417436 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178316994 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095293332 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096259372 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067374303 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081004569 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115860022 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127676511 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065175087 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065430508 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123140429 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093568535 seconds)
  done (took 4.538170498 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.895723308 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.13674908 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08962204 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159463759 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066826821 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105528007 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064850083 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083139365 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.196937304 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.028648553 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.429976658 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109251149 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083615234 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066838989 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067493736 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06561555 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.34517248 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108414768 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111512192 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082469097 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073369059 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06799483 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340294853 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066564515 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065354019 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067710643 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057100081 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111208835 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067524875 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.970241415 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.11480568 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066259696 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100551633 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162037761 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085754627 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131174564 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064235513 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064009784 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.143955303 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07185666 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.063787045 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080343125 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101451646 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.100137852 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066811139 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064987381 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.291184275 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067873952 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085092158 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.720674816 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153645935 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093820064 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067022002 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243336399 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08391537 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065750261 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063929931 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.185887129 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128923566 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068456378 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066507702 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0660378 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067260791 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.347654718 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066073312 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.920808601 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070126661 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078133401 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070151806 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066144634 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072055947 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070857364 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08415095 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065661903 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067384784 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065508896 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065140179 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067347574 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064770592 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083208103 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.18923066 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065852755 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066284989 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064152614 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084976259 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095737802 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067955601 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064505759 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104290063 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06722405 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066446235 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100016366 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065981861 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.088810802 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062923397 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082846378 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068398069 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112110126 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065359821 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.089999848 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06604154 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097560359 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.067168085 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099372283 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076252639 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067107899 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.310187879 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063682201 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064767258 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064330885 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066520012 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067761187 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066528752 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068308265 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078076399 seconds)
  done (took 19.904123438 seconds)
done (took 36.584628679 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.273175353 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073778318 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074042157 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074229062 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074146333 seconds)
  done (took 1.773943803 seconds)
done (took 2.958344236 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118381506 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097154797 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063320908 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094107944 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063338818 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098793025 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097772209 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080460022 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098190777 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063467689 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094729163 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063821666 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063906842 seconds)
  done (took 2.304124697 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081662136 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082706396 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069459634 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08192953 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063496925 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081143489 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080095677 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08727899 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079891483 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071571863 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062924358 seconds)
  done (took 2.023536003 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080243034 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082734195 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068408225 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080914939 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062814272 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080288819 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079842295 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084350133 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079915995 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072467267 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06305527 seconds)
  done (took 2.013835123 seconds)
done (took 7.517164385 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075648907 seconds)
  done (took 1.245716211 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.581295314 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.131298735 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080279796 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110214357 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182346793 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117131256 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272495215 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085248806 seconds)
  done (took 8.9104955 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086404277 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068254325 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.080477903 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070208783 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069660975 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067215132 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071161359 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069013475 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071379441 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067310571 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068343872 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070533866 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070542348 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070557495 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068764124 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068218236 seconds)
  done (took 2.378920016 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09061084 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089468188 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072679064 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073381338 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071095932 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071339069 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073573271 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072065562 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069891032 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07126201 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073558641 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072419476 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070360233 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064761164 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072741963 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.0741435 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069722481 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073108518 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073848622 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074053277 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073186383 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06405731 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070243039 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07260217 seconds)
  done (took 3.029685963 seconds)
done (took 16.743201722 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110464207 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070076699 seconds)
  done (took 1.359585731 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079496014 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080626701 seconds)
  done (took 1.343523118 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080268735 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064702216 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08821387 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076316401 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065236347 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06555554 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08587661 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065565223 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065068004 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065282956 seconds)
  done (took 1.905560851 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067384116 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076758808 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069044095 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079716357 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072604895 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062968521 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071279231 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066951994 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076471091 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061750812 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069817275 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081095803 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069957524 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082321961 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071061852 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067064021 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069428243 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066081576 seconds)
  done (took 2.469910098 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06455331 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065668998 seconds)
  done (took 1.324130997 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066723589 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062589419 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066598231 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065595543 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062547322 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061536963 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062470841 seconds)
  done (took 1.638463458 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.373779653 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11001216 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.293180217 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070011472 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080930567 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248521563 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064566894 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069768413 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069825538 seconds)
  done (took 2.61397823 seconds)
done (took 13.848188227 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077886347 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084340192 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094665501 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.339438006 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091264776 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065269436 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112763262 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18608265 seconds)
done (took 2.253552019 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.20605179 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.559222638 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.367692748 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.19437897 seconds)
  done (took 2.317213009 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.31447502 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090766352 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05830756 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065898669 seconds)
  done (took 1.731860162 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065315612 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068313983 seconds)
  done (took 1.334796906 seconds)
done (took 6.792847311 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065848202 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065323175 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062935935 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065368727 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06334762 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063106364 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065338241 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065130621 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.065879705 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082422571 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.067611442 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065375379 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062911558 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062985782 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06535231 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064953687 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071955015 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062698184 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06248972 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062661445 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063002696 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064807621 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065566587 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063180269 seconds)
  done (took 2.806128706 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082543441 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065684287 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07091512 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070289408 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069319532 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070656976 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070202482 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065753543 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070812988 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067850816 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069088744 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069343343 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067202489 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06943555 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067623029 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069235213 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070565063 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065846847 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067400735 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069277363 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070446171 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065956911 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069426284 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070429817 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068928761 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069063761 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067428202 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065948402 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070364979 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068648291 seconds)
  done (took 3.286202177 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068747847 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063263986 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063377547 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070332725 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063417529 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063903292 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062807163 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063204983 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063802907 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062944434 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064291194 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062701906 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063162773 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063741559 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063944988 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066507552 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078166727 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063470541 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063287798 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063507718 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065984998 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062742472 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063183157 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062829278 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06310121 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062556447 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063448677 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062786898 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063667324 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06268765 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066254335 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066606018 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062772004 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069620433 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066635815 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062614468 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066778713 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062848913 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063612344 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062666948 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06263409 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062932811 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063388472 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070184698 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062751089 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064295364 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062989629 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063744538 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063724264 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065588602 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062684153 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062464592 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064667908 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063786026 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066596435 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062352418 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06356222 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062272748 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063777485 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062768234 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062793205 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063668439 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066718445 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064146258 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077865871 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070032513 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06242878 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064144156 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064266513 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066426475 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065633064 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077324424 seconds)
  done (took 5.878016405 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089468093 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.197723901 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064883993 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065228014 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061565697 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064998014 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066397703 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063425848 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064634269 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068991478 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063630411 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064370433 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064506593 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076019729 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063509121 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064370829 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068722642 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061285127 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063112737 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066608896 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063882439 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066128867 seconds)
  done (took 2.816763285 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152668838 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069405315 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104882623 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072411655 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066873388 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072059664 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068712471 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069574227 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069092157 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067495272 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067542833 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069330654 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066722094 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067127059 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067369414 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067200596 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069317258 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067315009 seconds)
  done (took 2.57090765 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076255998 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064981665 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08588924 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065214239 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065010776 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067548853 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070019111 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073191447 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067626673 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065339492 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073481535 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067353381 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067282419 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065033231 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06743928 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06513357 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067659428 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065120769 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073145407 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069543041 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069422508 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073301292 seconds)
  done (took 2.7418034 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078684725 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06785851 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082238155 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068002579 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061281647 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063808475 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06946575 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065396297 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069455988 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067027986 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065144831 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063818998 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068642175 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065597995 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068506796 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065488012 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066884616 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064760377 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066865276 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060896814 seconds)
  done (took 2.56800986 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084831454 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067215001 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067249819 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074983056 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066722269 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067229536 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074285431 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066478066 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067031118 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086321014 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066270432 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066346543 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074177576 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0710074 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066142839 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074359271 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073729405 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073691953 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066182227 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066112069 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085996103 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066358528 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07377275 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066175574 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066276845 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066535239 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066203056 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070952938 seconds)
  done (took 3.201819563 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065099529 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065637865 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062368845 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06283399 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063353742 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062683683 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062862464 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06266057 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065209125 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062868138 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065157946 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06493468 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064903616 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064864045 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065345071 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064913162 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064945518 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063126954 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062893494 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062620911 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065037005 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065125745 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064873436 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062564974 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06267473 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064786243 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062461396 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062885384 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065005791 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062418709 seconds)
  done (took 3.139450326 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074305587 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072054895 seconds)
  done (took 1.36989094 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062018808 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079141068 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062442911 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068606417 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068358517 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066073811 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072052769 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068744759 seconds)
  done (took 1.766833403 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079858772 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075896233 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067283393 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079187001 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075199437 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081993376 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131217438 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066174586 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071858609 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06314352 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079166711 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064614214 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071066506 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065995199 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071028062 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071810676 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063220201 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071324675 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067569387 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063775381 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06626326 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073700864 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067500516 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060618192 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066231337 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087075649 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076137052 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064832317 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068234789 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072535527 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070737271 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059594163 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06537115 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066450092 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063973123 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074693812 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08083152 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068281608 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074223237 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066060595 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075513256 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060346226 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.06978652 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071385927 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076074937 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066246439 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066139785 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060193114 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063062862 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067509198 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060408846 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065578603 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059891128 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074672742 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068350172 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07512022 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063996507 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066518908 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067685281 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068265752 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071580358 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067175861 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067614109 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064653085 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074657886 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070613482 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076387006 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062291415 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061559012 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065136762 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077469915 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090177429 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073871112 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068099029 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067938763 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065228509 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070601144 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068273616 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073353246 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074296361 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067370473 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07210908 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072786154 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065962264 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068127697 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073657394 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06388397 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06816659 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063503569 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081616017 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064440215 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063651633 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063587667 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075831146 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069109192 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06520489 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063431873 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073372273 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060409807 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066325008 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066882545 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067657918 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075726052 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06890174 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069167847 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072720437 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071509377 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064756889 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067809562 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061496929 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065233373 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063601162 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07158175 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058738416 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066986875 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064811051 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064647485 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199330817 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06503787 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067491219 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075179149 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073746987 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06671106 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064652957 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070553872 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068307771 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071923866 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075442314 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067080676 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062878221 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063166055 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071344042 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06806243 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072169273 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070425171 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069042363 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060435556 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064256099 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071411361 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074423367 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066289278 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066435122 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071801269 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067041848 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064666077 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073304371 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06823428 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065623919 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071961132 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066555168 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061614622 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069013492 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069015521 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064087938 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069823066 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069446519 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068769056 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066407347 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065088217 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073346881 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06710542 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065169806 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066171836 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064532732 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076303167 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067803996 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06157995 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06341769 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075399873 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063692115 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06563957 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065205275 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068369275 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066063598 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064618992 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065329407 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068042212 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075518679 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069515351 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06653926 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071306426 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076572706 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065555763 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067970134 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064936588 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066494742 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06734122 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076261882 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072668962 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070092634 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069448438 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063661689 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072419236 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073030615 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064388776 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062993613 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064273896 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070906518 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072647924 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070724632 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066917336 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064267733 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066631815 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068330701 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068366303 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065208013 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06495801 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071947991 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063775 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072396337 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06625863 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075503306 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068565862 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060913566 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069209407 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064035402 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071529031 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060904407 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063411855 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065255163 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066408048 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064687063 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067902917 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059816594 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072272822 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073753487 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066359855 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065040935 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064375881 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070768361 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065711225 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067843628 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067922269 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069940206 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074571407 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064158996 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067553768 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07449268 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.192698028 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061465985 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071823758 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065396353 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065585541 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064718812 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06505819 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068797415 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075017433 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073088201 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060505093 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068986884 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064796939 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06576355 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061772693 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071170554 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069245618 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067472357 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073096424 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066945782 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066237924 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070957528 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065312536 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066711368 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067480436 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069093045 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067039303 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068491816 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066226242 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068866092 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065568944 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06417453 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068087107 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06674634 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067093512 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071977024 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066196632 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066156579 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068221441 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066656475 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067056044 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066565383 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066174154 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069513396 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066391981 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066477457 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068477684 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061527032 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073174155 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065768914 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07298226 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066609638 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062501103 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072649798 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068325047 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071231447 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066422336 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066250948 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067078686 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06518538 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068818184 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072728436 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063801527 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07618026 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074059588 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066062322 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068394686 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066592686 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06733912 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064967187 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066557942 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06622351 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067619193 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067250172 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072031958 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069547962 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067187323 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068146548 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066408467 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066021293 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066546105 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060306672 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064586195 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064772956 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06511144 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07465744 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065735628 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065087664 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064095057 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065947117 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064499037 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06219278 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073270025 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074570726 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065949522 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072612336 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06476109 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067727754 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07596912 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059891075 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064168861 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063710525 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063438554 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072298291 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065686186 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.0741638 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065071903 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065274067 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06253716 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065589856 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063717623 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059379351 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062615186 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067895487 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063731943 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063301013 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064092491 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066354033 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064551663 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072978602 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063469952 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064820155 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06410185 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061367854 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063333892 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.196085514 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069290242 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067018748 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063765527 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063719584 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06513596 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067302621 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067866708 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065988943 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067305058 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076043439 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066023636 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069233002 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069207304 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061268612 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06893854 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066707106 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066316396 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065579931 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070262717 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069681304 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067067376 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07557718 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065587707 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066320755 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06564864 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064178379 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065649608 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065809944 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066157919 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065542088 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.0670971 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074414405 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064064065 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068749988 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066563486 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06695067 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07255299 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06709631 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069005919 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072472809 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066288977 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068431187 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074403251 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07044195 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06933383 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066563102 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067507613 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071640782 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064970659 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072142328 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065956035 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066483969 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06842144 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06398412 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06529387 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064971746 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064822819 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071169005 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065675195 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065144531 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065302435 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063210326 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066587857 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068870299 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073228293 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067814624 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068247584 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061406955 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063169396 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066328035 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063703062 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067410505 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068108857 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071360982 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067831696 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065679538 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064266839 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074735146 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070619729 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068877773 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06322839 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069294035 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066879676 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067578361 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067176071 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066856631 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068239134 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070782124 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066799904 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064951595 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072442727 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068485809 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066628142 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067024056 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066647278 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065940889 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0609767 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06585996 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067563647 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0706772 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068022883 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065626497 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075618581 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063508926 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065901329 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068409183 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064672274 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069813985 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060738985 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066624476 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065808869 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065686421 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060444975 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06446637 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062481692 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066163481 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063978719 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059487032 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073983508 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072558999 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06699417 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063081988 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063151937 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059696691 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.191859594 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065615135 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067248579 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067746789 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076019913 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065443151 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065340252 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061077956 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066580851 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069106347 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069214761 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063251092 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061249 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06503953 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068894437 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071391031 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064962934 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065992495 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068902662 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068168417 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064174302 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069698401 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063008544 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069220979 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078630236 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06679794 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066994613 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072013204 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073809515 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066298235 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061103339 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066392592 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068634419 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066342984 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066299442 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067099919 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080572909 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06940693 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065739908 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06512348 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06789579 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064926031 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074569536 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067015206 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066069719 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070229352 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068226212 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074827808 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068407803 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074504442 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068550903 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068676386 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064392657 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065995501 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063990661 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06459469 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066978845 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066195199 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071409805 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073850592 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064790156 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076360568 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074880698 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067463155 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062294734 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06531251 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066162715 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060846629 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066383124 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064108519 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063830532 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063960681 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064144678 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066471038 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070714075 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066448695 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066470773 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065335256 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060391163 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067509202 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067512735 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066521943 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062309011 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065787198 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065851083 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.06908728 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068769497 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063253099 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067078254 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067427283 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066231416 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060502668 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071929079 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064186395 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067431078 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064564721 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065253536 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066222174 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069085798 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069903476 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066267242 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067422071 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069302614 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067522835 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062929953 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062595198 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070637898 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063057547 seconds)
  done (took 42.154839745 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098826577 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062283724 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061269909 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06135832 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071807263 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061944169 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060727689 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062157873 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062531697 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064325322 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061140307 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061127251 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069723821 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076734546 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072738639 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065749666 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061167531 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061949829 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061167569 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062431572 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069617974 seconds)
  done (took 2.710814084 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072967403 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069717362 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071962016 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074190077 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066233893 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06916347 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071010987 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069269079 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074777745 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065888958 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074353938 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069744576 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07416526 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.065594817 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066238943 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069861812 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074976015 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066341739 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069269492 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071153373 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069370878 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07090547 seconds)
  done (took 2.842918513 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066224904 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064725419 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066509077 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060550125 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06504949 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060277472 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068364529 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062871728 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067983278 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064237432 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064411191 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064163687 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066505423 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060313102 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065391852 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062816797 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105959599 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067825984 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06458268 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065747679 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060731099 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066798726 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061111805 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061351504 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064238062 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068499208 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065692633 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062910659 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064407308 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064483291 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064991435 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062602876 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066183202 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065572154 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064050509 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06383511 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064991244 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064776198 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060612266 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062821834 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065393884 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060645057 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064982704 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066131834 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063316231 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062855236 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066395538 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064342802 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060315483 seconds)
  done (took 4.488435989 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078188382 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10722478 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066425185 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087184646 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080768946 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075828576 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068960223 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088144292 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062637553 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063493378 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080145556 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077883641 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064649039 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069055024 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07116284 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064801679 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065577258 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063406876 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068474192 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063853853 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068542496 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070937228 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078446925 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077370154 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068373487 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063817599 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063990793 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068680894 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07693421 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068728507 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068873805 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069891129 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079072451 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066724915 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063832967 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067067143 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079651821 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064638334 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066835494 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062382204 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066524807 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068919718 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070771275 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080201133 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064661565 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069227661 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064145636 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061648885 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076620405 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066546406 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072126299 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078210565 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068002761 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064771549 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068757647 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078913623 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064218192 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.0630675 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067585896 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076582842 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062261817 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067955156 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077534634 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066243259 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071383411 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077819348 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069242405 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068313818 seconds)
  done (took 6.246361614 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073198947 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071295563 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07959716 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078571725 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070762999 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071038844 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070748938 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070540602 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070915136 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075591039 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070851216 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091244266 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066465533 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073524304 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071274625 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071085837 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070915767 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070926665 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071247646 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071233044 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071238285 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078431625 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071168945 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078125707 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096593255 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066455357 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070753746 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070865287 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078542157 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071130116 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078191291 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07101302 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07113426 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078261776 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078187411 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070788489 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064254605 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070563611 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070788152 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071080518 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066299733 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078859616 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071049217 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066377955 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071012007 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070745212 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078794251 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078228508 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074584048 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077483665 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072472085 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080155705 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070965998 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071676779 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07818865 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103043613 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078156732 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078123971 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070968378 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078021128 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077968774 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084187445 seconds)
  done (took 5.935751145 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082059281 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073358089 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074463034 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060587485 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063163951 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069092466 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062994158 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063349215 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073191227 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073107017 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075514003 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068501082 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071302419 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07534205 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068599728 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071208665 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068186794 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06846896 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0729526 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068429491 seconds)
  done (took 2.723433728 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074259134 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081763695 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06573511 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069971912 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068597758 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071037439 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067255033 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068202565 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065728801 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068466315 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074636188 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074649449 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065805984 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070468637 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074530633 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070399507 seconds)
  done (took 2.442327501 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073809395 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071220148 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077789039 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065072241 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063152874 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061839818 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064760889 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060892393 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06164916 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076729 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064969989 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067267026 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065236436 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063535601 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062148126 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067543404 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061395518 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062794776 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064880051 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076745266 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075564646 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063553658 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065499113 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065021413 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064937789 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06980049 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064288151 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062861935 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062803594 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065385968 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065506059 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068212699 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062263028 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062790101 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063602583 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06208747 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064527159 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065084584 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067171766 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064709919 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063694018 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066119882 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066325194 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067491485 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063159309 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066808553 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06312664 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068814755 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064613115 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067362342 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066665516 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06873956 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067228703 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073003043 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069465848 seconds)
  done (took 4.953813071 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078308261 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068116614 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061089459 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063129397 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068116123 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066872894 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068632019 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066917805 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066611061 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062995203 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066841963 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067709702 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066576233 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068302017 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06668472 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068308282 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061161837 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066450956 seconds)
  done (took 2.528517142 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069837201 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065458897 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072268479 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065897961 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065360969 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068522889 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063158926 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065735011 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065911758 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066706046 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066805138 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069381506 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065799323 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068885353 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066701492 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065662707 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067233903 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063778507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06469342 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061066834 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066977461 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063609807 seconds)
  done (took 2.777176047 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07144518 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091706972 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136851146 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082362991 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080344134 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078271099 seconds)
  done (took 1.859821123 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089615465 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077688093 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065846575 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08721563 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072120941 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066985804 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067001498 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066322125 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075134092 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074896704 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066337683 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074948898 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074916267 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074204066 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072308863 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071849898 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066462015 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066485918 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065466499 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082321701 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066375403 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074642266 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066312409 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065921403 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066429892 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073882716 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074204484 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074958854 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066053263 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074385789 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071767753 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066462477 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074443738 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074690584 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068426945 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074655094 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066719256 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082345471 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071729083 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074139809 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067566063 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072255807 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074831942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070890106 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074655074 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066735569 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071106842 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066431384 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066732242 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084910524 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073744804 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076262092 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072440148 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074835825 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074811855 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084440415 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075173268 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074422131 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072718298 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077290252 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073827533 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071783224 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073895984 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074833064 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072074851 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073772749 seconds)
  done (took 6.120832927 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080304833 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085087851 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067023511 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075064955 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074393487 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067807707 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067119128 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068314404 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068333156 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068554066 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108234093 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067653942 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074702213 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074218829 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067039701 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066320243 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066554988 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074017497 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06620671 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084563679 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066704271 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074096839 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074291746 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073983629 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075399428 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071816076 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066622921 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066557086 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066331818 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066359333 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071042015 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066847923 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074075127 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066127284 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073887038 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066773998 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066319971 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070989976 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066467522 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071753789 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074500733 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082421364 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066436823 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066599444 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074699142 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06604599 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066383567 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066287335 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066624187 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066262261 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074894722 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075095465 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075016614 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074000495 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06662417 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066698457 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067107388 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066423201 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066669805 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071667478 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073974283 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066594193 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084339406 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067251792 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068128025 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074500288 seconds)
  done (took 6.040455434 seconds)
done (took 127.170980365 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183262227 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.167055288 seconds)
  done (took 1.665739656 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067572372 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095225194 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075697533 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.126630919 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065615559 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098585558 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097879087 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076956211 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065238968 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065274029 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065779215 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067217729 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129983535 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065616875 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065324936 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066982545 seconds)
  done (took 2.623687854 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095888755 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172003841 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098067202 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063864491 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095817148 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071847231 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063797273 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073709132 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069968866 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06453148 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071915268 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069736691 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064278789 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069918564 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070022767 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072119164 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063967556 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072020006 seconds)
  done (took 2.756687333 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09857848 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089265064 seconds)
  done (took 1.52394598 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154467334 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104624102 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148485077 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331658595 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.159172367 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228553886 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126098729 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124869114 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11499333 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121323842 seconds)
  done (took 2.944858978 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096355406 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145564952 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255696966 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11588216 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07140875 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.089956123 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115208578 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076815865 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077072452 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076359201 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07618855 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074876163 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094448739 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072974063 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072376334 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074973383 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097881972 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07183101 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074452158 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072878029 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095407846 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064714526 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072303385 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07164233 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073455181 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073792873 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064657331 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064819349 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072886896 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072912121 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076837723 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.089246576 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073670105 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103035179 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070475305 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105375737 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075310151 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070234753 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072529943 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069878402 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074367034 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074469131 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071074023 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074540389 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064371701 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074867565 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064751716 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065131562 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077026994 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06589791 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077344834 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075827466 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103395738 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065956216 seconds)
  done (took 5.825228212 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.659433773 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101711462 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069249189 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106728254 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095134819 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071853994 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.682713773 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089516336 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.172284146 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090818843 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087253268 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069277 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07976764 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082224627 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.107729016 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.099925042 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092327131 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07016137 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099109911 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.097049809 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067582315 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092018101 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088951967 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.373866121 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06646057 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06872072 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068534665 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070718953 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.11040298 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076753895 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068934055 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.119228058 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083001297 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.11902407 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066237463 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066827328 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067033668 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077904 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176501729 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130865624 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.12860263 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06617551 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066609676 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067884458 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087822014 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066522899 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108668443 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080925195 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.117824628 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068803012 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068689678 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068746563 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069816149 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080788442 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078755171 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08140348 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.229793479 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066838468 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067090626 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070004172 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178233688 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076998854 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077268961 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089685617 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.126490342 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066530942 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.690821313 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082503028 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066372804 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069738685 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068310615 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069801904 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071012015 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.246874498 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.34252079 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069875876 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069696872 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068089709 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.161286066 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077863473 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068206809 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110411992 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066818789 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067657685 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069101288 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068838644 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.117353922 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078504039 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069963118 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067377923 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06858563 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067539409 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067264498 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.161341854 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079462643 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078706529 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.157985645 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068710058 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110066587 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077961133 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068993864 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078609684 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068134494 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069464119 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069479269 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07875263 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.094415948 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078323247 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068885039 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069172722 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.098719565 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079948022 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067632877 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077618687 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.396547176 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078342429 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066750305 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079582529 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067747297 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.109543543 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069037452 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.174530124 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067881283 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077763711 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067726085 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067040443 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068921881 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.112317468 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071634585 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069937752 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070125768 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071217532 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080767381 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.134600118 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071369359 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.162953446 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132097062 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068944559 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.117746536 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067321281 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.115028261 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069083051 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067811578 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066099924 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.712228241 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067101204 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067122724 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068158214 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.134944782 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066678796 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077676539 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074870247 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065027405 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.686037042 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076861191 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073781785 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.20819368 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069404717 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067428571 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067328537 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068671112 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108164771 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.142697559 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069907043 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068296855 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077006012 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.109047011 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066423846 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078224063 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077698806 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077944457 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068231771 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06934525 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078978562 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116301287 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077320214 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.132954702 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.510805394 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068230614 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077433646 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.140481667 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067816599 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084339002 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067727606 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080809426 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.11049673 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076175855 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226611139 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.112735596 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.136553896 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079173299 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081386649 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067125796 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067023324 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078565683 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067333279 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068913266 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077231694 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068979645 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06880952 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082626916 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06770071 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171882743 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072402987 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078192906 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066427436 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068842029 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082032905 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067367556 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068871371 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077776601 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069208873 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076155917 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.661711152 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076809066 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066645132 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068552409 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133036965 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.110910054 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066776334 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066866318 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068800107 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.107728342 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.15451549 seconds)
  done (took 27.872904143 seconds)
done (took 46.552669806 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205395327 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151653391 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198791011 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11584348 seconds)
  done (took 2.104388993 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119755596 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098830384 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093871423 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063906515 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09962571 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064297936 seconds)
  done (took 1.911627678 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.302847832 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.205672978 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178712492 seconds)
  done (took 2.054925151 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.194676466 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186393115 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.390934807 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.248620678 seconds)
  done (took 2.496895757 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141231009 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088303515 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067767773 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084356182 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133327985 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157427738 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099177356 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123793464 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076863095 seconds)
  done (took 2.39272562 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141889957 seconds)
done (took 12.480664068 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.164332704 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107546867 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104602892 seconds)
    (4/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.189101931 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112627847 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066500913 seconds)
    (7/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.176391495 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.099811562 seconds)
    (9/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.184070136 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.208895902 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137644523 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076387721 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093298611 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167824207 seconds)
    (15/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073346351 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072781675 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132780608 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.202756119 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127414933 seconds)
    (20/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.072863736 seconds)
    (21/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076573172 seconds)
    (22/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072613422 seconds)
    (23/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074480614 seconds)
    (24/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.192828213 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.10961529 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.198038241 seconds)
    (27/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.123923979 seconds)
    (28/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087652523 seconds)
    (29/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.223452214 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069642408 seconds)
    (31/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.17899173 seconds)
    (32/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.151840512 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093470091 seconds)
    (34/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069029822 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092739471 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078122685 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068875016 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073524196 seconds)
    (39/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08143859 seconds)
    (40/309) benchmarking ("sort", Float32, false)...
    done (took 0.128826168 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072550114 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135228456 seconds)
    (43/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.152472091 seconds)
    (44/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071190802 seconds)
    (45/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.106937359 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07838192 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148985077 seconds)
    (48/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.137242263 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.183314822 seconds)
    (50/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096632019 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088761721 seconds)
    (52/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.160988582 seconds)
    (53/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072768377 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11257457 seconds)
    (55/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073267744 seconds)
    (56/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.10338005 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.094014913 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072229846 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.172014721 seconds)
    (60/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.109092068 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077271368 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071634378 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064173519 seconds)
    (64/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109241316 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.19806167 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067742987 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078824627 seconds)
    (68/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099045188 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.0726863 seconds)
    (70/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064402535 seconds)
    (71/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070948782 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.173386556 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.17019707 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086889416 seconds)
    (75/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.136559329 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.117465838 seconds)
    (77/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112658846 seconds)
    (78/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072198955 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09727591 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166250677 seconds)
    (81/309) benchmarking ("sort", BigInt, false)...
    done (took 0.33095417 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070617451 seconds)
    (83/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069184165 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.061907079 seconds)
    (85/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107624984 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072526108 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064923585 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073141889 seconds)
    (89/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113261042 seconds)
    (90/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088918669 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177085204 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097133278 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.066207773 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.139842557 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.160243538 seconds)
    (96/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171695326 seconds)
    (97/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.137032095 seconds)
    (98/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.169152344 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068992535 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.192022769 seconds)
    (101/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062195732 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065819117 seconds)
    (103/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079763168 seconds)
    (104/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074608955 seconds)
    (105/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051978122 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11143331 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064456084 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113712853 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050882911 seconds)
    (110/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069519465 seconds)
    (111/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.169198292 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052201458 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134278481 seconds)
    (114/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05010974 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077967556 seconds)
    (116/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066310328 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064763863 seconds)
    (118/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05182261 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.293683375 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094296577 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085358352 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092833864 seconds)
    (123/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071749081 seconds)
    (124/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.139794932 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142986673 seconds)
    (126/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.170198298 seconds)
    (127/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.137318239 seconds)
    (128/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090670032 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074178069 seconds)
    (130/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064003442 seconds)
    (131/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079093513 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066362121 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.135395788 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074256029 seconds)
    (135/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088435745 seconds)
    (136/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074040981 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073260714 seconds)
    (138/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053059833 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.0717361 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07307732 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072087827 seconds)
    (142/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054598514 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073012964 seconds)
    (144/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075283728 seconds)
    (145/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073353784 seconds)
    (146/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067538807 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067837183 seconds)
    (148/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053329788 seconds)
    (149/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072674411 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052049268 seconds)
    (151/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053932339 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.136710346 seconds)
    (153/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074131964 seconds)
    (154/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.138452577 seconds)
    (155/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052012726 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068890917 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065962222 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054099723 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073580322 seconds)
    (160/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05374671 seconds)
    (161/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072807757 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130112097 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06538022 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074844092 seconds)
    (165/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068409184 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066330331 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173271831 seconds)
    (168/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090785421 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053469445 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071533006 seconds)
    (171/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073600207 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091368218 seconds)
    (173/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099107299 seconds)
    (174/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070317884 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053671406 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069682286 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064375492 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106250976 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.061685938 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095693883 seconds)
    (181/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075320367 seconds)
    (182/309) benchmarking ("sort", Float64, false)...
    done (took 0.123100215 seconds)
    (183/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064513465 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.087667329 seconds)
    (185/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.104969177 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088003246 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050095108 seconds)
    (188/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065779056 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.049727251 seconds)
    (190/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064545966 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070369652 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063605643 seconds)
    (193/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086916962 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.102798678 seconds)
    (195/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071920606 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135172387 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071075012 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141603393 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050541702 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064546768 seconds)
    (201/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075493086 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063299651 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137758534 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.049956494 seconds)
    (205/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.060361748 seconds)
    (206/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.062988157 seconds)
    (207/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070605219 seconds)
    (208/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068260774 seconds)
    (209/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068060646 seconds)
    (210/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.142699771 seconds)
    (211/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.132746116 seconds)
    (212/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064377833 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072358058 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.069737861 seconds)
    (215/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.050377255 seconds)
    (216/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.050290162 seconds)
    (217/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072162986 seconds)
    (218/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066954868 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.049086989 seconds)
    (220/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.050194627 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068604652 seconds)
    (222/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.062220531 seconds)
    (223/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064431113 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087632998 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091611592 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.061776474 seconds)
    (227/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052454447 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.068542724 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.063071422 seconds)
    (230/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.050963551 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.049221951 seconds)
    (232/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.064192682 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133863336 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.161973517 seconds)
    (235/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.166204511 seconds)
    (236/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.135049899 seconds)
    (237/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075893117 seconds)
    (238/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.04928118 seconds)
    (239/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.132641158 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.082745622 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.085555604 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.085337919 seconds)
    (243/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.0495604 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050037255 seconds)
    (245/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.050297273 seconds)
    (246/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06617619 seconds)
    (247/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.069807229 seconds)
    (248/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.064926666 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.062159531 seconds)
    (250/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.050030383 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.048677328 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.071791699 seconds)
    (253/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.062309912 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.048773243 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.096463545 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063048946 seconds)
    (257/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070209695 seconds)
    (258/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.050670193 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063291043 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.168331915 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.050449078 seconds)
    (262/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.048708492 seconds)
    (263/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.064222344 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068845955 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.083790982 seconds)
    (266/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.106165988 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052507452 seconds)
    (268/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07520659 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049329289 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.070297932 seconds)
    (271/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.049433468 seconds)
    (272/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.067476293 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.048621955 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139794657 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062113961 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.050672539 seconds)
    (277/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.048399663 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.075693871 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.077340775 seconds)
    (280/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.058702876 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.082571242 seconds)
    (282/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.049459168 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069275386 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060996493 seconds)
    (285/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.04901202 seconds)
    (286/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.059476918 seconds)
    (287/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.050743336 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062091247 seconds)
    (289/309) benchmarking ("sort", Int8, false)...
    done (took 0.13112235 seconds)
    (290/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.068981709 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.070125905 seconds)
    (292/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.062773593 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.062136557 seconds)
    (294/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.049890067 seconds)
    (295/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.059562916 seconds)
    (296/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073811675 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.067148799 seconds)
    (298/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.113609892 seconds)
    (299/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063320206 seconds)
    (300/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.050355387 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05096069 seconds)
    (302/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.048988058 seconds)
    (303/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.063786888 seconds)
    (304/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.048578017 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062125853 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.06771338 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11006466 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061505426 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.084616405 seconds)
  done (took 29.701723901 seconds)
done (took 31.082567372 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09161301 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093741977 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076370947 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095294893 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082600665 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078975463 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074647863 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081106111 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082521627 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084219258 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080524067 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056898581 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075971895 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076217573 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076426743 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093149158 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080184785 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074526226 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074514802 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066606864 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074393281 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067256027 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069338696 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055895286 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079518989 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072951391 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073594872 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075778638 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067007238 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067410674 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07032742 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074674685 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066908358 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079069632 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073010609 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074098466 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075908 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077123783 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06848808 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066998837 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074921353 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066954647 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073392029 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074285585 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072420283 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071803625 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073475084 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078533935 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091760257 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068732033 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075534458 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076827304 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076721512 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072730986 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069960298 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073352681 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071018165 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091616305 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073544726 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06814237 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07448288 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074091918 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070980584 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073010038 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07315 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075214771 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075689151 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071342946 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075255231 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071358079 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065648933 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073089838 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069167458 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066090922 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075779966 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076931057 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064653913 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07139349 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072907496 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071414615 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065106637 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068089893 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067762903 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07177946 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067719438 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055264083 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069358976 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071707693 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066937655 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07618494 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074328283 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.0750656 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069959195 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078384741 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067518987 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073400523 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06842853 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06849866 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069649157 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072000544 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067857612 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07082677 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077163503 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068427256 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073184083 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082131945 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068205332 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072894767 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066240857 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066396477 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081246774 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075072711 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065816535 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067994152 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065151629 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072677903 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064720184 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065452498 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065322758 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065679952 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071099074 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065560689 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067169729 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072679533 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077284155 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065442 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068328206 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067245709 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065197647 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070415196 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065046312 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065282092 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201959144 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062625537 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067806039 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066227747 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072708381 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068172935 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07277404 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06692936 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072826545 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069815757 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071045668 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070818397 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064458533 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059456709 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068355829 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067892166 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067597564 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065176846 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067201825 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066366039 seconds)
done (took 12.749563656 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.0668223 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14107945 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09777709 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094895853 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086291439 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066654301 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076013804 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10118644 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068039537 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101810475 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087028223 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085039593 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11148759 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064790852 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066243757 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069436233 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067086392 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081111747 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100352039 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086255322 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10833841 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065036309 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094207043 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.0897629 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086986634 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100814263 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066777678 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069601363 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069058307 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090448248 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086144276 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069491663 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066238816 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099457925 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091752454 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082632172 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066516856 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081636332 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066558715 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066197552 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080421684 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098074986 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079496527 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079880581 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070131887 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069498619 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067226714 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083359004 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088462329 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078330826 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086166385 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102713831 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068548687 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065914929 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064530425 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085058217 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065346802 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06880748 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066247552 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068176518 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065941216 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069123762 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081029811 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086201118 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069511114 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079940194 seconds)
  done (took 6.814241981 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082242339 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089867338 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082955925 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083963323 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065442936 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066428703 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06669693 seconds)
  done (took 2.060239502 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067291936 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08781474 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088589628 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089345899 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084219619 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086895126 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07565274 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067082011 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080369649 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067789712 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087140362 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101410667 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06681819 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07283678 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090548926 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066563698 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090137329 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066914205 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06934862 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090261983 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068318318 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082049622 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070369403 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066855879 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080513787 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066741393 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112635553 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070875766 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068037092 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069519015 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064619948 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105713931 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080398423 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075718598 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066429818 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080759359 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080831207 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065135892 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082403996 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07205345 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080025611 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067019398 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067613686 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064270229 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070700818 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076681409 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067430528 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067211371 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069046686 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086141959 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067554422 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079383897 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071039041 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068543738 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067941989 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069761598 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075796447 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066988829 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08552252 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067561194 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082848955 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082004679 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079771832 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082398722 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068537671 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079816504 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079963466 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068569538 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06829182 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069740594 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082207901 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064409528 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067435086 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076473288 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067689704 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088586439 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088629024 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067818177 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074990368 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066496778 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066540836 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066167888 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088736374 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06863277 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066073245 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070329767 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069729797 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064907937 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066450868 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070775024 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064968075 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068066 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069570937 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069930621 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069677738 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084541979 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069097663 seconds)
  done (took 8.775279662 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069094552 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067640396 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069616954 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067955855 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067369925 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068158721 seconds)
  done (took 1.952497007 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092495893 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069914852 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080794294 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072406137 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103873474 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086375822 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086969271 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078272595 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083731075 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078716885 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086756512 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08780998 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092406135 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073035011 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086307276 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.0721466 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086825674 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075571392 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078637183 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073362289 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086880465 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073284436 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07333642 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081685546 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076605445 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072890198 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068072628 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079283462 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078773099 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078309757 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07241892 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075796187 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070405547 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078223893 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08680351 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070188363 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071901072 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077081609 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072296837 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075809561 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087758844 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072972344 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074386454 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077252892 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077889683 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070328968 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076820243 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075788353 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085725358 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077022002 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076962139 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071095752 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075111219 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076695636 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070347263 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077759322 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076479587 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085823157 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.0721136 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070002145 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069015981 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075069919 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077137047 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074863562 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078102565 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076598652 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069950372 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071882224 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071876385 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070953564 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076118202 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068614491 seconds)
  done (took 7.096730886 seconds)
done (took 28.208371069 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542035202 seconds)
  done (took 2.053927249 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.616100779 seconds)
  done (took 2.153558713 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.387679147 seconds)
  done (took 7.918925369 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.391676922 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.505180612 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.711853684 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129868733 seconds)
  done (took 3.308611982 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.662528013 seconds)
  done (took 2.207408982 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210256869 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196247842 seconds)
  done (took 1.958653617 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.368258723 seconds)
  done (took 1.903960053 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.114073156 seconds)
  done (took 2.651172221 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.258888888 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161858126 seconds)
  done (took 1.960565571 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.469648379 seconds)
  done (took 2.007844975 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.817160904 seconds)
  done (took 6.359881346 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204764054 seconds)
  done (took 1.791194617 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240194222 seconds)
  done (took 1.782031617 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.708928766 seconds)
  done (took 3.251583078 seconds)
done (took 42.850233223 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078669281 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080310441 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079465895 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076633166 seconds)
  done (took 1.847329022 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075998529 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07216908 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076355327 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071627563 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075817512 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07185352 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073060059 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075813683 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071137647 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071694163 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071390776 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071451431 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074127254 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073268414 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070177327 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073910929 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075227014 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071285647 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074474979 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071795891 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070054969 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073269403 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074087585 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070987394 seconds)
  done (took 3.297843306 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077328963 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071377275 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073583005 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071380616 seconds)
  done (took 1.84605814 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076386531 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091052682 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087779606 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076867994 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090164373 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08494344 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067973838 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067918698 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072297129 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076161216 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067404311 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094656827 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08631632 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076520767 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07805746 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065009031 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067733314 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085725374 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076174267 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076579188 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069028228 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076431353 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067280027 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086920738 seconds)
  done (took 3.414568306 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076315924 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101951862 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076619104 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08633566 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088577115 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064685806 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07368863 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08871265 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122021013 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064654265 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069489517 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065144305 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071566644 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064713492 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075309341 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103762245 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106869966 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067429873 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094783129 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06461093 seconds)
  done (took 3.186051195 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07206902 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069422357 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06492881 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067668426 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076545352 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071665988 seconds)
  done (took 1.98486966 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067305898 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066402026 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066519126 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065633052 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070597081 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06654242 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064944974 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066108996 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067086957 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066196983 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065574531 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065004858 seconds)
  done (took 2.356453483 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.319559546 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067838301 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068021932 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064972317 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069699871 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065798907 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079254818 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067431226 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089426379 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065966703 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065716571 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067688503 seconds)
  done (took 2.652729713 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201762843 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075383921 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2331605 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13531284 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109896792 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113966093 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102457074 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111645287 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140963119 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100785558 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165098568 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163317725 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105501588 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134881885 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088245749 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.0971444 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152583182 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160173497 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101816634 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163616467 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141629936 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122746086 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144324582 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099842141 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104365901 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12001794 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069967571 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079029965 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167421902 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12922717 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143480046 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108943378 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092013026 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173566662 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167828575 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139583925 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133301381 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08300575 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101056559 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131889216 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196313072 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08740959 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161357246 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244310294 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079905596 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138866843 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118340664 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118021516 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105882321 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088863948 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143799373 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179829178 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136145488 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086218193 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110818802 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113712467 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114935316 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103095485 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179263392 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158427933 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125534681 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070014062 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097457955 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151037408 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129842978 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108224071 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124974683 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091186438 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131368425 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152096862 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117326619 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140546283 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126976329 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087190063 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117423776 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138605656 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128359267 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167445166 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122254372 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071691285 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122153366 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101553366 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080366213 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140804518 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074352131 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172351303 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097358938 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104681103 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110995909 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106792679 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107194584 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157654971 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141330254 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243368022 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065231794 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102181036 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118933142 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144937407 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086580036 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106830846 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115166889 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076810334 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1364894 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07421459 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121336294 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074837525 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12240148 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130844405 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074774595 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119901306 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099600255 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099163878 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131018157 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157192718 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087332469 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080698323 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16482899 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119810498 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102994034 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141254606 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153385245 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097952987 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100729278 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147148516 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176594042 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088284251 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160660779 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105990518 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082282244 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086132776 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121711355 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110782603 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120077817 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081097373 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116639332 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165428983 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074283831 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093861776 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132073128 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077775082 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079500641 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1020021 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098758286 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09366479 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098757097 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10256291 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13592834 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12085144 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1029893 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267727853 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096408869 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167747929 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08786174 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099955227 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101815333 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068958718 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135386508 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156520621 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078483323 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162461677 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121750083 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103725659 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11729283 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081739965 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137475234 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077697041 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069872452 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142104089 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109555856 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108847368 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147954881 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103300526 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125977758 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117288302 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132558523 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130132374 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127226577 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103807303 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086506896 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109675842 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124043102 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072426382 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089835629 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078892548 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102588323 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09453631 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082791617 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140417376 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122465941 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098538532 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109728339 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095129601 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144490331 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075661898 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127094127 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117599615 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092688768 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149307304 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149101739 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128718349 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097271869 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141837946 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069473066 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072757002 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231619742 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122409036 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082418286 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082266872 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116082412 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145083246 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127885801 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13603785 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110307624 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118937546 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152666234 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068501647 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115085015 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14482623 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119871663 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102143178 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088767496 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098361026 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140496098 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106207302 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178800698 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112733144 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124382537 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151203269 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098106304 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078816415 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101806769 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133309893 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102504261 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14774476 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098271367 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086292624 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108417289 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073361809 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098057014 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125052475 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1178705 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133812036 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112789426 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130535102 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076406665 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11522599 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118277041 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120615479 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063219609 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117931439 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158293201 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092327433 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116233901 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14959684 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078115353 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121807791 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318176464 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143998529 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083625461 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107887584 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116501589 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125874495 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118722133 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138140541 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108919444 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133627582 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10742364 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084264891 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086335073 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096474762 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104281799 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093284834 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105953337 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112811494 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093523864 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129771594 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101742841 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107464312 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115855658 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095623013 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.08844805 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095749378 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171575903 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116852507 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167919006 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09807602 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142103191 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161015658 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074239868 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078135823 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077321291 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138000628 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082898057 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128708579 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097731757 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104138944 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122034622 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139227019 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093807358 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067557267 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106994097 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131882746 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110718048 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096873599 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103182803 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159964977 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098352944 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077902539 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111331633 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102818479 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100498032 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312888805 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061302436 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09607431 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075355246 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080083906 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126750786 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151010518 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079817515 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104595727 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117848751 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108733983 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125677338 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100084722 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097905546 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113297473 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148573017 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127333794 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08886283 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110528936 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128049625 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170879648 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103612533 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093875266 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168465979 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149449184 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157373502 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087011864 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112687388 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111952067 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106746428 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136370804 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082334133 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1611535 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080385396 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133938315 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102329921 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08877144 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127747845 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097532288 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086986284 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144853595 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115584004 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081331444 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076281066 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116342991 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118840676 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105183622 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074426565 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137097825 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071847632 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129553606 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165780535 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079411035 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102656631 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239485979 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078530316 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107154562 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101064967 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088629333 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096618483 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16978937 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087358166 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147567401 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139512431 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111270871 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134970649 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098408762 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634578032 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077174003 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149026836 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11504868 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16902761 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096254599 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116048853 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107824321 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121772231 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142314232 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103466034 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175665213 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130396982 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114493873 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078551617 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101705249 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101063613 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087327806 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104090823 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111851243 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11427643 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092449436 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113782084 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120854523 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08088563 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094046709 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153670626 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115224664 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14208245 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138350405 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083851072 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115796976 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136837582 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078502025 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119153542 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148442907 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103856138 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096227177 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079056238 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.245328518 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167933075 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072754537 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159088849 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118714833 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108069794 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111392388 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111865326 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129550125 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106734595 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119735446 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092898051 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109270547 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111164423 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080140162 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076109592 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103370225 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110605033 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096775511 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097188886 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096380299 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148623961 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070388939 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094278024 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101852245 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142438398 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171049211 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086996346 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081895235 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116924633 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110818896 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111234376 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119285231 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078264619 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08132172 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080198193 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076197911 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106684916 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110450986 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102630787 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11087157 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161502837 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081744531 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222859462 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093649879 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102873089 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06881347 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077175236 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094360496 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095647657 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106924558 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099134835 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167976241 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093597584 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088047968 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090806769 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071998082 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081379782 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270702828 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108468445 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116616559 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096535244 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06187251 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107653973 seconds)
  done (took 58.085438185 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107466222 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081023456 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095276784 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149082141 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120710989 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21062371 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156871568 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197895645 seconds)
  done (took 2.788231781 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067103459 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092458683 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098349166 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081571329 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065674679 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067190753 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222746597 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078927979 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065868688 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087320029 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077250302 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067321231 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.395938808 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066093735 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067547144 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062102997 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067873305 seconds)
  done (took 3.392257083 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.371105203 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.363551873 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368734184 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072142745 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.647837119 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087647678 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.077804996 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.09503654 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070285736 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.278722829 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702662347 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091521707 seconds)
  done (took 13.897124351 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073431656 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06843335 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082031143 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.081836261 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070995641 seconds)
  done (took 2.046462767 seconds)
done (took 102.380663862 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078250125 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.291092379 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052987988 seconds)
  done (took 2.042197984 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.080911045 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083751728 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082680127 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081550676 seconds)
  done (took 2.005181001 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073454989 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075627652 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083067204 seconds)
  done (took 1.904400768 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.220237672 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.13741924 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086252928 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081349027 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077391733 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077555631 seconds)
  done (took 1.914772655 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070870433 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073245252 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071742963 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075135226 seconds)
  done (took 1.963860457 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075380879 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051770337 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05400767 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.054553045 seconds)
  done (took 1.910225259 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084558901 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077778752 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077425596 seconds)
  done (took 1.914874166 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104847437 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08358367 seconds)
  done (took 1.863454277 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080097472 seconds)
  done (took 1.754724161 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097005203 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111974322 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126658395 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107817955 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134579164 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106912484 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084126478 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08586584 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076011875 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085877425 seconds)
  done (took 2.690524532 seconds)
done (took 22.154988153 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077395313 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365850686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359271755 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089536879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66811422 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355610146 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985594574 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090809883 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119357749 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06672322 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082983413 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647213893 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.015769559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324836886 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002413855 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322911882 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650870032 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069273986 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067353307 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067370211 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973166262 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067008208 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067671399 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06756074 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646678474 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370121103 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067426981 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318211803 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066800533 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068825668 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354405448 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067187108 seconds)
  done (took 16.227612123 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070048953 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116452802 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073163812 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08316744 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069994838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068621822 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070875892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068266516 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123699599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066880206 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083662012 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067104709 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071103573 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068043737 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085881016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06743602 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06798492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067649914 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067362136 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068729158 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086283715 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066904423 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067269886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067677349 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067153967 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078772897 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067669358 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067338208 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067465705 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069614253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070140069 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068308119 seconds)
  done (took 4.059781807 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113412154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123573578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073779254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102212778 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110614038 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069042265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141562981 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091690225 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126088986 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067395704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083665836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068294008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100431102 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070356345 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090786588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071102823 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069930391 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068269277 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069201968 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067555965 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08659955 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067433587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067749755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067711111 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067572456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080430862 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067680906 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068873531 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067559123 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070829793 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073456752 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069544836 seconds)
  done (took 4.323528509 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071347917 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074428231 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082013462 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08320797 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071114016 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073219742 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074221515 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071609076 seconds)
  done (took 2.292951828 seconds)
done (took 28.585505799 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077567716 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067763383 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071680252 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080770164 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071990355 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080250269 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068944167 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076579775 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073894922 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074735205 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076724771 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069489058 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072943348 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069004783 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075559563 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069844643 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08136782 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073633252 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081237201 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082077195 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071776327 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074731987 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075772135 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082705854 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081385128 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081255293 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079483474 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074888034 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071005502 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072269375 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078934911 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087060517 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070254752 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081179284 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069802595 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069545706 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073139299 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070094028 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081474393 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078879905 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071585642 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078460591 seconds)
  done (took 4.843560075 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086511665 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089909506 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08422413 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06153829 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066123431 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064180319 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087781885 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058670775 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058942462 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086878407 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055175989 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058631144 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061550791 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053328307 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058587984 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056517813 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060689171 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055345992 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058427791 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058840019 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.05770743 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054276581 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060719186 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068218417 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058455206 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064031234 seconds)
  done (took 3.391816004 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073708461 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082974162 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087383626 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124821707 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101800819 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07594344 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076520865 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086121304 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084049961 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066382286 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070986387 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092790563 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087229994 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07276388 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066392041 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084481769 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08334889 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070395939 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075222736 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091589685 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084332387 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078544683 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094236718 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081398606 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06702324 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069257001 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070168259 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080054998 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071293876 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075528978 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071062154 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069985705 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068462084 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077515365 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070029922 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068131438 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088536499 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075971976 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07649271 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066946488 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069382273 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067658429 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088648726 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.120907821 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066302687 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072699641 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074445827 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075368261 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066305057 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084735501 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077027163 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067281582 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071853491 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068461926 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068601001 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082189957 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070430514 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069235621 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077035774 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071962038 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081417955 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072993657 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084705065 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069012654 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076695799 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068512173 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070012236 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068031967 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094653909 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070635144 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109713996 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069856181 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068189703 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075294004 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073912897 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072571683 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066939484 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081857162 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076707389 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070013035 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075082951 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069989507 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.06981505 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086905372 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069013603 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068205714 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067575758 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073169038 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069106549 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068343249 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079394203 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066733431 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069443358 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082976449 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066300012 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067748016 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072250409 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071206453 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.077928248 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077558227 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071522742 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067400358 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075436962 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066528526 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069491965 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076754911 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072612346 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065750528 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07096949 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07253385 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067181998 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067820062 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06940153 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068590194 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076047214 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.0735305 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070911719 seconds)
  done (took 10.550838622 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159397574 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151075185 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069945489 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142452648 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075078762 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07798297 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145141899 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.092880187 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066962625 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067690599 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068063662 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113535949 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10455433 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12063814 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077571317 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066577076 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082309067 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115739487 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146726084 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141182011 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082023218 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076002373 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068768866 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068625237 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073575634 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081611777 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090135123 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075496341 seconds)
  done (took 4.433781209 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079301186 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099400307 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072876603 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088237533 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08966067 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067155166 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069048607 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068931149 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079176403 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077318442 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066601027 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072430737 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073365069 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072986906 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067732033 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073945305 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074067684 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068311247 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069955678 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072086307 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.0765772 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079780371 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070901634 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066501639 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073325191 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066423414 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.0634422 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083521604 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067649886 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089255171 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065115037 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074065624 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080740508 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068228956 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066699381 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067735636 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066724017 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067295067 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06903194 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065638494 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065442225 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056983545 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066241413 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078251263 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073214844 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056001381 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071641505 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07189519 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07165915 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064820092 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069783227 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070002723 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.06966501 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074172228 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072047625 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071730583 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068176814 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065273262 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074697945 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066727652 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064087033 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06550461 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073292191 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067860712 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077445781 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073775229 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068347036 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068648874 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070290639 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073453111 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066749582 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070721053 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064803428 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068849139 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071193396 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068461629 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067467394 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065091127 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066329789 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067010118 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054744426 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066659717 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053470009 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070044268 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06470335 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065004619 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06673146 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071077583 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078194958 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067785238 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072050088 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067382839 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065643097 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070164571 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059505088 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069521835 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081402644 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081389859 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066387287 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064519675 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080796472 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071029018 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065888193 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055967022 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074307507 seconds)
  done (took 9.119362061 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093879888 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086869822 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068811351 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083103682 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.09002437 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086222659 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07428967 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075986197 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068664654 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081502238 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073058619 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075325813 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068292449 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076876301 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094658012 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076297674 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070812256 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07920985 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074235171 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.10402897 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083724984 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083073468 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.076614359 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069930859 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077540652 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081268606 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091325475 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079649719 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.07849101 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075492353 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079441225 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088973619 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073390702 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071212148 seconds)
  done (took 4.453767016 seconds)
done (took 38.48114809 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.788534275 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.951063374 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.777788168 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.118489173 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.854495837 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.998645312 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.944221974 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.771410739 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.887925376 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.811427264 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.009437719 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.82837868 seconds)
done (took 65.45269463 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.829367153 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.904105638 seconds)
    (2/2) benchmarking "String"...
    done (took 2.040247484 seconds)
  done (took 5.651651791 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.099568573 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.301509083 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.015882332 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.767397015 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.77303631 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.075631325 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.560834764 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.28711125 seconds)
  done (took 30.489166724 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.969335252 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.962004784 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.43494091 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.466103391 seconds)
  done (took 15.583311936 seconds)
done (took 63.441807171 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.786276296 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.811041331 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.771360767 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.735733563 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.811753061 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.758717985 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.238824426 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.804302929 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.753266552 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.74362088 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.755306308 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.189293926 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.762008764 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.257215512 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.752532772 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.762907567 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.774771221 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.375496362 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.909623885 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.775987201 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.758109721 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.767251887 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.753489075 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.762859681 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.806918291 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.755059831 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.20257053 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.756041685 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.38221664 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.758385561 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.78428958 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.769413706 seconds)
  done (took 203.489557078 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.75315965 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.616496414 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.704998749 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.757932264 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.164175612 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.945180638 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.880154516 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.175527918 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.756543485 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.762399374 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.914489032 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.750361324 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.947603818 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.699757426 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.753205556 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.818587117 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.921413479 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.951645306 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.751634603 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.022785507 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.767818199 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.736549219 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.679067325 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.897505142 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.759833738 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.845691556 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.917546864 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.773111946 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.942111586 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.873591949 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.759012486 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.770299081 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.974864728 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.617339569 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.770573175 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.761117119 seconds)
  done (took 168.588455081 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.14107524 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.748319047 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.74709889 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.7480426 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.760476649 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.747993121 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.873073707 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.875899329 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.212351548 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.99689836 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.796288848 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.576165238 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.742430042 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809280081 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.756731326 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.744796312 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.757685861 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.767771428 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.742130769 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.742820571 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.871277854 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.753319866 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.82579734 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.746206361 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.740348719 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.746210266 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.106336159 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.740914726 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.745953192 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.001576094 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.741207162 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.740493545 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.627699227 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.390567889 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.830305489 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.741869665 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.746192339 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.740554088 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.960148787 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.741327301 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.740249709 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.744585253 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.90852094 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.739131167 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.865767324 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.74068813 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.239188443 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.738216608 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.737809174 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.335468062 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.396664489 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.735271278 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.735121777 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.73927733 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.735993751 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.736384838 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.742709487 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.280217623 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.809613414 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.73775834 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.738110937 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.742736707 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.735809574 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.79516646 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.738190685 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.047144243 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.787082373 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.84317031 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.858786187 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.737075723 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.801201081 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.828336327 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.735562408 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.733516165 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.734284325 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.733203928 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.815141574 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.735589177 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.734301146 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.854579937 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.740905411 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.735404711 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.783576045 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.803695112 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.733871969 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.630485882 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.738121864 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.73300865 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.045580352 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.800421802 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.73440434 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.733600254 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.733493076 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.733524379 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.733932012 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.868587806 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.857995542 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.509247233 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.736725101 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.385664569 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.735793571 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.880033025 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.733641042 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.906377569 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.736372482 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.825404424 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.737700263 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.733501489 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.734460111 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.732804199 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.763305313 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.733726579 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.791541399 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.735372632 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.103087811 seconds)
  done (took 397.205754144 seconds)
done (took 773.18168092 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.398915387 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.370084234 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.46969863 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.391186 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.389077197 seconds)
  done (took 13.690307209 seconds)
done (took 15.360860151 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.817749552 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.82220421 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.757197011 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.819427566 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.750340767 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.819396372 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.800117404 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.757033096 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.788092935 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.756316351 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.788845532 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.754881023 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.74439696 seconds)
  done (took 24.847185923 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.960131104 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.967323489 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.801578237 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.969359682 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.775180534 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.967219901 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.894155212 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.884899135 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.881915314 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.745605766 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.743054655 seconds)
  done (took 22.263692315 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.969674148 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.971081633 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.805125854 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.97703731 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.778100983 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.968881947 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.899069484 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.885718769 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.887596185 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.746021619 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.742925855 seconds)
  done (took 22.302457945 seconds)
done (took 71.084568112 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.738180915 seconds)
  done (took 3.409649322 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.761660499 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.892766343 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.742460437 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.743970547 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.738678823 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.740227665 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.743028389 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.739658037 seconds)
  done (took 15.775326553 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.73551459 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.736132639 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.739370187 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.73821225 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.738617573 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.737123978 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.739752649 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.736810794 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.739439141 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.7359028 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.737435492 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.739018454 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.739546849 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.739679647 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.738483384 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.737180068 seconds)
  done (took 29.481892863 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.738524669 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.737523306 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.737752177 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.737745255 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.736577335 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.737323497 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.738296044 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.73664618 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.737949304 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.738042936 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.738716616 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.736985485 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.738505945 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.738083659 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.739109402 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.738840686 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.737559163 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.737880708 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.742292385 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.737699993 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.739348911 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.737964092 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.738245035 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.738974312 seconds)
  done (took 43.393716791 seconds)
done (took 93.732280944 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.512114374 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.167488194 seconds)
  done (took 8.354644224 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.742604762 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.740556882 seconds)
  done (took 5.192547052 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.742379081 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.740415821 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.7408169 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.741510727 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.740736852 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.739985673 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.740568219 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.741344392 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.740932455 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.741844456 seconds)
  done (took 19.085586038 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.742051152 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.741674592 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.738170023 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.741252107 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.742086293 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.739239581 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.741230378 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.741091672 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.741167153 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.739870128 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.742113941 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.739516667 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.741030958 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.739515999 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.742166675 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.740441869 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.739334787 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.739676513 seconds)
  done (took 33.008126601 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.742103567 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.741811863 seconds)
  done (took 5.160270422 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.740084289 seconds)
    (2/7) benchmarking "second"...
    done (took 1.739636915 seconds)
    (3/7) benchmarking "month"...
    done (took 1.739215547 seconds)
    (4/7) benchmarking "year"...
    done (took 1.740335211 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.740285507 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.740232923 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.739766748 seconds)
  done (took 13.857343832 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.743736018 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.899147174 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.973236701 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.429419786 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.744974247 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.74687323 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.693153962 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.746972862 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.747344957 seconds)
  done (took 19.402134933 seconds)
done (took 105.735033304 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.542988673 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.743312684 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.105131963 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.786275789 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.7609884 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.041757982 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.758009131 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.959588953 seconds)
done (took 42.375105892 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.771408723 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.217350347 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.229357667 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.699776624 seconds)
  done (took 11.825639457 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.722936671 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.258685379 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.993325085 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.429197947 seconds)
  done (took 20.093231276 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.11713395 seconds)
    (2/2) benchmarking "read"...
    done (took 2.108936746 seconds)
  done (took 5.913855109 seconds)
done (took 46.282644174 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749104644 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.750694151 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.746699505 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.750832287 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.747139962 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.746775043 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.749291323 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.750074384 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.750895019 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.748037352 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.751086015 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749692464 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747291567 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748065997 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.752120599 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750933731 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.751882325 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.748922411 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749272501 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.748865729 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.75001695 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751722388 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.749616976 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.749553075 seconds)
  done (took 43.673024372 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.751249375 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.750521713 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.750919108 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.751006558 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.749004762 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.751451664 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.752332796 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.749490184 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.751735213 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.751800406 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749935506 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.750230263 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.75183919 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.750215494 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751364558 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.74988647 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.752661522 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750526666 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753572441 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.750132404 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.75272581 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749994977 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.750208934 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.753279572 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.749174177 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.749373398 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.752846588 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.750219014 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752281424 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.750872212 seconds)
  done (took 54.216345048 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.757352008 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.759462868 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.753269971 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.752288862 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.752285467 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.753867057 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.753417358 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.753608627 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.752737561 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.753369529 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.753917944 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.753326176 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.753190891 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.75264548 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.75350244 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.752613287 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.753430533 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.754039406 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.753383312 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.754621687 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.753221898 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.75477319 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.753878629 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.753566678 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.754290295 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.754355371 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.754395261 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.754448752 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.754211265 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.754749406 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.754190998 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.754313202 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.755609745 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.755115467 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.755295514 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.754771512 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.759405117 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.761497732 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.7559334 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.75461794 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.755059485 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.755568135 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.754725648 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.755205913 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.755028098 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.755655185 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.755646383 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.755404808 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.755298272 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.756389274 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.756002392 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.754889141 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.755191242 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.755655526 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.755175784 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.755663566 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.755370623 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.755443666 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.755482562 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.7552664 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.754500939 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.756391369 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.756680023 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.755197502 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.756285547 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.755606048 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.755908728 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.756455177 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.756891689 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.757400367 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.755819475 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.756677425 seconds)
  done (took 128.04999509 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.756109437 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.754678018 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.753553166 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.753561758 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.754404659 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.75852077 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.754683323 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757657417 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756264811 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.757036746 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757162729 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.75557827 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755101194 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.757962435 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.757134484 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.7552516 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.758406161 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.75591816 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.757335251 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.757967996 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.757399627 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.754367069 seconds)
  done (took 40.326838405 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.7578937 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.757655443 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.755158434 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.757999168 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.755203022 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.758597633 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.75880358 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.757719304 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757354267 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.754929078 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757291561 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.758372435 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.755301761 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756679531 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.755619436 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.755908411 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759607297 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.754816337 seconds)
  done (took 33.31801546 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.756810609 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.756233995 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.758258509 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.756399788 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.756792199 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.758409604 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.756366861 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.759949414 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.759028576 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.75604322 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.758723796 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758979721 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.759062425 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756713291 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759289495 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.757136981 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.759168005 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756483263 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759660768 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.757209984 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.759010138 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760543411 seconds)
  done (took 40.368957028 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759511218 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.760595401 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.757518239 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.759093266 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.758131259 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.759413546 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.760827985 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.757323003 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.761375698 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.760122362 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757319543 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.760519138 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.757833963 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.759209584 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.760138488 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757713101 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.76093843 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.760590231 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760724776 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.757987956 seconds)
  done (took 36.880423921 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.762164232 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761246788 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.761103891 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.761172766 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763417864 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.761894677 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.761511544 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.761858754 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.762300411 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.761469794 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.763748298 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.763731051 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.762218451 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.762712242 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.763180475 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.762580545 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.762849516 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.763073408 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.762654361 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.762825174 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.763007256 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.762788263 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.762213424 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.762853216 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.762826068 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.763280436 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763161878 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.763338605 seconds)
  done (took 51.047116097 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761776174 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.762111189 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.75889763 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.759606996 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.761632955 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.760338962 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.759214955 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.759358326 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.762582616 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.759383552 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.763460762 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.763050903 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.762602114 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.763166846 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.763575609 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.764320124 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763570593 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.761108424 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760670329 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7609735 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.762664025 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763661668 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.763965115 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.760916146 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761683647 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.762751857 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759998592 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.763240406 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.763798582 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.761393365 seconds)
  done (took 54.552426819 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.782242282 seconds)
    (2/2) benchmarking "in"...
    done (took 1.782967441 seconds)
  done (took 5.262633184 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.760548002 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.763857731 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.763777865 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.761385402 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.761567859 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.763862963 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.764609441 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760609848 seconds)
  done (took 15.797091806 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.767293353 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.764517932 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.763932993 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.764324815 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.765068009 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.768635364 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.775337477 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.764720149 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.770510459 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.769032585 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.774913751 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.776543978 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.773008925 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.768176812 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.768377692 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.769317181 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.764365592 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.765756076 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.765772244 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.765279202 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.766807707 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.771359274 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771112993 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.763616791 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.770444081 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.78082447 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.773706923 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.765310136 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.769075136 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.77610443 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.771290577 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.762613461 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.765881689 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.765752006 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.765032842 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.768142122 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.778027908 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.769972346 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.776531419 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.766353553 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.766456399 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.763507689 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.771264872 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.772733911 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.771297587 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.765968277 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.767806255 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.763627983 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.769157124 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.772374214 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.770157563 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.769421489 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.76455994 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.776703383 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.772128706 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.778004968 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.767899866 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.774547775 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.779008377 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.781243743 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.784952787 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.777715955 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.772462687 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.768128995 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.78018923 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.792766343 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.777590996 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.76444721 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.764343974 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.766794157 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.779487922 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.785377741 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.779153071 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.768602905 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.769809755 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.768207633 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772753054 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767816941 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779764416 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.775747008 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.769626224 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.769779079 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.781760417 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.791707935 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.771996604 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.770035815 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.770564508 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.769222784 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.77296631 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.78385498 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.769715351 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.769827229 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.773433922 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.773214839 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.775638267 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.770034837 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.77253384 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.775292314 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.765229312 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.768709652 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.770578815 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.776031684 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.780964714 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.7700708 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.769883426 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.780557618 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.768610128 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.772326968 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.783416727 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.769384569 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.769699261 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.773324385 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.781444904 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.767115052 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.776256682 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.781126896 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.770259261 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.77559293 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.771368501 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.770818285 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.783273753 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.798880628 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.769724227 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.769675909 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.778738388 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.783355991 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.770252825 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.77757652 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.771079814 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.767325799 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.768581831 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.776258817 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.770560457 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.775972683 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.77293263 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.776551826 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.76982775 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.77124158 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.771792684 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.776807547 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.778207599 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.776485609 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.777326913 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.778390045 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.773117098 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.777283925 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.782640167 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.776106832 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.776624224 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.776466707 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.768281482 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.771209613 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.777308607 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.773786285 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.77724236 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.772914378 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.775565237 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.771985052 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772383423 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.773295537 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772092063 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.776474247 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780721611 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.772996379 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.780848538 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.776365083 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.769627697 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.773351884 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.773244589 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.776423582 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.773831966 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.776029471 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.778650813 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.780616106 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.773776487 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.774152849 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.781564005 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.773204433 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.773908047 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.773853608 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.779491734 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.785525112 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.774229764 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.784616604 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.77312875 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.773999516 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.773602991 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.7788649 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.77698339 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.774749756 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.780009868 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.780906782 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793058535 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786634412 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.778685255 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.777086348 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.778306913 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.778672674 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.783923857 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.774749897 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.77409897 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.776578627 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777934108 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.775513981 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.783419946 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.775970171 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.778333846 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.776444699 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.774488146 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.7770502 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.774861117 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.779844996 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.781428171 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.772017698 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.774953636 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.777185866 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.778849842 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.772739407 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.777756591 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.778660793 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.775457255 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.776663194 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.788585944 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.77340505 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.782142537 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781460547 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.781362371 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.779786213 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.775961825 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.781873919 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.779934077 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.786814177 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.781647148 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.780599627 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.787842303 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.780190033 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.779336324 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.784370508 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.776172551 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.77380384 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.783137552 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.783361233 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.776108264 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.778219285 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.778113115 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.780808243 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.776112715 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.788071414 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.773930466 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.781276975 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.777389447 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.784363993 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.775605944 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.783068134 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.782469998 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.782892943 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.782856508 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778115978 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.777676756 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.783407169 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.779673186 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.779672059 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.77864561 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.783885301 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.785756289 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.788358503 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.782686947 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.784740922 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.783326459 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.781323676 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.781819327 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.778958094 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.781277419 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796764979 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.786202462 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.789594426 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.784954022 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.77897653 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.788685545 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.78299749 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.786312285 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.783343189 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.784107199 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.782292392 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.781448182 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.775929524 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784292217 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.778389519 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.785956908 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.784572664 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.782842989 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.779329623 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.782670757 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.780245712 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.781139096 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.781282635 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.783468864 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.7787478 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.787528964 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.785603281 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.782998409 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.78383653 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790788673 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.785058594 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.786804374 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.783665973 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.784389056 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.78379245 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.78550806 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.780581274 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.786664752 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.788044412 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.786679634 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.794173139 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.78503414 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.794484112 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.78158911 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.786949861 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.788475397 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.777647364 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.782775994 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.785929693 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.781545658 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79329358 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.782323553 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.784625963 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.78547019 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.782584792 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.782444953 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.781250114 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.781800006 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.781494463 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.782410368 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.794363643 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.785428919 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.78849648 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787301038 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.778856461 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.782655637 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.781857042 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.784045419 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.791508482 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.783384837 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.785934656 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.787759924 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.785783748 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.781934784 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.783513594 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.781389043 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.781191012 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.781946106 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.793842807 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.786749557 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.787338285 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.782405387 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.797903198 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.783729074 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.793665816 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.783449513 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.787335589 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.783357851 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.783246785 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.788920079 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.78684691 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.789442296 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.784011149 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.790072735 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.787150943 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.784635647 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.791293997 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.787715318 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.784740969 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.789481463 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.797406146 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.806768067 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.788279773 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.786538719 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.781913067 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.788349504 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.788666487 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.784292084 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.786387013 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.792255864 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80270602 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79267535 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.79105166 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.78762774 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.790143613 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.785605043 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.788117501 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.786131341 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.786248417 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.784105814 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.789239072 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.78561465 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.793728086 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.784191833 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.788882877 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.791158748 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.789263081 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.801939323 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.786206237 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.789971531 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.785551863 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.785037474 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.79160647 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.79006128 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.786283639 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.791915266 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.785487232 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.790124884 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.796099648 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.795831753 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.792898123 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.789414684 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.786560907 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.790792872 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.792724668 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786386695 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.787837831 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.787470598 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.792339256 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.786974703 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.792433463 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.788632505 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.78639489 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.790486801 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.786508407 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794063533 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.796361413 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790702868 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.784553229 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.786068461 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.787567113 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.789629567 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.792022986 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.80145997 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.794741222 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.800452629 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.799162124 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.790869132 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.791560728 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793451683 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.798411862 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.790825204 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.792263087 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.789377985 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.793720635 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.792798072 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.79447463 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.788983098 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.800022615 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.792148628 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.792970299 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.799981465 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.793891743 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.789275275 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.793933605 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.796908763 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.793036538 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.786550135 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.787416779 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.790444074 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.79982845 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.795341124 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.789885865 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79454422 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.790748899 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.793734441 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.793519675 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788665564 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.794182594 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.787280383 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.793396153 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.79014434 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.7888409 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.786411062 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.79316505 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.79315606 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.796507275 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.799846299 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.786902635 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.795081213 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.794215792 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.79475469 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.790827063 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788947694 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.786557495 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.788190275 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.794086538 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790671421 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.794207684 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.795975061 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.794500998 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.794878094 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.791725217 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.790961096 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796175026 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.803852092 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.796542749 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.787890709 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.793634983 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.795267144 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.797270889 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.791052842 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.791720853 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794532044 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.797430729 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.7903001 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.791702548 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.790203517 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.797059582 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811238001 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.791060206 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796657033 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.79557777 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.801214574 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.791802171 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.78870193 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.790988066 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.79836172 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.797925088 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.799342509 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.792295182 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803017169 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.795830435 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.796930514 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.795294567 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.799596395 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.803442738 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.799241291 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.792739067 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.793106083 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.799588852 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.812742077 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.79241117 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.806058798 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.824229795 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.797012988 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.797678904 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.793435195 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.794748971 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.79279758 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.799243015 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.794042685 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.793382282 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.79200633 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.794098579 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.797641298 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.802568359 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.798722378 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.793508047 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.793026641 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.796933844 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.799449958 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.789990609 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.795163715 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.79247896 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.793596115 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.793896845 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.793277075 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.798796509 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.811473462 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.807759325 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.793323542 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.794801081 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.790163463 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.801553174 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.800168166 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808193673 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.80048217 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.79414801 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.795215515 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.79939651 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.795124747 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.791061131 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.799327618 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.798670744 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797749584 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.792426843 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.812961322 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.802856712 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.804319236 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.798870315 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.795991347 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.794375877 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.80102901 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796011289 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795576967 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.801188703 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.799171038 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799349651 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.795038477 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.794994262 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.801357694 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.802137535 seconds)
  done (took 1064.950224668 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.792760015 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.791872595 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793073419 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.793609424 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794571409 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.793235273 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793656092 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.792739426 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.793110222 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.79295915 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.793586553 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792878221 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.79255295 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.793606616 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793287592 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.793989927 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794065466 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.794201737 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.792877569 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.793519037 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.79419419 seconds)
  done (took 39.38869081 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.795922196 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.793817161 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.793796268 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.796250551 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794846953 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.796793615 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.794344686 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796796865 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.796148538 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794806864 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.797212995 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796120358 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.794709101 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.794188168 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794135656 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797522154 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.797306071 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793840861 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.797808651 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.794380434 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.798169989 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.794816825 seconds)
  done (took 41.233921726 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.798115482 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.799178578 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.801064835 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.796158652 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.797230755 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.795720868 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.799627986 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.798711383 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.798928967 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.80361586 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.801340137 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.803193047 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.809060382 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.802823616 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.805861348 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.797908139 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.943249202 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.800255996 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.80023241 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.79854607 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.796249968 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.808890438 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.797377027 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.796921302 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.802362163 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.799652094 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.800077326 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.799274078 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.800133725 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.80417972 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.804748189 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.799443871 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.803174162 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.805268134 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.802551538 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.804561292 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.803893349 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.801594373 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.798111932 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.799770392 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.813775615 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.818334465 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.801197948 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.810908517 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.800860057 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.799154499 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.807284729 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.808307165 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.798423059 seconds)
  done (took 90.169336236 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.801672274 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.801147331 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.79940418 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.80105382 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.802029625 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.800239612 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.801098014 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.800747626 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.798198488 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.799578611 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.801564715 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.798246769 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.798579671 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.801771683 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.800298006 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.798258336 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.797788352 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.799124508 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.797556655 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.798186656 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.799160833 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.800775958 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.801756583 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.798799441 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.800584537 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.798598963 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.799172275 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.801399559 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.798808472 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.798926235 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.801590375 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.801923309 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.802978839 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.800111819 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.799881111 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.801753633 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.802889197 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.799200018 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.802173293 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.799136001 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.801899936 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.802158966 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.803097053 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.803538431 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.800827882 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.800465945 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.800552164 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.801314181 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.800043178 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.803619825 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.803577665 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.801188607 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.804191653 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.80239911 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.804350992 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.803536835 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.800900558 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.800863192 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.803832018 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.802089851 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.802392303 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.804017822 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.801904274 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.804994292 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.805523316 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.803014956 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.802801737 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.804511894 seconds)
  done (took 124.215206303 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.806516372 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.807567353 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806346031 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.805992593 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.805802801 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.806021042 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806551176 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.806090459 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.806613448 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.80637912 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.806326585 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.804540474 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.806787376 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.804249696 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.806120062 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.805044721 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.805433061 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.806982653 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.805876621 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.8049056 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.805442215 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.806091957 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.805907414 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.806002218 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.807172293 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.805512307 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.806068014 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.805580956 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80638517 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.806172111 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.806533123 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.80637938 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.806732349 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.806601163 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.807810452 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.806905897 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.805948893 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.806827626 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.80651774 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.807091518 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.806247588 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.807328873 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.806586341 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.807801989 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.806915693 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.80775766 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.807389063 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.807713995 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.806793086 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.807884284 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.80830708 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.808082847 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80829993 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.808414639 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.808006461 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.808285104 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80855424 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808373678 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807192035 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.808040083 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.808097299 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.807818611 seconds)
  done (took 113.757253917 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806486866 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.807498236 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.805619945 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.805331513 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.809043857 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.80525858 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.806594377 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.807532443 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.807449465 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.807939806 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808119003 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.805068949 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804395969 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807470469 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.804237137 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805933562 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806024221 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.80512715 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.807761979 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.805971222 seconds)
  done (took 37.869917271 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.806006457 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.808861652 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.805925054 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.806338891 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.808323043 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.806483105 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.808411933 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807692876 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805690174 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808751657 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.8085542 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.810220745 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806995346 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.806778049 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.809258764 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.80714729 seconds)
  done (took 30.662197522 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.806501992 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.809151287 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.809646713 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.810181363 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.807564854 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.806904399 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.808983702 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.807319117 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.80701339 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.809627052 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.809344841 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.809802399 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.809708146 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.811516242 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.806547219 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.810901068 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.807810939 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.80799002 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.809634041 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.810836996 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.8080029 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.807769395 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.810202462 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.81077476 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.807688227 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.8082086 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.80738752 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.808902838 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.808533892 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.810501728 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.807861522 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.808088493 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.808143954 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.807779281 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.811803878 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.808521373 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.810814308 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.810225691 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.811067038 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.810166794 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.810927188 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.808355478 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.810939549 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.811599787 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.8105354 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.811301345 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.809097515 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.80957035 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.809535229 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.809625695 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.811042838 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.812492827 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.811531365 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.811321563 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.812150414 seconds)
  done (took 101.263269602 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.81314227 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.812933313 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.810178477 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.811444274 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.812696248 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.810094637 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.813465946 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.810640415 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810192334 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.813185817 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.81202696 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.812727879 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.810682713 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.812548564 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.811135842 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.814307394 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.810683092 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.811345854 seconds)
  done (took 34.359615942 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.810995793 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.812611207 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.814232062 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.810493946 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.809889668 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.814742596 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81007141 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.814039882 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814436765 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.811045802 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810392644 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.814043624 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813295354 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.814321654 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.811932233 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811327763 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.813347139 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813619318 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.810294963 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.810714316 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81403791 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.813151406 seconds)
  done (took 41.618485728 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.816508958 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.817333674 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.835387713 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.86001047 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.847846014 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.81651391 seconds)
  done (took 12.740536814 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813319489 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813563835 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.812502962 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815005822 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813546867 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812252146 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813618975 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812342259 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8149813 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812639437 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812967045 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815021878 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815554969 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812939145 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814830665 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815428285 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812828774 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812639417 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813238173 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816025108 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812546547 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816431693 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813298774 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813598194 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813120772 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812993112 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815649934 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813170529 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812642821 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815282472 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816083642 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812969968 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815384404 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814771113 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817511683 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815278333 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813583396 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816590618 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816386262 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814230041 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.816618353 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816431141 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816410215 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814188409 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817077256 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813869433 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81476891 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814495322 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813881474 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81727637 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818085388 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814027132 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818060025 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816807479 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817854066 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817703224 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815587073 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815040598 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817236468 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815159214 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814963685 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818363502 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815497367 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815634592 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81705902 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816079655 seconds)
  done (took 121.533841378 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81500389 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.815884407 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81660125 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816945468 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816953668 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81619269 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815447719 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815285113 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815371725 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815924596 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819967117 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815674176 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815258636 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817014855 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816458222 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816225437 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815693379 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816354608 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815965916 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818782199 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816053978 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81676496 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816129586 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816620694 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816755628 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820221917 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817540112 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818406956 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817126404 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816576751 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817210427 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816816673 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817721348 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.817085647 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81698152 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817519271 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81720543 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817138707 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817717176 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820435487 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818029937 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819663545 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817232814 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817885835 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818153271 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818347158 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817349192 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817404574 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818079579 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818570241 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81842279 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818731533 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818491479 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819116248 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819427513 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818745523 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818885615 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818685393 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817724688 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821200342 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818085777 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818047452 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821654112 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819061536 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817345044 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82006348 seconds)
  done (took 121.711920837 seconds)
done (took 2480.650554385 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.898747335 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.818991395 seconds)
  done (took 15.47122057 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.98624023 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.938509238 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.823769941 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.875759941 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.824158579 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.843751374 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.841843669 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.824464399 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.824248459 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.823087209 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.823795879 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.009933023 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.818382198 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.824419979 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.824020048 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.915960975 seconds)
  done (took 51.580056622 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.827686849 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.828562404 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.839876378 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.830322403 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.827860353 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.840138456 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.860654745 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.832060925 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.862589625 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.850823322 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.897989412 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.837371588 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.827902225 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.875539722 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.839376066 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.8418515 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.928093414 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.900459152 seconds)
  done (took 35.104211911 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.904278991 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.830454035 seconds)
  done (took 10.495803483 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.853474594 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.853399317 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.838584262 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.849246639 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.82968177 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.858046487 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.826003864 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.830889076 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.850785671 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.854989227 seconds)
  done (took 70.203213689 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.834185695 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.829785483 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.828738274 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.827268026 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.820969972 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.825272714 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.828401507 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.821953594 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.507037313 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.86293111 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.834041023 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.834170417 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.827977596 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.831018153 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.822801173 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.851087552 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.995118211 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.823425402 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.821823972 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.834555445 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.830046462 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.890618351 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.842249471 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.824824186 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.857459106 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.508441863 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.837121975 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.834739891 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.951347643 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.822698315 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.829721692 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.830244352 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.830107753 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.203957285 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.158926177 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.827374204 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.838435836 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.836743688 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.82435009 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.940336184 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.830594139 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.83545133 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.766384347 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.138966104 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.931286811 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.871478218 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.179265128 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.833179861 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.831049043 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.859009291 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.831563493 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.832436401 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.843849609 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.346747608 seconds)
  done (took 130.474830845 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.860047969 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.310824375 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.978633529 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.826376698 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.118421793 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066553172 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.826829329 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.874723655 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.841453258 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.076683512 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.003521682 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.946581377 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.828556884 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.826723567 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.826746629 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.822641017 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.974849917 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.899172697 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.831352126 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.832227545 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861608299 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0924855 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.954630198 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.97117067 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.850290736 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052435153 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.953940684 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.94674796 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.832569259 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.82482841 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894095924 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.836273873 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.828042888 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.826462993 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.99230975 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.933303627 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922522505 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.828782295 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.861566156 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.828961259 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.861016444 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047115742 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.935402642 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.965302285 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.075304673 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.054666461 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.828969936 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.826511709 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.826836806 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.019453802 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.043180827 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.080547386 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.956364428 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.829121167 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.170591058 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.826301516 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.854374181 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.077816953 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.059682183 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.939257277 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871409842 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.829594233 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.827495565 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.143114297 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.833263403 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.934634789 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.211402255 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.830369489 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.935649353 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.941962277 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.061452568 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.068352288 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.859394176 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.836613948 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.871309117 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.111235658 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.900154992 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081231373 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.844830386 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.829915721 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922342298 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.832224183 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.001921495 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.144334302 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.094664466 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871169674 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.82975532 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.828914146 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.075744463 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.079217106 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.10291747 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.07339283 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.996101885 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.834418548 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.829441103 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.828789524 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.858557846 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962027599 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.831897194 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.188401926 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076146706 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.600289565 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.859997436 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.145028075 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968753663 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.832471967 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.830425022 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.82898586 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.03464155 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.872524869 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.832105736 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.83141064 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.0777666 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.780171045 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.95148248 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.555246184 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.896664625 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.835855519 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.09653665 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.835958376 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077606889 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.876801414 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.14243136 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.616819392 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.874506095 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.026247373 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.074301573 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.832389707 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.094022379 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.146123038 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.957754777 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.079943584 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.586852046 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.836294412 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.123727462 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.848674475 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.862237124 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.000652665 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.837242639 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.986792256 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.837078755 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.14066467 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861335533 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002453073 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.095045861 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.107921235 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.879693065 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.884485243 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.84086553 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967366722 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.832165746 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.967172707 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015571191 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.001445141 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.832060027 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.428605885 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.830715132 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.98092203 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.131559877 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859787084 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.905399257 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.83653389 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.837800525 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927153184 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862549295 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.430252685 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.834106266 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.004597348 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.79369163 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.290923142 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.833126317 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.144269975 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.045165793 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.834460978 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.839247739 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.636287759 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.832484271 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.99012381 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.993817732 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.667404435 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.834753059 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052090207 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.837932456 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.96755059 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.837607536 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.8370901 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.183718314 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.888998572 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.834770324 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.855263318 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.834527393 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.836198433 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.063894896 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.864702122 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.554566191 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.973821659 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083942026 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.148328093 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.098586502 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.884331689 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.835481986 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.098716946 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.866251495 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.908867757 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.836930388 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860786942 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079354329 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.838508311 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.062810147 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.122748759 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.85563896 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886418463 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.838626537 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.92496101 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.835333615 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.97825397 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932238636 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.839252992 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.835869761 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.953409517 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.961972298 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.030157822 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.836601074 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.8549999 seconds)
  done (took 946.931877081 seconds)
done (took 1262.01482541 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.836751817 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.838563933 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.821530895 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.838963805 seconds)
  done (took 29.105985915 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.841577947 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.842792787 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.840766654 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.842593966 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.841286663 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.843216642 seconds)
  done (took 12.823329408 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.870651616 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.83963355 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.8393231 seconds)
  done (took 21.320663326 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.910862996 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.246043054 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.944877264 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.285714097 seconds)
  done (took 10.158573576 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.842997151 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.841018016 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.8414146 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.842530752 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.842284021 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.843229844 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.84140488 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.842810944 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.844234021 seconds)
  done (took 18.353820101 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.067045681 seconds)
done (took 97.599023107 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.165586158 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.840498308 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 3.312881396 seconds)
    (4/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.842671664 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.840735491 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.845326733 seconds)
    (7/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.136768385 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.970563831 seconds)
    (9/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.092053424 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.247043858 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.842965034 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.878615855 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.125381462 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.841405166 seconds)
    (15/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.863299783 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.861028221 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.840825042 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.820445026 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.474733022 seconds)
    (20/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.148744633 seconds)
    (21/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.964609193 seconds)
    (22/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.860116088 seconds)
    (23/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.860486926 seconds)
    (24/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.82115879 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.084391621 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.126760376 seconds)
    (27/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.180212681 seconds)
    (28/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.93536523 seconds)
    (29/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.336944093 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.904258802 seconds)
    (31/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.032288812 seconds)
    (32/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.00175413 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.626579421 seconds)
    (34/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.907432112 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.745935043 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.636139817 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.947539592 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 3.19688779 seconds)
    (39/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.960507043 seconds)
    (40/309) benchmarking ("sort", Float32, false)...
    done (took 5.594864027 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.970562459 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.841657593 seconds)
    (43/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.115769978 seconds)
    (44/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.92366495 seconds)
    (45/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.920131678 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.943336337 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.936385528 seconds)
    (48/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.225740717 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.720249622 seconds)
    (50/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.970214552 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.74386068 seconds)
    (52/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.341581507 seconds)
    (53/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.958564555 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.002810097 seconds)
    (55/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.372604503 seconds)
    (56/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.906167162 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.184292985 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.953026149 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.122384212 seconds)
    (60/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.747098912 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.844311628 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.183056588 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.165957 seconds)
    (64/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.045244065 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.828281543 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.125029479 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.84691971 seconds)
    (68/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.977379665 seconds)
    (69/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.86708785 seconds)
    (70/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.960818092 seconds)
    (71/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.85568098 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.015842823 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.150034992 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.09643752 seconds)
    (75/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.936139337 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.829435673 seconds)
    (77/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.781785295 seconds)
    (78/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.865804563 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.825683683 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.866260701 seconds)
    (81/309) benchmarking ("sort", BigInt, false)...
    done (took 6.847016703 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.064939072 seconds)
    (83/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.904266116 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.000753124 seconds)
    (85/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.010092387 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.191517409 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.222149471 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.115426657 seconds)
    (89/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.279214997 seconds)
    (90/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.944852109 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.842329738 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.43355818 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.558575047 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.218445768 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.209770577 seconds)
    (96/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.844286423 seconds)
    (97/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.8995907 seconds)
    (98/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.147991375 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.437148138 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.358567843 seconds)
    (101/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.115027736 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.843881734 seconds)
    (103/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.976078911 seconds)
    (104/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.856556949 seconds)
    (105/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.817580414 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.91782163 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.141846033 seconds)
    (108/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.379226028 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.732618198 seconds)
    (110/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.410975299 seconds)
    (111/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.827339954 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.582288021 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.867010293 seconds)
    (114/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.944471342 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.518231844 seconds)
    (116/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.908680876 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.087877023 seconds)
    (118/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.027655738 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.081202038 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.224251591 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.760035776 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.025422758 seconds)
    (123/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.929136249 seconds)
    (124/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.040035639 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.84641791 seconds)
    (126/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.829692983 seconds)
    (127/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.007221205 seconds)
    (128/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.871439474 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.962958263 seconds)
    (130/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.061383191 seconds)
    (131/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.520282191 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.145037049 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.295900177 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.867288537 seconds)
    (135/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.857223 seconds)
    (136/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.049330031 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.214438946 seconds)
    (138/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.976688187 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.068598453 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.124515952 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.013252826 seconds)
    (142/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.83020333 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.33462594 seconds)
    (144/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.955998508 seconds)
    (145/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.868695349 seconds)
    (146/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.445296445 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.929390234 seconds)
    (148/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.067239808 seconds)
    (149/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.870073881 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.013356206 seconds)
    (151/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.447079003 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.84983682 seconds)
    (153/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.946492493 seconds)
    (154/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.829331122 seconds)
    (155/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.634664346 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.909082141 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.071704019 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.851974605 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.874100769 seconds)
    (160/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.197946637 seconds)
    (161/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.876044645 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.949704002 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.18206144 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.8716446 seconds)
    (165/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.948123077 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.231857955 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.207811759 seconds)
    (168/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.852634644 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.856951248 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.676881145 seconds)
    (171/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.930292604 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.868465746 seconds)
    (173/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.993315853 seconds)
    (174/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.850945736 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 9.186823897 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.991232558 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.149028512 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.315292595 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.121759862 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.899323749 seconds)
    (181/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.868176327 seconds)
    (182/309) benchmarking ("sort", Float64, false)...
    done (took 5.656675471 seconds)
    (183/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.851168691 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.309385708 seconds)
    (185/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.03787571 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.896296433 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.451360222 seconds)
    (188/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.248336752 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.997664325 seconds)
    (190/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.854746489 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.883787603 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.99061081 seconds)
    (193/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.850873167 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 4.316633383 seconds)
    (195/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.957152724 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.867051672 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.886560432 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.84862885 seconds)
    (199/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.139977032 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.108855657 seconds)
    (201/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.858875825 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.901654501 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.946873513 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.21242928 seconds)
    (205/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.153796964 seconds)
    (206/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.254142312 seconds)
    (207/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.856436107 seconds)
    (208/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.861399251 seconds)
    (209/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.734266929 seconds)
    (210/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.045020003 seconds)
    (211/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.15387432 seconds)
    (212/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.897384628 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.553426595 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.06035795 seconds)
    (215/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.975255234 seconds)
    (216/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.99373644 seconds)
    (217/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.936248094 seconds)
    (218/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.831816273 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 3.540128018 seconds)
    (220/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.191902419 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.872854189 seconds)
    (222/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.928054978 seconds)
    (223/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.504881537 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.578120572 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.904420877 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.887111638 seconds)
    (227/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.048285726 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.956176185 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.509205101 seconds)
    (230/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.71360143 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.16436299 seconds)
    (232/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.983058795 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.8517697 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.818712144 seconds)
    (235/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.202811229 seconds)
    (236/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.920962507 seconds)
    (237/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.3681933 seconds)
    (238/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.145794947 seconds)
    (239/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.9313176 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.860473398 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.655159961 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.547986346 seconds)
    (243/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.846294563 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.343709286 seconds)
    (245/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.274162001 seconds)
    (246/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.939328462 seconds)
    (247/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.872694077 seconds)
    (248/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.934363525 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.504021344 seconds)
    (250/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.213648605 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.054685356 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.858124258 seconds)
    (253/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.961872007 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.03260699 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.927240294 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.947928654 seconds)
    (257/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.860983853 seconds)
    (258/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.450229009 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.156400372 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.946245826 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.836781297 seconds)
    (262/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 4.156212219 seconds)
    (263/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.997983363 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.875232324 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.860073277 seconds)
    (266/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.075994551 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.842289462 seconds)
    (268/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.4537654 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.15747977 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.237516975 seconds)
    (271/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.229589205 seconds)
    (272/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.957777019 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.132218065 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.858407857 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.248447172 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.838613122 seconds)
    (277/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.060953478 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.699117172 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.702609901 seconds)
    (280/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.03214664 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.784520633 seconds)
    (282/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.996987207 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.943541535 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.932778539 seconds)
    (285/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.933879 seconds)
    (286/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.364706108 seconds)
    (287/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.98207081 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.983101687 seconds)
    (289/309) benchmarking ("sort", Int8, false)...
    done (took 4.814520375 seconds)
    (290/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.880486611 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.046806598 seconds)
    (292/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.856351571 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.226465004 seconds)
    (294/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.630439008 seconds)
    (295/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.263255566 seconds)
    (296/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.856050793 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.941720888 seconds)
    (298/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.855223814 seconds)
    (299/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.937253876 seconds)
    (300/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.006663164 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.36712358 seconds)
    (302/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.957319508 seconds)
    (303/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.858484245 seconds)
    (304/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.004216501 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.185848139 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.877081651 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.970735483 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.838026224 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.570416808 seconds)
  done (took 1020.207027602 seconds)
done (took 1021.993958324 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.894541541 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.879633988 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.870308039 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.891448219 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.97623091 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.892503728 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.879529721 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.872338089 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.918353333 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.91890284 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.862596709 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.892453395 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.865612656 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.86461103 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.871596803 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.877671409 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.171540512 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.88860449 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.881899643 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.881025156 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.88148612 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.865678108 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.919268826 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.891773444 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.874610227 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.873709893 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.868697872 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.884309404 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.975996027 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.86808703 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.875429968 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.876616756 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.170234816 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.89195626 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.866404696 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.884125959 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.87642255 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.881408437 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.875797874 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.897424922 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.304638147 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.870707772 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.867432944 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.873315292 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.872641417 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.87648471 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.866765688 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.879213991 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.878567669 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.880148941 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.303854345 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.886700299 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.869552347 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.872680328 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.883706728 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.866185032 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.877068787 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.882948854 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.88804727 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.883071461 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.160187665 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.901661929 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.875933108 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.883291895 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.875390039 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.339815817 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.875504754 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.877485482 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.304709635 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.883225254 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.340026102 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.883571543 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.877264851 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.881529115 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.899677914 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.171317594 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.891700195 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.873310089 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.874618909 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.866558942 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.883517121 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.881455277 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.878848884 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.874420202 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.881144497 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.899056839 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.884436296 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.869358912 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.883451758 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.88795279 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.875036846 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.880186472 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.877739596 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.870459109 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.885689024 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.878657022 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.871220743 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.871842617 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.880002761 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.885636528 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.304938831 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.890916071 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.871692874 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.872177718 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.87500782 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.883322883 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.303550015 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.876464906 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.898391198 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.924754673 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.877033031 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.163928623 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.895666744 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886109874 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.884496485 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.879695968 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.871666658 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.162192003 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.329388082 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.890674084 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.878154263 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.868358933 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88626765 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.878397236 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.8721552 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.17400838 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.901119402 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883802258 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.992075571 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.887523597 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.902519883 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.868638266 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.880151184 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.899728454 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88661047 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.902372309 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.879839229 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.886225721 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.887384843 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.874063871 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.883360175 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.888145938 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.878545488 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.884324521 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.871478573 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.90055405 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.883887693 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884108437 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.898480462 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.992848118 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.87636465 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.164917684 seconds)
done (took 294.011658466 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.941372774 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.866119858 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.969452685 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.867714397 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.956163563 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.956732501 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.865089772 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.865599625 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.865101924 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.252058657 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.865734015 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.866253763 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.873802987 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.865696737 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.954614449 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.868120613 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.865607307 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.214637892 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.869980135 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.94349382 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.867226766 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.865959966 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.868582531 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.254589455 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.872342089 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.869421024 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.944079933 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.868636045 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.218769163 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.864984598 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.864860609 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.219816916 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.963014661 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.886915218 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.879109406 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.87541808 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.95761667 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.873222552 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.954299049 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.955037146 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.971237822 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.911196953 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.873854741 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.86642417 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.873057648 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.871953872 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.867078668 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.907957275 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.873485576 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.868485038 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.215310497 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.878589499 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.867427302 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.867696685 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.868015209 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.901642586 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.867533713 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.872195698 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.965817145 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.871958281 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.93810521 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.283789037 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.255456648 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.870670827 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.870607524 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.867710947 seconds)
  done (took 184.46357432 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.941360657 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.947464673 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.942523569 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.877732868 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.923140506 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.945637908 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.87736966 seconds)
  done (took 15.255223534 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.879923458 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.871333786 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.924799017 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.924318111 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.872524006 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.024402779 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.870512131 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.88745246 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.869325454 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.927682297 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.872530344 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.872281035 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.877640385 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.86997695 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.924546025 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.887984236 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.990828637 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.877649382 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.873891306 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.033058276 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.870276395 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.879248338 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.930870172 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.88855616 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.87381069 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.882168238 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.46283935 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.873223167 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.869463002 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.871614767 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.870740427 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.915878936 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.872947142 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.874788251 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.870011419 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.992580437 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.874512041 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.870422653 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.871906814 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.868251441 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.871596288 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.872820088 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.872458614 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.86996407 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.872271724 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.901254099 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.873687624 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.873814404 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.873287957 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.873234927 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.928226864 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.874695764 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.871445494 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.871519008 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.933089804 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.881600622 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.875024295 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.871848428 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.874970194 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.871617759 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.0345859 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.926802003 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.874643767 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.92624844 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.875295296 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.87520889 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.874334344 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.874653352 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.93284234 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.874328789 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.926658223 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.872709374 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.036028278 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.902612026 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.87594255 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.881500185 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.882517215 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.877116593 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.879582097 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.884388599 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.872348671 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.880301373 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.884765624 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.873060938 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.872358113 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.987025175 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.988158973 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.873188727 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.892683622 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.88623193 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.873009437 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.932125201 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.875595444 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.873183967 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.931700908 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.994909556 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.935511411 seconds)
  done (took 206.34370959 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.884313999 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.887326783 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.880962298 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.895958813 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.880026957 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.880825914 seconds)
  done (took 13.114458369 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.882381449 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.876859134 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.876498912 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.875989079 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.878083259 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.877682622 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.878401934 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.881900799 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.881245197 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.875723483 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.877794777 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.879090747 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.878989534 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.877042865 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.878363686 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.877162858 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.87900587 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.874787949 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.877002522 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.877930279 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.024378238 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.87824273 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.312674574 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.882402187 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.882220392 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.877389443 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.889795418 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.876945049 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.877819964 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.887377526 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.881928092 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.879336426 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.881920171 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.888503003 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.882756159 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.882989116 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.882535613 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.879765151 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.875435032 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.879815104 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.87933982 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.880276759 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.878653665 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.879760178 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.884893845 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.886661589 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.883218275 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.890014071 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.88015531 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.880341651 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.88067168 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.878689148 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.880512939 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.880986168 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.887843919 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888798672 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.884943449 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.880833316 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.880871345 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.884858309 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.88059788 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.880708109 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.885765507 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.884966483 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.887152761 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.881311145 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.884284294 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.885419581 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.881925248 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.88064932 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.881462197 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.877222046 seconds)
  done (took 138.818121013 seconds)
done (took 559.805512871 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.14262268 seconds)
  done (took 8.951595372 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.93946382 seconds)
  done (took 8.839949836 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.201664128 seconds)
  done (took 10.009770342 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.893800408 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.889152166 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.88788496 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.895483369 seconds)
  done (took 29.38478378 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.20130865 seconds)
  done (took 9.010462482 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.886768927 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.873661813 seconds)
  done (took 15.638770387 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.950586765 seconds)
  done (took 8.760807686 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.091496776 seconds)
  done (took 8.90411925 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.895394991 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.892428531 seconds)
  done (took 15.610630227 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.859306753 seconds)
  done (took 8.667645675 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.529895069 seconds)
  done (took 11.347167521 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.880215817 seconds)
  done (took 8.701734693 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.956924553 seconds)
  done (took 8.766075201 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.996317596 seconds)
  done (took 9.805224213 seconds)
done (took 164.208010251 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.880382687 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.878402522 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.877069832 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.876551332 seconds)
  done (took 29.321712908 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.913772361 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.914796919 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.915569511 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.924819224 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.917576468 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.913392759 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.906339312 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.906465923 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.924859314 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.916666835 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.916002389 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.917449812 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.914225615 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.907473651 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.917786328 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.916072447 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.925007222 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.918037486 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.908953287 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.919006409 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.882850649 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.926109688 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.920887586 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.883939688 seconds)
  done (took 47.738585229 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.084490782 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.956214525 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.03855494 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.940503157 seconds)
  done (took 9.83088475 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.933043022 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.935318054 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.947555975 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.984947143 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.011951558 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.944698435 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.909277491 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.904414119 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.89014814 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.936302902 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.011066133 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.951670368 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.018506027 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.882802642 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.064547654 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.882642624 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.882370865 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.934777319 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.985511778 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.013279776 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.884311554 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.934910035 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.938274541 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.952344612 seconds)
  done (took 48.54615884 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.881266721 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.891651792 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.888201967 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.882670213 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.882644286 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.884070299 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.888536223 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.883340431 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.903965926 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.884002919 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.881552416 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.882726427 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.881777687 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.883413008 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.882260036 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.89557643 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.895254898 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.883152878 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.885745139 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.888014686 seconds)
  done (took 39.544396229 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.882464901 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.735228002 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.233994751 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.137423867 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.881319351 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.883135589 seconds)
  done (took 31.56650495 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.900405945 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.948682027 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.893849504 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.943318516 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.023189347 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.894669769 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.888776572 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.954277613 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.996048778 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.95775195 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.907521457 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.914303814 seconds)
  done (took 25.03986432 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.88277741 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.883091858 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.88339422 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.899809696 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.898651374 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.895228305 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.895423766 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.881715271 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.902608994 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.906696964 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.895473982 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.899763945 seconds)
  done (took 44.541315483 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966461229 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.92446032 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.907851191 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.568059521 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.256821685 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091269567 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.536851328 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.209079068 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.883752892 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154054418 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.967701122 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984026661 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.137184849 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.321801383 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.91035352 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.340926302 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177277576 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087754022 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907458175 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579132025 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94499538 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.005655651 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.706641528 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.938589873 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.092642069 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.008994342 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.141597333 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.880533228 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018171003 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918629347 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891825387 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.880814409 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155010269 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259317365 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985662161 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891789272 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.504003618 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.593473673 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.874470853 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.659215634 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.626925119 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.008272608 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891998399 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882045773 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.815662305 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.975986716 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253746948 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.888102798 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.59290555 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.885759835 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893643487 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978108345 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.887989079 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.697859542 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807041449 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.884935486 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.882733214 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89280355 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.452806957 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.027536288 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.024713549 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.855379358 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.979305916 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.595714787 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272757904 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.031128481 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.887496848 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887291718 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819171248 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.678887572 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939945632 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213360946 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.906085154 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.532311276 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211828747 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.04379185 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828588484 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149649844 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.367340334 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.854137776 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111156927 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884182809 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819462853 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.825012408 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.818396564 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144571807 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92070317 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.646526102 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927687006 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.211033542 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.895402561 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901992174 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908087671 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.10865568 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.769353801 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885981408 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.740214091 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.086009774 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907129019 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.217797824 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819868879 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.88942629 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142877044 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.097313167 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.909100502 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.3806392 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044719377 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3900193 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.934749483 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.978116952 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.930986491 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.155579131 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943340165 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.030424406 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942674345 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886275469 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180308571 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.422657305 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.02043266 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.970862376 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.012530494 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.196109602 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913378785 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968800209 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889654004 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.886736465 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.700748969 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439801598 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.886899491 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.889099149 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.917038522 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.931477888 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.888066762 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830735145 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.516493152 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.979398336 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.901925788 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.111491932 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.399777092 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195849621 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821542507 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215423048 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.97919907 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.110646068 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.537576852 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.966230543 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148737758 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.912057276 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.942894163 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932837729 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90599625 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986207723 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910154873 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.982388892 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.179291066 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.892708704 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.892712236 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.669683807 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.92520144 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895141988 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.893306333 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.64490785 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161544097 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913083036 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.896367253 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.777074592 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.902099042 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951649513 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893705092 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.899789614 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.423163011 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620952365 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.895310914 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.479298521 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113650054 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900400113 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.603084037 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007744806 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.971604201 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.168491348 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947248432 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.824470324 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.600368881 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.582936327 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890578498 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.826023452 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.88999384 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898726312 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901136582 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.08923635 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165322929 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933491668 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.600671327 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.932995499 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90071068 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.894709015 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891211373 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.399493198 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.03535934 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.025878574 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.933949894 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033659458 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.904303719 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82496785 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.89480629 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896027434 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.891256881 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.890962047 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924707792 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.609859324 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26689455 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153156199 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.545634548 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905034362 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.660603547 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.951132749 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.891506704 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.764072104 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.008719283 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.948249073 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9028289 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.902639127 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.678136963 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.601521743 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.458711029 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226089701 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193629107 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334661022 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.053073542 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.918804651 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.228509882 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826443369 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.449060008 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950196896 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235732389 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83647103 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981959463 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.544058424 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238533512 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907450647 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120695727 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286212317 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.820099011 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917841367 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104942499 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928142252 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.994369481 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854416377 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.197322994 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033934717 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.618159622 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104457388 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224403593 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.608106733 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.054444489 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.896640917 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.565850217 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976931187 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.604477878 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.065907396 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.03570499 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.91107099 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365552173 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.902886974 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.120129286 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242299221 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.004998586 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.01087773 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829483178 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.904890057 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.904897598 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.895374191 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.892335516 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.777860337 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.14968466 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90723014 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829064337 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.968911934 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181838435 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.793578313 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.900769122 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89574193 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186928462 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.378861031 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066017745 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.948751349 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.411442728 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901688143 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.829314884 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830194012 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.588270928 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896829824 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.87157416 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100701209 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.001556866 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812303836 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.925807264 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.173442276 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154010578 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.909730243 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.166502093 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17007524 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.60018255 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91973996 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.996837693 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.612743804 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.009778472 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.897233819 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.133042204 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.651804181 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.123546739 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.917440265 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.973212181 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.900149796 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110457723 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896656563 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.872733922 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131585014 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.61960453 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.976150812 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212715099 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969956619 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.844200147 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.946506257 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.993516865 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911096119 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977620777 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90808747 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.908116809 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.908715864 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944313121 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.856899534 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.025735784 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.91182154 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991202987 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.055764052 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.420663552 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.903245407 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171479481 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254434334 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.223224243 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95632641 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.899514235 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899471062 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832444486 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046916155 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.124971862 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171994231 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.029993109 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.018503591 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927739443 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.617702026 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.064976736 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139137995 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175468438 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.795582489 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.355959339 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.938021063 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.901492926 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911118768 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.111596371 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106929158 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195723106 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.035420723 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.93309846 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.258307945 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175211983 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.901292112 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901096467 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491295844 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.002065623 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.574891121 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.94176627 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.876897949 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180584121 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911150875 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28171468 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.924027417 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.056389751 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.675082759 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.65456779 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.193071547 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.890766323 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.963880509 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175157371 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.281586402 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215654554 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96954256 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912253737 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.004331211 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048682471 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.78119464 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.902824525 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.902627579 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.950615894 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.612467026 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.912231069 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179383314 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213880683 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.9010071 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.788615233 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92572548 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.912856927 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.125946242 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165793668 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15493883 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912754906 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.904099675 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.718497291 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178433968 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961971516 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837633203 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.907437755 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002668482 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151107397 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92598066 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.356698554 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.614967827 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172325261 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.915153867 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92584489 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.013415822 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.265522008 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227625755 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.436882796 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110445148 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.490312962 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.429832413 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204434209 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.909115291 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.003863937 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205541902 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.90747698 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.934534818 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942041466 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.173440439 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214735561 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.950745566 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.623049622 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.875588666 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.245398566 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464777447 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843853546 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.915463076 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.967238554 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.905390599 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.037475622 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917552175 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.800056334 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.015649987 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.664015084 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180949817 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.912151905 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.894873914 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.674388078 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.145066916 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942735634 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047825838 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914702445 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.580025921 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.257562905 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163746498 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.945086742 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.913907719 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.910428773 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907235945 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.895704135 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.105290237 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.105939207 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180428734 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.974046064 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.942220716 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911087501 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.123979387 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119837774 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.829298294 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046944505 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.941597761 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947251656 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 5.062478992 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.409684817 seconds)
  done (took 1685.844800528 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.915546184 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.914737732 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.991844599 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.970132735 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.972279894 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.022660941 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.955795512 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.099270555 seconds)
  done (took 57.685078137 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.912505354 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.128748609 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.922303322 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.913302753 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.9225905 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.913812497 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.078514967 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.922498205 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.922486021 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.923922711 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.913498567 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.9123021 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.222703342 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.935501214 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.913143315 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.912940573 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.922081709 seconds)
  done (took 75.154469533 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.911915381 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.942118773 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.943337666 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.923608738 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.931244042 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.911807942 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.740126547 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.939395582 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.915933896 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.040458936 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.548697893 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.916818146 seconds)
  done (took 87.51101425 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.922703298 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.920507622 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.920837797 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.920711979 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.921018476 seconds)
  done (took 11.452819942 seconds)
done (took 2195.613640963 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.173250401 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.123671842 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.136127843 seconds)
  done (took 6.104434801 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.063874638 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.111092677 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.231660519 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.236784426 seconds)
  done (took 10.490416978 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.202979038 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.285194733 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.127430144 seconds)
  done (took 8.459656697 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.316069343 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.91302216 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.019975805 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.908984754 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.913269002 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.911494011 seconds)
  done (took 22.579906676 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.915423759 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.917264944 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.914823238 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.917485682 seconds)
  done (took 9.509873345 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.895799195 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.626220603 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.897113418 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.915258596 seconds)
  done (took 21.179366195 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.663328488 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.672553823 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.658729707 seconds)
  done (took 9.840396331 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.514468489 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.833763126 seconds)
  done (took 9.193982901 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.169336807 seconds)
  done (took 4.014594891 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.046058995 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.179811869 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.376818533 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.424775458 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.464370898 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.774319679 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.223124434 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.160701389 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.30708411 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.34780299 seconds)
  done (took 25.151611956 seconds)
done (took 141.790827743 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.296429975 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.156225515 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.120898536 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.254886133 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.138748397 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.120751625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.129118953 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.241385263 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.764775282 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.761650691 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.254950763 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.13767029 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.285876369 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.152428622 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.287335616 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.149250763 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.135828238 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.31743706 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.952132193 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.186812133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.130934881 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.894165646 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.100280555 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.909059522 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.140135232 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.075013725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.472279813 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.152461271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.103106739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.480854435 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.078472195 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.339014014 seconds)
  done (took 174.568776659 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.680315697 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.918251666 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.918724795 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.918553357 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.375310773 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.919937344 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.919270723 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.917780552 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.103494026 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.110463544 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.918330024 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.356339822 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.91872568 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.918151433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.919192291 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.918101564 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.291438339 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.731488424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.927127229 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.92994128 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.935121697 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.269678993 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.935482553 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.308915264 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.314287717 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.939451831 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.920167832 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.939448683 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.927406933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.927638802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.934457372 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.919943218 seconds)
  done (took 209.733083715 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.920156598 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.920393898 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.919698456 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.920067958 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.923428314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.925516192 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.92015222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.920050113 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.619552628 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.611955113 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.930163841 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.928936299 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.931420349 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.91996216 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.926832547 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.921227428 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.927955783 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.927525494 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.927512027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.929943719 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.934909362 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.845971725 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.934504382 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.848217164 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.928303065 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.929507262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.921895318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.929085722 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.931418926 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.931961526 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.932506177 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.922217761 seconds)
  done (took 222.731016572 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.111784957 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.923816484 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.924965441 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.861332012 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.924797913 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.924053335 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.919284512 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.113297497 seconds)
  done (took 19.569769478 seconds)
done (took 628.461565392 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.353376073 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.187581608 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.100837313 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.948355908 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.170497676 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.982464956 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.945161627 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.005247527 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.13807707 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.014756232 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.590246779 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.965081391 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.686072699 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.965856528 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.076424928 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.998935695 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.492669425 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.580083726 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.121733747 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.996483402 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.115816545 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.880721 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.017288022 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.183625986 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.70089853 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.929569451 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.099776951 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.497428723 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.954698325 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.111520583 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.659355945 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.316096278 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.958168641 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.946766627 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.998107579 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.97938372 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.273109878 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.957159834 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.071143399 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.684972621 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.995048616 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.033803822 seconds)
  done (took 106.537583208 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.91679232 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.916136104 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.917323315 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.916302909 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.917000698 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.915782788 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.915922332 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.915545714 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.917033416 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.916235004 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.91539951 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.916899336 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.915945399 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.917231644 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.91540859 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.916382653 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.917440762 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.918337059 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.916150849 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.915383446 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.917469585 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.915786093 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.916669951 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.916604262 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.917882836 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.918211047 seconds)
  done (took 51.700911119 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.929414888 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.075691999 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.149844155 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.949745001 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.933471137 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.936247245 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.950624943 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.932777029 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.935804616 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.934971856 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.024951188 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.935961667 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.952692138 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.152089187 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.946394277 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.930135018 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.929761029 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.933573833 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.082139647 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.947630553 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.952538454 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.934081672 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.951351273 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.946457411 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.935567149 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.934476289 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.937697559 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.369383842 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.940378159 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.02565038 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.975085265 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.957650095 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.326895062 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.159965359 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.983242186 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.939398028 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.9315817 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.030236666 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.939816475 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.934979312 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.951453052 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.938188799 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.154099188 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.425776194 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.945269371 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.932258217 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.378653494 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.037121739 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.976049068 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.946355506 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.158045635 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.948633522 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.933391378 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.936589047 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.971217022 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.94522591 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.935451789 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.242079953 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.944818841 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.953996096 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.935765148 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.936892297 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.089861256 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.942584659 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.07831002 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.943112893 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.942995626 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.937106719 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.153701192 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.94937848 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.433565122 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.950719699 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.937580164 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.031747806 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.086478894 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.40753792 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.951086536 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.098457719 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.345767889 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.962064503 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.946514125 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.365477091 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.965254384 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.946921682 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.937719854 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.938469327 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.937446057 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.9818887 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.95546357 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.373619131 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.438279105 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.25800089 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.966533311 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.956439587 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.941087384 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.248449441 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.94435836 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.938751222 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.163735377 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.450509212 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.951987354 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.949381706 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.424306731 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.953248994 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.959561135 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.950190012 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.161266204 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.95119275 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.979269496 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.935891842 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.943998666 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.941605531 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.957106181 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.944736525 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.935051313 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.405772377 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.044624587 seconds)
  done (took 239.346121963 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.933667663 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.943234925 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.932838326 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.933986827 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.932110661 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.937957989 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.932126769 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.932502234 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.937984704 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.933348573 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.931979406 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.937707409 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.935134912 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.938966939 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.428058865 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.943492753 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.547367244 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.935641655 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.937377856 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.936589301 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.616832787 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.943594782 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.935708848 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.943600062 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.939731159 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.942528423 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.937440151 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.960744926 seconds)
  done (took 169.907137355 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.93926841 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.126630856 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.957769985 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.980740219 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.952053397 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.939169942 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.969212308 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.967860613 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.952151483 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.938110564 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.938254137 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.005287859 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.955693907 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.076611966 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.97645468 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.973251645 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.052725954 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.94839754 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.937779769 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.938217405 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.973058448 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.939284743 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.005752181 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.074321003 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.95761755 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.063437652 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.945420514 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.94201215 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.944753386 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.063750402 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.954549701 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.001774469 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.97173007 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.962631964 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.070500498 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.062224316 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.049365705 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.972291924 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.952525023 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.93962838 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.939528316 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.929491629 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.063807063 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.957739172 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.946932448 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.050984193 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.957768224 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.942646958 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.950664633 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.939563694 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.958163786 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.966093406 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.01537113 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.077290711 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.974129474 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.966772691 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.971482001 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.248197591 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.952954325 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.046836058 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.937918581 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.060638863 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.960465336 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.93031984 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.941574604 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.945873513 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.970018629 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.977713237 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.056451925 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.955319851 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.048009264 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.97771216 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.952282063 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.941804964 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.944294429 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.063663492 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.064458769 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.979406157 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.986612913 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.981235943 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.941033701 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.945816198 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.932312246 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.96315962 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.946548661 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.059253078 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.068871408 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.952509 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.943878503 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.945089314 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.944414902 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.972726671 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.078262394 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.981343699 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.042961037 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.017525699 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.022332897 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.955855979 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.956410394 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.950884944 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.010821303 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.956846024 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.954940126 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.301180447 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.020331564 seconds)
  done (took 210.641173995 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.041370847 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.418893146 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.998065756 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.006741429 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.242712061 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.376828756 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.727007638 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.997741012 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.99650853 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.025367188 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.157536512 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.046945299 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.00802847 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.986085592 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.410645188 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.9889397 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.997787931 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.021884677 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.998003416 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.567449355 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.310941539 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.119759157 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.99878023 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.12254691 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.97593453 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.303417938 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.498524175 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.380124427 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.03132771 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.343143146 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.342500665 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.677518016 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.217753353 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.239761703 seconds)
  done (took 77.455587071 seconds)
done (took 857.439250207 seconds)
SAVING RESULT...
DONE!
