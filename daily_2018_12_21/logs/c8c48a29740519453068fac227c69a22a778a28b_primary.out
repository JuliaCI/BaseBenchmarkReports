cset: moving following pidspec: 18847
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343687139 seconds)
loading group "string"... done (took 0.558260961 seconds)
loading group "linalg"... done (took 7.623022734 seconds)
loading group "parallel"... done (took 0.16848215 seconds)
loading group "find"... done (took 1.2705327 seconds)
loading group "tuple"... done (took 1.939967507 seconds)
loading group "dates"... done (took 1.425938161 seconds)
loading group "micro"... done (took 0.247469875 seconds)
loading group "io"... done (took 0.978626033 seconds)
loading group "scalar"... done (took 40.666848973 seconds)
loading group "sparse"... done (took 13.364845221 seconds)
loading group "broadcast"... done (took 1.040234416 seconds)
loading group "union"... done (took 14.276980642 seconds)
loading group "simd"... done (took 4.746029695 seconds)
loading group "random"... done (took 9.634537959 seconds)
loading group "problem"... done (took 1.980613033 seconds)
loading group "array"... done (took 22.586661009 seconds)
loading group "misc"... done (took 2.038380722 seconds)
loading group "sort"... done (took 3.44069351 seconds)
loading group "collection"... done (took 19.580500695 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.577407864 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143077491 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149439229 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148386756 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187074752 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155323687 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158440377 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098908802 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.950212414 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.176580311 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153718315 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.526333154 seconds)
done (took 5.158533033 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217141943 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095549058 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103862897 seconds)
  done (took 0.87874235 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076986676 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146218487 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094259046 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078348526 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094217708 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077920326 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095364698 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078381536 seconds)
  done (took 1.350793221 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086440459 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097499761 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08218382 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096662109 seconds)
  done (took 1.047353658 seconds)
done (took 4.264460862 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.735834783 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.27197276 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204431392 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463170903 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195670437 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216954524 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678007345 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.339697545 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253762157 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098862996 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14333555 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386455366 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137636361 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680412328 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089472024 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122628656 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177457151 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447458118 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08254209 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109524866 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115665506 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142398924 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129290791 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090863794 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.182158957 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080924616 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193113544 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107682433 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079868641 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.274465717 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200098029 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692368753 seconds)
  done (took 10.846734982 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112813868 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132978348 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097204922 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137966442 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134238067 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098983821 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084384139 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09651314 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122001989 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175000341 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13043758 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121058185 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093906263 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082115943 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114617368 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243959809 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119005007 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.09983393 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099577308 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088405306 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137090478 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111111254 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108075837 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093423828 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165047873 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220206995 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110462234 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125358115 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096412376 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112208706 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14266253 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143394696 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093515359 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08078374 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172073225 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123346185 seconds)
  done (took 5.11875391 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.080278209 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190692247 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121388598 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170091436 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08016174 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143132371 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093746532 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111844787 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255521988 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.09933144 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.484716016 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142819366 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099364238 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097856257 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082199869 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097272364 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.6077817 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.121860174 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149366753 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113529819 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102401211 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088532699 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379459825 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097056017 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079389421 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09745573 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066005371 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16014515 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155251783 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098298513 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.138083942 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119829777 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082002224 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133712836 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207499826 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108290846 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133731556 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095244612 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079094202 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174235143 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104227942 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079786841 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121064812 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077610036 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134551685 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132687263 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098672135 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096380746 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.201621774 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.0804963 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113429928 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.955400577 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179002125 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.102176493 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095204184 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285249465 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.119734882 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096230394 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078062767 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.296293632 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.188402594 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097972614 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080340107 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097031357 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080927414 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.41165922 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081626448 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.891125262 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082503349 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106444268 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083155382 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096512007 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103231048 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088083202 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114382669 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079168224 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099482203 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079703272 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096528429 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081400791 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107627418 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212908532 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097911748 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079667926 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09568502 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.07723059 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116347529 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097654412 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079681193 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127099788 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130183764 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097864151 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083353538 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132834794 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081445574 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108388952 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094074315 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08292438 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142683774 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096465879 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.16034705 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.092499618 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122499714 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099091728 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114747743 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110825626 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098635711 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168430767 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078465304 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095372235 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07977719 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095260417 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080809015 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099250098 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10919386 seconds)
  done (took 22.929447708 seconds)
done (took 40.659325016 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.323595178 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10371377 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103569411 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102682389 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101822695 seconds)
  done (took 1.496145798 seconds)
done (took 2.229229669 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287115433 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173941482 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094388288 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16574129 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092279261 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.163677327 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158541204 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094779233 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217901465 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.09340621 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160540928 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077481961 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094219051 seconds)
  done (took 2.635837586 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095022677 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115014759 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083373067 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108976864 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077197711 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110012142 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093091684 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115379499 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109037241 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085365071 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092457342 seconds)
  done (took 1.816882465 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094191246 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112451854 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082891418 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109636488 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077167793 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109522919 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09256569 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116794547 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110622559 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086106309 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092665848 seconds)
  done (took 1.815406275 seconds)
done (took 6.993461651 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091288807 seconds)
  done (took 0.819003523 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.93726044 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.787136671 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113717436 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149031086 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.313873523 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171858445 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.465803204 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12388939 seconds)
  done (took 10.998268374 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.146522353 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08426754 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100350813 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084239954 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103674551 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084786371 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100986416 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098812112 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085629242 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102280291 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086354652 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102448218 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10091263 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084265348 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099382089 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085903486 seconds)
  done (took 2.347714999 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119306884 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119073502 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108050774 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107921904 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087793488 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105530292 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10565233 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089777167 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102985807 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103537375 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091000489 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105972873 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103928194 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080688737 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106950552 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107521353 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086252684 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106548274 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106425749 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090652753 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107432833 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095509642 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088289988 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106030222 seconds)
  done (took 3.275977208 seconds)
done (took 18.173560598 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161046571 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109967634 seconds)
  done (took 1.004651988 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096540005 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112942538 seconds)
  done (took 0.94804012 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099288932 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09557307 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12325844 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109981695 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082028448 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09624526 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119941252 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080633662 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096920592 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08080477 seconds)
  done (took 1.726124179 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083660603 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110954824 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101486614 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095670569 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105191543 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095205919 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089588615 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099520689 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110351643 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0777239 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103084982 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114656767 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087019777 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116049024 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10499204 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084405333 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103318171 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097975327 seconds)
  done (took 2.524176632 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080338273 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096584724 seconds)
  done (took 0.920796374 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081975532 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094500926 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081724664 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09735567 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093906902 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077803834 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093703161 seconds)
  done (took 1.364300712 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485346776 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136406691 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260927487 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102222925 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104073288 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301398089 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098433985 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085240919 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103855091 seconds)
  done (took 2.478827683 seconds)
done (took 11.706198442 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095269092 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115352194 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11281734 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.464455471 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107831147 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098016807 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14800628 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249105092 seconds)
done (took 2.142225302 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144569166 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602103644 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.425870132 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.231847215 seconds)
  done (took 2.007831144 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.40360464 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098432663 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08375395 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081063925 seconds)
  done (took 1.417593664 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080191489 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099094578 seconds)
  done (took 0.929033719 seconds)
done (took 5.255593312 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081748294 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128506088 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080640564 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098560952 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078033878 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.096947903 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08059217 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.09639906 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077578145 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097742938 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096071434 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081259867 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.095783126 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.081268058 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096216682 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078427582 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093696318 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081306239 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093668609 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078636977 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093603556 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080243345 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093496671 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078258994 seconds)
  done (took 2.923055446 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100640406 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098758016 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104037945 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087034071 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101979088 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087040816 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103740563 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096410504 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086484442 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100541912 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10175195 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086002928 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098714678 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086400517 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099616487 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101205026 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087040488 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097621252 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083208875 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102436583 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101763358 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082056352 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101544475 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103031592 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.0860871 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101012202 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083601237 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098390312 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102977408 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085820801 seconds)
  done (took 3.610446557 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085973407 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094151848 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07970032 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102233394 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079516813 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096733917 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078603992 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095849601 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080089159 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095546749 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080321247 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095942668 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078838831 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097520929 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079580321 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100509842 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112088893 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079042841 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09503876 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079632244 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097807542 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079242492 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095047544 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078899182 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094970718 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079379442 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095024382 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078672396 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095758683 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079421316 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09842301 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082322732 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095509246 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085562058 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098825326 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077430816 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098488519 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077813425 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096184604 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094319372 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078816892 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094904576 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079045484 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101300167 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079665605 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09634182 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078757394 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096083481 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079280487 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099302095 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078171287 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095341964 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080638528 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096275585 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082106354 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095401291 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09526703 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077979217 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096164246 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078965133 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094331763 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079263063 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096441772 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080567991 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111069453 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085661818 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094946022 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080618174 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096543332 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081558696 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097189409 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108540731 seconds)
  done (took 7.191259006 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083463218 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106111875 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081162767 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098065073 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077397591 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096204897 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099547545 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079699038 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097649758 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086109919 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095623954 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080806957 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098211124 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107447388 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081089643 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097163911 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085729339 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093423508 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079442161 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099705582 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07909632 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100698802 seconds)
  done (took 2.766119539 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210464353 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104550404 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14285368 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106724947 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084242908 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107727045 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101593023 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08743811 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102026657 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083941406 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101379611 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.208218938 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08440989 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100417944 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101073379 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08589264 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101301784 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086122336 seconds)
  done (took 2.767434332 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094227274 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098491157 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102544713 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099227947 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098482358 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084844444 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104695479 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108100695 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084911047 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098179243 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091573883 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101136752 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100620614 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081939873 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10059192 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082337581 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101179618 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081504663 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108341597 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104664729 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104333731 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092597147 seconds)
  done (took 2.893678652 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098064078 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100101451 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119154877 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085155528 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09542536 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080590457 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105257773 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081506932 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107370194 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099537752 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08311286 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096661981 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087846849 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098336243 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103911987 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082454399 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10030805 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082203785 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100942324 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077729378 seconds)
  done (took 2.655695052 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103135223 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100287836 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099904071 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093298755 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100476268 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082748565 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11029861 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099981361 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083208909 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12559928 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100094067 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082973951 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110013384 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105704741 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099316221 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093040692 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109267669 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109066323 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083877473 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100466823 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124806725 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082931121 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110760438 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09937694 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083901673 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10035072 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098922006 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08903111 seconds)
  done (took 3.554583308 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082110068 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09818575 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081745182 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09626193 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079751033 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095598404 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079524411 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095572755 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082080075 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095346832 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082832239 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098338595 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081532941 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098179355 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081923067 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098153723 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081892346 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095682882 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080023278 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096185665 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081589249 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098472974 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081959079 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096434966 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07919816 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098985348 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078685112 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096689924 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080978145 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09610666 seconds)
  done (took 3.443774138 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091826938 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105807105 seconds)
  done (took 0.970900551 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080571102 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11413423 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080132368 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102379085 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086584122 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101040083 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107730015 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087806088 seconds)
  done (took 1.533867291 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097801579 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110109236 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084467687 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113645 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109518413 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099084086 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171301796 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101806221 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106074792 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081395013 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113760563 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082063295 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105451663 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082479894 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105699189 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089600366 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098064755 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10602386 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086241713 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099479326 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084960736 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108717017 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08404588 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096883716 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10059952 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092704535 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113082396 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082754496 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103851965 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105733571 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088071727 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093685879 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082496373 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.1001007 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080431087 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109134484 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116093301 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085418558 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109687667 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100155245 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09507854 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094635465 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087478053 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105541296 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108821037 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084069923 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100587195 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078615607 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097007901 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085847134 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09550202 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08190416 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094642349 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089590458 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102793232 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110592245 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081943674 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100755514 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086100236 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103025806 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088127616 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10234875 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10130135 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083079217 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106078177 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087555189 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110829858 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094268651 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077309818 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096963343 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092823271 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12325268 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105602919 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084903484 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100649354 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081158286 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102900757 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084061858 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107154981 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105756462 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083086995 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106544493 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090389793 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100923988 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102369173 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091509004 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097914803 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084331201 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097788993 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117197355 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082128605 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097371588 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08010977 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111675975 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084705912 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100007201 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079457952 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107931278 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093173661 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083946226 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100706059 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083961478 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112510433 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105086105 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08873441 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109235496 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106465209 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083688167 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102335621 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080646273 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100971372 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084935256 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107464944 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076252404 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103036605 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083447386 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101717413 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108948974 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08142931 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100318075 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090139237 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107248357 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098257081 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080227904 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10313914 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083681512 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104396899 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091219799 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100588051 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077979619 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096154259 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102728836 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083816427 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103251448 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089068292 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103818256 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076718504 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098942899 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104928816 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092653121 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100230953 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083867451 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10682455 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100265172 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083028577 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106021838 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086032825 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098957919 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088759848 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101316943 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077324511 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104696513 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102070299 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082064858 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103446087 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086787525 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103515806 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101351765 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081996078 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105935335 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084497636 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099495341 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083126042 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098961093 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110345799 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086243365 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094910232 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08026965 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108295812 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080028412 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099981455 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080937731 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10314979 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101133111 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081894068 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099532412 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085519756 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112486364 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105450921 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08513847 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10605298 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094347588 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100567199 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085004648 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101709883 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101261278 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084717433 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110136266 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089139417 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10704479 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102906343 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079811906 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106240224 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091262892 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099844171 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081153573 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099438698 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104078732 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089053036 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103463427 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084746541 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098986542 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083044392 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105607403 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102200412 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083347141 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099155084 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089433524 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100551714 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107809982 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084324969 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110511113 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086606261 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096365416 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086592373 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099731948 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107015569 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079720907 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098037781 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082752364 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101579087 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08213308 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103801384 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07648304 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108012405 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107977112 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083389552 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099346455 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084226071 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107795755 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084777492 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10501448 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085549341 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107217341 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110825143 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082828298 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103868416 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094374796 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101344932 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093768945 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088779226 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098876579 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083188805 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099659373 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081499253 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103854527 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10979477 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090414037 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094135642 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086109484 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099219081 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08316927 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097342655 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086965019 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104478486 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100786077 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090619448 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101687185 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08578974 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104677008 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082342626 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102037263 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101642287 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087270044 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101223929 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086342401 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100435586 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086683653 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101241854 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081073047 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104388161 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100603745 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083648612 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106326277 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082365625 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101786033 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085551878 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103631915 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100848213 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084127215 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.09950846 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087280299 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10140021 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.0837685 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104188238 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.07762958 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108756608 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082461273 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110103384 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100859577 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080473523 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107177842 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085827096 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107151356 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101198801 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084823558 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102297195 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083008656 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104558031 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090459186 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099625877 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112365545 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092203311 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101919666 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087019612 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101672397 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084135654 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100816606 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101816558 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085067912 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100658154 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084280343 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106562002 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086357449 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101769823 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085056947 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10330541 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100119343 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085375829 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095515479 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08279918 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100116983 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084767789 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112086593 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101513935 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08659165 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099680688 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085938635 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100159013 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080237985 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110408188 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111518437 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084828175 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109418594 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081836682 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103519972 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112127762 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07830029 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09898408 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082265378 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098934582 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091266889 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102885308 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.100303224 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102315483 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100602023 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081294068 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102578966 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083683337 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096018684 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081564057 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106215979 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086386455 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100889014 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083659187 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104871274 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102313024 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094560679 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101464458 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083843372 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102624441 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07994683 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100990418 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099560431 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087958565 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102998806 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081615007 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098590439 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084207601 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101559989 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084015386 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10208471 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084171193 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10950292 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100473603 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087030437 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104646772 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077900656 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104448554 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08348812 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102748649 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099457294 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088177103 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104335857 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084774077 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11105735 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08262599 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103314111 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101774095 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082180401 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100107398 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083921798 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102161357 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082728872 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103910806 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092060845 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100815285 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104835912 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083307769 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10147119 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091360894 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103032286 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086543676 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110586123 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10397478 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085520473 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110585071 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087089905 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107065211 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101673311 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086189932 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108143579 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082530512 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108576468 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083240267 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103220209 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102786482 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082331658 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1012293 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084152962 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100397688 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089681169 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103634488 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082254507 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101612455 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080149583 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103661579 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105704809 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092023025 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104772768 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086362573 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097579225 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080341544 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10386721 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098819251 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085994357 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104767602 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089656523 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104324324 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083823352 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101112258 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111257785 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090100712 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106200228 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082203906 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106575258 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083986789 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105789525 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101997611 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084380663 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10263967 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087839508 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103351534 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083290087 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109643347 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085893537 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104439341 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102882955 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08522419 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102500441 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079203976 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103557226 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086022361 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107705992 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103308252 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084403471 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112331066 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083381352 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102051034 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087333591 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102979617 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106347515 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080177765 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102958231 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08630017 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103162515 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080369315 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101532794 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081070532 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104965618 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082979032 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098202234 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113212397 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093333738 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105582014 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082167801 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101810772 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078226548 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098308289 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101453012 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086926625 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102791302 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094651089 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101827741 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082374006 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09778082 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083538084 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106330047 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104118552 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08155929 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097268471 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08295129 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105640373 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089645418 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101687902 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083730048 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105812267 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103716677 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082116914 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10635773 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081452431 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106205589 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115509726 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085559214 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102741531 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09014836 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111946372 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084236282 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099126978 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102542916 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087529131 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10268285 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085441785 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104596785 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119093797 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087347722 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101063125 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08366299 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105115579 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083584486 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111971761 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103255438 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085874014 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.105882389 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087330271 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11346389 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086092204 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112423118 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106107284 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087702301 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102281103 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083841362 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102265866 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081999864 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105619814 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103793184 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089643156 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112175296 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083241982 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115518509 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111831647 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089661696 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099140812 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084209461 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102741177 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079831081 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106801917 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081524538 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102254983 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100109101 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084285079 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10371391 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091154222 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103932509 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085074483 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10399406 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077788663 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106293657 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086185785 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105138831 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099777339 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085304794 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102741155 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089486006 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107963788 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084216764 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105615691 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08474994 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105094571 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09768445 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09288574 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101026576 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087758737 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102130919 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084958007 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105084447 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087393178 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110487256 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104345572 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086945794 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115631908 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087037395 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10189385 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099809583 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09080731 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100345139 seconds)
  done (took 57.911891959 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147659961 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081540658 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097784877 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080339939 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114331049 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098471987 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080659401 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098998339 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081234511 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103560853 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080336952 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099028221 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109081889 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123981355 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094067178 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104389096 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079037997 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101654125 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098378054 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082368045 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109875169 seconds)
  done (took 2.891437605 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106148064 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118059889 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115462003 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119153503 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090192754 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115039828 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114804886 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114755599 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099697816 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111312517 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118326655 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11474898 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09239592 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112302905 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110669195 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093527601 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11946339 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109727679 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116085735 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097123405 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114113194 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114852724 seconds)
  done (took 3.244050478 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085684442 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102232562 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086203351 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097558968 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084743643 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098166225 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088806306 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101218986 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088482884 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104169682 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081672008 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102896738 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103318337 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080272484 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102086855 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083050792 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152707012 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107558456 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082931065 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105995995 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078320432 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106801837 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098685939 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080910008 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101390197 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.0907072 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104161593 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081817206 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102974244 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08330237 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103769644 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081498027 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105137986 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10380976 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084385405 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102125231 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085616787 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102326055 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080421457 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101471401 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084401051 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099260716 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085025198 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105339573 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082234371 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10187225 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085213431 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105246469 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098046659 seconds)
  done (took 5.494194136 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106134115 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161541858 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087431188 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143321662 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121868889 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112444179 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088392306 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143424419 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103553405 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083069619 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123344885 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121818776 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103733755 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090864951 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107417459 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10301563 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087035581 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102534485 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088337312 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104540484 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108753887 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091500999 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119820957 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119199842 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108221927 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083919059 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104229908 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108685883 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099588157 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110713239 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109157677 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090953352 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121461209 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106157312 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084679087 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107582975 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123722227 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084732272 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107351565 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101908727 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088203289 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110086593 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11037612 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10411178 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105460977 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109573216 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085875358 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100892101 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118944363 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088179484 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113132821 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121225487 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089539368 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10619987 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109286963 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101179517 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106012839 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102017497 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089306203 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118316088 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101603593 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090076538 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120690598 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106888293 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092700712 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121669267 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109994519 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108137686 seconds)
  done (took 8.177189481 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094025184 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111497237 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121294516 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120196614 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091486556 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111732269 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110336642 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091855029 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111767526 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116756925 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11026983 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134000159 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087167574 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115575899 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11069457 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092525662 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111003365 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110572546 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091799797 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112125071 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111344189 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120146054 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092508991 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120711693 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14260252 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106228182 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092010041 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11141435 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122170397 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111324442 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123971082 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092624691 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111547881 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12139203 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12382989 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092004886 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103537903 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109800943 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09199725 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11249692 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105524886 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101979394 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111488813 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105962255 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091935581 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111639914 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121025182 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123810082 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11501025 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098321776 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111582376 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120459254 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110480197 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092941444 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120977829 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147121778 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120900981 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120641008 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111069645 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101211185 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122057056 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129448268 seconds)
  done (took 7.702841606 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109057617 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115648139 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118054691 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099946241 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084201824 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108508086 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082810278 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103005634 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114363682 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095956388 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11831239 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108992345 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093090978 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117760765 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109428294 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112550771 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089440822 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109809818 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114219965 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108377949 seconds)
  done (took 2.954837169 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09474957 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124799491 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085970021 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112731605 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108033681 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092437896 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107382195 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107709304 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08746813 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107685399 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097252419 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118359069 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105554754 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091969892 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116924294 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111522609 seconds)
  done (took 2.51202723 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100177338 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118156584 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121423172 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084462201 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104655781 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080700282 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107932492 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100154434 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082938121 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120847629 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08446333 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109199187 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104731291 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083771697 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101557346 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088476815 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10187365 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083332394 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105917186 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119388616 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096619075 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105020748 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104730578 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088538115 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105647513 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092211467 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107279905 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102224705 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084689847 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105545535 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086041537 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113636774 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10145495 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084778769 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103103422 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083287746 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105201043 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086006598 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109106794 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104950945 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085662867 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104564018 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085497386 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107776443 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081743743 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107071466 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100719646 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093036245 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102901394 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086289406 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105979609 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087408167 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10728911 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115344636 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089252783 seconds)
  done (took 6.280252598 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099571495 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109404265 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081015696 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10421393 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088498458 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107492994 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108668727 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089122999 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106645711 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083178067 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10753284 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089585024 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107970178 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108738098 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088699455 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109110269 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081238301 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108007251 seconds)
  done (took 2.629375517 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091697067 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105018286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093501394 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106343367 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085079083 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10930876 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080696361 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105774138 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10351866 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086591359 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105436142 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088515518 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104315233 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088202712 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106281796 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084793531 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109333413 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10346004 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087044725 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100926356 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088259231 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103501793 seconds)
  done (took 2.986345596 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119162018 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125837782 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093406845 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231736565 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104733977 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132264816 seconds)
  done (took 1.656990864 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109868779 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121647002 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104994985 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107661425 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116455313 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08676352 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108401914 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107741716 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117491676 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103035642 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108712302 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118411625 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117208467 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097033179 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114644372 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115128168 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107130663 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089219723 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105886694 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128417108 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088643878 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118003667 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107185908 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087301837 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10850235 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117588345 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117480782 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122644478 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088373524 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117513242 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114024648 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088328591 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118187405 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122166479 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10843619 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098721638 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109165742 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128292604 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114070113 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097505822 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109315754 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114455495 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098077695 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114381024 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118102475 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107723694 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093660358 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108297319 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107361351 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135756145 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094934497 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117922582 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115240564 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118887912 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097675408 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154635427 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102610437 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1175641 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115297395 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12305345 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116638442 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094469703 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117564909 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122343476 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114954094 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097819599 seconds)
  done (took 8.139857498 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102778338 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127375762 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107977499 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12249001 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098033314 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109000061 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106702546 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089282967 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10910088 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105999211 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152253787 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088613183 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11817603 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11719261 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087010171 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110434201 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108163005 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117186037 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087513499 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134836238 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108415724 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117661187 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116719151 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098382455 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123598537 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115020068 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10882131 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088306075 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108406089 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107563142 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094578284 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10938975 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117433865 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087881571 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118819672 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108972611 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087450701 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113812556 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108567517 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11432068 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098131136 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1286302 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109171053 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10721126 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102709362 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109034403 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107694629 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086851412 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109697793 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107164061 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103099844 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123114628 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124263227 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118089304 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108085368 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088975227 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10933094 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107974757 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089217927 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11535835 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117378496 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088134063 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135525761 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109436451 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108570862 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118323642 seconds)
  done (took 8.045011246 seconds)
done (took 155.683922324 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215475639 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.199317915 seconds)
  done (took 1.268162681 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088959606 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136184751 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096923557 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168969815 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086114752 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141623537 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137761036 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098417443 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106363788 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086698083 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106639394 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088468318 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171238846 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085663674 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107684264 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107266532 seconds)
  done (took 2.674812103 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119581116 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.25411712 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125227862 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10510771 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09024282 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109654886 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085438948 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111581671 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089657352 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.105588879 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088061829 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107275183 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084165085 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107588591 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109398495 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090071635 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104244517 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089055243 seconds)
  done (took 2.83676941 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114301233 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146061519 seconds)
  done (took 1.126848746 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241836585 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163276029 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.230049682 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.47381435 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.274466229 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.364928876 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.202583009 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210986184 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164306182 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.207871047 seconds)
  done (took 3.39357456 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119125325 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180818838 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315652556 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155456512 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107009847 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130048379 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157529519 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13060287 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122066276 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101695374 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123757807 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118259861 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137916345 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094648125 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11530845 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117172175 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121110277 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115346948 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114655215 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096392214 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139089028 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084298973 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116317212 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113422416 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098683664 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12065147 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10538229 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086165995 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11656623 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094091911 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.1138191 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125824195 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118597484 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.15704604 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123513875 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157255649 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117724419 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091666995 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115699695 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090755362 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119765924 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11931749 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123464168 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097319574 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105671151 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096834055 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106618717 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084508337 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115074752 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.11805069 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09414196 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113667433 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152769539 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119093011 seconds)
  done (took 7.388834471 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.787063171 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155535051 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090115003 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.875604158 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136836364 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103645266 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.771978155 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111041301 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255322347 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.752077456 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133130126 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119295535 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206086184 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258623189 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925275105 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290618532 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.637103111 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127354758 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151907018 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153711382 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117303977 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115309579 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131627435 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42922468 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117272108 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089815666 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117849596 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119980798 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161467493 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125212454 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092701338 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199223149 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245772762 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.2029096 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094349326 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11244875 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089124613 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191674705 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263321083 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193204523 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179905625 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10889954 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088821961 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122629535 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13217605 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087146718 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183439523 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175657601 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169657161 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115846981 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118394661 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098623102 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121865078 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165505246 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122567524 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309867578 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321500537 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090062327 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121901335 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125930724 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239823317 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123335485 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225524007 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138637057 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190435405 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112189946 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776750207 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16983837 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110419625 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097207231 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120522004 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115618898 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100122993 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167279305 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.405992179 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123931435 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113665362 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090491086 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225539589 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102497272 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111723695 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162332848 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117287569 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119628715 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103577408 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122847674 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168978375 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.249387541 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102431171 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12095054 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114981983 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103617027 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116511099 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210624752 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219306231 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162206311 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22909557 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100279932 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184365667 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169050309 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118879546 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171917517 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118600836 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103016548 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123018445 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218035855 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145748141 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122991807 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094853429 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119821514 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148822742 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127271784 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097568895 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190493667 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458926392 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167423093 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109054149 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127542208 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097912002 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182598664 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096871846 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261920909 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120159631 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171020881 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118837734 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087877802 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120477052 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162370915 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122079514 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120631128 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10195586 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118657611 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236838548 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217097529 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12067751 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222066311 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184261813 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119199999 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172387192 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121309502 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168087589 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120485204 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09833226 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117310051 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771664847 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12285038 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100362004 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11546748 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186911078 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089196173 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124843849 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125123574 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086270224 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788793779 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127765329 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120526731 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104071853 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11828563 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11932569 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096317522 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11642483 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161384854 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229433951 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120042704 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097123391 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124821481 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161970759 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11697273 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125454072 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123311317 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104542112 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121715456 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114544027 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103260222 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189702236 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164028852 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218918215 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576073493 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112826412 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123542636 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205794601 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113765465 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289430475 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117920202 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202530523 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184716709 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100166659 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31782828 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163127948 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186353805 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12705591 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172861927 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109507708 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117822574 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165763245 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110977247 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09615259 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161390497 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127036659 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123235953 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.963493729 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090660714 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246604508 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088018085 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170920372 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118444762 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120137088 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.283258491 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091970278 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128166398 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164000097 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114946233 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123061552 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.845446929 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125072207 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099582744 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11857043 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.2208269 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162987577 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120036261 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119967142 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097301267 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183344185 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210919854 seconds)
  done (took 43.979421281 seconds)
done (took 63.527312933 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277339802 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216253553 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267668582 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170836112 seconds)
  done (took 1.897272737 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171566762 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149007199 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122272717 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107606943 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150917423 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085083895 seconds)
  done (took 1.675371641 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.363037685 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277953763 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244792638 seconds)
  done (took 1.777911499 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.317727242 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250515386 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472666786 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326847682 seconds)
  done (took 2.359125089 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.215366142 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132688378 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110908423 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104014478 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.19776607 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246210114 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142559295 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201701016 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097880342 seconds)
  done (took 2.386793783 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196769076 seconds)
done (took 11.186103656 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.29762991 seconds)
    (2/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.272725202 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.157744271 seconds)
    (4/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.245765004 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.262992561 seconds)
    (6/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.123179114 seconds)
    (7/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09495481 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.185232571 seconds)
    (9/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.21330949 seconds)
    (10/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.211224062 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.197827321 seconds)
    (12/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114877738 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.103420373 seconds)
    (14/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118445296 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099124907 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.220170875 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.095867987 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116768087 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093649395 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115772346 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068402157 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.215237693 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.195132891 seconds)
    (24/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.099109244 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.150268409 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114930567 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216074713 seconds)
    (28/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.167860905 seconds)
    (29/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.09383844 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.161366026 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.134890197 seconds)
    (32/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.17413747 seconds)
    (33/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.14885583 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.139836454 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.206061657 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.098015442 seconds)
    (37/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115848138 seconds)
    (38/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.146324641 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.170084062 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096473836 seconds)
    (41/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118447653 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.172914396 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.138221534 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.132883215 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116953804 seconds)
    (46/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087152777 seconds)
    (47/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117257879 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.126708022 seconds)
    (49/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138224544 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.139164745 seconds)
    (51/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090121933 seconds)
    (52/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.187558882 seconds)
    (53/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184596527 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.224122991 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.134144257 seconds)
    (56/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110807131 seconds)
    (57/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.18650675 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115993333 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093752961 seconds)
    (60/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109263672 seconds)
    (61/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066496289 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109888856 seconds)
    (63/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101922772 seconds)
    (64/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107831648 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096864371 seconds)
    (66/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.12464073 seconds)
    (67/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.161539495 seconds)
    (68/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088439064 seconds)
    (69/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092851066 seconds)
    (70/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184356418 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.141335536 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.121726892 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130786401 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213612548 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066666213 seconds)
    (76/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136154408 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.11864795 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.194429619 seconds)
    (79/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.238002402 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.161980481 seconds)
    (81/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.234746459 seconds)
    (82/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118390719 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.135786053 seconds)
    (84/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150883058 seconds)
    (85/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115419459 seconds)
    (86/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094277785 seconds)
    (87/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119419308 seconds)
    (88/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096697007 seconds)
    (89/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124277243 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.108842228 seconds)
    (91/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.074063362 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.195146487 seconds)
    (93/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096541396 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.134503018 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.109767237 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171729295 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173921096 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.221325039 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.186057637 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.136392471 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114194334 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.190333748 seconds)
    (103/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.191219962 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.189172412 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08738839 seconds)
    (106/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.119665614 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.111555283 seconds)
    (108/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.104866262 seconds)
    (109/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067589434 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116026166 seconds)
    (111/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.149915272 seconds)
    (112/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.100182685 seconds)
    (113/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.189666042 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170328929 seconds)
    (115/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.182736643 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090746118 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118805136 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11106627 seconds)
    (119/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.338957414 seconds)
    (120/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.172758339 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.181339256 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118381737 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068095708 seconds)
    (124/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.08823683 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.133879344 seconds)
    (126/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114100865 seconds)
    (127/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078539819 seconds)
    (128/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.076564771 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121763111 seconds)
    (130/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.127948807 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09204486 seconds)
    (132/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.088652262 seconds)
    (133/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097333285 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116414385 seconds)
    (135/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.117040723 seconds)
    (136/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.09013283 seconds)
    (137/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091528751 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116029694 seconds)
    (139/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067602889 seconds)
    (140/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111879331 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118431693 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.131844719 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.107152702 seconds)
    (144/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067560158 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.172197982 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067210757 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090839763 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.137074839 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10714863 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094033319 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130037944 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.168416608 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096089366 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.135992575 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137611786 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067193731 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086274094 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.182660487 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.111495804 seconds)
    (160/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096242657 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.119967555 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097103705 seconds)
    (163/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.187040381 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109484639 seconds)
    (165/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095156887 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.109091674 seconds)
    (167/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101556288 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179722148 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066145789 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.164858661 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109776595 seconds)
    (172/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220608672 seconds)
    (173/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066744734 seconds)
    (174/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.090027801 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068807311 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.113000332 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094765383 seconds)
    (178/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.136858381 seconds)
    (179/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.0680664 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085606139 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116538062 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.109992365 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097181757 seconds)
    (184/309) benchmarking ("sort", Int8, false)...
    done (took 0.186980083 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108548386 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111015423 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090480987 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.08758519 seconds)
    (189/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.09907859 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.190576206 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.0935131 seconds)
    (192/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06639604 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110313421 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085047177 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090368275 seconds)
    (196/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098488446 seconds)
    (197/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.089772552 seconds)
    (198/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.123616076 seconds)
    (199/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.139930762 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.06672227 seconds)
    (201/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.215277088 seconds)
    (202/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.109447553 seconds)
    (203/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.126063133 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119076786 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095374153 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.169540067 seconds)
    (207/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.065955437 seconds)
    (208/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.1457015 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.084789109 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116018054 seconds)
    (211/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133858593 seconds)
    (212/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09340988 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.156658452 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.129503303 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.112537031 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109807923 seconds)
    (217/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067951195 seconds)
    (218/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108045053 seconds)
    (219/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068525645 seconds)
    (220/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.076100874 seconds)
    (221/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.089627567 seconds)
    (222/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09062242 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119578183 seconds)
    (224/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093312452 seconds)
    (225/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.1741893 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067368821 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.140666498 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.182989812 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189217057 seconds)
    (230/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069673725 seconds)
    (231/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118200196 seconds)
    (232/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.097815898 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177262938 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06747711 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.100355431 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088093119 seconds)
    (237/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066589864 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110410823 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108384263 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088171147 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067047893 seconds)
    (242/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.216187873 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109067797 seconds)
    (244/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068516773 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.08520728 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.091437215 seconds)
    (247/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088408994 seconds)
    (248/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118255112 seconds)
    (249/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.123029696 seconds)
    (250/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.090347823 seconds)
    (251/309) benchmarking ("sort", Float32, false)...
    done (took 0.150183048 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.155687957 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.144399442 seconds)
    (254/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095868078 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.09231574 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087007142 seconds)
    (257/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.173685196 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.133334386 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087611671 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.180793282 seconds)
    (261/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091743007 seconds)
    (262/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.100408149 seconds)
    (263/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.087113053 seconds)
    (264/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.08986754 seconds)
    (265/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.077998619 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067109456 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.212744509 seconds)
    (268/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.089524193 seconds)
    (269/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096249809 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110629931 seconds)
    (271/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087636306 seconds)
    (272/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066209281 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.183292263 seconds)
    (274/309) benchmarking ("sort", Float64, false)...
    done (took 0.171965596 seconds)
    (275/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069668198 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091706667 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086021878 seconds)
    (278/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11114936 seconds)
    (279/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.085062695 seconds)
    (280/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124292148 seconds)
    (281/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068512185 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134936077 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.139322789 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.110168291 seconds)
    (285/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089245993 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110721144 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095550964 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.091027195 seconds)
    (289/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092746248 seconds)
    (290/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.089502811 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.08841946 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.1146456 seconds)
    (293/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068121854 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108551082 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088407743 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108686627 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142397765 seconds)
    (298/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115399697 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.15462275 seconds)
    (300/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.091068836 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088124559 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112814353 seconds)
    (303/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066509999 seconds)
    (304/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124467662 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068383266 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.091089573 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.108343317 seconds)
    (308/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090338588 seconds)
    (309/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113854984 seconds)
  done (took 39.628741801 seconds)
done (took 40.527370136 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.1010515 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148560931 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095510195 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136134797 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12290627 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091992182 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118762417 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098146394 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124239882 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124098312 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098895826 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093270959 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09692797 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120863588 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096755109 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140168413 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123043187 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094736999 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119752221 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08606668 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119354167 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08570477 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112270075 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069645435 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122439271 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094247427 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117379381 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119094628 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08813393 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109824957 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09093133 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116646527 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087415124 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123457892 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09409056 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118976572 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096554974 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120664818 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087846379 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111168707 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117003729 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088305185 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116919802 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095593598 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115623693 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093789358 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118773124 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09961567 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139858768 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115253681 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095906457 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120248422 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097116201 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118179762 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091413146 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12041696 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092620443 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.142384342 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120925133 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093127742 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120673945 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095549553 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117558084 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096010387 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120163079 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120952709 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099889935 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116129185 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098033137 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116298275 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086933942 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120146726 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090051223 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111558827 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096541638 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123309378 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108908455 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094560054 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116486189 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092678162 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108999093 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091004612 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111324322 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094593617 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113047435 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071064515 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113915287 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094796925 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108998814 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097492236 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117363468 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09448485 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112464623 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099508162 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112114937 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093054917 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11163724 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087919656 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113346632 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091141594 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.11143452 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089608681 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120532522 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088740259 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117586671 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122380272 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088649383 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116101524 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08744056 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109531576 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102620098 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121188947 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088050304 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117364185 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085952438 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119078486 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086711401 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.11164991 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086045278 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112136405 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092787301 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11171426 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112513426 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095491759 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124615522 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088243499 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113833129 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091236655 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110846851 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09376043 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111116214 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087629528 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112939549 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078908684 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113429309 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088514352 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118681637 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090546813 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120130178 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089653138 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121163811 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09200298 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117041738 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092310734 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111031969 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074894172 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116634284 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090825867 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113806637 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08748206 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113511774 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087117467 seconds)
done (took 16.995575861 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088519069 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186321228 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15255977 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142439084 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107728393 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112463307 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122097696 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119985833 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114351312 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143389861 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111439528 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13333004 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149185021 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087695468 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111423677 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091732123 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112954336 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10426855 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146340701 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133593321 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164670609 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08766809 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147237335 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136306747 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120180935 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115717252 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111659397 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092219611 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114428633 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104259505 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132871268 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.09031875 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112649998 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133873746 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10569231 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120779059 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087634778 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120138972 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087216071 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112558578 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140858228 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.1336878 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094476982 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117153099 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09270233 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113796281 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090638225 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121599758 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098974387 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116767082 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125506505 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15689077 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091979846 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.1225076 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086936746 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123934784 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121492647 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091502293 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111642502 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091274013 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110805745 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09243012 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127704772 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143647715 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093349962 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122568095 seconds)
  done (took 8.654022268 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105710895 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139636532 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106141357 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.147692937 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111001288 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089540499 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112084767 seconds)
  done (took 1.771852023 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089024529 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.1333997 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112353779 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13595338 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131455968 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110146275 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122740791 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088483936 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131897231 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08915311 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135444552 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151517375 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091053853 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121255214 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136437382 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089839995 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137210494 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088952133 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116705506 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112184664 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11755012 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134297134 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091608901 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11281015 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103759036 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113995863 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161255845 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09482121 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113894146 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092169879 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111591603 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166349817 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105821641 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125232431 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087947888 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129900837 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127418198 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088289442 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129384969 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094534563 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128062858 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088971137 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115756987 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086745595 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119076378 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124538964 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091926529 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113344127 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092599021 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133124809 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090245505 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127765619 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08951604 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118574903 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.092562573 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120470744 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122509515 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091066738 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133693546 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091393191 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13094222 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105406479 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128555055 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129573804 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09208361 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127308231 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102764321 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116893266 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0904212 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118230256 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129806925 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087964975 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114596869 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101208285 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114941217 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113904845 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138295519 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114214749 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100887272 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113006096 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09076504 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112477835 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113231679 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117606075 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089518308 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117961554 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091361781 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112673045 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087715248 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117566401 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087574329 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115846432 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.115977967 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090398299 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116054058 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107310734 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114071509 seconds)
  done (took 11.832602874 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090658466 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113843431 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093162825 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113812341 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091616197 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115516625 seconds)
  done (took 1.590458019 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116412928 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117714691 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10407386 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121281034 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156404057 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104938594 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13047976 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12350871 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108362131 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128506186 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129358649 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106258108 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137097386 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.1196391 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105181088 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119997024 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129652478 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102013587 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126960118 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097685341 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136758649 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119913257 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097552971 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132202804 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117850484 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096914668 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125171565 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104074702 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127695426 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122473084 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097345489 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118174423 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097137793 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123328182 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129161124 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097355092 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121030846 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119157465 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102441546 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118138568 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106532191 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122131233 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127168013 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095806447 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123300296 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120568872 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095158548 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124691461 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104715684 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120065201 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118433904 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096320108 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117784561 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094960126 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12245598 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122849938 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095454097 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130086924 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.09608755 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121910423 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117560984 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095362988 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124180553 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117444252 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106560472 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119934713 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096085228 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122366939 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121073874 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097420217 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119613821 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094259423 seconds)
  done (took 9.252274812 seconds)
done (took 34.060851172 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.6777421 seconds)
  done (took 1.645253943 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.707503363 seconds)
  done (took 1.677476248 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.103341 seconds)
  done (took 17.076995315 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.496117439 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.577207663 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.881162803 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180385556 seconds)
  done (took 3.109010064 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.928472143 seconds)
  done (took 1.915149738 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296964252 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257217203 seconds)
  done (took 1.52896949 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.76160631 seconds)
  done (took 1.741814572 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.353068968 seconds)
  done (took 2.338328656 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331688185 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184192825 seconds)
  done (took 1.499757851 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545357171 seconds)
  done (took 1.53058211 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.634222188 seconds)
  done (took 7.622281868 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267706301 seconds)
  done (took 1.26524508 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301079655 seconds)
  done (took 1.289660483 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.299370267 seconds)
  done (took 4.291083266 seconds)
done (took 49.513234828 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100016525 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125513522 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103218577 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123527249 seconds)
  done (took 1.437651927 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.103265788 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120322113 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101719266 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119821402 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125421494 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096823358 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121752335 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10178041 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11917536 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096699375 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121013139 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118517933 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100196864 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121948969 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092874543 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123118579 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099837284 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121654395 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122938488 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097043187 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117705881 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098599415 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123619951 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094370698 seconds)
  done (took 3.65329425 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102542701 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.1177947 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097721982 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116972581 seconds)
  done (took 1.434001136 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101359847 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141772742 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.137369622 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101177904 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141879437 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134464377 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093921912 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116093331 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09586448 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123866766 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090552184 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148700926 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136196032 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099556537 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.125994274 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087963219 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116574648 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135435453 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099771098 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124927025 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095099621 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124303834 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09062819 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139781943 seconds)
  done (took 3.795038062 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172343753 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.147035637 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137827537 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095292879 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159867008 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140368982 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088828707 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139899748 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088154614 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130986803 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11710164 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134146749 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129131222 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088450029 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113428578 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088548499 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129053659 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128282678 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091414128 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.141081417 seconds)
  done (took 3.461008389 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100571599 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115783105 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088995025 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11530338 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100255128 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119878166 seconds)
  done (took 1.642101385 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093346673 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113696306 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091184706 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113067666 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094717133 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114248919 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089972685 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113117527 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090491712 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113686173 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090908824 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112773749 seconds)
  done (took 2.232228787 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.46344482 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093656895 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119693371 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112533339 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097236076 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113492089 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104854881 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118236037 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140380068 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.09016009 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114472792 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09304229 seconds)
  done (took 2.662924239 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234325487 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125967118 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285584159 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275459466 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157309244 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171430884 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27752118 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161042284 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223320384 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158543459 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203897737 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221596086 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151191639 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189649819 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137992407 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118873156 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224495378 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238444349 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152787134 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202529198 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224849688 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165812492 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178790591 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149498157 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112773537 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169703595 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120716001 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128656726 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206384441 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201088164 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188368531 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161556153 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147251217 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236030725 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251041281 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193542014 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284256214 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135351429 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.169502934 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167366863 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263691946 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112221131 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230572885 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154777158 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131050991 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193434256 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166201455 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17565374 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150275593 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139969105 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217981107 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212926757 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.216682182 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111559282 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233169054 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156769268 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168152886 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195610457 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249108137 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223227838 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178989205 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093892098 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213667972 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190749979 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185996359 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.194133996 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181149355 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148729033 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192039058 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188020342 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189827855 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187818053 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186262998 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140423299 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168197683 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173123298 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197597557 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229285728 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203311952 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095274056 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170278001 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149313219 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132912228 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193502379 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099188919 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238279656 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147609692 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163344984 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21771386 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159599581 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159696408 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198517229 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220802937 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14738905 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083890676 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155098977 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154551757 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191832002 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140097296 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158488666 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162471916 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129833209 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179064614 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097534044 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20129429 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09155847 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17341318 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207538515 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100072393 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160116987 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151542399 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150223094 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174348061 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222464626 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115951823 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134454232 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207943866 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202767383 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.14903151 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177718538 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203653723 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144242442 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150336741 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199890367 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24299209 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139038416 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204122574 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157087287 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135117769 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105212804 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20694668 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154058404 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159362771 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109699742 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.207345905 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207516789 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126020164 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111758825 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209351713 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106566874 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131751818 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162003694 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149503824 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138886803 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146842093 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.125214095 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2083253 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17674523 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153636578 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165265118 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153951753 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253365073 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141699815 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148757351 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122527289 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121863965 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192955718 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225000559 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104915989 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231265582 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172027722 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227350932 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168516696 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108872337 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177114143 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130660104 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093513843 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220010685 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167401695 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161387286 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195597202 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227764472 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180417847 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.208141423 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173295856 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173380373 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165850665 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156148595 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111451507 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159036901 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192360274 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097671582 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143072738 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132953059 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147676391 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117237538 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13321977 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221638407 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17061191 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18988732 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156785583 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149824351 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18163273 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128691663 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173617419 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17783764 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14753564 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.19783605 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221014612 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188276944 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143275489 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199120356 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120363083 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124675349 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115820843 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195465685 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108044741 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135613109 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166985192 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181466922 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180393022 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203384087 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212848469 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196275095 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189890401 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095225334 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16843536 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185843381 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176223356 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.186608523 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139680466 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.1505052 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176562967 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15872257 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254731163 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168177026 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174936872 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233123586 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123375651 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131553422 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151335648 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186721436 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15353156 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176674189 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147539493 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141379422 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161310647 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132382212 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159762883 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183362255 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162809441 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215914688 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123514329 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212131742 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100831536 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191124604 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158935194 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164719421 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082390705 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174143594 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232365634 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147880315 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169196247 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1901329 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132202361 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305609932 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20938956 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218893157 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136499556 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157767463 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159352223 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1374804 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197028624 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179138025 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159209282 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188544649 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159201278 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.108879917 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140967067 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149726391 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151466204 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.130604171 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148653763 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176488055 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.11137544 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212477097 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161207297 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158197251 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174166508 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149424625 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.11677102 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151023799 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242278224 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175347373 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236548759 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123331369 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206757774 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205960273 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125468969 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105093109 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133454979 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178296057 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136690445 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190446728 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.215052797 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205248712 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180865719 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214171624 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112704611 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121011556 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157838224 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173841037 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233111876 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152078588 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158297529 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205243802 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142929195 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103925409 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172289595 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226134072 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145615521 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197395103 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080060867 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.301603312 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100713582 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133707428 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165629807 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206661119 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136504594 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18361529 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170217939 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168793239 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165372504 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150166672 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191491098 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242888902 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201016018 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207331234 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105167022 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155729395 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176989874 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221021269 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157740896 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.11258417 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232178074 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194622854 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223360017 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11512814 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19780044 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167951145 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130402026 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214572131 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134563606 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2065127 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134599901 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193849086 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154024289 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143975171 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175239886 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.215106192 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114416425 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216283407 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175730451 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134806711 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106563315 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195907321 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178897691 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157499589 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101114299 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208802032 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097706938 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218574969 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229546533 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135861394 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155431829 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148048754 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134898419 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156438264 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158285474 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113449115 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164222661 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202523764 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.1351553 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190624756 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229898781 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170108735 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174438516 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143987402 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693563209 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13175357 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194260715 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155548209 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234027041 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148582686 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173630405 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159194465 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168473471 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19582398 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160432901 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23160194 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218867819 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179655897 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105621534 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158791493 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163067623 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144038559 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15105853 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16911671 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159933077 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153276983 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177917576 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196306742 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10799697 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140143946 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198222236 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156944203 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182331007 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179414403 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139417279 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174144515 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216050503 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105271962 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.206688404 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207602731 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141359248 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153335567 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135137503 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155858888 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259903561 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098252128 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22759897 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176784057 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158593295 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169089368 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147756071 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192338123 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156870386 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178781867 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146293852 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159982709 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156301669 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137932257 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129542039 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129078321 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194127735 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121798442 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159263711 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162792301 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192050731 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124288265 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144818176 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198843657 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189598887 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243722023 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135864947 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108049655 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163095282 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150507912 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178621637 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205460006 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108451882 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136800757 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136905878 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130840228 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138989263 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154490553 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200019136 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16666362 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20572195 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136384196 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281478641 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140000789 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153805289 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089133603 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132323556 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149703478 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118660958 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159061201 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219963724 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261686573 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.119587417 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133197695 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14920321 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124549595 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108745829 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165922756 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161909368 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177020463 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144585558 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109037142 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158860331 seconds)
  done (took 82.520730578 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162696562 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130151853 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146251744 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200321161 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176057849 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268849949 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208611342 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254758502 seconds)
  done (took 2.638518499 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094513501 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.143765496 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157066028 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133230261 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092393584 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119007127 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.342648878 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132122415 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114303929 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120869869 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.170269059 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093404283 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.547618559 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091436703 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120387231 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106853034 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091803748 seconds)
  done (took 3.753669624 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.474970851 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.67172421 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.50629344 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.0976565 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.946360816 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112277697 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.33759 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.190592801 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.114174458 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.46023532 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.774185524 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.155655896 seconds)
  done (took 17.930843387 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099292635 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120132455 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.10830442 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.134263456 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096130189 seconds)
  done (took 1.653341874 seconds)
done (took 129.801042683 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105717985 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402213864 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071614883 seconds)
  done (took 1.600899797 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110146209 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135917102 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108727217 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134449077 seconds)
  done (took 1.591462509 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101195627 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126155592 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109447036 seconds)
  done (took 1.434893452 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.320694258 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.187495269 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.1628419 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108939438 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128079643 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102643861 seconds)
  done (took 1.440287675 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098060361 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12637602 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098419225 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128173462 seconds)
  done (took 1.549068932 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095451936 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071384852 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101614494 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075208258 seconds)
  done (took 1.438921541 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114748233 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130793091 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105071702 seconds)
  done (took 1.448254674 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.132945708 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137373507 seconds)
  done (took 1.371521621 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109707772 seconds)
  done (took 1.208749428 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.121266309 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168833974 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.188980267 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164587462 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.22621554 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.164449482 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.140595306 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115883452 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129866163 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143469666 seconds)
  done (took 2.66659442 seconds)
done (took 17.623686332 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107816476 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.507787134 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412399169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116747255 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721542671 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380192922 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.019615109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144811532 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164495403 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093887395 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138228025 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672344716 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.04576574 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.462583919 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.005269909 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.459570566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702625583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094222458 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118404532 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093930353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.004419896 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092880434 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120884555 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09282407 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701882786 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42479963 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095880068 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.458577723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092809116 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124856096 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383011991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122185796 seconds)
  done (took 17.271992536 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097953321 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173164684 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098130637 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13632858 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122643783 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094102783 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123557073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093068451 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177938307 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122054989 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11103013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11984806 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124715056 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095003595 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141812727 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093468014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123982357 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09353572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120547747 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119875834 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112358603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118531945 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094157785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120390578 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093782735 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134301952 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123339827 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093542924 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119697626 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099048719 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126148689 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094672743 seconds)
  done (took 4.819526593 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142797167 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182810177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127164948 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126545569 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167354417 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122551398 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197812713 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118318496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181176766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12167239 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138635123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092523496 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156399679 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121052128 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114988422 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121205311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097528648 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120882891 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092976088 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122134755 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139181396 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093306201 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120441365 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093494719 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122549824 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108086378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123209952 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120165445 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093112058 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125746164 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100379047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122850095 seconds)
  done (took 5.140052083 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099532702 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125386909 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110049331 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137401495 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095264868 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124655965 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097460624 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123625475 seconds)
  done (took 2.022744626 seconds)
done (took 30.357181404 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114593943 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126065094 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10662168 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133731321 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102592725 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131192333 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091329296 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132924523 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.131992585 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101735959 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136154201 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092497283 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121334373 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091126674 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134141458 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097152526 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131177872 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102674411 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132439563 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131371786 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094360492 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132281296 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103232476 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132425248 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104713845 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132440974 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136169527 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099786645 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121561824 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095010955 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123741528 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104056166 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123101841 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106072577 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126005632 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097239886 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123166053 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094148001 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13240369 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131569128 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.10007537 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132763902 seconds)
  done (took 5.992188175 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.11087704 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138988336 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105453062 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081229109 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116037079 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080626026 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136938489 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079365221 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108980181 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108497988 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074789403 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105264709 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078330509 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100588248 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077360067 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076102813 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10743792 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076048569 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076200395 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105324375 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080356115 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072894026 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107014924 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078968158 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075170957 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109279791 seconds)
  done (took 3.583454975 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.103154755 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134854405 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112341549 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185918425 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160754135 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099814509 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132152062 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138695928 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108665221 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119870344 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09622756 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148204267 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111856662 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127930857 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091673752 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135924986 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134321989 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094002668 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126931048 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113158122 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137188259 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101862766 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141446445 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132061 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091781298 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122399805 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097003069 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.1338204 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097176797 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129834334 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096757805 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123701199 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12163934 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104113833 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124831867 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094220266 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140665804 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102718995 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.12895801 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092425367 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.123871733 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120488291 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113919375 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16623999 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091776666 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130459859 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127255551 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103835952 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120477699 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110631548 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130569434 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091263799 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125012058 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091876012 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120454605 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107412798 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123914232 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094554863 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130232557 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123616805 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105977178 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123991245 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108344476 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121052334 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099868141 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120116865 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09233701 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119860743 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141497983 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094122039 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162179555 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093094634 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122586731 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101992709 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128776312 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127115157 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093281814 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135769273 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102804927 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124445621 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102016006 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124351914 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095901267 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138520495 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.121971369 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095395174 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121341924 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100609948 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123730681 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094318692 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134787821 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092495525 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123522226 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110938603 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120432205 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12154911 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100505292 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124630718 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092276044 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134143073 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097956572 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121694466 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102886058 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120838069 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122220824 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103593851 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125072634 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091722207 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125759974 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099796535 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122181349 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094369271 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123875821 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094190062 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131597303 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099193268 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126559074 seconds)
  done (took 14.757514209 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229872963 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213745573 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.234882293 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260197278 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134211492 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114615246 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210293296 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153852606 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122679117 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158764037 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.161171873 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179418775 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139767043 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178729328 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.139454954 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120880287 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112299631 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163268756 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213446593 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.287738925 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11307951 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.1307086 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160756528 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159536912 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105865234 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131711676 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.138177225 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105459961 seconds)
  done (took 5.703252192 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109964583 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154794089 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09800388 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144263618 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146963581 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092064969 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126478821 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095003033 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133193791 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133920761 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092221972 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12758457 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100397241 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131103114 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120912595 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103642205 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131660705 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095115249 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12484332 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097776365 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.127835898 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102414432 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126680088 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119931322 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102324423 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119479405 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086035316 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141009536 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120403655 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115286306 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119781306 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099412202 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132361198 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092965736 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122080245 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095335967 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.123892446 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095254222 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123311665 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091211704 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119736869 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077801262 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121202446 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134415541 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099820315 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079685993 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127571166 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126117275 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09556808 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118613451 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09704559 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123399829 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096562475 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1281336 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097760968 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122701857 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095806863 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115005806 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099837276 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123957504 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085094713 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12010191 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098930613 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116710616 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101201726 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127450554 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092088106 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124513255 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097209303 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129365581 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095530243 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.124821023 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091386276 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124885752 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096197993 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.1262456 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096526352 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121332529 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120422407 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094795052 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075426819 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122231303 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073840289 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12553939 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091996142 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12077535 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095789615 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128959446 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137621718 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095455806 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131112246 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094204486 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121224699 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096414508 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111858454 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096154224 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137676216 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139611837 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09373198 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120244529 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107308296 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124627514 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092520381 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104616516 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100961177 seconds)
  done (took 12.883408093 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132544523 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152656002 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09655617 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141167548 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15421172 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156391244 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101251593 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128978037 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09479481 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140649053 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093367315 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130974092 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097723263 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135677368 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156194832 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103031688 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125059012 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107515909 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130104276 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168834397 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112670806 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141451225 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.1076305 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122771296 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127317187 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111795713 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160428983 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107470417 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135456895 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139753105 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108411624 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159212816 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141601185 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099450011 seconds)
  done (took 5.469158584 seconds)
done (took 49.498402395 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.209233256 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.438064012 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.206794553 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.118783818 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.213427643 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.22912313 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.220400845 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.207307294 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.388958598 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.206747619 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.476611009 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.747111459 seconds)
done (took 59.800309226 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.314420979 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.338211168 seconds)
    (2/2) benchmarking "String"...
    done (took 1.493229798 seconds)
  done (took 3.96837369 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.548406955 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.075916162 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.461853632 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.211886374 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.201036884 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.512698163 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.686804518 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.425818385 seconds)
  done (took 27.708946931 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.205314093 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.551463467 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.401116624 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.402913967 seconds)
  done (took 17.695210889 seconds)
done (took 59.370761016 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.221766581 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.275015943 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.215648589 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.183756334 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.30932551 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.223352886 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.60813467 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.228771179 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.216956602 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.185758909 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.231959023 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.202931489 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.206189811 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.580076455 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.202028736 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.223980062 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.248240186 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.761089565 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.568484621 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.215400804 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.246781738 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.207572101 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.204840451 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.212258464 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.223210398 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.204586358 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.212423685 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.211558004 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.231511128 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.211948854 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.304754243 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.823940934 seconds)
  done (took 190.538711727 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.207367883 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.032576446 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.122630744 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.258601461 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.697382239 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.412063148 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.35808426 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.762635465 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.220755768 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.212305722 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.395497852 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.206233149 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.425784385 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.180000859 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.224670828 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.316964713 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.39783715 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.457535154 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.235984236 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.4438866 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.225063434 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.232678066 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.160601897 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.350117224 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.226115702 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.312145592 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.235177043 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.226145617 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.409071125 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.328476529 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.243792912 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.212237086 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.741913097 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.066000532 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.225207021 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.222376525 seconds)
  done (took 149.120703959 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.475608499 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.207192374 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.207600009 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206636676 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.235449409 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.209909695 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.701550127 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.699948609 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.712304713 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.613569863 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267528659 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.404674197 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.20689987 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301114536 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.221927077 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.208855362 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.225408113 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.248130892 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212626559 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210189767 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.70091223 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.224383812 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.40308733 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.227565468 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.210177852 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237876782 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.598600948 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207253301 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.209525052 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23757857 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.529819186 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.250107446 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207507509 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.528534896 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.479861189 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317639036 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210142038 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237230226 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.21066169 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.483790565 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208088255 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.2110635 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.213348992 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.210592178 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.814767175 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.212077757 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.703187651 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213185742 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.097352271 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.208647521 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211235287 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.643147668 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.709229871 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.22364437 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.211286732 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.214162449 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.209479872 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210979554 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.2367792 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.763597088 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.297171546 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.22498273 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.214754742 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237827822 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.213758837 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.300273281 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213056067 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.479464272 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.281113576 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.314444659 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.701970141 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214411365 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307668101 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32714231 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.210511603 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.212236943 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209976459 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.212084919 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.319059007 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.211369056 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.588052718 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216551905 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.213118684 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.270387141 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.306712962 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.211755669 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.213525336 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.214644239 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.214196483 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.535200727 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.965255662 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307866045 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.211455914 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.213481489 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212539907 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.591667279 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.21070079 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.705227152 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.432500352 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.215173985 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.094218845 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.21465187 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.606361694 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.69740999 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.843231045 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.216579345 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323714723 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215328488 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.217524958 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.215065694 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.244450541 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.231229935 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.273857572 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.212599875 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.608850019 seconds)
  done (took 346.849127163 seconds)
done (took 689.117236268 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.870418409 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.852102249 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.96352855 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.853446677 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.835028431 seconds)
  done (took 10.516956434 seconds)
done (took 11.656644083 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.387820403 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.387332905 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270914511 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.38949888 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243944711 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.404455098 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.365666121 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.236891708 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.312929254 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.290225585 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.311148394 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265918101 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243291614 seconds)
  done (took 18.252140957 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.531226563 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.51360559 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277984731 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.549954519 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254381084 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524442528 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.414566349 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.432756062 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.448326266 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247619289 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230832715 seconds)
  done (took 16.569848973 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.525745504 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.530869088 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282139107 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.552766429 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255854788 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.531407988 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.416355408 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429802061 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431726043 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246701934 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23078575 seconds)
  done (took 16.578336745 seconds)
done (took 52.542646667 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.226090653 seconds)
  done (took 2.370417081 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.256432354 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.414269308 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.241154802 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.231182009 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.227351505 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.228569758 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.233075189 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.228284934 seconds)
  done (took 11.206009477 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.227152729 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.223753714 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.223420094 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.222096084 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.228082206 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.224283649 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.224741405 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.224552099 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.227077062 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.225495615 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.227097556 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.226556271 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.224610117 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.224095181 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.223336696 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.225353069 seconds)
  done (took 20.747974567 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.226191225 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22430008 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.222899312 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.225076283 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.224967237 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.224550146 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.227125235 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.224535605 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.224673297 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.224902531 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.226130296 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.224803369 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.225060031 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.225498426 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.226742463 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.226671012 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.225289541 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.225691689 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.230228088 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.225110935 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.225331714 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.22599545 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.227380486 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.225532638 seconds)
  done (took 30.564778041 seconds)
done (took 66.034769982 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.154325003 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.780790957 seconds)
  done (took 9.08153316 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.228362484 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.227625311 seconds)
  done (took 3.604830764 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.228015727 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.229040166 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.228966853 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.228741165 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.229815176 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.229214856 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.227801518 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.23030683 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.228603777 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.227989428 seconds)
  done (took 13.436037214 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.226322786 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.229110924 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.226368259 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.228237653 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.229285164 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.22694417 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.229693609 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.229235234 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.228511436 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.227925192 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.229579871 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.228391605 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.230921165 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.227083194 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.229719957 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.228335877 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.227537608 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.228133821 seconds)
  done (took 23.259826228 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.229593066 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.231071647 seconds)
  done (took 3.609116687 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.22487542 seconds)
    (2/7) benchmarking "second"...
    done (took 1.227907848 seconds)
    (3/7) benchmarking "month"...
    done (took 1.227808406 seconds)
    (4/7) benchmarking "year"...
    done (took 1.227997128 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.228045169 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.228931232 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.228777888 seconds)
  done (took 9.744263408 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.229744023 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408671738 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.482491327 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.829679319 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.23330781 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.234329272 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.103880335 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.23496175 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.238226053 seconds)
  done (took 14.145889991 seconds)
done (took 78.027660918 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.222583028 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.240246289 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.303244745 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.237517733 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.241617985 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.570078134 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.238514541 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.345930121 seconds)
done (took 37.549905819 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.229888862 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.940309544 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.945488225 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.23334371 seconds)
  done (took 11.269458848 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.208960996 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.088428258 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.220218017 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.176042368 seconds)
  done (took 17.845822271 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.172747692 seconds)
    (2/2) benchmarking "read"...
    done (took 1.561775256 seconds)
  done (took 4.886278569 seconds)
done (took 41.381371528 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230960252 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.22985532 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.232292839 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.229011541 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.228576265 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.229778913 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.232645284 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.23052666 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.227763086 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.232702534 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.23469474 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.232589414 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.230799559 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.228960628 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231045554 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230480106 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230717066 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231036746 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.231289054 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226249376 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227725159 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231063543 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.231284103 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.231008666 seconds)
  done (took 30.684337198 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.233528568 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.227793716 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.234397419 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.230888473 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.230874718 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.233577805 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.23337652 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.229072615 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.230725359 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.232857432 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229129092 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.231488907 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.229662137 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.230683518 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232720332 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.228838711 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.233399797 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229328874 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233916074 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.228894766 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.231542254 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228732065 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.227170224 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232546465 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.22869759 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231339727 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.234712756 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.230466377 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231388046 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.229650075 seconds)
  done (took 38.084391935 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.234576177 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.239803303 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.233274471 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.234842637 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.231236468 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.234430696 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.234023482 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.233252386 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.232890165 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233812852 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.230935349 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.235177645 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.230419566 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.235276577 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.236031866 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.231106588 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.232470574 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.234969556 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.234089207 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.233885075 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.235051383 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.234885168 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.235306271 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.235615332 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.234710882 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.237306066 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.235878805 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.236240323 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.237034713 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.238054481 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.23469301 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.234271628 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.235870183 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.237492915 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.23516605 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.237371269 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.24024183 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240974458 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.233155216 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.234517046 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.235039013 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.237430657 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.237160411 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233073084 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.235511288 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.236898013 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.236992653 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.235856392 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.238454313 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.236742146 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.239765929 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.238781295 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.237820984 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.237838165 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.235367344 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.236601315 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.238580902 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.238944154 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.236503603 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.238827061 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.238161804 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.238248872 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.238490384 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.237641972 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.239087874 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.239345376 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.233752418 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.239331733 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.23800081 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.239462504 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.239422379 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.239962175 seconds)
  done (took 90.158439473 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.240334512 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.237410738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.237182719 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.236652003 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238467802 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.240091628 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.236942933 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239138365 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23582154 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.239151918 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240813935 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.237688184 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237610778 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.241004905 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240349424 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.23871255 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.241091387 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237005352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.239541617 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24158979 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240875321 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.238475503 seconds)
  done (took 28.414284176 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240481294 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.242015462 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.238865372 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241476264 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238867778 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240719426 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.241579035 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244411474 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241659379 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238868105 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239227588 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243506714 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.237929091 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236179725 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23937719 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239829537 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240565537 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242040085 seconds)
  done (took 23.486271644 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.238371506 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.240079847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.242578344 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240456496 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.241087432 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.243308769 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23986119 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.243050332 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.243497964 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.240194372 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.243152292 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243262533 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.243605903 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24038868 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24256778 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.240997441 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.242528437 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240870229 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243917157 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242048567 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.241549447 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243502526 seconds)
  done (took 28.481872467 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24286906 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.244086307 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.240604456 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.241041212 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.240521393 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.244402699 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.244835138 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.240976688 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.244770766 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.244009096 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242616007 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.243949978 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.243680233 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.24236381 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.242897019 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238986173 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.244120099 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.24189118 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243622301 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.240142628 seconds)
  done (took 26.015513802 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.244484513 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246472025 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.245533574 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247056408 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246139064 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.247236917 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246857456 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.245584471 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.245099388 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.248043298 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246593116 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247411348 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.245836634 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.246607624 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246390616 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247583473 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246554269 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243135887 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241829253 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246061424 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244656459 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246644425 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247827046 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.246763667 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248255469 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246401348 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247362006 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24669586 seconds)
  done (took 36.059439608 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24732951 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.247513458 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.245635671 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.244860506 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.244936071 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.246048603 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.244268374 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.245569265 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248344992 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245411382 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.248996189 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.24602857 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247149691 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.247749939 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247298461 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.246132857 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245596808 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.24604636 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245359674 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243993683 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.246865511 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246782137 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.248043428 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245242027 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246055871 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.249404738 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244945591 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245794373 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248333336 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245046362 seconds)
  done (took 38.556067006 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.267074062 seconds)
    (2/2) benchmarking "in"...
    done (took 1.266012919 seconds)
  done (took 3.695813444 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.247109774 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245813481 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.246095114 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.245458986 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.245181734 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248566604 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.246540846 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246216731 seconds)
  done (took 11.13729911 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.246306461 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.248122021 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.245521912 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.248758909 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.249628436 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.251007504 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25614805 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.267035621 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.249973766 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.250397346 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.253606431 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.253817386 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.248935033 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251824058 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.247289046 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249675404 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.251002964 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.247983292 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.249240767 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.251789552 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249626065 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253213207 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25198784 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.246130753 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.251808153 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.260448633 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.269066867 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.25081296 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251353591 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.254713784 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.251488491 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.249851583 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.252292069 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.251431053 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.252239885 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.251922575 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258710316 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26967503 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.25746562 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27047933 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253040276 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.249127425 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.252986187 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.254147012 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253827002 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.252471461 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.253833707 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.250417188 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.25274658 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.256074717 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.25519899 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253663443 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.250848735 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255267745 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.254276208 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259418562 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.270369106 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.256365813 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.258588094 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.263142632 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.281184539 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.272259141 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254027933 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.253468345 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263261083 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.272442212 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261217608 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.269281668 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.250482997 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.254610383 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.26048318 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280094489 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.275870716 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.25439056 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262517408 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.26201622 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259293913 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254099392 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262057406 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.275593385 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.256176759 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254459213 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264235737 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271595588 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.255564135 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.254417059 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.252355944 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.255318847 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.25606215 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263604988 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.270275325 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.255256345 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.254692619 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.255404237 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.257089356 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.25662862 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.255892735 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256181836 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.251181685 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.256445453 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255435544 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259455281 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.263710359 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257166207 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257502955 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.263460187 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.275030687 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254966794 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.262519831 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.255445701 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256460938 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.259265559 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.261855827 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.254700439 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259106329 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.263527623 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.25646601 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.258710686 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.256137807 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.257308471 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264470549 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.279692704 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.257201221 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.25768735 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.261386944 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.265900684 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257754927 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.260782933 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.258420751 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.25481007 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.253116708 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.257815272 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.260066326 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.257610558 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258785578 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259106508 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.256409128 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.257938012 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.258759651 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.260679136 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.260793459 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.259108916 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.259612199 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.260263969 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.259053445 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.260526545 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.266265769 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.276195494 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.259705682 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.260408402 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.257465538 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260279045 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.259479445 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.258733595 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.261305764 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260535515 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.260480831 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.260469877 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26019639 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.261055583 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261238069 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.260938092 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262539286 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.260386435 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.263487765 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.260663503 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.256484106 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.260741044 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.261267546 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.259943656 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.262256683 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.259245934 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.263111287 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.267513509 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.262264098 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.260251439 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.262823474 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260374273 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261395634 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262658978 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.263949888 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.268593654 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.262102119 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.268141957 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.279855893 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262250109 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.262614365 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.26197441 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.261826054 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262104568 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.266231228 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.269436348 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273600975 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284107351 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.263304395 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.264968619 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.262615374 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.264980555 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.266502447 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.262665865 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.263962886 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262500564 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262013971 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263023156 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.266524879 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.263540353 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.262467464 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.263743486 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.264229833 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.263126863 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264979308 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.263810285 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264319807 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.261829518 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264936385 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26321238 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.263364463 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.26276763 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.263432756 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.264571288 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.264583142 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.262426999 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.2716162 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.262190469 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265645303 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265644138 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.265367413 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.263919777 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.266575308 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267525556 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.265265043 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272458727 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.282386258 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.265447755 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272241254 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.280863002 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.265228037 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.267737671 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.266498955 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.261891521 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.266782758 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.274743247 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.266249372 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.264595985 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.26698372 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267196349 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267918801 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.271509798 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.280988498 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.265641914 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.266716912 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.268040223 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.26356533 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.266866985 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.269931349 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.266853598 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270522115 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268429627 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.266830836 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268463115 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.267591719 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.267863373 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.268184451 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27027222 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.272392532 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.271171414 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.267441965 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.26947493 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.267998744 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.270206901 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.267435323 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.266947093 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.267412505 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27717397 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.2876071 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273706623 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.284598975 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.267531625 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273266143 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.286224799 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.270426589 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268466007 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269262232 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.268040724 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.269052342 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.268144871 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268820491 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.269524327 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270019879 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.270793669 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.27304821 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.26895069 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.269330906 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.269548403 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.268882428 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.270128382 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.267997899 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.27166205 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.272113974 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270947823 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.269029286 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.268869172 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276257277 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.286245818 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.27204975 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.26826298 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.269736614 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.269577552 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.270320141 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.270536633 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.272864492 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.275266272 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.271946284 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.277359902 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.271370633 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278909494 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.269917559 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.274044151 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.276315111 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.268413748 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.270802585 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.271149141 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.270979956 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278418144 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.287121381 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.272217408 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.274136463 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271966816 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.271633831 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.273319565 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.270751889 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272977395 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.270936628 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277989417 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.288071215 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.276461526 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272872474 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.268926703 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.270455324 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.272819229 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.271344079 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275460466 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.272174353 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.271837851 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.269884903 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.272723625 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.270817935 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.272027658 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.271542263 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.270159595 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.273323259 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280125932 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.29120008 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275946324 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.274004291 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.280501077 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291108805 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280929351 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.290269156 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.274799811 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.274172633 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.275156642 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.275695201 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.273798845 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.274107495 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.27395619 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.275658666 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.278946258 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.272796712 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.276507555 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.275865974 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.275518183 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.275605149 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.283665359 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294334312 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.276403643 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278986502 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.272930889 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.27595947 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.279215432 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.274842712 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.273602165 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.277618967 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283530357 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.283343866 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.276002782 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.274565529 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276041052 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276210038 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.276694794 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.276307085 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.274371746 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.2760192 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.276892062 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.275969159 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278585671 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.275978412 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.276335495 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276370191 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.277754846 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.284531958 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.292335611 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.276328353 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276233041 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.277653887 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.276574652 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.27739991 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.277512517 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278404992 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278021808 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.278484603 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282263551 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.28441575 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.280409634 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.278428956 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.277658089 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.27712397 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.279059234 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276980016 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.278607598 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277772215 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.278240326 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.2767221 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.279250518 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.277314308 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.278801064 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.27892499 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278789601 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279885153 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.284212175 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279175053 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.275574569 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.277884404 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277591232 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.278426222 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.279670457 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.286057328 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.298849376 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.288240741 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.285976727 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.282120841 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.280786125 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281283989 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.287471141 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.279616066 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.279643372 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.279397978 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.282139867 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.280364938 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.28424666 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280141176 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.287181298 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.298746265 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.278815247 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287548816 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.297735258 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.280338696 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.28216101 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.284491885 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.279605174 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.280087241 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.280596025 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.280314925 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289118566 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.299291702 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280951879 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283862329 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.28108414 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.281816534 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282557753 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282581387 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.282757045 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.279624009 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.281962372 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281252148 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28164706 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.28013155 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.280209197 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.28148063 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.283023856 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.288800043 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.279398182 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283997975 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.282842009 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.282066932 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281613964 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282323847 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.280711462 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.278900922 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.282494834 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284117716 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.282830124 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.283610964 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.282274682 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.284178375 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.283792131 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282904448 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286211421 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.291703168 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.290327204 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.281135096 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.282382644 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.283434463 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.284697745 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284172775 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.284643203 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284673409 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.28391424 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.284348766 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283435763 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.284672072 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.286812318 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.300127605 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.301684502 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284031093 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.284755919 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287234764 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.285617393 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.282814674 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.285656759 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.285967136 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.287835434 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.291168189 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.285215767 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292180958 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.303521405 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.287933899 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.290330312 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.287771567 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.292045939 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.287695823 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2844466 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.286138374 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.290865885 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.2992758 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288407129 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295393618 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.314415376 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.3038027 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.287248656 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.286370516 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286783811 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.286683763 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.288638726 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.287758493 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.286591846 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286614935 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.285845666 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.288001431 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290744418 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.289448791 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.288899396 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.28866919 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.285792838 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.28967458 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.285213593 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.286629918 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.2875912 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.28707784 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.287470137 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.28704 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.287407315 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.296505506 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.311390779 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.287869965 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.286190644 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.286355776 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.290700289 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.29091075 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297616737 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.296503097 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.287507894 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.287581284 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.289522988 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287589991 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.287963654 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.288496705 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.289300754 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289665743 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.286294553 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.299181327 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311312816 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.294097309 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.288571227 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.288390098 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.287502661 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290101938 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288219981 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289751639 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.290807424 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.290986795 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294490692 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.290205254 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.290151094 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.293396018 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.297170691 seconds)
  done (took 759.418666812 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288047963 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286904079 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287129087 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286342388 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286630301 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288225884 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288219111 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288977283 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288880357 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28794565 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.288337364 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287843143 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288247499 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290012277 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28893297 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287557111 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288180986 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.289728754 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289536495 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289186513 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289491538 seconds)
  done (took 28.257605877 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.292635401 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.288864183 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28863952 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.290649133 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288426441 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291408474 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.289030365 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29290646 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292686507 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290547845 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.292520826 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292540066 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.288687091 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.289667626 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290365615 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29192773 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.292822295 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290462606 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.293731641 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290464558 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292938046 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.290624112 seconds)
  done (took 29.606561555 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.29288403 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.292595359 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.29306975 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.290293174 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.292892526 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.290597782 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.292124214 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.293235718 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.292413757 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.292063646 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.294272554 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.293879436 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.299172087 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.296897345 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.293775173 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.294005828 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.43611238 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.292606319 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.294042005 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.292415508 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.291769241 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.298581899 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.309725349 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.290623843 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.293101284 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.293646237 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.294391269 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.294858376 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.293650054 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.293833929 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.298131287 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.294233157 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.294557068 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.297410698 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.293053467 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.295143297 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.29841019 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.296498863 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.292339706 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.293893952 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.303708413 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.314477441 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.29561298 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.302609627 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.314050645 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.296475317 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.298044645 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.301936193 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.293156008 seconds)
  done (took 64.8450866 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.296588989 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.295049165 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.293012084 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.295916809 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.296065506 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.29548979 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.296637545 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.296188777 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.293040754 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.293340653 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.297305851 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.293339054 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.294046094 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.295168313 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.295444015 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.294101289 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.29329811 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.293742262 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.293958722 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.294400662 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.294675207 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.297230419 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.296711026 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.295283948 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297825314 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294987874 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295024303 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.297325875 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.295122554 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.29520028 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.297716474 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297574888 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.297632505 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.296301281 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.296433416 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.298023443 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.297936633 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.295134226 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298389137 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.294928873 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.299517997 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.297997173 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.299956506 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.299151813 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.296593401 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.295814035 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.2968467 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.297184966 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.296779325 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.29934423 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.298844491 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.296265725 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.29990228 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.298523282 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299586971 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.300078647 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.297158569 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.297323967 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.2994106 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.297208702 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.297028665 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300312304 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.298426865 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.298312514 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300768084 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.29795625 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.298202698 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300838785 seconds)
  done (took 89.391133475 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299009349 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.300302932 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299339788 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300259636 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299865013 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.299755727 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.300095215 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.298856114 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.300107819 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.299177671 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300707219 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.300316134 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.300767746 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.301510986 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.300641436 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.3001731 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.300118972 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301098229 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.301142103 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300025194 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.301083454 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.30157263 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.300591768 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.300615668 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.301261822 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.300159561 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.301371348 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.299858705 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300278504 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.301131988 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.301818472 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.300959564 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.301491063 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.29963615 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.301373905 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.300912483 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301411823 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300931759 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.302000055 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.301411289 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.301462373 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.300821596 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.301800628 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.301238557 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302510465 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.301651169 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.301818085 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.301556658 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303026465 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.301874686 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.30191264 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302061782 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302936245 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.303926404 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303222286 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.303652186 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302219518 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30244659 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302527083 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.302702873 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301738174 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.303603404 seconds)
  done (took 81.888416611 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303773849 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.302914306 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.301293268 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.300250113 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.303797834 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.301715478 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.305330311 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.304350287 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305139264 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.304919766 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305046515 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301966349 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302044536 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304883035 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.302143916 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302853985 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301642991 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.300529831 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304114024 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303713757 seconds)
  done (took 27.278970442 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.302618478 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.304923321 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.302155684 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303661791 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.305534184 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302623626 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.305222409 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306140699 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303354185 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303406747 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305996866 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304107403 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302442801 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303123979 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.304758401 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.304347817 seconds)
  done (took 22.081039172 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.302689145 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.305335259 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.304276736 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.304943805 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.304478683 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.303113672 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.30616118 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.304045385 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.305089028 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.306211118 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.308027614 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.307853299 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.307521443 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.306179449 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.305106285 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.307070679 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.305199547 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.303937365 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.307559531 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.306774951 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.30555612 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.305839632 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.307098382 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.307980026 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.304770389 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.304865428 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.305978559 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.305841809 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.305971731 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.308011798 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.305616297 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.305585724 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.306651598 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.3068076 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.307561044 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.305507689 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.309824657 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.307826714 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.309434577 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.308078199 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.308191223 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.305607132 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.309317779 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.308025552 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.306906987 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.309774555 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.307945968 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.307920283 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.307664273 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.306686101 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.310077588 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.309019059 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.309602212 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.310147982 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.31067098 seconds)
  done (took 73.094373196 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309676384 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310119191 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.3070066 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.309516542 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310099902 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.307911184 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.310180858 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.310735486 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306775105 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.310399934 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309323562 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.312640307 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308730793 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.31080703 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.309162426 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311100644 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.308607736 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308556998 seconds)
  done (took 24.791632078 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.308281783 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.308664499 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.311397204 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.306946869 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.310959223 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.312031184 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.308324931 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.31196603 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312294742 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.308409321 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30905637 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.311105974 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311101587 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.313507591 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.307347923 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308936767 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.312931533 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311197716 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.307208341 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.309855719 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313651967 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312147864 seconds)
  done (took 30.048698568 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.310863125 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.311713837 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.311114625 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.328781095 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.329506883 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.332220106 seconds)
  done (took 9.146435055 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317589358 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312099296 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310873372 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31323981 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313562107 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309492703 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310727133 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310419015 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312432896 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310580497 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310750459 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312835734 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313806763 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310882953 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312724955 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313852287 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311600573 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313049101 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311408502 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314620889 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312249177 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313866415 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311753663 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311813883 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312753214 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311264105 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31452415 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313109866 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312091314 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313871966 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314189419 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312188571 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317339222 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312517939 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314744649 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313065704 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311909328 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316198101 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316587456 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311846159 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315760745 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315859569 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316868213 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312612638 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316793542 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312634589 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312523795 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3131343 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312463672 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315444897 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315412704 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313726711 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315244255 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315738015 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316720176 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317667604 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313741795 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313806201 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31581505 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316172784 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314388082 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317800083 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313929755 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313664457 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316809503 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314788785 seconds)
  done (took 87.94933336 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314084513 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313912961 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313634138 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314884635 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314539253 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31305007 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312998828 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312837855 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313397483 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314470429 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317741428 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315256342 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314833554 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313834564 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315342974 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31509108 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31518902 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315137323 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315654403 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317145095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314859893 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315467288 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315579392 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314544402 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315546494 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318613127 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314628767 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314037429 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315104842 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314465218 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31639476 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316075953 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316286716 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315906327 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315088398 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316177504 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315469517 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316282585 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315978002 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318355062 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316276369 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319889268 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316981129 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316974854 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316888348 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315880915 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318052589 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316628115 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317298464 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316714134 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317028399 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317446132 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31707968 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316425411 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316735917 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3156599 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319511181 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316407126 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318516756 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318673694 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316320852 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317380141 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320177669 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317005791 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316870438 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318674235 seconds)
  done (took 88.087062602 seconds)
done (took 1771.810018318 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.405645094 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.368142547 seconds)
  done (took 14.003536465 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.480567557 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.434443899 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.320235228 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.362712849 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.313703343 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.332555584 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.33243974 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.313728315 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.320552866 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.318984953 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.319512141 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.506035367 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.319653453 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.315739723 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.32044907 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.414164495 seconds)
  done (took 42.963621422 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.347009911 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.326406592 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.429757021 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.342607035 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.346949119 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.497762487 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.373862993 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.326817975 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.482483327 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.36447795 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.80282234 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.348231191 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.326676917 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.376915538 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.341777969 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496916726 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.555961612 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.808774017 seconds)
  done (took 30.128108782 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.735539729 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.326796476 seconds)
  done (took 9.296303755 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.316115374 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.317071596 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.320143361 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.355064745 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.344305538 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.343967212 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.394243191 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.395831466 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.336128781 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.32616758 seconds)
  done (took 64.691735262 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.342686971 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.324892974 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.326905243 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.323664736 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.316428652 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.31717888 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.323555125 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.321255259 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.718808456 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.440298784 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.327082684 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.333169924 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.344785015 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.326875756 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.325320933 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.358736327 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.465770001 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.325001473 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.324496274 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.332002069 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.32742681 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.447235088 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.365027645 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.325914234 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.441675058 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.718577793 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.329195103 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.332712813 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.45013793 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.326170921 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.325545867 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.3278592 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.327892319 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.939482146 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.844133559 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.335872509 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.344811988 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.337331644 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.326673174 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.490149486 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.329181916 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.334041537 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.325965049 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.820879554 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.468793131 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434526511 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.466659842 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.344246295 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.329816666 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.386912611 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.328392847 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.328527967 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.357789846 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.061509657 seconds)
  done (took 110.434283098 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.36420619 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.711759071 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.489426234 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.343651611 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.968061499 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.988163838 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.337371293 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.590109178 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.393150818 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.322226619 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.599506219 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.804974612 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.338889826 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.353136177 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.988128416 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.403502108 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.334060387 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.059083037 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.331298738 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.320966137 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806051651 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324281591 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.318051295 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.484603527 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.355948521 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.758950718 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.618346406 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.641867871 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.335754924 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.317342784 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.77021384 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.346277844 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.333713583 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.318811405 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.577899653 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.660762356 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.647142646 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.332080843 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.369825642 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.323131894 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.342048055 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.756737326 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.654474901 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.332758515 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.323350691 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756116292 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.334567307 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.334118655 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.330811471 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5219206 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.933349766 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.324968139 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.673462932 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.325776428 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.687993067 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.387187703 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.407547166 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.790415555 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333485936 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.301896755 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.372843591 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.323292067 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321010533 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.326038503 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.324643228 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.653885746 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.499589331 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.328181219 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.653663394 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.774231203 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.340543668 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.840121234 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.234414858 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.34415315 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.429301938 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.325245234 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.856239665 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.795685213 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.334947973 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320668265 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.640131839 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.336183175 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.593435513 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.335970035 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.336997843 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834452847 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.327882304 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.366723221 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.326368961 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.335467193 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.955981451 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.334190627 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.593004531 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.392809257 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.327035829 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.326896361 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.33783595 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323400222 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.342622451 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.328262995 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.827401081 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.347045255 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.292198638 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.343111543 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329374825 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.344434393 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.330992009 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.327618794 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541326299 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.834643359 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.345132637 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329528477 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.32414223 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.338513005 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.493207242 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.333975841 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.617671327 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.34519166 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323905924 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.323497452 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.997098651 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.380934388 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324465073 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.322149101 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.195633882 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.544821294 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.345607637 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.323339749 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329446562 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.346704972 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.498798916 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.341423376 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.359217853 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.331356794 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.012196369 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.368399599 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.34825419 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.59247976 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.33892344 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.145234885 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.346331008 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329426002 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.612969559 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.587125079 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.376845584 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.324038635 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.345363256 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.00128959 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.384145676 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474122494 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.34798307 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.365945574 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527425105 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.745174797 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.330186276 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.965811522 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.32727957 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538911035 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.331861532 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.637262822 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.799508853 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.346873591 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.340930574 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.021285986 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.011591351 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.0043053 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.331343464 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.593018005 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.298886419 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.803858815 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.330154577 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.331288432 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.764915006 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.335995835 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.330766796 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.33138856 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.332377148 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.46778247 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504016887 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.529814328 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.335157132 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.767969139 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.378277792 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327900294 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.334648511 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.331303987 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.678828338 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.410469612 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.3330306 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.373815449 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.335284864 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.342204145 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.794649119 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.287033493 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.334971768 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.485658808 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.939509034 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.347799899 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.335788502 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.980378786 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.644949672 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.824061412 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.413457065 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.625352101 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.349200621 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.37103919 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.901615794 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.370154799 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.784727843 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.347879905 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.335885084 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903363919 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.349442872 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.685573237 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.329740647 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.33523312 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.859364705 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.349446243 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.331078201 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.537831803 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.352644008 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.578705899 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.335461128 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.361474314 seconds)
  done (took 1108.055777586 seconds)
done (took 1380.801793426 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.334744025 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.329404985 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.316612792 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.334123576 seconds)
  done (took 26.563930164 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.336494954 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.333648321 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.335877275 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.335803581 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.337065338 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.33198076 seconds)
  done (took 9.256892318 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.361124633 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.328213524 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.332682233 seconds)
  done (took 19.267753024 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.525478108 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.57564743 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.671985751 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.466084887 seconds)
  done (took 10.4829408 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.340407019 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.334254759 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.335115595 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.337974275 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.339641082 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.342560688 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.338148197 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.337436145 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.336879457 seconds)
  done (took 13.287544179 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.087783509 seconds)
done (took 85.196219916 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.401403181 seconds)
    (2/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.35370297 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.4333259 seconds)
    (4/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.313857646 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.314795779 seconds)
    (6/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.353264528 seconds)
    (7/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.355762206 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.271554025 seconds)
    (9/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.546158441 seconds)
    (10/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.314697309 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.75191406 seconds)
    (12/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.408656084 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.57726378 seconds)
    (14/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.369922977 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.375632726 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.331478362 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.33985662 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.358201584 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.135477219 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.361794861 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.32118503 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.314879175 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.331707675 seconds)
    (24/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.350281344 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.927928717 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.355745863 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.329534563 seconds)
    (28/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.023746015 seconds)
    (29/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.372111715 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.135293098 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.379930973 seconds)
    (32/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.345186051 seconds)
    (33/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.416211022 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.613446061 seconds)
    (35/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.100348267 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.354283314 seconds)
    (37/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.673010439 seconds)
    (38/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.928112777 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.33292347 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.336380167 seconds)
    (41/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.361728187 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.376126942 seconds)
    (43/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.313064931 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.377901106 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.437911598 seconds)
    (46/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.330805393 seconds)
    (47/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.36948512 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.334385272 seconds)
    (49/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.34214166 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.332190895 seconds)
    (51/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.546435553 seconds)
    (52/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.32832257 seconds)
    (53/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.326853721 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.348462216 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.708716108 seconds)
    (56/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.359058184 seconds)
    (57/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.312747112 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.459372073 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.615507143 seconds)
    (60/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.334039798 seconds)
    (61/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.770727632 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.396968693 seconds)
    (63/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.483307527 seconds)
    (64/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.6720264 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.35659037 seconds)
    (66/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.476764634 seconds)
    (67/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.337645114 seconds)
    (68/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.729188419 seconds)
    (69/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.439364081 seconds)
    (70/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.151093107 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.191108346 seconds)
    (72/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.456276772 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.406807392 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.337593697 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.332304331 seconds)
    (76/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.365376241 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.422554288 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.331400304 seconds)
    (79/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.861716734 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.441716487 seconds)
    (81/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.867730791 seconds)
    (82/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.453172324 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.214303755 seconds)
    (84/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.315863153 seconds)
    (85/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.425342115 seconds)
    (86/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.365537195 seconds)
    (87/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.387904482 seconds)
    (88/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.345075259 seconds)
    (89/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.483969288 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.499588082 seconds)
    (91/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.320246012 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.757432053 seconds)
    (93/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.360102638 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.218971997 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.462056026 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.338928219 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.698121051 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.342023762 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.326063289 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.736022291 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.394543638 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.688787899 seconds)
    (103/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.884210869 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.315056905 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.752073968 seconds)
    (106/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.352127869 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.637401439 seconds)
    (108/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.932932316 seconds)
    (109/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.850596123 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.167899856 seconds)
    (111/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.329231691 seconds)
    (112/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.771394605 seconds)
    (113/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.745027454 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.35450185 seconds)
    (115/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.319181989 seconds)
    (116/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.342357274 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.777124693 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.450899552 seconds)
    (119/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.05488431 seconds)
    (120/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.085795675 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 1.863480952 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.3810725 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.1699452 seconds)
    (124/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.407201758 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.61719427 seconds)
    (126/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.423744969 seconds)
    (127/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.377915595 seconds)
    (128/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.540255766 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.244455166 seconds)
    (130/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.155185904 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.072209997 seconds)
    (132/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.696663695 seconds)
    (133/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.357331739 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.647822718 seconds)
    (135/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.918046854 seconds)
    (136/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.323598648 seconds)
    (137/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.444323596 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.438096557 seconds)
    (139/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.320253975 seconds)
    (140/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.402128479 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.335899471 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.695625337 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.756867273 seconds)
    (144/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.334340718 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.725076512 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.324552665 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.778617094 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.243616457 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.102190518 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.371760735 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.66576497 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.428324165 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.363826898 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.756560485 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.628423897 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.505299434 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.343980437 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.167902806 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.486820471 seconds)
    (160/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.428086122 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.90605962 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.46138872 seconds)
    (163/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.331091855 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.353142135 seconds)
    (165/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.349897403 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.338613744 seconds)
    (167/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.676420415 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.348654197 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.321602677 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.355246828 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.424919374 seconds)
    (172/309) benchmarking ("sort", BigInt, false)...
    done (took 6.343047206 seconds)
    (173/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.340199111 seconds)
    (174/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.941442043 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.352767383 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.360638654 seconds)
    (177/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.365580641 seconds)
    (178/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.14041827 seconds)
    (179/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.325364233 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.977654972 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.365656892 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.429547592 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.387778952 seconds)
    (184/309) benchmarking ("sort", Int8, false)...
    done (took 4.355766406 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.80830506 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.357068322 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.351655262 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.362107501 seconds)
    (189/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.794421989 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.344469947 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.430061838 seconds)
    (192/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.323094324 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.96842932 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.398411069 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.655435637 seconds)
    (196/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.36739015 seconds)
    (197/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.529027759 seconds)
    (198/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.693857184 seconds)
    (199/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.698096367 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.327496043 seconds)
    (201/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.341824821 seconds)
    (202/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.351113432 seconds)
    (203/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.621327421 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.990223305 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.552476964 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.440067474 seconds)
    (207/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.527836715 seconds)
    (208/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.695979859 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.592648941 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.089686018 seconds)
    (211/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.377315955 seconds)
    (212/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.371302784 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.342169209 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.74944613 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.190741109 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.704977851 seconds)
    (217/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.87085442 seconds)
    (218/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.392746345 seconds)
    (219/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.634832665 seconds)
    (220/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.582307857 seconds)
    (221/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.331263327 seconds)
    (222/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.377856332 seconds)
    (223/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.374557141 seconds)
    (224/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.452358808 seconds)
    (225/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.306180499 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.332239051 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.341478561 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.227753415 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.363900093 seconds)
    (230/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.364379436 seconds)
    (231/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.355617391 seconds)
    (232/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.487238935 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.332339088 seconds)
    (234/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.275095952 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.332086611 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.349922834 seconds)
    (237/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.326520742 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.201922643 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.896127853 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.069739933 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.382884462 seconds)
    (242/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.352663584 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.5567413 seconds)
    (244/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.347276082 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.113879742 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.347403124 seconds)
    (247/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.401755118 seconds)
    (248/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.38035205 seconds)
    (249/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.728424951 seconds)
    (250/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.560151829 seconds)
    (251/309) benchmarking ("sort", Float32, false)...
    done (took 5.364434135 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.104365521 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.420734869 seconds)
    (254/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.737451758 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.333216412 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.087393526 seconds)
    (257/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.513657253 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.772641468 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.214035091 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.358651416 seconds)
    (261/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.377737812 seconds)
    (262/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.09241976 seconds)
    (263/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.434649351 seconds)
    (264/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.327806215 seconds)
    (265/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.627553571 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.555123812 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.46686896 seconds)
    (268/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.607792002 seconds)
    (269/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.446233963 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.449282504 seconds)
    (271/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.430861286 seconds)
    (272/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.33396761 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.384911869 seconds)
    (274/309) benchmarking ("sort", Float64, false)...
    done (took 5.642095874 seconds)
    (275/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.333773319 seconds)
    (276/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.357331978 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.463391115 seconds)
    (278/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.451631682 seconds)
    (279/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.911029649 seconds)
    (280/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.695573836 seconds)
    (281/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.061960588 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.896785991 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.373401171 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.258919881 seconds)
    (285/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.418707289 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.696268091 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.181236644 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.544710378 seconds)
    (289/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.370641052 seconds)
    (290/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.53574272 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.369995111 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.40818981 seconds)
    (293/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.334515026 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.999206652 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.266941068 seconds)
    (296/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.097120447 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.425972211 seconds)
    (298/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.377932221 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.459078398 seconds)
    (300/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.939697895 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.35884393 seconds)
    (302/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.409060421 seconds)
    (303/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.126870957 seconds)
    (304/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.054138771 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.923889299 seconds)
    (306/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.91111919 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.765589648 seconds)
    (308/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.046407018 seconds)
    (309/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.455167323 seconds)
  done (took 1034.145653632 seconds)
done (took 1035.390117466 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.390590175 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384746214 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.366910296 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.388675526 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.478942686 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.392854292 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.378956557 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.370719508 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.416174728 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.417153956 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.365506046 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.390427039 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.368576718 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.368070595 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.368824279 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383680994 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.364903397 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.363632806 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.386412052 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.378574378 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.385867061 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.367812556 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.419669143 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.390003558 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.37241188 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.372006044 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.372312209 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.389716837 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.481030397 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.372365397 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.372995536 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.37819183 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.365438883 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.36138258 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.364109975 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.387634124 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.381782423 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.380117436 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.373782111 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.402688511 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.764049151 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.385793927 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.37087904 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.370526784 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.370889408 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.374494003 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.367973961 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.377159626 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384428855 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385822594 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.765257121 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.395083305 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.372244008 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.371857197 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.37996307 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.366591795 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.376804069 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384317169 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.388443072 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389819725 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.365519408 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.378058959 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.369939306 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.387929125 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.375771121 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.807762378 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.383525211 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.375465724 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.762841826 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.393553761 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.780290244 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.391009799 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.373223818 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.385949481 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.403363089 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.367832309 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.361959831 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.371170451 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.378611451 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.370735414 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.382703844 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38725529 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.377369623 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.371791346 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385362413 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.396755929 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.381788137 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.374539667 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.380375805 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.392039749 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.376285258 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.38419229 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.377805333 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.367950519 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.380995447 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.376292189 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.376602007 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.375027428 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.378323868 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.380538413 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.76255209 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.408335347 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.368139393 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.371223195 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.373301934 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.387724219 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.760871466 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.392287904 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.395805839 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.422979497 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.376638755 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.359321462 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.372039777 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393428211 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.382890929 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.37857566 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.372046843 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.360909571 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.766868048 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.405904129 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.378046377 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.373381158 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.394065125 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.37843122 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.373096267 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.377281618 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.371630415 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390434405 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.496839447 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.385340519 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.40498336 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.374494214 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.378039808 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.396145034 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393721956 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.405628516 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.378525808 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391876985 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.390448337 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.373081714 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.388133867 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.387464439 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.378857423 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.382073943 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.368844411 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.39817675 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38955828 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390708637 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.39507216 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.497211502 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.373814485 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.365406943 seconds)
done (took 230.752583778 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.432570317 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.373150227 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.453700384 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.371718421 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.467426633 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.470116555 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.366402688 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.36577237 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.366688253 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.747041072 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.370570757 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.362633215 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.363865405 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.369275528 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.453770029 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.372535576 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.370598187 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.711035638 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.372500742 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.443735278 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.370406054 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.371808867 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.373707621 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.748759985 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.367762487 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.364891853 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.441536678 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.372034738 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.717331026 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.361405044 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.371528287 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.714259599 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.462379597 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386237766 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.378151647 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.377924875 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.468076639 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.385301109 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.448886121 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.450693128 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.455447701 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408318722 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.365548135 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.367889989 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.372022102 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.368853966 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.368225269 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.394800743 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.367927948 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.367226929 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.708517408 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.378847812 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.37334336 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.368858701 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.367201555 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.392223389 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.372129001 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.370429481 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.463813862 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.371416893 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.436424624 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.755774142 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.750924593 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.372607943 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.369104803 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.370186006 seconds)
  done (took 150.873360923 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.434569241 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.444490376 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.48087177 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.384382217 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.419663659 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.48679469 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.385753524 seconds)
  done (took 11.317110235 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.381926364 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.375202616 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.421561259 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.422860003 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.370931416 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.542833332 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372939706 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.383454429 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.37004739 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.423535449 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.37456939 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376070452 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.381937069 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.371805957 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.420588568 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.388715024 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.490086966 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.378167485 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.377606126 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.534284853 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375452522 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.37660113 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.433976293 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.383053913 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.374838676 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.376729657 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.946369792 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37642967 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.374515249 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.374751958 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369026837 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.412802208 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.379327941 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.373038882 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372057766 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.4855931 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.376482891 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.375915145 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.379719411 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.37069503 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.378013932 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.372635401 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.375085789 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.371059408 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.373950958 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.397840753 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.373773165 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.375000366 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.374866803 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375778585 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.431900447 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375860893 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.373937464 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.371712682 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.428189417 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382873325 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.375946447 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.373610046 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.374851716 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372599812 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.537099826 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.422402467 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375711461 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.422394935 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373890697 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.376227672 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.376030503 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.376208478 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428353158 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.376529254 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.426856613 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.373820028 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.532087171 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.401900231 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.380175203 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.377977716 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.380081975 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378150484 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.37271532 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.382694732 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.37505843 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.376870744 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.381870857 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374748193 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374829957 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.479599826 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.485423255 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.375293979 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.391298205 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.383653424 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.374414441 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.435420392 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.380469403 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.37885631 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.428784992 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.496159596 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.430302439 seconds)
  done (took 157.354744443 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.378310555 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.385468945 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.37665226 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.395464128 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.381138388 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.379706749 seconds)
  done (took 9.582465654 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.382842667 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.383234507 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.377291681 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.378193064 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.381773212 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.383503468 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.377137794 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.384795539 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.384705601 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.37990236 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.380579092 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.380158876 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.378532746 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.378654079 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.383495859 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.38313552 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.377768849 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376536472 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.379037219 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383316614 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.480101889 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.379916089 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383891429 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.383993724 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.382900734 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.378780104 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.388530616 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.382055506 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.382840511 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.385301061 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.402480282 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.380364511 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.381953031 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.389712391 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.385910373 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.386797271 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389720081 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.387025554 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382270914 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.387041181 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.38220677 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385981631 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.386586738 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.381131429 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.38107486 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386801455 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.385588323 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.392690531 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.38567271 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.386579384 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.382576768 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.382800176 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.382323035 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.387171414 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.387164518 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402552539 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.385091059 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.385253465 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.386627509 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.389030515 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.388187971 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.387807845 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387915612 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.390968092 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.394276274 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.387801611 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.383776692 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.385077937 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386439484 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.388936224 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.382560605 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.381702951 seconds)
  done (took 102.076062894 seconds)
done (took 432.479028602 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.715935257 seconds)
  done (took 8.006670544 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.483985699 seconds)
  done (took 7.776618307 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.358444584 seconds)
  done (took 21.655791224 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.40920154 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.40210889 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.393808174 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.397724455 seconds)
  done (took 26.89437523 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.536840339 seconds)
  done (took 7.829260083 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.391892122 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.383002083 seconds)
  done (took 14.066944431 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.379379432 seconds)
  done (took 7.670940957 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.968940671 seconds)
  done (took 8.26537619 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.816288032 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.395746394 seconds)
  done (took 14.778687189 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.357669317 seconds)
  done (took 7.650004646 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.236906604 seconds)
  done (took 8.528497377 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.392712277 seconds)
  done (took 7.681666965 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.425639805 seconds)
  done (took 7.714192025 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.202479146 seconds)
  done (took 9.491297858 seconds)
done (took 159.301239512 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.376588612 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.372921054 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.372965685 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.372022262 seconds)
  done (took 26.782035257 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.419404243 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.420971304 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.420764002 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.429748255 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.420771479 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.419390893 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.411987516 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.412547424 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.43106477 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.423603088 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.422080412 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.420936728 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.414534518 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.41148338 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.422109782 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.422091554 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.431674452 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.420833527 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.412624974 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.423237809 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.386669798 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.431299524 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.422932517 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.387439945 seconds)
  done (took 35.329379025 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.906981093 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.458961391 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.540275997 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.441022378 seconds)
  done (took 7.637367096 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.439057252 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.442156937 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.4527125 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.492499009 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.518342441 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.45196703 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.416868265 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.409765209 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.396239714 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.441194704 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.518082035 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.457771042 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.524091656 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.38870164 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.57698868 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.387357738 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.388640682 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.44333834 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.495274443 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.506229918 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.390222758 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.440820882 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.445189733 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.458456588 seconds)
  done (took 36.174332529 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.388721894 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.396802069 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.388730544 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.386555991 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.397734835 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.388736401 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.388108674 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.389455002 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.386399179 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.394615829 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.387583977 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.400849341 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.388151334 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.388327138 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.395078761 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.390827213 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.396279736 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.389251263 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.38664516 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.393253429 seconds)
  done (took 29.113965477 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.382470682 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.235901264 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.731399607 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.639594145 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.383879892 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.3768749 seconds)
  done (took 28.042822462 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.456205519 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.60174891 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.390736141 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.740833415 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.832228802 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.405220556 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.392627194 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.625735934 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.930900505 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.927698386 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.444821946 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.455404373 seconds)
  done (took 20.497893469 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.393029666 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.383749068 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.39169929 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.399625818 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.444114922 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.409041913 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.398291545 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.384664299 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.444196667 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.46240504 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.409869113 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.444324087 seconds)
  done (took 38.261022709 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472834964 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.429156333 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.297439461 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389303819 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.099010048 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592254247 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.471231741 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.840841507 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.391317244 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660247348 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395365591 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482788413 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.641269009 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386251959 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388817388 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.355193802 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630172701 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854369577 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381051465 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.293439869 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412796344 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40090197 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.398941298 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.416638957 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599550247 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.530752652 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.649464019 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.164239524 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677197385 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398585585 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398278572 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389148905 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661996664 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052381179 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49563715 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399675277 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390707478 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.94361265 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.381657008 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.295288951 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.220176431 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391525611 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399226251 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388489979 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.323854785 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387060877 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838933242 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.395481814 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.101800052 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387690068 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39966265 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484479129 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.393630924 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.959376174 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388385167 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.39680285 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.386033649 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415628474 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975612055 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.773210274 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393359031 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.323827504 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386160016 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.387947796 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013875381 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.499404592 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393317084 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392392247 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326193185 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.357360505 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405706063 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.576206303 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.409601249 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041951699 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08748463 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.407806627 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321725996 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909252727 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397667479 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.325549991 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613379624 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.162067014 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327693429 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.3384239 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.326208809 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070362567 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400523826 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.7410505 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411225405 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.845085271 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.402533887 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409801334 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414227955 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615884106 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.26625024 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388783179 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.272780242 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539510484 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40790761 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.828247667 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327860061 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.389449766 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648463592 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.604253362 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403747663 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.355455755 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611667234 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393469545 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.42343815 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.402328439 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.402807067 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.953422052 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421695181 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.779797407 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413350006 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.167487512 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095925551 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40750777 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.49509645 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.397885419 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637176235 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.11571234 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27576267 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456495036 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403781184 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392308182 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.411432565 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.987397771 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.276759755 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.390796905 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396448555 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.4051609 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.394377303 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338932164 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.392240732 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403304398 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.175845204 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.619170515 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389678452 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671186624 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329411818 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538310601 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398866338 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.608970816 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.590239084 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.410649352 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654538683 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398416314 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408947855 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406146949 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414670924 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496598545 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417961528 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.402118968 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.653201167 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.400307474 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.400786541 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.445257227 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.173905354 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404124583 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.40363278 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399210944 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973938287 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391796732 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392305257 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283659319 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.405328518 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462653214 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397319602 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.401014626 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.181876984 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410394753 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.410528294 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.393096677 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636406489 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401566811 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.43158829 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476521886 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.590007978 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968999608 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426554516 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.332256226 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.106457897 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.085373861 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393285833 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.585568139 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392814991 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403647588 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404611867 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396537273 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.957939432 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416450466 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.342272016 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.403241649 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402791917 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.401517828 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395380192 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.158843113 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.826278614 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400549172 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.406897479 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540005753 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.405930274 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325618622 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.909320251 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403387897 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396076917 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.175946057 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427151003 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.34422661 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883794491 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65106212 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407553099 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40295437 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.51605174 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.43279384 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.398278488 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319512375 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421006912 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.402231253 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407055336 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.410247865 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.412088833 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.762684176 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958201795 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110507882 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947771366 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344371638 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.405757227 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.29569698 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.831059346 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333982266 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.052982348 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578544895 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.857005433 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346970387 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598270503 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.595345229 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166896959 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411943656 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624863124 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321300988 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.330208411 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43162691 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607772722 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431523754 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403126001 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.332060036 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.909977091 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636849751 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292816399 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48078873 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836233592 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338317228 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.200313876 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.441303398 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.696291341 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588905627 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.946372818 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.785280077 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399318878 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408956811 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885272932 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398109341 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.926694716 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01683986 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.421633974 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.599330876 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339031779 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.408029098 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.40644819 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.394494057 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.676988168 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.400240264 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.657725394 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407055871 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337474518 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406392825 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927468287 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.273235224 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.4044693 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40065218 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114337588 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407249249 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710389464 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.40945216 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.155807229 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423685328 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333814748 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334346323 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.090913741 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408350225 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379235127 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87674917 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.400719979 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401693226 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416037526 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246617569 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655059566 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.412367725 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.972494767 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646776327 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399702839 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42012639 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.500352158 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384568612 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.40690604 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.29562114 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.636167869 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41678852 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630507158 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.313228871 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.295837401 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.448076537 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616203129 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.311764006 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405115441 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657842602 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.125677748 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.411222496 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13179218 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446310695 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416388064 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.417162674 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402899113 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42097309 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496832625 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41679856 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.40869356 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.412907525 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.570844449 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409315231 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407983086 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.416623379 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494905351 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.834661628 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.164996579 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.180081204 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986257004 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153692776 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.998349279 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436276399 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403768264 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406763398 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337363497 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553099393 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.929632888 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673968477 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535087834 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.400044329 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431041139 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394382745 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431752719 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620364969 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677615839 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.372795984 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409321495 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.193655614 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.287130178 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414892962 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.61450798 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885954816 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943641061 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510806334 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413773479 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.844724228 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683452257 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.493317322 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403413506 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996149307 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.420255363 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.724026524 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.433773676 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403904734 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555313937 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418971772 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089696663 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.432633845 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.56614089 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.182320447 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.466683842 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665975976 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.87105861 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.415743061 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984878736 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.119825339 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67366601 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473082719 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416667709 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.515016896 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553853193 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.407017032 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.326331018 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407701299 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252889611 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.116392536 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.414609115 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987216644 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690278468 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.405147943 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.415536363 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435070704 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.416387326 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634961725 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090603616 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637391993 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424416858 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41676478 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.981440866 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987210438 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440747787 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346221108 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.40869299 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655300113 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.658632135 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428770336 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.860387948 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.122234865 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940370374 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.375921743 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42859832 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426416904 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106908329 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995629307 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.193943405 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894075669 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.064872583 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412801986 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688358854 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.413301815 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414719003 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688905319 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.411911056 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.417428157 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425114146 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.988434868 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188840415 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.420525237 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.422111881 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.351277219 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.638488508 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417853321 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343289443 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408102579 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.58617019 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415031648 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538457988 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418421499 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.416214303 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419476886 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.164361254 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.686504386 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.409996277 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.410563226 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.405200421 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416908879 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442604736 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670090756 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413873189 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.083888394 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.762176277 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.666046676 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410460723 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.395733468 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.415447763 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414712669 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.130403276 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418189371 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.425903108 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954559954 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.412484874 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.426483369 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414125723 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.626336835 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62356486 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409175928 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426530068 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425480519 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431505955 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.310761708 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.1836699 seconds)
  done (took 1669.295605416 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.459890153 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.461613046 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.453455348 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.457805952 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.436413974 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.547822167 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.483950608 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.430823872 seconds)
  done (took 53.05402991 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.418747994 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.57630742 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.439231486 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.416219649 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.42614593 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.417750247 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.865182582 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.448585427 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.417124172 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.424773562 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.416453838 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.409122869 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.054890933 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.426581105 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.421469982 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.397948332 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.419848629 seconds)
  done (took 66.725539089 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.414142428 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.990200989 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.503317044 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.416303475 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.451762866 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.4286944 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.235842933 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.490947092 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.424133327 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.762870064 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.07694363 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.449995563 seconds)
  done (took 85.971503852 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.428057691 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.426083549 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.426526754 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.42637102 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.423616191 seconds)
  done (took 8.455846368 seconds)
done (took 2106.63239213 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.723627678 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.079591944 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.067263206 seconds)
  done (took 5.473098374 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.562598414 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.609648675 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.732678023 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.753164428 seconds)
  done (took 7.988213112 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.698612708 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.79594942 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.608791037 seconds)
  done (took 6.433435924 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.801302342 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.42294535 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.439545305 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.419964557 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.420247245 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.424345278 seconds)
  done (took 20.593440879 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.426050246 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.421393918 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.420774624 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.425229254 seconds)
  done (took 7.022450618 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.398310285 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.127115585 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.403820797 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.418618657 seconds)
  done (took 18.67864036 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.165392176 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.178116182 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.165074321 seconds)
  done (took 7.83981113 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.417954612 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.257095453 seconds)
  done (took 10.006262432 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.706657952 seconds)
  done (took 3.037504526 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.554777948 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.748162362 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.451782751 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.349184138 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.464735994 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.189884092 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.028752834 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.622825402 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.322406512 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.553942102 seconds)
  done (took 28.620094387 seconds)
done (took 134.405702605 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.211370537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.790161258 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.61756933 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.222029972 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.652209961 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.617727729 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.625607721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.186923573 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.687336199 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.678375922 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.219910724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.651982056 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.779691957 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.789822301 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.781063996 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.794074796 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.653705929 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.251749571 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.867758311 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.102750707 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.628441883 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.817104584 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.05238681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.838621645 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.651128212 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.572618313 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.401664351 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.794223262 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.040051815 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.471112651 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.581675105 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.277437834 seconds)
  done (took 193.640051661 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.419593432 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.41904583 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.432200652 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.426640799 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.421179618 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.42776503 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.417910657 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.436512239 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.417748907 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.434922528 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.422946764 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.4269751 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.419692886 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.431119789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.416025027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.417258771 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.441858406 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.430837369 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.419492648 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.437024584 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.422714768 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.44749066 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.432562869 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.433540229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.438715928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.416889581 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.418896724 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.420290935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.416070227 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.419903991 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.429091963 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.428444281 seconds)
  done (took 206.9747491 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.419494662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.419942275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.421991923 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.427822184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.439037036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.429092329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.42348298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.423102721 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.42584382 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.438685323 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.421806387 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.438646276 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.426187756 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.41994491 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.422715994 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.440083258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.43838974 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.438028729 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.42933657 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.42040728 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.448555666 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.42115115 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.423282306 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.439555897 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.436906917 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.42124342 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.439755695 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.420685565 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.419934232 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.437560686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.4318306 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.462037061 seconds)
  done (took 207.098767156 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.630257676 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.432478191 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.432891208 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.384114249 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.43228212 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.434173782 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.424745577 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.62100524 seconds)
  done (took 15.12790301 seconds)
done (took 624.170591013 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.694668366 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.424117127 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.647597022 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.459228323 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.192276749 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.477248117 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.452958525 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.622563207 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.373687005 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.632579911 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.722095416 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.47388505 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.869646562 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.456924665 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.70378597 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.546218461 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.361970616 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.488125007 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.771246147 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.992402583 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.720790011 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.90667597 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.64803445 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.343057189 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.878759886 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.903877838 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.161499889 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.352903228 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.474853347 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.775477864 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.096551153 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.413304249 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.517364589 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.517603342 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.578864223 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.552766077 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.384466469 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.514746416 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.658416596 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.668249835 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.950150831 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.174889197 seconds)
  done (took 95.896615861 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.417935237 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.422360703 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.422490725 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.417194401 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.419285203 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.423568622 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.421635179 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.421347691 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.418980269 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.419755706 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.418350806 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.418570177 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.419905688 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.417817753 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.416424869 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.415532153 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.418163073 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.427269498 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.417131251 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.415888502 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.420630871 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.422753352 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.414287396 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.418322014 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.415335909 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.419474102 seconds)
  done (took 38.241850372 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.436336009 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.685699099 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.853459324 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.449270661 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.437300178 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.441505129 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.515991398 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.436205105 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.439974103 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.441039286 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.606627024 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.439335476 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.472399693 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.878066482 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.44432237 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.440677758 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.435527025 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.437665101 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.6984742 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.447171304 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.538364798 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.446049376 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.517065635 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.454816421 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.464676019 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43987267 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.44779855 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.954465334 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.458678218 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.606689515 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.229012346 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.517148155 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.911880592 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.881218427 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.235562195 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.44577334 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.439322375 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.612013088 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.442160006 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.441903383 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.518298289 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.447256897 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.862368321 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.065506753 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.465475149 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.44337881 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.977407569 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.637247487 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.689332641 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455247135 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.888046868 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.450312501 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.446208781 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.443988448 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.681465685 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.450755251 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.444380567 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.9746376 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.473438833 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.519175069 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.448932011 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.440452474 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.701737545 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.438729683 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.691925267 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.440581857 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.449625559 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.463826643 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.861037246 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.450071248 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.083139775 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.459290792 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.440968556 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.607649588 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.692326627 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.036628756 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.465031966 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.711846667 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.923424839 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.535994393 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.454435179 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.944334767 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.537617806 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.451362797 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.448090337 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.447862618 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.443320707 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.493183467 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.517237447 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.007740158 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.085695518 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.99515967 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.54874056 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.462420327 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.445842558 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.984385805 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.474578941 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.448007005 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.859873024 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.084493134 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.461120639 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.453673445 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.089522616 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.462971146 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.523045605 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.4549873 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.881501904 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.454568409 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.501315218 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.446449027 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.452160901 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.47571767 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.525509305 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.45429415 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.445994087 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.058078238 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.639526778 seconds)
  done (took 188.862072589 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.445614653 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.435320381 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.438523624 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.437231223 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.442338945 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.446824241 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.443001664 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.442367614 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.44684553 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.444486179 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.439658845 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.441364971 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.442635243 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.452715335 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.464927172 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.451509255 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.050660629 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.440636012 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.441162368 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.453249227 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.234725174 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.447892878 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.450891125 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.438415491 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.440322618 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.443092983 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.462322911 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.439366659 seconds)
  done (took 155.211946536 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.449839152 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.008828174 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.471293977 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.576085182 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.475052607 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.44440537 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.573740029 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.503998899 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.471618951 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.446974568 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.443852352 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.74709169 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.456083223 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.95203542 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.633953553 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.599466628 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.957341241 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.463909981 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.446930043 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.444644043 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.581271578 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.458216209 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.745929379 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.015052714 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.472312915 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.008647034 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.431674748 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.449338258 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.445830963 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.010888413 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.464521253 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.751362205 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.52474896 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.513773559 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.032932652 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.97976934 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.987650244 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.602179015 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.45440812 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.448934649 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.448603716 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.433410155 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.015037308 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.4731369 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.449769649 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.005715726 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.475284988 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.451191908 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.453432953 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.447640229 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.505189133 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.531441254 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.782654743 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.028248946 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.549514819 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.467105686 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.579395392 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.827123155 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.448856273 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.965491362 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.439716865 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.013234839 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.470004583 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.432217138 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.452492363 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.452972448 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.593900618 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.584974683 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.973195212 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.475917299 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.972395608 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.62440982 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.457310577 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.448105611 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.449769299 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.014251807 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.985287538 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.622944547 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.589473458 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.650598235 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.442276576 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.449643496 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.436631288 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.528623392 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.457588428 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.014301732 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.986390368 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.47835428 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.453506657 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.450704634 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.455165821 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.628315437 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.040484936 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.543378549 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.96365957 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.779659712 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.754277575 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.453623565 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.509634169 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.475045346 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.756221278 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.454843755 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.508480137 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.894343026 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.755099121 seconds)
  done (took 172.018201893 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.703584705 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.662272339 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.549785178 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.58847457 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.062415039 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.011835884 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.706990687 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.596182422 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.561311039 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.712229243 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.60558898 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.549334177 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.624091366 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.532933184 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.189401064 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.53952679 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.56293682 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.60529437 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.562836549 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.486797136 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.111696926 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.737833313 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.633936675 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.337044647 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.552394474 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.248745727 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.025800863 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.975348017 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.641384896 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.777025673 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.991296175 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.585598155 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.412785218 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.128432493 seconds)
  done (took 68.930753616 seconds)
done (took 720.503047202 seconds)
SAVING RESULT...
DONE!
