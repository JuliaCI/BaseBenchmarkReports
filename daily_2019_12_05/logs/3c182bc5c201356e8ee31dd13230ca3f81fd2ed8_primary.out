cset: moving following pidspec: 1315
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.413842937 seconds)
loading group "string"... done (took 0.577956774 seconds)
loading group "linalg"... done (took 7.347939595 seconds)
loading group "parallel"... done (took 0.157972739 seconds)
loading group "find"... done (took 1.167307917 seconds)
loading group "tuple"... done (took 1.80591184 seconds)
loading group "dates"... done (took 1.270435852 seconds)
loading group "micro"... done (took 0.223575618 seconds)
loading group "io"... done (took 0.956725703 seconds)
loading group "scalar"... done (took 39.15532393 seconds)
loading group "sparse"... done (took 12.420727083 seconds)
loading group "broadcast"... done (took 1.002415709 seconds)
loading group "union"... done (took 13.073571526 seconds)
loading group "simd"... done (took 4.695760352 seconds)
loading group "random"... done (took 9.447516187 seconds)
loading group "problem"... done (took 1.846678482 seconds)
loading group "array"... done (took 21.008853726 seconds)
loading group "misc"... done (took 1.706492397 seconds)
loading group "sort"... done (took 3.334366993 seconds)
loading group "collection"... done (took 17.309844309 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.523131019 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126721618 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120235376 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120398477 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148055284 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115188246 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125759468 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085199774 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.857118707 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150685724 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117104994 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432406557 seconds)
done (took 5.339923483 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176855652 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083898988 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082633634 seconds)
  done (took 1.403468219 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067491266 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124989985 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065238964 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066841639 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066501519 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064976956 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067752207 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067409158 seconds)
  done (took 1.760347118 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074024536 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068648377 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067055666 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068899826 seconds)
  done (took 1.514477887 seconds)
done (took 6.169165995 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.790913163 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205815216 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186138539 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.4084556 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132220138 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158581174 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638746092 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311577895 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187928336 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079342874 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106714847 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.32598086 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109066091 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643205026 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07645304 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089722076 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137488681 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.426170404 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066411506 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080848439 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088072495 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126950634 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087570869 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073833689 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142803141 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067152808 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134354936 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079266059 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.064738351 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.209680805 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172744034 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665692914 seconds)
  done (took 10.350912238 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094915744 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09582182 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067717485 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124104461 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098101816 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071102276 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07175783 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067990109 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088111925 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128300279 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09028113 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101344418 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066714083 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.0694814 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086340578 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206125218 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08183005 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082852199 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071508007 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076567114 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106963538 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079916125 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078328838 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078359176 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130991597 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182794742 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097924303 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097596371 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067927757 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080464329 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115979231 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126794855 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066765021 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066974758 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125754903 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.0953424 seconds)
  done (took 4.714434797 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.002843667 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.147062153 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091592776 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13511936 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065679909 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111485532 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066673969 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082615206 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.213755887 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.381760334 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.586837859 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086357649 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112646988 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104071263 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068383334 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069500739 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068097564 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.468557117 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09350552 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104664277 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080349825 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070886976 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070452074 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093598946 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068716623 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06477393 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069472535 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.111438639 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.300532588 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128163322 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069180326 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.952085059 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126244007 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06580543 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10000252 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160620103 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090704203 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.276933664 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068315549 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065668248 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.152811171 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.06847079 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065972251 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082715156 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102494183 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112281922 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064860611 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065504377 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162947542 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066529167 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080180983 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.635973412 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153507453 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078274215 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065306975 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.257938092 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092693094 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070524544 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065524695 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.189937723 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06597688 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132392946 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069604179 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067159849 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069592161 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065186015 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070496379 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.363466002 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066724391 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.91209572 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069299322 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077179169 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070411606 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070931046 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074675677 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074020376 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088929962 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067940348 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076121118 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067253915 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066872842 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067456571 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086244919 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.375407292 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06626934 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069288243 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065981726 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089732598 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098099186 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068315965 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066323366 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101037537 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067298872 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065851235 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.109288861 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067685767 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086057169 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068639019 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111899537 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066194437 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.190310785 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066571366 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098818951 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071366923 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100263615 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081933407 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069140712 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.419347023 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065059415 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065657539 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070350051 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066672568 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06955468 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067945046 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081238203 seconds)
  done (took 21.214963736 seconds)
done (took 38.517659264 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242698151 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076697215 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079452148 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079656447 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073095299 seconds)
  done (took 1.875840084 seconds)
done (took 3.184263759 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124431203 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101356785 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06559495 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098667121 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065527688 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10409082 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103028901 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083871994 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102257962 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065351119 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101323043 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065188222 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06534949 seconds)
  done (took 2.468819499 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083845215 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08663628 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071415933 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086103297 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06503502 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085154084 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082619256 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091197124 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083151123 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073537821 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064874854 seconds)
  done (took 2.172575517 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085053796 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086274214 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071146909 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084321765 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064695537 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083768071 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08297664 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088254682 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083258146 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075258291 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064625151 seconds)
  done (took 2.16433648 seconds)
done (took 8.098724079 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079323964 seconds)
  done (took 1.364482816 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.589773748 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.04109089 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080247621 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.10975257 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19385523 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119935707 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27460484 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08877127 seconds)
  done (took 8.975821032 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104250061 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074219902 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069490592 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073200695 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072956492 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072081222 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070385576 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070813132 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071869823 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068779417 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071361388 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06717182 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06973988 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068413731 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070693171 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067990168 seconds)
  done (took 2.521801456 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094345794 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092663983 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075160777 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075655732 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073094219 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07307078 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075199371 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07446479 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072262355 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072978191 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075803413 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073559204 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07117891 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063508759 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073550486 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074607741 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069505447 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071867424 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073219935 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073765243 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073250919 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063167912 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070272052 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07251503 seconds)
  done (took 3.184458889 seconds)
done (took 17.340701034 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114476706 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070415205 seconds)
  done (took 1.47889451 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079445892 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081395118 seconds)
  done (took 1.463958166 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082493503 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063974053 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088848751 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076983558 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064808776 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064565127 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085898996 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064863817 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064493705 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064858548 seconds)
  done (took 2.027349497 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.0666582 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076266392 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069535722 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079656147 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072848382 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063432437 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071755696 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065947302 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075699794 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061403305 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07012905 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081341129 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069867594 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082744326 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070835856 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067407209 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069311704 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066242317 seconds)
  done (took 2.588437244 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063736407 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066112464 seconds)
  done (took 1.440376826 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066630498 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064837541 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067076158 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066544716 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063709488 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063382131 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064041047 seconds)
  done (took 1.76332593 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392765946 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115225453 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318529029 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072748601 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082533226 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257518647 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064246005 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069142663 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069344241 seconds)
  done (took 2.793983556 seconds)
done (took 14.866183149 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079981267 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085083127 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094357766 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.371596238 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090101497 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065147834 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113117937 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187595598 seconds)
done (took 2.405562039 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211541985 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.630334833 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403541445 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20438648 seconds)
  done (took 2.551787043 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343625131 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087736048 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059610069 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068655329 seconds)
  done (took 1.87868891 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067399731 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070251899 seconds)
  done (took 1.45827 seconds)
done (took 7.420088193 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067675727 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085531479 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067778342 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064520944 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066937722 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067140048 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065167481 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065862366 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06719006 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067029435 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069646095 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066883862 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066846866 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064781239 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064518276 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067290316 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064709994 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064171415 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066518407 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065175054 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06685577 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064600653 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064680689 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.0645072 seconds)
  done (took 2.958116722 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085233076 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067129555 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072717373 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072473543 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070375439 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071855307 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072353551 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066910018 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072374742 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069444556 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070254112 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070348945 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070486565 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07121421 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070166947 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070613166 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072189111 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067163759 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069308042 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070210798 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072499621 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066910198 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070836643 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072333968 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070471804 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072083949 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069981057 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066952634 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07241492 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070339828 seconds)
  done (took 3.454471831 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070600031 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064389497 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06651086 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071848136 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064603394 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065746742 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064748794 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065028456 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065672158 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064392623 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066310284 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064036891 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06535781 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064873857 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064635854 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068578757 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07954733 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063579552 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063153975 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064609358 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068269606 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065222123 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063630119 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06407539 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064743655 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064042839 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064698207 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064118064 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065228673 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064423408 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067390382 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068011183 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064299758 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071192601 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067711179 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064287012 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068376154 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063770037 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064997188 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063539141 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063614796 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064187763 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063932916 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071034459 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064147201 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06566957 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064346839 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06522712 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06417175 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066880501 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063880811 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064547272 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.177624662 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065492698 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068635483 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063760008 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064975509 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063741156 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064961107 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063965954 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063836832 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063697594 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066624613 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064575881 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078869755 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070978505 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064329829 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065604977 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065007377 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066569085 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065724805 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077780444 seconds)
  done (took 6.197008742 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089188795 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08583573 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064079621 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064381864 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062298308 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065003157 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070844555 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064947012 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065745343 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081433641 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06327847 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064646382 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065143922 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067423243 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064546888 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064922867 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071786581 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061549729 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064427083 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06789592 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065607012 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070423227 seconds)
  done (took 2.841607168 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15583445 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068524979 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104340664 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074240826 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068806199 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073713279 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0684734 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068842857 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070689385 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068138523 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068881175 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071036393 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070855282 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068373076 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068196611 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068344636 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070234025 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068523771 seconds)
  done (took 2.707819329 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077481207 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066169641 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086311319 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065193631 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06507682 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06716697 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069930894 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073202448 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067609548 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065656724 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073731802 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069069696 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06916562 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06665731 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068877383 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066028355 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068925905 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066634856 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074625765 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070997139 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070644233 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074475753 seconds)
  done (took 2.879429001 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079661183 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068669289 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082713841 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068333759 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061920869 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064953897 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07070521 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066468057 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070480757 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068422581 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066176201 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064808892 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069114738 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066921414 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069150759 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066059332 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068759639 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066413016 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06810144 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062158342 seconds)
  done (took 2.703116466 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087467856 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068655553 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068255967 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076014192 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068912459 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068086429 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075207794 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068297827 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068384171 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088712656 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068076021 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068837604 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0760055 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072658006 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068572104 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075576887 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075621359 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075516469 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068242168 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068318001 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088634932 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06782138 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075215211 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067729198 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067735065 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067846997 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068116876 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072674628 seconds)
  done (took 3.368896833 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066464944 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066691194 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064433792 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06491224 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064134587 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064112407 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0639435 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063931802 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06651848 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064237162 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066920634 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066705411 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066555592 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066911134 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066828659 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067185092 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067292939 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064745676 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064321287 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063994871 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067352849 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066815189 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066757168 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064477309 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064450182 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066976791 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064278861 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064220478 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067004432 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064315541 seconds)
  done (took 3.307489908 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076378283 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073785645 seconds)
  done (took 1.489142778 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063943343 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081254736 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065020863 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070916471 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070578518 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06749758 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074151541 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070032421 seconds)
  done (took 1.900755254 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084079322 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077924962 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068190839 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080588354 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077963746 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08347979 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134764898 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065694172 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071543776 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063342532 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078658276 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066348675 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073043882 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066305187 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07121748 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071614324 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062827934 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070536526 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066722201 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063252158 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065833279 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073142472 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067160313 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060453282 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066964197 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088428485 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076308998 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064777524 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069163774 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074180687 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073189449 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060992813 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066501442 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067399285 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065002814 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076601318 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081908972 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069653023 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075428893 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067262463 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077039485 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061865699 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071776821 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073353036 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07685543 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067287817 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067626247 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06199339 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065179378 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069070099 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061886584 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069722809 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061938723 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073645987 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070610021 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077714786 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065801758 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068762518 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069926446 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070766685 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073980128 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069173988 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070287194 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067180251 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077349781 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071810742 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076211294 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062329274 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061164727 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065312995 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077113768 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090442752 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073550194 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067304367 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068462502 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065144489 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070314851 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068013042 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072843414 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073891272 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067116247 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072364112 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073819656 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067625311 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070014077 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07543785 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065428787 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06956073 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065835936 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084348053 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066412959 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065379234 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064954462 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077553062 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070247607 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066925243 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065452534 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074652024 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061276099 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068106656 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068144793 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068272151 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078501073 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072007207 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072713911 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076454464 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074797379 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067501774 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070492397 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063765554 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067940111 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066896619 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074977527 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061379457 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070145639 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068020416 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067931334 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.0763859 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06586022 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067329019 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075492623 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.197970348 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064173128 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062759516 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068508141 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065739282 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069209158 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073849805 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064285952 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061280023 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061370282 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069901433 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065714231 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069511809 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07059861 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069494192 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061321634 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064027786 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070303346 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074554409 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06703724 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067329768 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071909378 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067125203 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064800962 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07258162 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067784306 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064320731 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072466813 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068022345 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062267628 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070608703 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070850664 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066526641 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07217522 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070401163 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070274139 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068286812 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066747151 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074747406 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069097038 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066837683 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068343893 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066369511 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077884122 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070176473 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062977997 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065940343 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076477701 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065706296 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067453447 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066998384 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069614612 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068426434 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065375547 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067242178 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069712486 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07665699 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070667447 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067147226 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071883662 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078620529 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066597932 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069821441 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067154874 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068703964 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068043241 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076964126 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073690803 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072000979 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06977573 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064028809 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073611801 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074420212 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065828133 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064561823 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066303594 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070902223 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072937316 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071179 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.0683716 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065462248 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068155829 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070483317 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070337513 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066611791 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065859993 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072478934 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06427219 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072224809 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06611251 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075944121 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068829069 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061131912 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069635988 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065567437 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073104159 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061992584 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064613812 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066309816 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067796134 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066296867 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070514792 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061072694 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074261568 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07522408 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067847328 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066928749 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066740684 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074288651 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068722665 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071044837 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070821492 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073666222 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078430327 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066735645 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070707502 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077978251 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067376643 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061396193 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072954371 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066164126 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066346463 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066164168 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0655805 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070158339 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075850518 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.202702449 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060026174 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068468395 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064320516 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064549834 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061133386 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07187035 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071085121 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068928283 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074546183 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069272279 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068237459 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072131682 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067857761 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068649982 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069088851 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071547631 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069213862 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07040575 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067399861 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072156843 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067416558 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065432657 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069503438 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067557718 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068660295 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073553314 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067560463 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06839003 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070685853 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068619711 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068965333 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068277445 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06716294 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071688968 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068871605 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070262149 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070465295 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062265496 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075253184 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067669515 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075582899 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068587157 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064415074 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074710367 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070652138 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073592213 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068394367 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068273743 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069486765 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067315565 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06993546 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073838339 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0647418 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07689125 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072862651 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0657902 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069109239 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066495423 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067151832 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063886212 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066371777 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06677999 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067266846 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066993509 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073107584 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069922755 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067242685 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069140087 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067854932 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06781357 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068034045 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061933754 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066611322 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066722235 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067420838 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077446557 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067504702 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067207077 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066219192 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06807644 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066538299 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064150892 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074920963 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076692717 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068009688 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074779889 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066272594 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068927961 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078064538 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061101407 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065205665 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064630832 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064862952 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073889224 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067553837 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076826172 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067416566 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066396446 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06393783 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067533466 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065785001 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061008832 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065564539 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070891644 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066080953 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066167444 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067016017 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069774502 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067785442 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077146217 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066366797 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067743722 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067883601 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06425421 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066243092 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066155798 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069702314 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067621708 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065206444 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064726316 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066669429 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06835791 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068828897 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069247207 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068974211 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074529318 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066974475 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070462904 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.201818609 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060335483 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06853848 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067439087 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067165683 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065150177 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071564013 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071471071 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068190356 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077245727 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067494002 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069228839 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068724702 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066652544 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067213422 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067642502 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067615538 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067234308 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068266411 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074401699 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06363961 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069541326 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06602002 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066197747 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071949477 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066171271 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069030194 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072233688 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066694703 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06731803 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073381842 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069461661 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069247668 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065956932 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066885526 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073025856 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067211035 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074250628 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068204418 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06799059 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06907567 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066326438 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067332129 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067590051 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066526912 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074394638 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068732337 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06768801 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067186679 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066069735 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068472035 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071041513 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075569903 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069665372 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070228256 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063132349 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064728352 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068362065 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066102745 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068896469 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069999397 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07333654 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069349286 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067642811 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.0662479 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076087616 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073090364 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070740664 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064830478 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070584474 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06792566 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069881132 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068775491 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067971119 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068047187 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071209921 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068191643 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066737211 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07416903 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070761797 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068241685 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069083128 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068261039 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067843461 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0626252 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067845914 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069677808 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07298213 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069263945 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066508454 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076917631 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064844176 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067191187 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070194222 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065257846 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070084278 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061816113 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068800102 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068538955 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067670569 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062039868 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066366789 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.0648889 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069188299 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066629918 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062478162 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077584986 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076003002 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070237937 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066000322 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066130345 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062245976 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061924909 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066233012 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067908829 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068579386 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077349022 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066293174 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066300467 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062229411 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066883985 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070234476 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07011454 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064910925 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06227042 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06650533 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070204488 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07328068 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065545439 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066617331 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.202096819 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067818725 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063240358 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069137419 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062961938 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07137697 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080732865 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068256865 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068937514 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074827735 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075764766 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068624519 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062800758 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068355161 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07051208 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068973736 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069187424 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068821397 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082759678 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070910405 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06790015 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066775398 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071117025 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066992342 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076401732 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069368699 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068336543 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072175002 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070263715 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076023298 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07089125 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076179765 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070484105 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071954329 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067983832 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068903613 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065482419 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067276075 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068597608 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068644361 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07269815 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075811301 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066605445 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079512468 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078063583 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070244366 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064963395 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067139478 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06739301 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063103931 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068892532 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065915607 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066437085 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065959608 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066667452 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068609087 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072239225 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068447885 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068189704 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067323754 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061057255 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069995199 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070253081 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06833458 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064724189 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067388698 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067279479 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071879517 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070193737 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065011207 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06920713 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068871704 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068105184 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063069863 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073745973 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06601118 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069576601 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066283326 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067032983 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06793368 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070888975 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071991146 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06811168 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069964483 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071110451 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068909582 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064210418 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06481787 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072670079 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064821403 seconds)
  done (took 43.119560427 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100262383 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06244033 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060724742 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06058495 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071711136 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062491819 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063249291 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063175952 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063416519 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066239557 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062818004 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062929669 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07127867 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078131616 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074663182 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06727276 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06247859 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063752532 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062250854 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063828788 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071288733 seconds)
  done (took 2.835957134 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075011179 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07840212 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075429071 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082255357 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07155116 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071652314 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075887236 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071353082 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079170807 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07373554 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079311209 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07173578 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073381583 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073606234 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073416642 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072067052 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079088798 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07148938 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071400231 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076085611 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071166863 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075817362 seconds)
  done (took 3.046124245 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067085128 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06637487 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069281549 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062779882 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066497619 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06260057 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070397074 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064881487 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070034983 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066046428 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06616227 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065777708 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068721437 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061721372 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067072755 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066520093 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10767849 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.0677025 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064916011 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066319814 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060906808 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067882178 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061686992 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062444496 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065571685 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070276752 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067142328 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064720302 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066207336 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065951615 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06624849 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063770568 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067836943 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066844707 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06556652 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065203134 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066331175 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066347202 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062021666 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064090246 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066820995 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06231689 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066620451 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06801738 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064233672 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064102633 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067900493 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066527767 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061452174 seconds)
  done (took 4.668986559 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079453255 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108106777 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066149773 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091459672 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080091106 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072047802 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068327174 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089243522 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062900155 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063070483 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080014892 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07760757 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064375718 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068462255 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070953638 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064196016 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065587362 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062886889 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067626543 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06358388 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069320603 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072472543 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079901013 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07841637 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06999925 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06512446 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065130027 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070369286 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078632975 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069971207 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070903601 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071263097 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080848634 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067655141 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06527343 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067891835 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081713488 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065975743 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068319284 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063922611 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068149962 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070029057 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073120117 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081719985 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065950535 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070974045 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06558949 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063255643 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078086095 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068516663 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073359481 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079769959 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069789371 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066099555 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070257176 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080945307 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065794119 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064641154 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069069209 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077803114 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063441316 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069648601 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077637529 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066053488 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070571068 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077499636 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069832798 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068327482 seconds)
  done (took 6.421896128 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075475963 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093194209 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082364178 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081251167 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073819768 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07378692 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073546336 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07359713 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073931789 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078461772 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073945977 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113163246 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069596028 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076491627 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074008556 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073892936 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074256841 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074140456 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073770998 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073477472 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074283831 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081003696 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073617958 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080615339 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078219406 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069643785 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073708956 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074136332 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080988192 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073949203 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078211146 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075143466 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083990658 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083635184 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080521457 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075859628 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066014885 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075225034 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074835402 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075331697 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070907724 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082218849 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074207619 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070597677 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076621573 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07545826 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082375671 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078781885 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076796282 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079338174 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074406748 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081695534 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075258811 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07470593 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083175916 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085208405 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081925471 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081967523 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073653877 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080731989 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081443616 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085834622 seconds)
  done (took 6.238959231 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084928606 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073971044 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08228757 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060474764 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065096995 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072709229 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064743401 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065354424 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074931126 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074922505 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07725679 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072410562 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076109818 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076782477 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071518962 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073835925 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071357479 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070873072 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072671359 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070051948 seconds)
  done (took 2.879599072 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075675448 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085105938 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068236708 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072714368 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069468986 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072671668 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069401844 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070037799 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067451042 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0704479 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07803624 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07671218 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067466254 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072367829 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076158886 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071641045 seconds)
  done (took 2.580740032 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084944517 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075043133 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080886111 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067401566 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067267101 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063730546 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066612048 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062038429 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063111157 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078407679 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066290432 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077240804 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066565597 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065220689 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063062585 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071545886 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062687633 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063707811 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066050038 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07854811 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070241064 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064839792 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069748101 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066267209 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068787923 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071469118 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065502629 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066954531 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063458497 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067007879 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069362597 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069551995 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06358953 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064192473 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065262084 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063608403 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066204009 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066326182 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071780707 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06587728 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064561968 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068771275 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066289311 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067291103 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062409328 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066850254 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062659946 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068296257 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064456328 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069377652 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066311794 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069327793 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067547413 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073233952 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069325839 seconds)
  done (took 5.155847935 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08052791 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070524819 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062924958 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065062549 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07075225 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068262141 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070450214 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068819885 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068067287 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063797126 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066586852 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067827458 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065701338 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070380821 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068057228 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070455196 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062802257 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0683673 seconds)
  done (took 2.662654278 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072382364 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067145194 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075191615 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067089468 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067176188 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070724363 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062908155 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065362636 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065642198 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066569337 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066994317 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069001754 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065072071 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069178261 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066546343 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066462191 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068846187 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06584275 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066157538 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062658231 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069077306 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065687904 seconds)
  done (took 2.905013696 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097160428 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084065288 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14240308 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080642531 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085665733 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071999561 seconds)
  done (took 1.989304478 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093415254 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101894016 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067672453 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070261263 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077267844 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071291716 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070774152 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070925584 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079217204 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077028688 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070565554 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077388653 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076723791 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076554674 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074362032 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074478396 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068686567 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06893065 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065521413 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082358119 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069188007 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077347036 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069011516 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070361357 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071272788 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078357614 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078936571 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07703386 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07084675 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079093044 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076431603 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07071248 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079154081 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076979285 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069510135 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078727547 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070681495 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084185306 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076270595 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078082267 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069257715 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076642991 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078788174 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074973722 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079433935 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070971657 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075349079 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070703508 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070632034 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086716525 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07603094 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078063322 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078741214 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079082917 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078568219 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086392159 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076489113 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077981001 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075772867 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07513716 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076397288 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074525763 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076677782 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076177766 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076470696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077961177 seconds)
  done (took 6.438240397 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106772591 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068459287 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071951198 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077322657 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078344216 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071167256 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070898231 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070942404 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071209559 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068157052 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109670765 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071764104 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07850398 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078685562 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071472368 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071243958 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071425121 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078731555 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068167078 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087207616 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071514653 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078460355 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078344151 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078488321 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076856104 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076600739 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071439568 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071250344 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070696059 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071438369 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075662327 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070911431 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078453932 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067532609 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078221805 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070989581 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070515494 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07508884 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070555584 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076131331 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077002585 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083243896 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070108444 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07015702 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07518436 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06836537 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068840238 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06532252 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068850413 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065927214 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076539435 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076554719 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076710458 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077886692 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070730308 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070834573 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070532151 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070575692 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070637709 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076028588 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077984935 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070615534 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086496411 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070541628 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070573197 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078177784 seconds)
  done (took 6.368609077 seconds)
done (took 132.43471728 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186623844 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.162518681 seconds)
  done (took 1.765437278 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069727238 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100339789 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078115996 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131111329 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065155626 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098731396 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097709796 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077012672 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.064894539 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.064881876 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065280347 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067248874 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129696436 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065055586 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.064677783 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067191526 seconds)
  done (took 2.741475368 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101037801 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.168242491 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102031845 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063704741 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098108179 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071633861 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064085877 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073649522 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070349867 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.063828001 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071510278 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069436082 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.063966613 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069103556 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069297712 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.070968732 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063600861 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071381568 seconds)
  done (took 2.85972619 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101443275 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093855988 seconds)
  done (took 1.631612513 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158749438 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10459452 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142859263 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347036041 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162753007 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.14659226 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.141629122 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141779074 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121948953 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13725093 seconds)
  done (took 3.035831917 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101198797 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155969797 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.263985449 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116240666 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071557343 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092157606 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11655581 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076874981 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078688287 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078462949 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079012622 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074405435 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097772819 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072448463 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073137277 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074762062 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103449902 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072329726 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07441543 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077825099 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102475666 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066594105 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075010915 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074250366 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07878311 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078686038 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066903825 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066668737 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077734416 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075882935 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078321697 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09491899 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077636301 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104936638 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069492526 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105213105 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075279524 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072478801 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073377106 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073777371 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077947984 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076845708 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071698189 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07490724 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064377862 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074902815 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064460401 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065012033 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077493236 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065694025 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076267905 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075138825 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103982441 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06770454 seconds)
  done (took 6.03879752 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104516634 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104538576 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069954424 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111526816 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101582247 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070802766 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101289052 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094113673 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102830041 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069194339 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067253507 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069447282 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080062183 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080843337 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11340105 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104837315 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072632179 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06972773 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104714508 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103233343 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067100865 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095922828 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089885705 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101906744 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06606379 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069178689 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066878257 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069445836 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075295938 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078261021 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068408063 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080967475 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086872841 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076656298 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066995459 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069157682 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069091332 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081638752 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079146966 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078013726 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075752104 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066498435 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066587336 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068075495 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069351601 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066947517 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079551948 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081026182 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079327118 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070262562 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070892755 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068787291 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070083638 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08048301 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078716321 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082112794 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080308947 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069812929 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069084163 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073540917 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0816199 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080108159 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079000631 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071384346 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080396625 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069533308 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081204498 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084556909 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069264814 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071013124 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069290257 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069061031 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069794915 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077687473 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077130362 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068609284 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069360656 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069085167 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079738773 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077709265 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06835695 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077777361 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068209439 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069218422 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070348492 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070075276 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078585458 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080729134 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070734541 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069126893 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070609054 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070130258 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068111432 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078161765 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080837189 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080113678 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079466608 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070499573 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080658941 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079393705 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071289899 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080448715 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069466981 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071106776 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069604095 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078305724 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076641566 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.207674011 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069486724 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067756057 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078014161 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078874255 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068015708 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077334269 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079160923 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078628825 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067879663 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080201972 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068016621 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078028183 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069467005 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077999726 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068278129 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078340986 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067236865 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067541484 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067671869 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077831168 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071767164 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066850279 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068744792 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068864561 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080254059 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083077343 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070496534 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077945789 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076890212 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069997487 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079126766 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070396538 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081479325 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071351981 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071270377 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069138175 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083760291 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069665493 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070114471 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070558317 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082891509 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070211586 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081424774 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078538311 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069554538 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084685245 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081314063 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078847425 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082233789 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071737947 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069563942 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069636911 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070333211 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0797651 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081125496 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071106724 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069700972 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078994188 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081778251 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068462947 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079442652 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079436607 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080201589 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068917067 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069650465 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080966096 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078575991 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076245534 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076779643 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076734125 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067523054 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075824839 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076695606 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067475657 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081782734 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066927749 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081047786 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07709268 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075092673 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077464814 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078670701 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078371489 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078629014 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081713533 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066737296 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067194539 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07761887 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067552703 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067971007 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076110598 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068290504 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070142919 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085157152 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067675671 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078317458 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066897818 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077707803 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066151529 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069249529 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081871992 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067744196 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068958183 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07778633 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06888388 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075692021 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079271913 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07672871 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067148345 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06914751 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208776148 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077561797 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06766336 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067863863 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070250304 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077510161 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076231799 seconds)
  done (took 18.706300845 seconds)
done (took 38.221877668 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212985232 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15050593 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180769651 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116559581 seconds)
  done (took 2.192889252 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119293399 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104452896 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094953909 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066678206 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10157234 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066401128 seconds)
  done (took 2.018554904 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311475132 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207209336 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.185077763 seconds)
  done (took 2.170094082 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203327116 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186936564 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41724579 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.260478751 seconds)
  done (took 2.647336351 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144584643 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090603243 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068321906 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085084562 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135078341 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159659012 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098014959 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123091691 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077247103 seconds)
  done (took 2.501761639 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146786823 seconds)
done (took 13.142408219 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.217502216 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.177645098 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105286887 seconds)
    (4/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111023512 seconds)
    (5/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.083113408 seconds)
    (6/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088452738 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.125125911 seconds)
    (8/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18237574 seconds)
    (9/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076079636 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112722973 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074502942 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.203004186 seconds)
    (13/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176411517 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081474701 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.135565822 seconds)
    (16/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.22972222 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.221442778 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078946018 seconds)
    (19/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.0752571 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074881954 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.227702911 seconds)
    (22/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.138635964 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143823706 seconds)
    (24/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.219047148 seconds)
    (25/309) benchmarking ("sort", Float32, false)...
    done (took 0.133722549 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071978024 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138885245 seconds)
    (28/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053022295 seconds)
    (29/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.21362803 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076658538 seconds)
    (31/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.153937924 seconds)
    (32/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072752207 seconds)
    (33/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.196903643 seconds)
    (34/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075404738 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104449383 seconds)
    (36/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100322473 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09139522 seconds)
    (38/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072197647 seconds)
    (39/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071880827 seconds)
    (40/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077877745 seconds)
    (41/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066432012 seconds)
    (42/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073976116 seconds)
    (43/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15627051 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070626599 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.051998059 seconds)
    (46/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.172557898 seconds)
    (47/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074443478 seconds)
    (48/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095064988 seconds)
    (49/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.164646618 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.133621155 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051446634 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090689402 seconds)
    (53/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10101322 seconds)
    (54/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062209579 seconds)
    (55/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.21304686 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074619669 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087273924 seconds)
    (58/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070229541 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091172246 seconds)
    (60/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067515697 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139639427 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.215650676 seconds)
    (63/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.194355703 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076933248 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069088549 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09000293 seconds)
    (67/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.158580218 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.208966551 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.064981516 seconds)
    (70/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08107545 seconds)
    (71/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.144769425 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075555723 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092994856 seconds)
    (74/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.120619638 seconds)
    (75/309) benchmarking ("sort", Int8, false)...
    done (took 0.144678459 seconds)
    (76/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121448156 seconds)
    (77/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.097240897 seconds)
    (78/309) benchmarking ("sort", Float64, false)...
    done (took 0.129547834 seconds)
    (79/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116261475 seconds)
    (80/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109854113 seconds)
    (81/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.153022506 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065173652 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065894775 seconds)
    (84/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072120719 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073322034 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196123701 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.065520395 seconds)
    (88/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050923129 seconds)
    (89/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.110551437 seconds)
    (90/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081126592 seconds)
    (91/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072694363 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097096478 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108851062 seconds)
    (94/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.154111806 seconds)
    (95/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.116893883 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091287378 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090238271 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050476732 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.18306049 seconds)
    (100/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074290193 seconds)
    (101/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076839391 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066295698 seconds)
    (103/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075765978 seconds)
    (104/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.112329597 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107201257 seconds)
    (106/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052438077 seconds)
    (107/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074988188 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073845732 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05318401 seconds)
    (110/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075962367 seconds)
    (111/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154950025 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088504099 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091690403 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064677581 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064551671 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140196534 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086806196 seconds)
    (118/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068149302 seconds)
    (119/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074776562 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06478188 seconds)
    (121/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.205132502 seconds)
    (122/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106258787 seconds)
    (123/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187094941 seconds)
    (124/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107638813 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.136579554 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073037276 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137715794 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084997517 seconds)
    (129/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071555364 seconds)
    (130/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.177831209 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070500411 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07088327 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086092931 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141244287 seconds)
    (135/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050734528 seconds)
    (136/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098647615 seconds)
    (137/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.193918366 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183284413 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07260359 seconds)
    (140/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073470581 seconds)
    (141/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063034838 seconds)
    (142/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.195563769 seconds)
    (143/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069749772 seconds)
    (144/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181493419 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066496619 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074161698 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135546732 seconds)
    (148/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073962406 seconds)
    (149/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067505024 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099789812 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052486151 seconds)
    (152/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065235406 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074696594 seconds)
    (154/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090942347 seconds)
    (155/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076835871 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.1928505 seconds)
    (157/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079948941 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065076612 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17016929 seconds)
    (160/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072014268 seconds)
    (161/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.0761219 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.383901785 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067028232 seconds)
    (164/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063105864 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.049482196 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063949719 seconds)
    (167/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072348437 seconds)
    (168/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080907305 seconds)
    (169/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050633571 seconds)
    (170/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.050304802 seconds)
    (171/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.064590264 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183430761 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072218843 seconds)
    (174/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052577284 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06571572 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.181599159 seconds)
    (177/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073075292 seconds)
    (178/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065877118 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071708524 seconds)
    (180/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070610684 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074496027 seconds)
    (182/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070996809 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049932309 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050044533 seconds)
    (185/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050716043 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065350285 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110045899 seconds)
    (188/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051020463 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067464267 seconds)
    (190/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051205281 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.049868431 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091336696 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.202974729 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108353875 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090079953 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085820305 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.291864281 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051167434 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099958073 seconds)
    (200/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06186081 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063794392 seconds)
    (202/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061187945 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.075765813 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051666264 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087933459 seconds)
    (206/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052214286 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090516191 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06514717 seconds)
    (209/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154032462 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087926175 seconds)
    (211/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08645977 seconds)
    (212/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066665156 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074699786 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07284582 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07050608 seconds)
    (216/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089660865 seconds)
    (217/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060998092 seconds)
    (218/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050102991 seconds)
    (219/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065386942 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.07956177 seconds)
    (221/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149338104 seconds)
    (222/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051380336 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.143882772 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07019001 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181949059 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064598185 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063161746 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064521452 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09297486 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123425346 seconds)
    (231/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070249814 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134862654 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067600049 seconds)
    (234/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067496606 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091623683 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.049893409 seconds)
    (237/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051005856 seconds)
    (238/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050870216 seconds)
    (239/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.04983298 seconds)
    (240/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062976062 seconds)
    (241/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068885223 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051003736 seconds)
    (243/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061271588 seconds)
    (244/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05076167 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.15296057 seconds)
    (246/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.049929718 seconds)
    (247/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066950798 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052355998 seconds)
    (249/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073368044 seconds)
    (250/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07279403 seconds)
    (251/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065447696 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050054459 seconds)
    (253/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072774892 seconds)
    (254/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072574311 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064144001 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064405295 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064284832 seconds)
    (258/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099794251 seconds)
    (259/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.070618593 seconds)
    (260/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088390488 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07156295 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052153179 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064802328 seconds)
    (264/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077767349 seconds)
    (265/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050291626 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088582666 seconds)
    (267/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.0506215 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.050697866 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072375782 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143169311 seconds)
    (271/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.060700898 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088172892 seconds)
    (273/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068702282 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064387299 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109552834 seconds)
    (276/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.0648686 seconds)
    (277/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070331589 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064122581 seconds)
    (279/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.050520931 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067347455 seconds)
    (281/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053006271 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050526321 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072002601 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063786409 seconds)
    (285/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063817304 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063156347 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.049896241 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062829662 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08890613 seconds)
    (290/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066160104 seconds)
    (291/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050092738 seconds)
    (292/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064134771 seconds)
    (293/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.050945808 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071672248 seconds)
    (295/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.049916872 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065151685 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063465959 seconds)
    (298/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051168749 seconds)
    (299/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05112431 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070248418 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087105291 seconds)
    (302/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051160662 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070562486 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070308714 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064139632 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.050825584 seconds)
    (307/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06790695 seconds)
    (308/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051241011 seconds)
    (309/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.049670648 seconds)
  done (took 30.866351263 seconds)
done (took 32.340616125 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085652301 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095508526 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075230277 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091746119 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079306397 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.074859115 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071508296 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076972376 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078280824 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080617464 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076534638 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053311427 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072225465 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07284535 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073508491 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089712731 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077309965 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071687063 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071932256 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063453767 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071527703 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064447532 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066464445 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.0534123 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077224691 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070680472 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07064597 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07359058 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064387505 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064305068 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067884739 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071975805 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064522834 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076922287 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070982094 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071822825 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073258053 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075722698 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066268817 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064604608 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07324988 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064025275 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071789042 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073173426 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070945054 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070402965 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071716611 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07639913 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090289926 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066026688 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073788271 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074504231 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074093803 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072019723 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068947517 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071610619 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069780278 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08986557 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071839632 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066620123 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073183271 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073388665 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069850975 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071442948 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071621511 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073988677 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074570586 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069895535 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073155096 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070202266 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06348545 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071255609 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068063368 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063712953 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07436559 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076051256 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062952565 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070485836 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071432028 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069376301 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063162902 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065361288 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065865364 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07057981 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065861762 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.052904695 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06798175 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070902444 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06316096 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07192499 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070776996 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071386398 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066265121 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074675132 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063732505 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069919073 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064269538 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064069604 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065851065 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068438664 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063930896 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065753319 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073203757 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065280446 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070795107 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077843763 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.0638692 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070408261 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062657814 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06368814 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079053103 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074367213 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064229958 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065802208 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063633546 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071406999 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064077918 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064743767 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063816124 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064487856 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07024312 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065477346 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068128429 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07415461 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080608548 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066591751 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070463202 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068945449 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066494975 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072541213 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066564249 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066265865 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06875307 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063184852 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066945483 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063937341 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071798859 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066149528 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.204962785 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06640345 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073469351 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070756666 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071311295 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07043277 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064691285 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060293052 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069016094 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068773331 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06815596 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067028992 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068637888 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067931689 seconds)
done (took 12.38279514 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068149553 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141672843 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100614451 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098815082 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087312859 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066961432 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076155041 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100970705 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066680886 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100345058 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086373907 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084500235 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112711273 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063443386 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064801447 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069830973 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068396462 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082290078 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101536393 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086470061 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.113870113 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.0638409 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091079569 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088084173 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087255845 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092877007 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067723536 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068843433 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06827121 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100830346 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08680464 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068775528 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065027709 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096630787 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092630941 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083187115 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064922982 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082021093 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065294374 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064602635 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066964013 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097867547 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079538029 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079304468 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068863736 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069463689 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067744157 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084412857 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089577688 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078237873 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084547017 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100282734 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067608983 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064031189 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06306199 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084355262 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063479429 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067296715 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064348878 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066672335 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064404715 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068264762 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079008364 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078918589 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068875379 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078076416 seconds)
  done (took 6.801828867 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085211539 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092818199 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083883521 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085091286 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064936782 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065888212 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066029592 seconds)
  done (took 2.097046715 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068990826 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090353069 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090906079 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091597083 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087156649 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089980841 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07734894 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067679845 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09003576 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069227558 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089291916 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103175335 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071458039 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076033334 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093044953 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067719054 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092845676 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068065481 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071232887 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092737115 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070907725 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097804869 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070735695 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067568466 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08210612 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067912086 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116052826 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071670273 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06959894 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070560338 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065687797 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109234086 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081834025 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076228174 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06755165 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082409469 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082638255 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066077649 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083981112 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07676134 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081920343 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067805879 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068790799 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06499471 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070399032 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076613218 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06673297 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066410462 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068310043 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08497775 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06598236 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078882463 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068802545 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070742667 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066807487 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072046303 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075077808 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066055091 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085364485 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066626555 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082184008 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081649843 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079370602 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081741957 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067818797 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079785154 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079362643 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068316769 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067114855 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068879584 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081186538 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063624793 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066544648 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076154231 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067454312 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08788171 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088322822 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067101681 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083633697 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066309339 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066314448 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065468234 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087831071 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070665112 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064985358 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06908637 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068320562 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063513819 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063775312 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068654055 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063403345 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.066656433 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068177116 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067887708 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067594189 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081561797 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068139361 seconds)
  done (took 8.876611331 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069594924 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067576861 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068773288 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066369732 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066017759 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067154474 seconds)
  done (took 1.984676232 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09530967 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068853305 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079842999 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070742858 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102742525 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085635908 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086527891 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076313472 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082308237 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076806388 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085061025 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087330389 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09093441 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071075929 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085557059 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070143684 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085924119 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074046172 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076482032 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072032514 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084840721 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070997841 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071496544 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080300728 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074604449 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070185718 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065967395 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.076913927 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076697415 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076913763 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070916432 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074542828 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069028345 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07640982 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085015886 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.06919835 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07042453 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076009786 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070671582 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073667939 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086504435 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071820951 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072630744 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076039465 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076739328 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.068757133 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075336791 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073757659 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085034449 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075799978 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075517384 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069935774 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074194628 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07565206 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069043123 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076248867 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075313052 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085076769 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070466814 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.068753964 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067105303 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074146049 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076312498 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074012746 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077037906 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076026069 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.068994834 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072422605 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071352165 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070031764 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075738616 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067424199 seconds)
  done (took 7.033522887 seconds)
done (took 28.335240277 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540679182 seconds)
  done (took 2.074115303 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.608686236 seconds)
  done (took 2.167210452 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.240984245 seconds)
  done (took 8.808875392 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.397967169 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.488849555 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.712445561 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129957604 seconds)
  done (took 3.336002004 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.706766338 seconds)
  done (took 2.282125516 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215761492 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.199727368 seconds)
  done (took 1.996764913 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376019843 seconds)
  done (took 1.936309921 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.140222324 seconds)
  done (took 2.704469739 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.258603226 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17275576 seconds)
  done (took 2.002181091 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.48530256 seconds)
  done (took 2.053379988 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.821409285 seconds)
  done (took 6.385731068 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213784752 seconds)
  done (took 1.82768309 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245666542 seconds)
  done (took 1.810468522 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.715064713 seconds)
  done (took 3.280118177 seconds)
done (took 44.229400092 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082414904 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080085977 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080780047 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078185434 seconds)
  done (took 1.86956913 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079080398 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072950111 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076270682 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072003862 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076650598 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072283109 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073687624 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076114444 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071727969 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07278225 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071773631 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071704055 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074294261 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073299403 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070601463 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074371566 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075414899 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071559509 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074695071 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071832873 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.06990893 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074293885 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074213122 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071365694 seconds)
  done (took 3.332971741 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080241796 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073882277 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075525806 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07144652 seconds)
  done (took 1.878769191 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079811622 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096217473 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089669003 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077356933 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092139597 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08572297 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068275243 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068561249 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069862096 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076615467 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067043518 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095103192 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087490567 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077032082 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079013299 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064686383 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067227883 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086200832 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076943837 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077546132 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069346886 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076893599 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067077698 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087671391 seconds)
  done (took 3.456222252 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089415236 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106300205 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081976469 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08928131 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090957367 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064593593 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088031521 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090128428 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126086007 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064876376 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069475013 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064565397 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071937383 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064347978 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079942587 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106039682 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109846658 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068064184 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095980626 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064574206 seconds)
  done (took 3.264433805 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073674216 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069705599 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066930996 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067796617 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076349079 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072160989 seconds)
  done (took 2.011663226 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069565556 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068782375 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067096482 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065889881 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07105811 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066410857 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065685666 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06678435 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066439439 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066358662 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065565642 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064824762 seconds)
  done (took 2.381824749 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.207028346 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.0678515 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069178639 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065298148 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069131218 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065672295 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080322603 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066484438 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093502986 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06801502 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068086886 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069795173 seconds)
  done (took 2.570661034 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207626259 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075060796 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236577042 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148139347 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109486661 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113885836 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110754618 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112981621 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139787026 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098951489 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167846317 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166276304 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109690139 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138235897 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090519799 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103664245 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157245995 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16348926 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104108904 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164812299 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143394612 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124806615 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148815987 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100711541 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104748539 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120272465 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070096239 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078985851 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167533349 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131391383 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142505355 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110319619 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091258918 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17522781 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170478268 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13976847 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146409988 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084112332 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104753 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136369463 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200147781 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087958009 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161032511 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10803776 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216927511 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133619114 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120751119 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120946768 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103779033 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088688185 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143606182 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181949561 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136744955 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08865512 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122446066 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112561276 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113127103 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112317867 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181026334 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162446942 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127378701 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070951755 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107276619 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15323617 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132613058 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108103668 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12492818 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091079507 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134603457 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155305598 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119145572 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143345353 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115427906 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087842913 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118397094 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138676105 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126012927 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159600116 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12298852 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072461594 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122730434 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100954164 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079618422 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145282554 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074729127 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175219405 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098114365 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108161923 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125151317 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109164898 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112668574 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157655041 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142973474 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101550671 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064315957 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245575698 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120747159 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144897108 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086778871 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108591458 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115902671 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077076645 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135034422 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075241911 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121992864 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079077819 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128690823 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129702464 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076016878 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122506196 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104580843 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102111489 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133689603 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162701321 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089843795 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084234108 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171861695 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12463578 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10479376 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142984074 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155373065 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100741555 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099759176 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148190339 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17718958 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088313978 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162141856 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104898536 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082537485 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086912524 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122038992 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110911479 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122585885 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080919365 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11657194 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166326016 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073937992 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094231497 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132275813 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077797927 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079488038 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103957869 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103736838 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094831691 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099085549 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10212647 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134385802 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122086174 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10393021 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121845211 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096653945 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311531967 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087589052 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101385555 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103941071 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069405636 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135123472 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157248832 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078727012 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161978505 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12233913 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11562141 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118727073 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083180239 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140675458 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078249587 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069662473 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143585062 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110266573 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109205516 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149985686 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115287346 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124971041 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117444073 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13324405 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130133042 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130108363 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104754399 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087715711 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111167274 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124724787 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072132882 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089183003 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07891839 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102994835 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094768564 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081655716 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139281051 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122339214 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107977784 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111083304 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095642423 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146090073 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075029346 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126764416 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11797961 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094445463 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151363668 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15178062 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130665516 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098535535 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135139344 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069126508 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072891714 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088186085 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120928071 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081145147 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081842768 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255258968 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148371037 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128364975 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135654409 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121776104 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119041078 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15561718 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069897684 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117865665 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146445851 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121027244 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104069327 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089329112 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098248006 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143621293 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108149806 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184968171 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119360387 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127157701 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154498332 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100275053 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07915574 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101956498 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134145509 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102312509 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142401595 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099165242 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087144875 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108142758 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073272371 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097587243 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125340772 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117456078 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133135941 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114369178 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130806115 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076518482 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113728219 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119715756 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120210627 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.0632941 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119305573 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159720582 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093356263 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117711689 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15247001 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078402725 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133568914 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173067426 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142167575 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083869271 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249134936 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120405091 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12820999 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119799377 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139782816 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105960932 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136551528 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110282029 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086347757 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086745082 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097222549 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10410288 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094534596 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105890797 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113090638 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096188538 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133397045 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104498086 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110316145 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119291317 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098874013 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089797267 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096958934 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175424402 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116895587 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169123355 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099430103 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143697359 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161464155 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074492787 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078645881 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076959466 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138501724 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083323953 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128091665 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.105779686 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119413298 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126274658 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144852514 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097181504 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069362614 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108866789 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132217646 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123996869 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100465148 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104570601 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162314882 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100014705 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078554994 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112545169 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115174938 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102462133 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170716397 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060868921 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103842542 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075197497 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07923854 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126116576 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291336822 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080176987 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102000808 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118921887 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114040519 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126890233 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100253287 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107855788 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125605054 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147302852 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126904277 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088654527 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110876187 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128467917 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155293361 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103536422 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095314696 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17137848 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152666746 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158437141 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08620222 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11403473 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11347547 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110045147 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137122975 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082554625 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161784459 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081057745 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134348292 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102673027 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08928189 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127633653 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.106906396 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086858144 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14594087 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116389864 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082078678 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076500863 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11560857 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118258935 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104783649 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074104057 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13714189 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07252994 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131270074 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158152451 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07998724 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106950215 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095750509 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078395824 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104294436 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100182664 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085732336 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.236252031 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174297842 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08830219 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149682422 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133338861 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112721763 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137109733 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101846621 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63925972 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078092923 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151704848 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115447089 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172813206 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099294536 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11699516 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109484436 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121615563 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143553479 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103111257 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179839871 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130690993 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114049626 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07957756 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101821554 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101873316 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087123603 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106452893 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113020177 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113862998 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092086743 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114432271 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123024664 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081427683 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094856108 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154639206 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114959087 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141509482 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138768458 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08450325 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116548748 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135995506 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079167428 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118898708 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15006079 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105013877 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098193652 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079964749 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099907096 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158927016 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.0735356 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157421172 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259660567 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110371744 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114280834 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111085505 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129306101 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104896727 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119457757 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091395742 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109067813 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112692229 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081614313 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075597789 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10414166 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110629417 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097570075 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097419685 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096704977 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150359564 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07153169 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097211465 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112578107 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141684667 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172444151 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087357848 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08183574 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116812646 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112953872 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111743615 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120707372 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078576578 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08100917 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079893124 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077515924 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107709662 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111880074 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113310423 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109939771 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161747191 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082291329 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230961808 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094665658 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104449634 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069216864 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076881782 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094893058 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097032013 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105374882 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108539916 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157153347 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094394674 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088900654 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090465817 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073238605 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082086574 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127684399 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108213978 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117785203 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097873806 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062010335 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106669629 seconds)
  done (took 58.563273543 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122279306 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084429457 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097310064 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143475885 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121067471 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200936823 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.152250645 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18711283 seconds)
  done (took 2.802561965 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07242247 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096314425 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104398842 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085779451 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065923441 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067887787 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230474112 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080259849 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065472156 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097623215 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078004165 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067828979 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.433754809 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067417672 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068826627 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061017241 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066524017 seconds)
  done (took 3.477430446 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.392452067 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610007003 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.380503831 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072740665 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.42544973 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.0909243 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.12033086 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130353329 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072891369 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536129033 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.697988875 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123931121 seconds)
  done (took 18.319583465 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078303194 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071414701 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086192435 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086131272 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074700164 seconds)
  done (took 2.064614195 seconds)
done (took 107.615128607 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083825826 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.610573779 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054434481 seconds)
  done (took 2.365676439 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08620368 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087915503 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087353314 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08580545 seconds)
  done (took 2.031487734 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077175441 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078746789 seconds)
  done (took 1.83298722 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23580338 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16992174 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098352283 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085205251 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081903286 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082154449 seconds)
  done (took 1.932840563 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074693153 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077774512 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074829296 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079191192 seconds)
  done (took 1.987288376 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079946411 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054381917 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056304755 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059680527 seconds)
  done (took 1.926683279 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089171254 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081904617 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081365494 seconds)
  done (took 1.928648056 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104652257 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087906503 seconds)
  done (took 1.868980853 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084397808 seconds)
  done (took 1.762356338 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103024397 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105012576 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135767275 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114472127 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144330806 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112231429 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085782502 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08754084 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078441697 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087550755 seconds)
  done (took 2.730162455 seconds)
done (took 22.62219556 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081492819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368903778 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363802258 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093315464 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.698886609 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359674122 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.973615079 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096852551 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119215783 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070017421 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087571217 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650221077 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.995847675 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32979106 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.978995021 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320793486 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6509285 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070548609 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069579944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069002679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.954310694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069236008 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06895936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069740039 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648532526 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370687828 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067556515 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.314466307 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066953987 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07167678 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356370175 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070633123 seconds)
  done (took 16.235799414 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073656321 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124355325 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075354356 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087965053 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072681016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071786362 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073091106 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071741124 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125231899 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070266005 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088540481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069707706 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07408979 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070611771 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088528121 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085772424 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069385699 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068730678 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067039858 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067106753 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085641037 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066657706 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067312731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069138279 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069041192 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079197499 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067272922 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067225489 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067144926 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069063953 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070147397 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067413063 seconds)
  done (took 4.130346502 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121653504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129223641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076694929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10760173 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117339888 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072657045 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151034139 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096675561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132927853 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06990548 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086996434 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070063038 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105206283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070449203 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08817917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067476449 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068130443 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067844558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067446374 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067773163 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086554766 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067328615 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067827424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068521188 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067394664 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081285611 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068729231 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068055608 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067538376 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069225143 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071007002 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068121138 seconds)
  done (took 4.381890323 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074896311 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077833764 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086556499 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085427594 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07061057 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071859809 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072368928 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069355311 seconds)
  done (took 2.298058641 seconds)
done (took 28.725205937 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081139106 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071182684 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074007145 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081483017 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072647184 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077584037 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066379303 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074516976 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071764565 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072447348 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074227981 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066113567 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070273772 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066079268 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073074054 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06648571 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07805896 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071016084 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078035786 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078044581 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068892714 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072489876 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074187925 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078409447 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078569098 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078734354 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076447123 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071995614 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068272089 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070256697 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077000964 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083326463 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068235799 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07865353 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06691299 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066726487 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07080078 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066791411 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078830824 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076017518 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069193925 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076161434 seconds)
  done (took 4.746613913 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090786941 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09655293 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088555915 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064035145 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069038191 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06703907 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087953084 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059216658 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058378787 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087289322 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056250129 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059751401 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062092015 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052835165 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061686854 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055664122 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061249079 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054960583 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059579479 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058953912 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088477519 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053408723 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077653041 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063107174 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055029242 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060565586 seconds)
  done (took 3.437922236 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076822684 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089877131 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092125034 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131295335 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105112829 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078917279 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080207955 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09491924 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088166196 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066725162 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070700181 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092827015 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090949425 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073104149 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067109139 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085899851 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083677994 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068427968 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073127911 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095295236 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086682043 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086269564 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098298294 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082653236 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066543904 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06924725 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070555452 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081104724 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072046844 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076247406 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070927201 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070746243 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068813076 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078694662 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.081994689 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069320029 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092248247 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077123636 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078012873 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067584993 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069814924 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067835038 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092012909 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132294989 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067508816 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072932682 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075295467 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076036475 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067034788 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087469906 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078347341 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066708318 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070226403 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066314636 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067504244 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080539861 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068853448 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068436315 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075675642 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070145907 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091566353 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071469503 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085781993 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06661789 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074440969 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066507335 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067977291 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065299438 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094751917 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068325417 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110840656 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067297592 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067678269 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075403046 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074587233 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073011612 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066991749 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082354741 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077645402 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071864147 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07742654 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071026366 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069088544 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089546896 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068684049 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067630218 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067570634 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072177834 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068738188 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06908595 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079645507 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066574216 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068558451 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082838579 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065805397 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067372994 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071915937 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071034836 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065775761 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077669133 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070637512 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067021956 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075974239 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066100166 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069081471 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078794883 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072757034 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064988607 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070376315 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072132713 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066791496 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067588857 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06939991 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068313459 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075211642 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072852806 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070559511 seconds)
  done (took 10.618913212 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165386251 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155842494 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069350484 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148322556 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075451128 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078108441 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149313393 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094162775 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067300356 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068313919 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068260612 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109159709 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105257355 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115007216 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077672186 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066847382 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08327396 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113609898 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151487353 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145154892 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084072226 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075710542 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069012144 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068281863 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06945331 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077490785 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084425504 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07594373 seconds)
  done (took 4.44239184 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081917174 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099595373 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073896373 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090668466 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090180158 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066515426 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069098551 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068738653 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080811635 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077227936 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066547393 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072394525 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074038803 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069987177 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067865855 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074389084 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073728899 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068698944 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07067492 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072523252 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077228414 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090834474 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070357583 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066182242 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071685632 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066044108 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06217131 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082990603 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067094392 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09342997 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06467527 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074194207 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081181981 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067529779 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066465085 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066917962 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066660454 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066345901 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068006546 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065132347 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065097666 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056226388 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065776051 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077814663 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072953535 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055218401 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071561536 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071766683 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071575421 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064309531 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069060057 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069482113 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.06987961 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073737081 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071452175 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07167822 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067500341 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073031079 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075344205 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066301259 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063755267 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06552193 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071157103 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064086609 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075143859 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07092954 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065465266 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066145135 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068225893 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073290841 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066631719 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069549528 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064782325 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068630118 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070780641 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068274818 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067294198 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065308274 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066368716 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066974771 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054004677 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066442883 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052167759 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069428331 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064305659 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06478846 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066299583 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071043617 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078149411 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06788503 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072204095 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067547139 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065376844 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.06954729 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059210262 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068989488 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081795512 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08108664 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066248969 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064804767 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080952112 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071323867 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065592034 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055009395 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073832525 seconds)
  done (took 9.10186972 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091766409 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069078529 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085157785 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092752426 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086579485 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074198522 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076780159 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068565742 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083353614 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073845376 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076462266 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068119469 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077378448 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07681262 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068893386 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077233177 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071694718 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08420376 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082251591 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068078806 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075301996 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079597991 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089918438 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081330998 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080411949 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081317633 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090039649 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071260213 seconds)
  done (took 3.937479509 seconds)
done (took 37.965203863 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.778114792 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.939471268 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.759168615 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.138106191 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.931219468 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.820702611 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.774764057 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.750868732 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.863062472 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.787354202 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.959541973 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.876780305 seconds)
done (took 65.082122852 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.790632517 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.90187565 seconds)
    (2/2) benchmarking "String"...
    done (took 2.027220803 seconds)
  done (took 5.621728016 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.075231675 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.380961744 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.999098976 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.752449342 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.758049464 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.094783259 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.561629153 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.283913947 seconds)
  done (took 30.526509642 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.92156618 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.990550417 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.439212861 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.487354189 seconds)
  done (took 15.585424805 seconds)
done (took 63.494982563 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.770814779 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.776995942 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.774871229 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.73279312 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.807093937 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.759835153 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.895722024 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.844305529 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.749177912 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.744704169 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.752345188 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.188222898 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.768987065 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.280132168 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.753026186 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.766017163 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.817181376 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.379208937 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.907627513 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.764965625 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.756028268 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.768584814 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.753175973 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.771075619 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.803145667 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.752273297 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.179256021 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.754392288 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.374290344 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.751652439 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.781189235 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.830083331 seconds)
  done (took 203.201191963 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.757631989 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.645870402 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.719282965 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.796865906 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.171309407 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.928946729 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.866532346 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.19180463 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.750602314 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.778671421 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.922787926 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.749435038 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.912763862 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.746006722 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.781340803 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.754536234 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.920792204 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.932498301 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.785335934 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.884294536 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.769187926 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.801617933 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.733806222 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.905691387 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.765160808 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.787478756 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.78240298 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.958922365 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.952902799 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.882187513 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.774461475 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.766822636 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.97529352 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.626373117 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.76147469 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.783063466 seconds)
  done (took 168.716036263 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.161209541 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.761133539 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.755655614 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.755951927 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.768465987 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.758307656 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.879287046 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.877115706 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.359838663 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.467748793 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.808516281 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.76292626 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.595761436 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.752612885 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.825806435 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.771916925 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.758874225 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.77338904 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.783992671 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.757196967 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.756756062 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.879294226 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.771772234 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.755278777 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.765126554 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.758180402 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.762300915 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.136740273 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.098060735 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.755160222 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.763758376 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.016309568 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.756598128 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.75655521 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.649650799 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.417996322 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.849159487 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.758485587 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.763196375 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.757620473 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.983292168 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.755863401 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.760436792 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.76155898 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.935016555 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.761561763 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.879261852 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.758671017 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.275651836 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.757582261 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.759452702 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.453581281 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.46415376 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.759407214 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.757746552 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.760961071 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.762244483 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.758579344 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.763822723 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.543228883 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.759454992 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.831200078 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.760686671 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.762269555 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.76444691 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.75777565 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.759673285 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.935553547 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76006051 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.787685034 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.817830527 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.898858414 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.881299561 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760887967 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.828551922 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.851291515 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.758053254 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.764230673 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.75896624 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.760944598 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.839136323 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.755016851 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.995749506 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76792693 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.761756339 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.812541344 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.831302395 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.758758093 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.660938285 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.761226106 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.760315933 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.08835587 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.828429774 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.757420166 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.761599286 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.759804595 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.921839189 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.883466939 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.547218681 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.764591492 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.482833331 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.764087618 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.945693315 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.762342241 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.957953324 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.763031579 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.844070955 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.764486177 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.763153616 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.763096538 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.799270979 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.763624038 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.823748793 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.763438066 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.139312535 seconds)
  done (took 401.097705871 seconds)
done (took 776.929151913 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.447772881 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.387133614 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.491748265 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.412561455 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.385870511 seconds)
  done (took 13.822589207 seconds)
done (took 15.525536318 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.851271638 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.860112905 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.787609639 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.853646562 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.783695693 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.854753813 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.838050498 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.788183417 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.820173725 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.78940502 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.822675712 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.788345675 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.778954386 seconds)
  done (took 25.317867971 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.00044008 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.013273409 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.837785426 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.999464436 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.812537791 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.993202992 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.932286761 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.923389938 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.927942551 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.781563774 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.780256349 seconds)
  done (took 22.702871216 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.00475013 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.008146895 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.848116743 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.010519121 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.817596286 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.010635312 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.931459753 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.925715015 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.91945873 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782860584 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.777101504 seconds)
  done (took 22.736870049 seconds)
done (took 72.461506597 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.774584646 seconds)
  done (took 3.472582075 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.799136337 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.954878972 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.779225003 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.782234435 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.77208048 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.776632134 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.777487906 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.77312105 seconds)
  done (took 16.115572338 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.77650438 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.774937641 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.771638892 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.7765302 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.776098222 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.781990449 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.773266117 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.774477658 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.776498321 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.772705969 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.776185172 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.777233416 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.773265611 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.773752789 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.77757424 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.773192289 seconds)
  done (took 30.107277523 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.782289703 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.772941719 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.776235069 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.776600041 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.775211295 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.778246637 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.775804465 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.775476452 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.774116637 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.77520529 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.775882374 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.778144655 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.777180039 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.776151697 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.777181406 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.777990081 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.775525147 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.779429516 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.781116508 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.777062045 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.778788223 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.776966179 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.782018888 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.776129616 seconds)
  done (took 44.359228714 seconds)
done (took 95.753510307 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.714635594 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.173791272 seconds)
  done (took 8.594241787 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.78071465 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.777924565 seconds)
  done (took 5.302963326 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.784930446 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.778592614 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.777636867 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.779371229 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.778290262 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.78172419 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.780874546 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.777580839 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.778658097 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.779490451 seconds)
  done (took 19.504728894 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.778983418 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.779639655 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.777182184 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.778841353 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.777970484 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.77705987 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.784979051 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.779265736 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.780853654 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.778975045 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.781940555 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.778642534 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.778580279 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.77802456 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.780195074 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.778253657 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.775577716 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.779609238 seconds)
  done (took 33.731560974 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.780564099 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.778798694 seconds)
  done (took 5.2661795 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.777718557 seconds)
    (2/7) benchmarking "second"...
    done (took 1.778170085 seconds)
    (3/7) benchmarking "month"...
    done (took 1.77919476 seconds)
    (4/7) benchmarking "year"...
    done (took 1.776042198 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.777421856 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.779156963 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.779696201 seconds)
  done (took 14.154598347 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.781575019 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.945069957 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.01521487 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.422071427 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.783828785 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.784529845 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.743326077 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.78695136 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.790743574 seconds)
  done (took 19.7619069 seconds)
done (took 108.023370044 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.606837676 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.774282979 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.118978975 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.8295133 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.789590408 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.116222797 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.803150945 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.083891746 seconds)
done (took 42.83192523 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.787327446 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.330727028 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.364591518 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.1945796 seconds)
  done (took 12.593531167 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.755769797 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.294340516 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.807793764 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.355559707 seconds)
  done (took 19.941834342 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.140313415 seconds)
    (2/2) benchmarking "read"...
    done (took 2.123349742 seconds)
  done (took 5.976311088 seconds)
done (took 47.00541172 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776669976 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.775278892 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.777028247 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.782166807 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.77871987 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.777342047 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.776430592 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.775448264 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.776910779 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.782990079 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.778245673 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.778405786 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776972416 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775428547 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782412604 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779438139 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.776230989 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775837457 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.77920981 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777884059 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780793338 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.776372688 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.775503398 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.775803676 seconds)
  done (took 44.372006915 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.778906648 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.781997148 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.779941852 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.779106032 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.778332035 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.783335117 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.783589356 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.777837689 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.780878589 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.779790013 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777118801 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.777090252 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.784890007 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.77681685 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77934994 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.777092247 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.779328015 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778282049 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783121253 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.776360321 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.779820073 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777102208 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.77720713 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785943443 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.777218942 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.77842552 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.779160774 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.777998343 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780769103 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.780162158 seconds)
  done (took 55.093332349 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.785512118 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.788193624 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.783819065 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.782287228 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.780786795 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.779494203 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.781875448 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.781116291 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.780190301 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.784230862 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.780787376 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.780451348 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.780349848 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.781328513 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.780935186 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.786479616 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.781028945 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.782152754 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.781679541 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.781078687 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.785743878 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.781995064 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.782219764 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.780716047 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.780846118 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.781953454 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.786179806 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.781726337 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.780994706 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.781892596 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.780804623 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.780890407 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.78404359 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.781677482 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.781159367 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.7803828 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.786986867 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.793564293 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.782947717 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.783654154 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.780479938 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.782268003 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.78130197 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.787150269 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.781686028 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.781500905 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.781921581 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.783153973 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.788388459 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.782560651 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.781558959 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.781683323 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.782136991 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.781263069 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.78326 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.781801083 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.782057343 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.781850803 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.781712478 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.782816059 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.783279223 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.783417488 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.783151686 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.782283394 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.782797465 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.78752013 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.781183333 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.782517163 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.782918396 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.782271724 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.783019158 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.784756378 seconds)
  done (took 130.063841091 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.781858644 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.78111376 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.779811326 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.782658557 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779969708 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.783430045 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.780008816 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782090771 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779184035 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.785060718 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784724205 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.780473627 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779800157 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.783950801 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783483653 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.787223514 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.784634093 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780709714 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.78305475 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.78315806 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786284443 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.780881928 seconds)
  done (took 40.922430458 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78510018 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784190882 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.781897322 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.785612767 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.780331212 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.784038395 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.783688151 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.783316667 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784775558 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782054724 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780975901 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784197291 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.78140399 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780803074 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785138538 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.781258561 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784787125 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781335852 seconds)
  done (took 33.80712942 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.781963044 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.784492716 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.785386096 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.781175547 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.782749158 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.784402023 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783235958 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.786355229 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.784380006 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.781770595 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.785189348 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785809409 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.787131118 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782635925 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785191524 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.782935433 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.784791354 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782770285 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792752601 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.783296502 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.783111831 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785881327 seconds)
  done (took 40.97028253 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787891356 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786316658 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.783589639 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.783358647 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.784083859 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.78580376 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.794658919 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.78373632 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.786494687 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.78727467 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782885681 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.789475326 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.783830728 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.784445688 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.783108291 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785462224 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.786389837 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.7862758 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786787637 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.784808391 seconds)
  done (took 37.429839077 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788075502 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787219101 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79149503 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788890943 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787088593 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.78768688 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787614793 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.790376615 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787215584 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.788268859 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.78874063 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.787499447 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787464268 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.792079055 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787989064 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787129747 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787273736 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.787056038 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.789758151 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789794486 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.7891442 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788912201 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.789062201 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.788610485 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.7913338 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788967961 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.789282522 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.789507875 seconds)
  done (took 51.798143885 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788822939 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.791583975 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.787032404 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.785098659 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.784370657 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.784611277 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.788417928 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.786001176 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.787597834 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.785949973 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.789195019 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.789014002 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.794504579 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.788983076 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.789556299 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.788879666 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790737506 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.785970466 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789491858 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786125051 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.789763129 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789604138 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.790284142 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.792098478 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787468098 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.789506776 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.788402154 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.789800799 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791275304 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.790099873 seconds)
  done (took 55.376210708 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.808926559 seconds)
    (2/2) benchmarking "in"...
    done (took 1.808077382 seconds)
  done (took 5.335368305 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.792026933 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790607955 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.78910966 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.788387041 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.788107967 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.791064779 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.794789032 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.787774789 seconds)
  done (took 16.039118207 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.789834543 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.790783886 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.791842102 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.792168834 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.791713926 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.790909705 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.795000856 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.792083015 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.797186469 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.790902295 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.797340978 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.800350609 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.793213037 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.791315621 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.795775776 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792018974 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.790411206 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.790222317 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.791057034 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.793631942 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.791276298 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793572711 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.793056042 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.788268926 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.793398547 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.808420235 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.794743227 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.79205196 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791609136 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.795011269 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.795840279 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.788992771 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.793821705 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.791179558 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.791489916 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.79361252 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.80096068 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792204297 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.796637024 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.792765232 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791652752 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.789588403 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.797279642 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.794060572 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793404658 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.793504374 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.792770169 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.79277259 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.790440463 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.795118763 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.797679513 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792160399 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.790408102 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.79674455 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.796016876 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.79925615 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.795210451 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.796308744 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.802729252 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.802204768 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.806289916 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.799839229 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794237915 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.793550682 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804412231 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.817588781 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.799945748 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.790704426 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.790677447 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.79628657 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.799978109 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806164079 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.804602649 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.795294637 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.795000877 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.794879282 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.794406684 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.794601751 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.800707558 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.798010293 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.795680518 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794592994 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803506597 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818959258 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.794492724 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.794679927 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.796742729 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.795411148 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.797115877 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804954389 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.795786305 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.796091477 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.795995027 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.794741595 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.797211885 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.796078372 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.793748004 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796016429 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.793336489 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.795984314 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.795445848 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.798366853 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.804422469 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796114127 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.795432738 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.801708594 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.795453436 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.795678971 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.802190599 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.796699767 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.796448038 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.795968255 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.80194054 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.793306346 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799537953 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.804474055 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.797861985 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.79761543 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.796491434 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.796527179 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806075891 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.823821681 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.796495196 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.797373515 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.801404019 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.808313383 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.796474788 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.799906005 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.79638105 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.793251577 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.794006208 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.797488008 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.797874217 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.798937756 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.796865897 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.798965703 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.796442813 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.796284798 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.797439129 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.799335354 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.799153444 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.798295137 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.802629067 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.799912108 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.798830447 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.799864931 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.804356026 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.799704551 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.799481449 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.801042786 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.79594625 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.799831021 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.799246183 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.799795778 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.797731768 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.798954748 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.796301923 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.798716474 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799790088 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.797784684 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.800463142 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.798460567 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803219937 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.799477613 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.802112252 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.797969207 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.796352905 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.798774145 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.797998877 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.797422982 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.798613436 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.797863164 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.802208045 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.805847855 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.798121214 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.800473988 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.801648604 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.800253962 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.799235113 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.799383619 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.802500611 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.80718175 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.799093969 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.805171736 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.799994061 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.800169692 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.804092542 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.799985726 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.800307208 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.799034133 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.803373305 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.807894194 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814227898 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809143674 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.800544178 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.803245987 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.800991425 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.804182829 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.802555762 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.800647372 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.800693449 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801466417 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.799932345 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80133056 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.802237224 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.800989363 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.799003619 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.801127817 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.805455879 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.801404299 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802154811 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.801768765 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.802486849 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.798392717 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.802865691 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801451292 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.801110063 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.798001884 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.799794212 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.801180451 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.800822714 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.802366434 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.807056269 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.798260228 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.802747292 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802841615 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.800961971 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.800226649 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.801957721 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804257015 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.801401575 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806456539 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.802297941 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.801424308 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.808527317 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.800885473 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.802062434 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.805234069 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.801820816 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.7986681 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.804409225 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.810315099 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.803063196 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.803157117 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.80332183 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.802412837 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802910805 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.808478761 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.799663962 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.802245412 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.802779229 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.804426507 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.801365387 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.804299692 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.804736196 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.804194948 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.805314208 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.803868728 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.80363977 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.804192131 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.803508823 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.803643405 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.803864316 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806938699 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.813929785 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.809767086 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.804423639 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.806812474 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.80466971 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.81028293 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.80515608 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.804872261 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.805105108 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815434129 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.812047696 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813114735 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.804541622 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.80443582 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809181337 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.804942347 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.809700346 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.804295967 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.804165687 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.804858297 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.803061314 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.801819334 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806438437 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.805473498 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.805580112 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.804233044 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.809787255 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.805193509 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.803931253 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.804526154 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.806016807 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.804680117 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.804540922 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.805663029 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.806707417 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805615195 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.803326023 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.805453448 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.810818219 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804493884 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.806401852 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.804252839 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.806056157 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.804591102 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.809331183 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.805336924 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.808996246 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.815204067 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.808635157 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.815987669 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.811050628 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.815053253 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.805976545 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.809452748 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.816476961 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.807949062 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.806093436 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.806234582 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.807131133 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811882741 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.806991508 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.809618559 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.811696387 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.806206476 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.806771447 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.806276821 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.80902581 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.805654159 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.806953113 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.813724564 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.807649664 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.811274763 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.811382732 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.804557379 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.807239996 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.80682951 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.807546362 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.811010888 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.808911504 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.808056121 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.807157607 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.80726412 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.806365263 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.808520726 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.808069076 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.805030266 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.807810392 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.814245042 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.809472046 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812166318 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.808174994 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.815154766 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.809317203 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.814596536 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.808651656 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.808726777 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.808584639 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.807593092 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.809891965 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.809212342 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.808972733 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.809050875 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.808837357 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.812924414 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.809934859 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.813712833 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.811039206 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.809497225 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.808020719 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.818190555 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836135954 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.810316822 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.814494087 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.805991 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.810322582 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.815188533 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.810638662 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.809253915 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.81095229 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820807903 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.817068062 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.810918745 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.809388878 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.809223921 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810017068 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.809394144 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.809710968 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.811722986 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.809413071 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.810471865 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.809841586 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.813014901 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.810502861 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.811673313 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.810629446 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.810063098 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.819263076 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.810982506 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.811855131 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810734769 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.810205362 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.810614671 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.811590119 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.810516104 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81213397 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.810970393 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.812700205 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.81706672 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.817976518 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.812493661 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.810551453 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.811933414 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.810924642 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.811678601 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812020226 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.811447236 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.811580571 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.81165227 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.811764471 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.811088104 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.810325266 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.811810667 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.812752261 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.811889975 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814645401 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.820286178 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.812468986 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.808979767 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.811457801 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812465098 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.812110161 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.812591188 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.817308343 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.815221292 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.82314305 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.819939968 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.816292775 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.813639227 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814638618 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.82064135 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.811274236 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.813007942 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.812461071 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.814839296 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.813943057 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.815652642 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812921038 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.817623771 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.813766255 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.81255727 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.820145119 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.815144177 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.813849123 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.817194304 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.816922797 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.813882008 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.809894816 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.812920156 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.812270756 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.820119136 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.815425348 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.813312895 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.814431131 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.812816354 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.815210648 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.820053398 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.814962344 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.814747467 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.810665543 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.814191709 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814929395 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814052834 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.810181924 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.812651235 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.813911037 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.820402046 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.822093054 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.811354367 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816692586 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.814694119 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.816148504 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816808915 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815030449 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.812743989 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.812988654 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.81525454 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.815351638 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.815004615 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.81724305 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.815470979 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.815578952 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.815304077 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.817512683 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.817972594 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.826500432 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.821734503 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.813890757 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.815011247 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.815264641 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.819910184 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816997996 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.81562697 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.81539347 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.816543653 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.815370524 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.81591553 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.816414016 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.818304996 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.83270443 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.815708852 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.815730231 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.815896869 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818608729 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.817050396 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.815140199 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.8158572 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.81758242 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.819956818 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.825576787 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.819032611 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.82267379 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816134908 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.817352315 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.821188014 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.820471303 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.828200456 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.820572115 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81759632 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.818316465 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.822715616 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.83678668 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.817423087 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.826493849 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.848412386 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.818642326 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.819050454 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.82127839 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816983773 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.81800131 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.819407649 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.819087585 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.818073758 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.817862393 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.817711238 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.819256748 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.824513669 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.819730414 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.82152645 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.816858449 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.817530879 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.819599788 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.815646707 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.819905534 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.816912896 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.819271504 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.818633065 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.819012113 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.81865862 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.831493418 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.828699098 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.818259844 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.819512491 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.816651812 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.822171577 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.820956344 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.830792131 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.826507799 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.81922486 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.819856469 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.819817019 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.819638663 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.816013304 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.819490093 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.820606066 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818475014 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.816469718 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.831742233 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.829630161 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.824087737 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.820172423 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.82056585 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.819814624 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.820610905 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.820017066 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.820279041 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.821562038 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.820163637 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824180109 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.82007666 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.820102557 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.823370298 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.828654739 seconds)
  done (took 1078.898220458 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.81654867 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.817530878 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.818777028 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.817413814 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.817850659 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818011782 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.818818262 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.818506375 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.817768551 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.817686994 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.817607836 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818992672 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.818055025 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.818166722 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.818090026 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.81893298 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818995289 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.819165469 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.818282846 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818431406 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.819022925 seconds)
  done (took 39.928752608 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.822386322 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.819284551 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.81963052 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.821791498 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818741734 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.821380054 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.819265088 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821177059 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.822206427 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81978798 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.822016228 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820076326 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.818814433 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.820612577 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.820390471 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820802063 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.822967246 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.819409305 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.822504354 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.822018013 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823440192 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.819857388 seconds)
  done (took 41.806389634 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.823031456 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.824475825 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.822116701 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.819046806 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.823235876 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.821002581 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.823931389 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.8233341 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.825353189 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.823504691 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.821972365 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.824437236 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.830565644 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.829542669 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.826491517 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.823084605 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.968008316 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.82462521 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.824574033 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.824560559 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.820553798 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.827851031 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.819137185 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.82148713 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.822844365 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.825077491 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.823720276 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.824008498 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.823665323 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.825471676 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.828458335 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.822786961 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.823846086 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.825835004 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.824668821 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.8257813 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.828690554 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.824794758 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.820888694 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.824911168 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.834420987 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.846525273 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.82529847 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.829873334 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.824954151 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.824471723 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.828733854 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.832222513 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.82162778 seconds)
  done (took 91.329414142 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.825908422 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.826170335 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.822802874 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.824692673 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.82532377 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.8243239 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.827027874 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.827517008 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.821455822 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.823109357 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.824710309 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.823430902 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.822466702 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.82490251 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.824983192 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.823299981 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.823386348 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.821561853 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.822752196 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.822513758 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.822181006 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.824997764 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.826127049 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.82353313 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.825091261 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.823862991 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.82304329 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.825124945 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.822920836 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.823357738 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.825403253 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.825469647 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.824877453 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.824756816 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.824146264 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.824882283 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.826081197 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.824560409 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.825888701 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.824049977 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.82606473 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.826268624 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.8265348 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.826070915 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.823858225 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.823309506 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.823293634 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.823805394 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.824201518 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.826875543 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.826517453 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.824568642 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.826457814 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.823257572 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.827110112 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.826138707 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.824427665 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.824045283 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.82747925 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.824812408 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.825240231 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.828260356 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.82467195 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.827253455 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.827300251 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.826097072 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.826909667 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.829361156 seconds)
  done (took 125.846023913 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.828429962 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.827128267 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.828770434 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.828299439 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.829513046 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.828816245 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.82982073 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.828985957 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.82961041 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.829270465 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828062916 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.827738118 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.828364595 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.828512202 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.828666657 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.829527669 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.829052022 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.82824567 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.828453054 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.830474609 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.831247517 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.827417603 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.829194103 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.829570558 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.830290235 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.82910483 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.829548681 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.828904073 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828551765 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.829120866 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.830262397 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.829501437 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.829138355 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.831624953 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.829323374 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.829737604 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.828805557 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828500677 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.829677966 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.830523916 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.828158483 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.829651157 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.83174251 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.830258971 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.829837103 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.829825547 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.831425992 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.83126849 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.831808309 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.831494104 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.830578435 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.830596926 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830139037 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.830792675 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.831674149 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.830713339 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831036174 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.830715051 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833241699 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.832283004 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.831850405 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.830574049 seconds)
  done (took 115.200273624 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829745459 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.831048555 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.828602709 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.827771595 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.830186744 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.828387084 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.831407127 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.831238179 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.830784713 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.831052814 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830516286 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828056099 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830361409 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831378014 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.828431829 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829815756 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.828772803 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.828270143 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.831394415 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.828209102 seconds)
  done (took 38.351736668 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.829020916 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.832608128 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.82865867 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.828964827 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.830953458 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.8291987 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.831898478 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831678487 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82926503 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831441015 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.83171451 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.832535533 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829369924 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829842412 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.830713276 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.829629073 seconds)
  done (took 31.043748863 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.830790328 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.832624461 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.832604773 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.832597036 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.830584742 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.82885351 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.831482753 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.830907361 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.829302997 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.832518109 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.831729098 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.832882105 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.833151091 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.832491583 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.829556894 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.834278328 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.830774874 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.830859136 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.831872115 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.833119034 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.829480629 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.8299901 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.833208849 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.834664528 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.830648612 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.831578576 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.830266136 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.831483631 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.831393324 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.833070398 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.830624342 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.830727319 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.831555634 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.830969499 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.835002082 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.830756873 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.832949352 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.831966257 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.833364152 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.834562373 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.83453315 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.833091815 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.834135726 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.833806504 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.832596405 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.83486949 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.832295886 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.83276823 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.83022737 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.832499258 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.833430311 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.834073696 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.836263074 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.836022103 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.836639319 seconds)
  done (took 102.537756707 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.835719863 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.835661104 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.831534807 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.835893509 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.836006225 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.831579363 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.835742689 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.832795278 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.833190845 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.835277115 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.833426291 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.836593122 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.833803356 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.835630843 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.834859546 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833921206 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.832974096 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.833975166 seconds)
  done (took 34.78037353 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.833039223 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.835140003 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.835984941 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.834300638 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.832918255 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.836191601 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833244186 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.835852914 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836184035 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.834275695 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832853817 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.835264783 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83578592 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.835529961 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.833172631 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83340586 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.837499163 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835773143 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.833624194 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.834591234 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.83651016 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836958752 seconds)
  done (took 42.129927832 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.836026435 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.836354623 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.852156165 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.858909074 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.858257719 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.872611173 seconds)
  done (took 12.87593273 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835273055 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838396268 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834961856 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838738423 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836829422 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834657561 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834813391 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834795785 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837398352 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836399881 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835269714 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837697184 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838202695 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835496275 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838830208 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839086534 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835981068 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83559487 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835021789 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837681762 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834499 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839308719 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836668439 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835689344 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836548714 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836107878 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83876176 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836917154 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835289497 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837559874 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839345683 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837158197 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83763914 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837373958 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839349951 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839329844 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836825638 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839841708 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840210939 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837041063 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.839746156 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840996435 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838932396 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837721515 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839449437 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836772397 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836493022 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837023633 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838064952 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840379437 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841551122 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836552319 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83983387 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841235159 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840399632 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840520866 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837722597 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837394028 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840723572 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837908373 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837586665 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840254143 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837061319 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83891162 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842441341 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838562613 seconds)
  done (took 123.061081599 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839105895 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837023635 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839011 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837890711 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839337866 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837361934 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837906222 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839469568 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838191482 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839847396 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841036149 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838878099 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83789037 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838097677 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838362406 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83814926 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839072503 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838845618 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838896745 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842614859 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837804589 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83883393 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838913414 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839266146 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84012011 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841637678 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838893355 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838284961 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839302802 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839658295 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841008144 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840130492 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839062473 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.83816034 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839470414 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839718454 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839843244 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839612513 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839099718 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841703035 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840455644 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843184012 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840078076 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840441098 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839688986 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840183218 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841183284 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840252472 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841171726 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841072167 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841632809 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840134447 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841377987 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841018332 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840481335 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840605566 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841017039 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840890364 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840743019 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843781364 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840393473 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840403212 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845417342 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84105572 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841804589 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840152469 seconds)
  done (took 123.202944642 seconds)
done (took 2513.904846134 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.848546461 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.905928804 seconds)
  done (took 15.521210801 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.007936237 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.958041151 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.84209794 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.894162024 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.838446751 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.8662828 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.857371485 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.838786801 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.843286449 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.842789189 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.843121334 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.030382104 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.894847105 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.839432336 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.843242875 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.936143947 seconds)
  done (took 52.106925545 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.845507513 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.848550002 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.859130313 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.849221511 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.846579089 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.865876199 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.880414942 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.850443392 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.906939469 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.857456687 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.971796423 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.857807796 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.84751087 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.900169685 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.861747078 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.859941775 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.941278176 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.923830143 seconds)
  done (took 35.544601341 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.926006774 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.851570624 seconds)
  done (took 10.556923924 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.873358574 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.838821171 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.854568932 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.86997157 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.849390878 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.838831106 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.841165926 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.881902203 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.865736691 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.862471448 seconds)
  done (took 70.349306219 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.852996508 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.848446985 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.847991212 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.846038077 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.839517958 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.841298273 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.846201233 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.840113392 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.536544636 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.879125673 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.854572557 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.853329121 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.849236928 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.849213009 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.845768152 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.870427878 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.038107893 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.846660021 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.843859861 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.853613627 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.849423695 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.912194339 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.861282978 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.849879992 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.878584153 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.543380628 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.853822386 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.855595788 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.973593595 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.846427155 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.84810629 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.848565614 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.851647312 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.22543535 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.120608685 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.845791181 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.855298478 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.85832581 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.846893807 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.95885876 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.850100658 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.859681534 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.73173386 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.100309973 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.965559296 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.893237486 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.221561586 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.850170535 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.853105689 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.881345865 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.85256793 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.850504877 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.862112419 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.361218788 seconds)
  done (took 131.477045138 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.845083668 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.111184809 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.000198654 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.845870535 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131887362 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053324092 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.842642107 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894787641 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.846383964 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.076893884 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.06402333 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.95800172 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.846326745 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.843405594 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.842872381 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.841443548 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.010946313 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.923141767 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.844874335 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.843120465 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877875782 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.09545976 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.983314602 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.847686612 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.866540507 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.05966686 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.980150027 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.956034199 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.329913035 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.84412724 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.912738821 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.845585947 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.846950683 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.843766407 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.004628135 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.946538523 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93845078 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.843887895 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.844578993 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.846022088 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.521183887 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046734214 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.944098443 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.992599933 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.091977922 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.051802836 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.637731345 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.846311219 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.582410449 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008653818 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.08221854 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.082362168 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.971201261 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.846489921 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.358105222 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.84451496 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845409985 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.082125728 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076078703 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.953165905 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850260696 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.848592233 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.844448816 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.097835278 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.844894915 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.94069543 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851447532 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.843012167 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.946357472 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.951684679 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.080717269 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060631767 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.883020198 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.166422002 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.329203017 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.101540107 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.920110168 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08443088 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.851083557 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.841639496 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9352542 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.803472969 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.050177192 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.103189982 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.109115824 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887532098 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.572567537 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.845546608 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.080853405 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.077369696 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.152286393 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.092828679 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.00376202 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.171717165 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.847126444 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.84762985 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.080072292 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.985542203 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.851999658 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.211170246 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086091032 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.416807301 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.879568263 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.195480836 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985594627 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.850311313 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.493374553 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.850674464 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.076352421 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.892432188 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.850598289 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.847964546 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.070161797 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.926857711 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.848624044 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.480877438 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.91517212 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.850777344 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.087064998 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.851512095 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117039208 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849942496 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093705179 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.323149386 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.882605101 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.080808166 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.092604051 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.849627754 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.097917497 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098459392 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.968999468 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.075868437 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.467664586 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.847739314 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.135307058 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.842312927 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.837782741 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.013739425 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.841811611 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.991092358 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.84071309 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.17669789 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865001194 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998070791 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.840124243 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.094371894 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.869791018 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888929063 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.83302306 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.965690652 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.832234937 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.756869943 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.982992001 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.829383293 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.821034508 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.546160253 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.819868049 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.976196969 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.054700275 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842444591 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.896761413 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.486186033 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.81626102 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908557818 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.840751909 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.160064248 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.813147778 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.028485071 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.81218936 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.351201715 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.810740332 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.053362248 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.990353324 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.811295676 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.805426826 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.711542631 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.805819976 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.806550894 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.972189455 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.605841272 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.803191891 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00966585 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.804083235 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945733639 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.804593241 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.875585591 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.155748665 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.798586 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.797542609 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.799313727 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.798014066 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.798189668 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065893234 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.825080639 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.328500995 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.937271077 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071459932 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.116071768 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.052238133 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.841888494 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.79821893 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043469109 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.798106065 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.861142568 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.797456357 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.81898296 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033468268 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.794453218 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.009375009 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.078554864 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.711431826 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.845556176 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.793355801 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.795847469 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.753847893 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.955211517 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885244558 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.793094307 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.793365716 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.920547513 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.928424014 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.008714091 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.793208315 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.125043337 seconds)
  done (took 896.129994536 seconds)
done (took 1213.453486938 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.789321968 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.791321352 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.77699831 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.790081036 seconds)
  done (took 28.872405536 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.797644706 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.795003256 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.797176067 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.794855617 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.798267102 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.795843174 seconds)
  done (took 12.502777692 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.826401314 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.789218184 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.787930123 seconds)
  done (took 21.125518936 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.862789048 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.213711605 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.904570447 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.247018728 seconds)
  done (took 9.949756967 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.795173283 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.795281174 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.79556879 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.797208075 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.796782694 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.798138375 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.79669341 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.795589575 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.798929265 seconds)
  done (took 17.893089408 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.119695744 seconds)
done (took 96.187685043 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.053032024 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.862885565 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.188522664 seconds)
    (4/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.00407169 seconds)
    (5/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.932973392 seconds)
    (6/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.988196478 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.194282909 seconds)
    (8/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.854005015 seconds)
    (9/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.85272999 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.604776396 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.378390428 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.339917014 seconds)
    (13/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.854324151 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.987108846 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.936382491 seconds)
    (16/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.211777927 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.841201546 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.900709871 seconds)
    (19/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.938695558 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.882164702 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.036114359 seconds)
    (22/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.925628429 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 8.377061449 seconds)
    (24/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.342107887 seconds)
    (25/309) benchmarking ("sort", Float32, false)...
    done (took 5.627991291 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.001009569 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.856687228 seconds)
    (28/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.344768302 seconds)
    (29/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.316486186 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.949691899 seconds)
    (31/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.998516052 seconds)
    (32/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.879693622 seconds)
    (33/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.039043057 seconds)
    (34/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.932586579 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.692531732 seconds)
    (36/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.205747773 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.367962825 seconds)
    (38/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.891184963 seconds)
    (39/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.88345367 seconds)
    (40/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.966319415 seconds)
    (41/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.961394649 seconds)
    (42/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.215665775 seconds)
    (43/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.094253718 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.97051711 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.717010058 seconds)
    (46/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.244194958 seconds)
    (47/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.882948322 seconds)
    (48/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.771129112 seconds)
    (49/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.073140406 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.968478284 seconds)
    (51/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.240034051 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.190064948 seconds)
    (53/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.192154346 seconds)
    (54/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.365843712 seconds)
    (55/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.791985275 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.967574991 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.106580187 seconds)
    (58/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.922132459 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.965156722 seconds)
    (60/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.927751453 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.963419047 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.855028951 seconds)
    (63/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.185209178 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.162720979 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.923165131 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.783410072 seconds)
    (67/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.96192686 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.206513373 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.337155984 seconds)
    (70/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.563962049 seconds)
    (71/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.224630879 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.876931474 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.858357245 seconds)
    (74/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.067404095 seconds)
    (75/309) benchmarking ("sort", Int8, false)...
    done (took 4.87666687 seconds)
    (76/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.863693873 seconds)
    (77/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.862073714 seconds)
    (78/309) benchmarking ("sort", Float64, false)...
    done (took 5.65716733 seconds)
    (79/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.844580367 seconds)
    (80/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.212800429 seconds)
    (81/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.962551659 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.134921614 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.136827885 seconds)
    (84/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.995927661 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.271796034 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.456183376 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.529611486 seconds)
    (88/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.467923638 seconds)
    (89/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.027899651 seconds)
    (90/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.437651994 seconds)
    (91/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.204905866 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.877266824 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.006206498 seconds)
    (94/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.573819336 seconds)
    (95/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.404617222 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.277983511 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.864560764 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.249582293 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.174945926 seconds)
    (100/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.863323729 seconds)
    (101/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.942392483 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.860610944 seconds)
    (103/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.043890138 seconds)
    (104/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.99563069 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.850934791 seconds)
    (106/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.222909358 seconds)
    (107/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.942223558 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.071365678 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.846284058 seconds)
    (110/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.078392727 seconds)
    (111/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.961747573 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.161298218 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.50455801 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.242948149 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.240363476 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.861049208 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.792024165 seconds)
    (118/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.934323766 seconds)
    (119/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.969834433 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.151067338 seconds)
    (121/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.849100148 seconds)
    (122/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.678910642 seconds)
    (123/309) benchmarking ("sort", BigInt, false)...
    done (took 6.863772012 seconds)
    (124/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.060252682 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 2.313284153 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.885795289 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.862547675 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.118899514 seconds)
    (129/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.969652914 seconds)
    (130/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.05287192 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.084149805 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.115165526 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.879762454 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.88147467 seconds)
    (135/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.147165266 seconds)
    (136/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.004779538 seconds)
    (137/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.846889617 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.085759774 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.974622043 seconds)
    (140/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.889606273 seconds)
    (141/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.145344866 seconds)
    (142/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.846448086 seconds)
    (143/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.97564998 seconds)
    (144/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.866019284 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.089180296 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.888835282 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.970795876 seconds)
    (148/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.890015227 seconds)
    (149/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.948495866 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.924725224 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.234727284 seconds)
    (152/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.966172217 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.88238505 seconds)
    (154/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.862879082 seconds)
    (155/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.919264906 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.156224303 seconds)
    (157/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.55084987 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.866970314 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.055125255 seconds)
    (160/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.883000018 seconds)
    (161/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.875310716 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.863401724 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.61605575 seconds)
    (164/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.943565913 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.185654232 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.117015392 seconds)
    (167/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.903559863 seconds)
    (168/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.116182997 seconds)
    (169/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.124415974 seconds)
    (170/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.03364191 seconds)
    (171/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.867798136 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.938162929 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.109995822 seconds)
    (174/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.338128289 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.275174791 seconds)
    (176/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.163707423 seconds)
    (177/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.955396378 seconds)
    (178/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.867040434 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.931040427 seconds)
    (180/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.430943177 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.896194751 seconds)
    (182/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.892038901 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.172027078 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.238174797 seconds)
    (185/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.059391767 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.867583974 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.882270823 seconds)
    (188/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.336251807 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.067820237 seconds)
    (190/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.211951935 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.038931745 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.869954717 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.148657859 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.680798854 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.676471802 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.781407008 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.869956684 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.036916737 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.944234033 seconds)
    (200/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.080942608 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.934155321 seconds)
    (202/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.076229565 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.253111893 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.909888573 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.850342789 seconds)
    (206/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.86167231 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.952595946 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.157267837 seconds)
    (209/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.178026463 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.784373059 seconds)
    (211/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.891797625 seconds)
    (212/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.983493994 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.653402741 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.089362759 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.888960566 seconds)
    (216/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.89548332 seconds)
    (217/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.368525125 seconds)
    (218/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.059185821 seconds)
    (219/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.935885558 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.784681952 seconds)
    (221/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.921169121 seconds)
    (222/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.998730284 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.259718914 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.88803126 seconds)
    (225/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.86877743 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.122060389 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.910739983 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.507715509 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.926993761 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.894831139 seconds)
    (231/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.429541717 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.815273627 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.870428507 seconds)
    (234/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 9.054480677 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.783321418 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.807154431 seconds)
    (237/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.011463134 seconds)
    (238/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.020975316 seconds)
    (239/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.955672119 seconds)
    (240/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.207280368 seconds)
    (241/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.066499923 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.082727416 seconds)
    (243/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.158637553 seconds)
    (244/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.067320455 seconds)
    (245/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.101271122 seconds)
    (246/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.973601492 seconds)
    (247/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.014713143 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.852435398 seconds)
    (249/309) benchmarking ("perf_sum", Int8, true)...
    done (took 3.256334659 seconds)
    (250/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.891819707 seconds)
    (251/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.976656318 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.051877053 seconds)
    (253/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.880549915 seconds)
    (254/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.564968922 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.374327311 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.561830368 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.955183507 seconds)
    (258/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.009467996 seconds)
    (259/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.905018759 seconds)
    (260/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.953115514 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.895967885 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.944497777 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.87089211 seconds)
    (264/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 4.123709523 seconds)
    (265/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.978628474 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.514985955 seconds)
    (267/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.00839493 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.899005653 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.33586426 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.9799156 seconds)
    (271/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.084239942 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.097566395 seconds)
    (273/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.95594385 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.089952214 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.945139061 seconds)
    (276/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.871888734 seconds)
    (277/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.931742432 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.210672522 seconds)
    (279/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.03078303 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.940083384 seconds)
    (281/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.855260475 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.527014509 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.955723068 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.116323567 seconds)
    (285/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.962124803 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.95669278 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.171424855 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.015411513 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.675604189 seconds)
    (290/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.986353289 seconds)
    (291/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.857010751 seconds)
    (292/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.053731641 seconds)
    (293/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.446180316 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.598206211 seconds)
    (295/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.938982817 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.005425263 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.064595328 seconds)
    (298/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.436600767 seconds)
    (299/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.859041837 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.902659202 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.095545776 seconds)
    (302/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.198911351 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.96324269 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.892221176 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.201506386 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.894111573 seconds)
    (307/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.891995538 seconds)
    (308/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.340524222 seconds)
    (309/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.981534108 seconds)
  done (took 1016.61153785 seconds)
done (took 1018.469219171 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.906448262 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.899797742 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.883668381 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.904525945 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.995341612 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.911665705 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.893567593 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.885721496 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.930304696 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.93218068 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.882572169 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.909623243 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.886005605 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.883904605 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.88341823 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898025095 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.195833956 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.913239234 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.901497997 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.892736715 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.900242335 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.883519213 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.934539824 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.912280622 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.887644846 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.886654662 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.887391036 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.90425147 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.996325501 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.887579122 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.886304276 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.895711931 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.195675917 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.910338268 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.880893046 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.904346859 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.896982428 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.893933658 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.88866412 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.917523179 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.344301235 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.889895887 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.887391025 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.886886838 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.885423136 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.889963546 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.887907557 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.893913739 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.897761723 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.900110103 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.343766349 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.905905029 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.889084935 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.886289764 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.896982382 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.885823487 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.893907028 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902798451 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.905996979 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904167862 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.188642122 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.918039967 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.888741197 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.903113652 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.895372384 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.380982052 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.886040787 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.889979673 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.346257155 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.89619475 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.38186328 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.89964395 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.888583886 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.90157705 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.919943273 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.19771685 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.908870307 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.888093535 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.895723803 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.887013272 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.896447086 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900260172 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.892212326 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.888073734 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903730318 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.916166805 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.897339435 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.890657921 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.89587138 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.908289087 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.895510211 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.897455545 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.890810437 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.883707894 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.897405609 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.895050326 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.891487774 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.891100361 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.894195781 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.898239871 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.343150996 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.908188033 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.885854385 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.886163907 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.888227386 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.903893738 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.345329404 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.893078487 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.909493255 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.936056553 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.89325115 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.190353495 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.918863654 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904364984 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.897649343 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.892721376 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.884875577 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.191432213 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.370983211 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.907843427 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.891693237 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.888998151 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.905265679 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.893136002 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.887299402 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.202511887 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.916868424 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.903279947 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.011672878 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.900735565 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.921749341 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.888842071 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.893012775 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.919798114 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907001438 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.922210471 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.894554212 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907078564 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.907318645 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.888117515 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.901867694 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.901403432 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.892202076 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.896972539 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.885553492 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.920401949 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90478856 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.903555472 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.911166572 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.011923037 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.887900739 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.193933295 seconds)
done (took 296.832891199 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.96189918 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.879893707 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.986947894 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.887900846 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.972775143 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.977425614 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.884424488 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.886402252 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.885091216 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.261072911 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.884818453 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.887234215 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.879615452 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.886115987 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.972869854 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.889015576 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.884537166 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.222669853 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.889598797 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.961609485 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.881552533 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.886098 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.88894318 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.260856627 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.882373377 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.889104265 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.962802357 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.891215172 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.227747404 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.880726675 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.882511375 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.22714604 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.981225294 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.909522145 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.90146871 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.897597046 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.973553937 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.895366518 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.972207397 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.971083809 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.988589034 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.931554086 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.882720824 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.884428658 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.894137133 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.89199591 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.888589163 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.919288595 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.887431033 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.889060005 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.225883785 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.90245842 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.899388224 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.888858207 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.888902602 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.914416832 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.88872451 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.893347852 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.982703528 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.892632159 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.95445899 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.265017561 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.261877124 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.889965461 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.883325106 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.887990209 seconds)
  done (took 185.593695093 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.955998947 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.969002013 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.958024767 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.894570655 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.941958428 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.960911084 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.895592419 seconds)
  done (took 15.388162267 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.897706922 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.89216478 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.942330008 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.939989912 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.892593299 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.043129425 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.892453503 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.902801047 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.889840075 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.945820172 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.892957369 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.891680969 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.898718882 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.884306018 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.947724261 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.904279601 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.006742294 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.89421964 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.893458827 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.043442804 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.897945271 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.889309992 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.947447797 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.904776711 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.894617542 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.899859713 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.484228043 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.893724091 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.890238971 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.893335047 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.890496695 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.935201808 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.893018779 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.892741036 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.889948952 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.013056123 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.893762339 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.891492351 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.894451627 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.891778167 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.893906768 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.894704554 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.893303197 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.890870463 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.893078428 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.917305872 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.893698158 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.89325749 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.892762513 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.895342285 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.944908577 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.896619352 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.892183199 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.891803359 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.950870525 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.900071272 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.895603036 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.891805822 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.89461182 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.891433699 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.045698285 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.942708942 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.894268519 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.943377133 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.894978869 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894194269 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.894606781 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.894711672 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.989437941 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.894807678 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.942695384 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.891567216 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.054076942 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.91849368 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.896697394 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.897621314 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.897955519 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.896580692 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.893189756 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.901443293 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.893288768 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.896449446 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.901884539 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.892991793 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892341365 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.0086661 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.007420785 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.892996371 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.908743515 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.90271266 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.892874858 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.948330519 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.895091963 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.893535605 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.950168667 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.010779107 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.951304115 seconds)
  done (took 208.220147388 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.901095231 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.904143124 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.896938244 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.911476603 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.89642994 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.895446107 seconds)
  done (took 13.222563144 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.898306358 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.897396224 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.897329018 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.896139214 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.898153008 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.898188812 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.897826332 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899084485 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.900176863 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.896738268 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.897596371 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.897957163 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.897352638 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.895859536 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.896965634 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.895733311 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.898576171 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.894346494 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.897404189 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.896841906 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.056099741 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.895929044 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.897230056 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.897754901 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.902570004 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.895649382 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.905375146 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.897254424 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.897282435 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.905607591 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.901993767 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.897788337 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.899027063 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.904399523 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.901924549 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.899510433 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902099802 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.899211268 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.89424122 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.898211778 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.899957502 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.897700409 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.897452515 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.898638843 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.899223529 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.903032422 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.903601425 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.906244034 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.898959364 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.899479874 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.898752629 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.897744126 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.89992872 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.899269642 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.899990432 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902816269 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.904071015 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.899705504 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.899030682 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.899729816 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.899403496 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.900144781 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.900571169 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.904694376 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.898320441 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.899510596 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.89999459 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.904128489 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.899767437 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.900197479 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.901255278 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.896833421 seconds)
  done (took 139.72695237 seconds)
done (took 563.979557587 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.957243357 seconds)
  done (took 8.776303412 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.030573132 seconds)
  done (took 8.934913509 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.601683317 seconds)
  done (took 10.423505552 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.917200885 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.889791823 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.903704722 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.895586218 seconds)
  done (took 29.439200253 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.940452573 seconds)
  done (took 8.763398449 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.908862561 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.888784743 seconds)
  done (took 15.650067866 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.972441158 seconds)
  done (took 8.794643931 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.079554727 seconds)
  done (took 8.908166063 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.89992374 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.939649048 seconds)
  done (took 15.674846029 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.878800413 seconds)
  done (took 8.700640195 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.561768229 seconds)
  done (took 11.390210332 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.897095773 seconds)
  done (took 8.731768108 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.898890742 seconds)
  done (took 8.72072268 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.170927658 seconds)
  done (took 9.993277983 seconds)
done (took 164.721484245 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.896695737 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.894495623 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.892975502 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.892640959 seconds)
  done (took 29.396636843 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.932788803 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.93353591 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.934141747 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.944105227 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.937275392 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.933693787 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.92590472 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.924921198 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.943736514 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.937492913 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.936598724 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.93571696 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.933772309 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.927096119 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.937789604 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.934130925 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.945486647 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.935827526 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.92574641 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.937677692 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.902209712 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.945645872 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.937349674 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.902620077 seconds)
  done (took 48.207189545 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.101548415 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.971796574 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.054751927 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.953981568 seconds)
  done (took 9.904701892 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.952490939 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.954835297 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.967180809 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.005102593 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.036791693 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.964139542 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.93007757 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.923747354 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.908672371 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.953981947 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.030056467 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.948463741 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.03953368 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.901259961 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.083679394 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.90242791 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.902598416 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.954651909 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.008432941 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.019356513 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.902122624 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.95433024 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.958556385 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.950848484 seconds)
  done (took 48.976571009 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.901354154 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.90955197 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.907418108 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.902092548 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.901124886 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.902591522 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.909114341 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.90411574 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.923500037 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.903350348 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.900624743 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.902318107 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.901717342 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.90338621 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.901211158 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.915170384 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.916349824 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.902549891 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.906433699 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.909182221 seconds)
  done (took 39.947353429 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.896137276 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.751760618 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.247777104 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.153174055 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.896157618 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.89263565 seconds)
  done (took 31.662250686 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.915758914 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.908222672 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.903666976 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.959551923 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.043650242 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.913418969 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.90241786 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.913636335 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.949987312 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.968461682 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.92451522 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.932219595 seconds)
  done (took 25.061587992 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.899969187 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.89624073 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.908166305 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.913804476 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.914528332 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.909173709 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.911879199 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.897166328 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.915898273 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.921156004 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.909994807 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.916671545 seconds)
  done (took 44.744914578 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990187925 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.790709042 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.929511247 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.640029392 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369377191 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10805022 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414388116 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.234402294 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.901181899 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174882395 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.959346764 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003500115 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.155130137 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900829631 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913330452 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.38074537 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193060282 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129804511 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925428024 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.666522465 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94751912 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.516343357 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.730201964 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.956419771 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112388212 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.034821374 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.16198707 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.858283502 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034677021 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938471403 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911975711 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900804005 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177245154 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271180734 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001913812 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912199572 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.558394916 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.614831819 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.895840612 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.701284327 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.671333124 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.016862314 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912571713 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902983846 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837597236 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.46888011 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293711252 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.904032094 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.613691969 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.90307684 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913295709 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990707588 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.906221943 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.718601854 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85803241 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.178677959 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.899766992 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909408522 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.471107873 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.002282734 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.505772275 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.878772614 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.0973789 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.746291778 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28533394 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.048924478 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.906887101 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907771194 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839063384 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.668451787 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953893052 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050623999 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.921045266 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.555259359 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208062759 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.997876868 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845025347 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186461334 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.209436342 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.881778325 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132748813 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.862203067 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839759482 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.76235668 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840316693 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162602025 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936350016 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.536967657 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937641576 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.238877025 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.913205366 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922137878 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912215609 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.130703997 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.786823902 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905154687 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.697247547 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.054615366 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924558721 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244094988 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836369289 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.905854755 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16163822 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.117654135 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.225975854 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.422498892 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062845351 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902653923 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.981272724 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.905724187 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.957273559 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.178710833 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963180084 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.017277241 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964176196 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.865735797 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207836518 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926648764 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.068579567 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.975441277 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.033366838 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.228042922 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.196821212 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971337103 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906872502 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.907912428 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.757344567 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.457388599 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.174124131 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.908637101 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.488749912 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95744679 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.908042732 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844265135 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.507197395 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.950941922 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.875465386 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.132034898 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.907711488 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220443414 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842801815 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.055119865 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.01939448 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.127321862 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.548905147 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.974949965 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165247711 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482570169 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.256659332 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958198235 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927418914 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026906299 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930657378 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.417155357 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.202726776 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.912000992 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.913683228 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.718631071 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.903760777 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91583833 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.915994981 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.709078806 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181197675 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.931787319 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.90977502 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.804695564 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.926888438 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979664047 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918107301 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922876201 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.459171708 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661179637 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.920161777 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.543247161 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134693135 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923957736 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.677494732 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023974502 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.997318599 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.183232831 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97169032 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.848560229 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.62635859 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.608324286 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9144498 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.850470793 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.91495426 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92569452 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925509998 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.298098594 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.191097893 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955692992 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.757478126 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.955473656 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926063507 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.920269072 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915761796 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.461613145 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.019792732 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.518454353 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.963238569 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053744607 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.929199339 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.850465899 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.918380098 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91969046 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.915891853 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.883402878 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970140197 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.683706816 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311137148 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170195342 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.609687118 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930346027 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.705169032 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.971287339 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.936439152 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.739549432 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926871711 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.952543074 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932608811 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.928373697 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.685484033 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.622768288 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.48086695 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238028602 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.213286557 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355571364 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.482123398 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.22660301 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.255832991 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149431497 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.447131725 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.978163705 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260458201 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858397815 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999200293 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.555225395 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.256614207 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927405913 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146062686 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301090867 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.828044696 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938505839 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130307192 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952997706 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.913872201 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.885984624 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.119606098 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061059214 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.674440512 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11183961 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249114085 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.603230163 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.028003626 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.917441737 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.585188475 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997073512 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.62751013 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.280636727 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.527334876 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.899648036 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384464792 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.918793807 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.363841574 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273116478 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333140677 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.043284329 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850842278 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.930889907 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.931397192 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.9191389 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.917176759 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.7967479 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.16955694 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93095991 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15610236 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.267264152 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214126708 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.83187595 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.92520064 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920342983 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205871223 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.774087359 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088817844 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.436309196 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.450330229 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920745754 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.855009695 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856475907 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.612306299 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.927839457 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.896904435 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136272062 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.104682027 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.874878468 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.504406143 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168252433 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.174997398 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.93528437 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.1892431 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195019872 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.656899116 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945262015 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.020913873 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.60694822 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.021150504 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.189610451 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.156417222 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72146006 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149801573 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.967442227 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.728628911 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.919194724 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13368325 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.190924346 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.869344536 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142206045 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.642258544 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.9339962 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241848112 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9765317 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.834638287 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.06660647 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.117210866 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932864821 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006730121 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932283515 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.933962868 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.933457912 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970589936 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.857532297 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.035531984 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.936299215 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01211266 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.045095993 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.450366908 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.9251693 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194191684 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285924542 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.252014124 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980047129 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922782771 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923476053 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858741266 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055721298 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.369574214 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197145206 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.055382447 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.219242048 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949205516 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.628460858 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364318708 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170253921 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197976735 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.819445941 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925363521 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.940270174 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.191884699 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935746241 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.135930701 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147010908 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231397325 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394365448 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.248611268 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308716984 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194368722 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.294887228 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925959754 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.514015871 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.926753952 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.589326643 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.958498908 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.869711807 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181756111 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935307966 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304161887 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944508107 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.124490013 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.440859179 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.69187897 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212146579 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.907592054 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.979198498 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197468087 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.310370404 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233470389 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994872888 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938557994 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.631160845 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062571595 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.807750403 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.192455997 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927132941 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137570078 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.635603345 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938442164 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202909903 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231218217 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.922377406 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.823527307 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932503421 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.9369692 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.151119301 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183569928 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.172729991 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936447645 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.935227132 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.742560769 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20000513 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980053401 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863102638 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.927611613 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023048622 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.175279797 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950334521 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.445419716 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.638145013 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223002826 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.842770425 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950274962 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.542392908 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.291885997 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240666044 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.464962871 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149529022 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.484288908 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.928547371 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229801121 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.933879732 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.498603848 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243957425 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.931106581 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.610250305 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972631785 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.191891677 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243717374 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.938815954 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.69351191 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.895419916 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152846614 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.523646427 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86825048 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925211114 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.989516801 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.92829886 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.060845583 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936912699 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.836862108 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927859762 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.680205414 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423180945 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.930308046 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.918821345 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.650314565 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.61988031 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968122349 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073208516 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933471358 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.639957321 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.222642533 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.18409021 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.625376059 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.941195384 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.933631537 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930156525 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858769989 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.127535321 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.308087883 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220362409 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.4536422 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.972097132 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93388989 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.146224442 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140672565 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.820203753 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056852383 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.500109236 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972960131 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.701357649 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.61141238 seconds)
  done (took 1710.183035358 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.941354651 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.958055932 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.951187117 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.983949911 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.965722217 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.988936013 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.021605317 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.020224067 seconds)
  done (took 57.689734662 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.932017428 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.128043501 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.940213981 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.931438441 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.936528319 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.932990432 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.101557288 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.944296669 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.937447904 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.941002573 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.932379141 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.928526064 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.267763845 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.957401752 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.932642074 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.929602033 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.936633521 seconds)
  done (took 75.500239557 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.933338035 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.157156224 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.957611754 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.945968525 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.87262232 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.933357378 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.926448614 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.955428513 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.934755889 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.148411187 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.564418612 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.946686823 seconds)
  done (took 91.137108062 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.941395265 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.940231293 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.939875013 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.939724212 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.939783169 seconds)
  done (took 11.56623223 seconds)
done (took 2225.828348662 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.218320706 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.161724187 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.166931744 seconds)
  done (took 6.187291514 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.083154969 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.130122345 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.249142915 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.256646529 seconds)
  done (took 10.582709441 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.226240556 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.30493476 seconds)
  done (took 6.391151425 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.344086934 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.934143261 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.326927862 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.930859343 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.928862211 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.934217503 seconds)
  done (took 22.658297251 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.936221617 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.939751022 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.935234032 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.939979695 seconds)
  done (took 9.611133188 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.918064529 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.597590359 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.917915016 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.928390768 seconds)
  done (took 21.221836435 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.682908524 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.334339847 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.6798038 seconds)
  done (took 9.556937313 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.369111119 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.816344962 seconds)
  done (took 9.044153014 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.199423339 seconds)
  done (took 4.060366236 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.96464448 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.20683067 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.451606833 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.445527377 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.540124792 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.804532269 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.264208182 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.191760101 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.334286361 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.378375889 seconds)
  done (took 25.442407922 seconds)
done (took 140.440146736 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.318442799 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.165582142 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.137532802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.285726303 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.151814441 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.139283712 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.149286364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.26889301 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.776484264 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.77564023 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.280293154 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.174946414 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.273184567 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.937769106 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.276034465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.175813502 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.159770039 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.333192781 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.973927892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.216312699 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.132317099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.911676196 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.123490138 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.922021109 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.15901285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.092637331 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.501807636 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.174129144 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.133056081 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.509889799 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.088126313 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.373739173 seconds)
  done (took 173.951204485 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.822650796 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.932347609 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.931421004 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.932686761 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.167108488 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.931735248 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932606226 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.932396468 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.124034021 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.080369407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.939171326 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.195269373 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.945859044 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931374149 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.939465896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.933120324 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.232617389 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.899775305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.945951795 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.949181125 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.950913819 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.080787571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.949190873 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.117326208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.242769533 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.949259244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.933174574 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.952090334 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.937153301 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.94095457 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.942072843 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.933769652 seconds)
  done (took 209.492125063 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.938157253 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.934765893 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.934652283 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.93318498 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.934749148 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.932479041 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.933708937 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.933874871 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.611670786 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.603811867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.932965892 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.933539875 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.936270685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.933347863 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.939340182 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.934366908 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.936004126 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.937423156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.934994347 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.936865023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.940491047 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.655400092 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.934027356 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.659723807 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.937863634 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.938340742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.934435823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.941206816 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.943404804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.943745046 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.943124456 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.935567061 seconds)
  done (took 222.627394875 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.134005769 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.946364549 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.947386298 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.894847472 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.947182235 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.945272088 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.899444534 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.13640541 seconds)
  done (took 19.733106392 seconds)
done (took 627.678976034 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.380589925 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.23018168 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.125045678 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.96701232 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.201838795 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.999962476 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.964571014 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.030591529 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.692243586 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.031763289 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.607972096 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.982438397 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.706306534 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.98779255 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.09236719 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.020615996 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.512600949 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.599786945 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.140627257 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.023983422 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.151778869 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.927643248 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.043235813 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.71284092 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.719693235 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.968755341 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.137530263 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.510574963 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.974479786 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.128534199 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.691553456 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.342246638 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.975742317 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.964471602 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.021712326 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.000702934 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.304644484 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.974001743 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.097060557 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.733946459 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.025544262 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.581651848 seconds)
  done (took 106.152845775 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.936356069 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.935626375 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.934150255 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.937061963 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.936216153 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.934786647 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.934683213 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.934940179 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.935020318 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.933137089 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.934503579 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.936241198 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.934013565 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.936538648 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.934577618 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.934426892 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.934909524 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.936971216 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.934832149 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.935394604 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.935629998 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.934086613 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.949212288 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.935872393 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.937953629 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.935594315 seconds)
  done (took 52.211208191 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.949845386 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.099135729 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.202093389 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.965275838 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.947610112 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.951856996 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.966408416 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.952017233 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.951800546 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.952015611 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.042091222 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.951852132 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.968871874 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.205814901 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.962174604 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.949483657 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.94973751 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.949776999 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.103349308 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.960847839 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.970219918 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.951845961 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.970470632 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.959967811 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.950906267 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.949784065 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.952572098 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.427264004 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.958046553 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.04262911 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.988597351 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.970630568 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.398105538 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.221508428 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.012356492 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.952143903 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.950187343 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.046036886 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.953338456 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.949674915 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.967829706 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.955268613 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.207208345 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.438587304 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.961988947 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.951012212 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.438820295 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.050674862 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.991657591 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.959950937 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.208736194 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.964431508 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.951850534 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.951794705 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.9863492 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.960095005 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.951378295 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.303561797 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.963826999 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.969158427 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.958322184 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.952585435 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.112396584 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.960565234 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.099192948 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.958785986 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.958792275 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.952098174 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.208197226 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.96822451 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.447467263 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.960977229 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.950156719 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.04334479 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.103311663 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.461660223 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.962509867 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.113196917 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.417640016 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.973820582 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.958295473 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.417211456 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.979105245 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.959600658 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.950501391 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.952710411 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.950193336 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.994911736 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.967543542 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.372836809 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.449094076 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.310305885 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.977963483 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.967048659 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.949738861 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.301401352 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.961429794 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.952357546 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.200454037 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.456717216 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.96227601 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.959266549 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.433382506 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.962926128 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.969800358 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.961228306 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.210869743 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.963499357 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.995498269 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.953381625 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.96017423 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.955784398 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.970737063 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.959862897 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.952309713 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.418630131 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.059397018 seconds)
  done (took 241.806372141 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.946024206 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.943067989 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.944890347 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.953360128 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.94480233 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.952055309 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.944630902 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.946583163 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.950963891 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.94523368 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.945275609 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.948557572 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.947362821 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.950374686 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.983619593 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.954276921 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.601711114 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.946566337 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.945411052 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.943458956 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.597130552 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.952570795 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.947389789 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.94358095 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.945767984 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.94733581 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.947573023 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.975986782 seconds)
  done (took 169.771315686 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.955296028 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.071921173 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.968259642 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.982989773 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.962931203 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.953036883 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.978329803 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.966223717 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.960176021 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.951098843 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.952580506 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.016708154 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.962275931 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.053613212 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.981439728 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.986205788 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.05642421 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.95914119 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.951393558 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.952987801 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.983294644 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.949256535 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.016244274 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.083371619 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.969860882 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.073239792 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.958545928 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.957093813 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.953826011 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.073976324 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.965574443 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.016255862 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.98055865 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.971904318 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.078649225 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.069427612 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.058004223 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.981289983 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.959300117 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.953373162 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.953219537 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.943332347 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.071875579 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.970012117 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.956632143 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.062288131 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.974833103 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.958393495 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.965794621 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.95525243 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.97024371 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.974506307 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.022612848 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.084172542 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.986325387 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.981644701 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.980808188 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.243649039 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.961937022 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.055697352 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.945896713 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.072946519 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.976553376 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.942989901 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.956758089 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.961551754 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.984753033 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.987630604 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.061650329 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.960608505 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.054769177 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.987902579 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.963140017 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.955499782 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.958343778 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.074931911 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.071832405 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.987323188 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.991516864 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.987453045 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.95264709 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.957488532 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.944513838 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.973962831 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.959682347 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.074173529 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.072889033 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.961706134 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.961279139 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.958727877 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.959879783 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.983223168 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.084615627 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.992051949 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.04961203 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.021541442 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.030057564 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.969263231 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.969772856 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.962576451 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.020930707 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.969050947 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.968773146 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.29518684 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.024273401 seconds)
  done (took 211.629707662 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.406547854 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.005385914 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.015682322 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.262897743 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.387177237 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.831109011 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.000150606 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.008125045 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.030665056 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.19929303 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.079056962 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.026286672 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.992740069 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.98038925 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.009909822 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.028580561 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.017085554 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.356249267 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.122588521 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.101115894 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.982950071 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.305278734 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.325569864 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.421921539 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.03989027 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.34039471 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.676487717 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.24960283 seconds)
  done (took 64.089766779 seconds)
done (took 847.527470754 seconds)
SAVING RESULT...
DONE!
