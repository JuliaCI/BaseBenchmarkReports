cset: moving following pidspec: 3013
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.359174957 seconds)
loading group "string"... done (took 0.542371231 seconds)
loading group "linalg"... done (took 6.799905807 seconds)
loading group "parallel"... done (took 0.157702468 seconds)
loading group "find"... done (took 1.182314636 seconds)
loading group "tuple"... done (took 1.743547279 seconds)
loading group "dates"... done (took 1.212299216 seconds)
loading group "micro"... done (took 0.226574284 seconds)
loading group "io"... done (took 0.976646618 seconds)
loading group "scalar"... done (took 36.780664708 seconds)
loading group "sparse"... done (took 11.029902312 seconds)
loading group "broadcast"... done (took 0.920173552 seconds)
loading group "union"... done (took 11.919206724 seconds)
loading group "simd"... done (took 4.178290821 seconds)
loading group "random"... done (took 8.599183785 seconds)
loading group "problem"... done (took 1.874483739 seconds)
loading group "array"... done (took 20.119864009 seconds)
loading group "misc"... done (took 1.697223005 seconds)
loading group "sort"... done (took 3.128332468 seconds)
loading group "collection"... done (took 16.814968311 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485367667 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12347755 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115348844 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119270933 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.140470152 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115631806 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123706803 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083844814 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.779544724 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14224981 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119510456 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414173017 seconds)
done (took 4.921708333 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173688382 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083240397 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081967006 seconds)
  done (took 1.288322752 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065178655 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121628019 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066652367 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066741151 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067256221 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066251608 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066223125 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066015761 seconds)
  done (took 1.643744988 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072772119 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069258222 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069258717 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068459094 seconds)
  done (took 1.400225911 seconds)
done (took 5.703085816 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.771650741 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201942786 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182705381 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.395769529 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127168655 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164016011 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643540604 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318261299 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184833243 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08077492 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103723049 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.322990906 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106726526 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643545145 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079946901 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090176711 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138657694 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.408241107 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067097818 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082122474 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089072707 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127781169 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085538049 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075464613 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144405498 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067919148 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130644997 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079978086 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066472771 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207264518 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172245973 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659942409 seconds)
  done (took 10.178044981 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096191257 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097413605 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069055953 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123547331 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096595597 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069604271 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07129237 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06763849 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087024654 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128460731 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089521222 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101579305 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065465908 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069358058 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085052545 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204569625 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082647123 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082029123 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07103971 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075490599 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106263545 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078075639 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078553974 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077968333 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128836452 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180572982 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10011762 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099566725 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068327363 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080704408 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115432733 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128511341 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066130925 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066574073 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124760051 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094553855 seconds)
  done (took 4.587305141 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.907763537 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139736738 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091292813 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161386347 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083616034 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067758725 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106136473 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06522591 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084250391 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199639297 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.044146418 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.43434476 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111014956 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.084845401 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067873566 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068611834 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067346929 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.366426343 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110214598 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112998434 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083685239 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074063456 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069868208 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365009488 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069068943 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066734119 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068096879 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058171673 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113222453 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06827984 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.985105504 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.11667997 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067355703 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100873525 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168944818 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089197465 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063591693 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133380057 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065250928 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064693863 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.146282781 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072645149 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064998139 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082211778 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102346011 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.102176448 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067972298 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.194708014 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161768247 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066905279 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085956551 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.714055581 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154227277 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079019068 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068560655 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245089021 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085648745 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067033611 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064557415 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.183921662 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130176896 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090948775 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066918421 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067021765 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066086059 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068183972 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.353287914 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06662357 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.721986467 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070207452 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076443668 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069265604 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067051855 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073338773 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07228996 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085025668 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066641237 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068926955 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06647615 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066764619 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068151905 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084436629 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.190626878 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067239293 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067062603 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065351631 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086232607 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097952843 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069237941 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065246818 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104660954 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06803663 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06702171 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101201992 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066883006 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083366919 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068865818 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113028842 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068002582 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.102880983 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067104795 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09544267 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068161199 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098701959 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077718325 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063334136 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.15996447 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.218086978 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064910668 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064587729 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067106445 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068054173 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068123286 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069081445 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079323044 seconds)
  done (took 19.911279964 seconds)
done (took 36.702814336 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.2750195 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07494953 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075225398 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075291238 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075320058 seconds)
  done (took 1.78373542 seconds)
done (took 2.970078764 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120437879 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098943763 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064613571 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09540706 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063917042 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099851902 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099147563 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081413005 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099429454 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064346396 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09626728 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064065823 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06409105 seconds)
  done (took 2.32099984 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082582664 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083330964 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069822467 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082250098 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064096592 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082117564 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080708756 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088573436 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080487728 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072291894 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063834498 seconds)
  done (took 2.032507969 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082003421 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083409792 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069918621 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081743685 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064017237 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081323306 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080409295 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08514954 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081145692 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072839849 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063623044 seconds)
  done (took 2.028071527 seconds)
done (took 7.558336586 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077754953 seconds)
  done (took 1.247740102 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591713696 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.093323908 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081416712 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112655014 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183612348 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120324998 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281971554 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086888084 seconds)
  done (took 8.902842381 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088329781 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069720715 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082873966 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069096412 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06971249 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069239715 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072102985 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071396342 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067880108 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071727501 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070702159 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070603344 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071954791 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068410778 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070593502 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06940483 seconds)
  done (took 2.392506525 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092305586 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091026194 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073062494 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074437691 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071975543 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071933523 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074499972 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073288944 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070684362 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072215989 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074715024 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074110098 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071293166 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065860514 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073907998 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075410483 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070993427 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073720248 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075604259 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074430468 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074987123 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064528791 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071186362 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073801746 seconds)
  done (took 3.054051862 seconds)
done (took 16.774510998 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111707282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071744646 seconds)
  done (took 1.35955229 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081227616 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083099169 seconds)
  done (took 1.349181332 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082314823 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066001873 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090757772 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078129721 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066362488 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065561399 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087447818 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066117768 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065846111 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066304938 seconds)
  done (took 1.920783029 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068395133 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077846625 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071662027 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081172797 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073997939 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064600998 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072744866 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068153116 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07749158 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062541353 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070950643 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082294567 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071487678 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084028829 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072381091 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068536729 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070488762 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067069289 seconds)
  done (took 2.495142752 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065882227 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066681957 seconds)
  done (took 1.324171309 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067055021 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06409361 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067480342 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066205033 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063714098 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062577401 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06332494 seconds)
  done (took 1.642670433 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.375750803 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109951551 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.294242448 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070720361 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081998145 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249805711 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065596204 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070647456 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070559766 seconds)
  done (took 2.620514737 seconds)
done (took 13.90114952 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078476219 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085151527 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09523043 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.343268474 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091613736 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065586207 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113637182 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191983301 seconds)
done (took 2.265805914 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.206204604 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.566861817 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.369767836 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194827148 seconds)
  done (took 2.32472158 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.313651155 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091096812 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058592506 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066570472 seconds)
  done (took 1.733014865 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066061457 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069001508 seconds)
  done (took 1.334661907 seconds)
done (took 6.799522537 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066354898 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082503912 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065582886 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063556995 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065959511 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063760989 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063101042 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065589105 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064079312 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065689412 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068703481 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065557819 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06616039 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065753431 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063525269 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06365048 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065884346 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063568208 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063400658 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067090446 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063356892 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065636323 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066510585 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063098665 seconds)
  done (took 2.812347801 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083425123 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066775813 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071360616 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070644946 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070302085 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071207445 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071252891 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066181364 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071048082 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067964803 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069461711 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069739423 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068217094 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069932983 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067737293 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069880091 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070871001 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066025403 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067921013 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069990303 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071109489 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066191678 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069625485 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070592511 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069761868 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06986745 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067724152 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066138507 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071174703 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069796823 seconds)
  done (took 3.297457386 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069874831 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063300591 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064579261 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070423761 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063841339 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064547752 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063013823 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06366917 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064604097 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063331811 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064589275 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06306193 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063764374 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064300392 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064658538 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067131299 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078775706 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063827667 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063624967 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064013943 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066585842 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063939503 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0638535 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063318768 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063623726 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062850431 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063907203 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063119446 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064233283 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062995321 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066363393 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066640783 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062988322 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069743153 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067243884 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062956148 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067246644 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063033375 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063701632 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063133958 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063138958 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062916198 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063319309 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070443664 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063339847 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064821392 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063293502 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064712859 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063696168 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06623845 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062611017 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063207402 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065070094 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064745827 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067300099 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063066121 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064342394 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063136402 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064229306 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063191102 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062833666 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063255584 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065830625 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064602589 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078178926 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070645838 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063681733 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065218013 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064642397 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06591818 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065431993 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076895044 seconds)
  done (took 5.902520471 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090714934 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.199887668 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06555922 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066709192 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062053837 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066119493 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067393914 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063792733 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065445759 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069721014 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064074823 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065340859 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065177298 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076595951 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064273289 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065300963 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069684358 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062107272 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064129746 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06703241 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064299314 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067262193 seconds)
  done (took 2.833487293 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15430589 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069330929 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105467887 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07304744 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067486288 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072649625 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069976257 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070304386 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070551273 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068404723 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068058936 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069981068 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067688165 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06815612 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068514168 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068333831 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070430756 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068688499 seconds)
  done (took 2.587613459 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077404113 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066696035 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086722011 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066079392 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066098936 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067951837 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070904044 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074171011 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06797815 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06566091 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074233198 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068665696 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.0681502 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066078997 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068139494 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065816807 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068155915 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066041584 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074399264 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070289394 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070658044 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073863227 seconds)
  done (took 2.7610516 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080175164 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067942393 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082897584 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068897197 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061899217 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064503889 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070112099 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066337075 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069880184 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067333473 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065813477 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064409799 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069441255 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065965865 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069338591 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065671355 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067647484 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065664471 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068227459 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062194663 seconds)
  done (took 2.583722002 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08641932 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067497529 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068004679 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075759442 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067160556 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067610761 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074963819 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067168181 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067201326 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087827875 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067171529 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067060842 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075320365 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072224302 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067154329 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074799116 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074632904 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074915877 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066924652 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067034813 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086994144 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067386345 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075016196 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06747645 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067410964 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067478396 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067266383 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072372697 seconds)
  done (took 3.228702206 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066332774 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065863753 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063832182 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064258918 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063493154 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063719268 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063786844 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063311595 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066649481 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063635548 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06630912 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065775985 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065694839 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066571084 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065866766 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066000034 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066072385 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064292758 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063865102 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063289132 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065643626 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065972217 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066036538 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063345817 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063308733 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065505792 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063342529 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063231781 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065499084 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063521268 seconds)
  done (took 3.168383831 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07565046 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073485104 seconds)
  done (took 1.373857535 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063189095 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080109335 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063215476 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069977196 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069588563 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066533911 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073708234 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069966857 seconds)
  done (took 1.777534179 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081667826 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077898789 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068231139 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080464677 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077011331 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083026964 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132153005 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066866725 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072601395 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064376182 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079730199 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065266188 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07264978 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066404017 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071896861 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072746942 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06368928 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072557346 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068846999 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064817553 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067410182 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07510628 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068564018 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061758516 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066987308 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08754121 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07688475 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065765558 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068608596 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073462766 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071175795 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060257059 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065746967 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066237747 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063846742 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075570206 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081056444 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068721238 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074176301 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066740587 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076964487 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061565832 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070445253 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072710532 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075996807 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065998587 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066561751 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061201327 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06376174 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068489522 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061587331 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066089013 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061212482 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07567578 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069406772 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076558517 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065055881 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068036548 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068667303 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069097798 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072813845 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068268438 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068583783 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065553439 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075888113 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070573691 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074909882 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061020141 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060391811 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064331609 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075523522 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088726994 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072563746 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066712298 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066925183 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063944965 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069665035 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067280573 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072338303 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072537522 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066661549 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071851879 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073468698 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066826388 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068677308 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074387348 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064504991 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06922433 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064051491 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081992239 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064942536 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063977429 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064242016 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077543135 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069539057 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065402321 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063782618 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073008193 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060446807 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066780344 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067097218 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067334726 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076014437 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069621404 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069857667 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073520391 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072451373 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065448192 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068009588 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062100307 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065899375 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064625073 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07299506 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059800329 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068431234 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066659114 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065619843 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198017374 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06540155 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066662858 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074316318 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071950202 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065416246 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063632923 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069710197 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06685333 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069754329 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074201114 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065493981 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062527819 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061641948 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069800085 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067063151 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070246055 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072050999 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070385456 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061673434 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065125374 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071831868 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075029979 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06701685 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067030337 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073176364 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067734532 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065897307 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072630634 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069592379 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06655982 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.0716897 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067972256 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062078841 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069899565 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069768007 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065120405 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070180482 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06952374 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069111068 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066929488 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065424051 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074166294 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068072774 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065849704 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067095251 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064577642 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076829152 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068528217 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061313146 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063204007 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076136774 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064138486 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066867683 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066030014 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.0689415 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06674756 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064988947 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066329701 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068715119 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077362544 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070783502 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066946965 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072053551 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077344338 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066387804 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068730844 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066050069 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067077893 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06662908 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074747063 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071858017 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071021207 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068686443 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06269172 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071948768 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073885014 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065702874 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064060525 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065317241 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070603566 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07149388 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070560154 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067285346 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064592313 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067355747 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069692595 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068832396 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066406322 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065939458 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073710569 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06470002 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073516071 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067738693 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07682314 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070183976 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06189492 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06969238 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064634887 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072510281 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061485181 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064551662 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065582725 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067267733 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06536621 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068812653 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060437449 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073417105 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07259606 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065614296 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064238992 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065013007 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071604329 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066749243 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069069445 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068724772 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070991071 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075869463 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0644017 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068069975 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075132013 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065325788 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059435214 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070286492 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063997882 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06393707 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063905705 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063285051 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068015051 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073475706 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071700931 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.05929993 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067767901 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063181826 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064111057 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060871815 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.069412891 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.067949926 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066180927 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071503823 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065772147 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065601361 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069457222 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064609657 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065510774 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06602316 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068189497 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065669069 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066573681 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064287723 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067843387 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064343284 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062568302 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066542749 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064754207 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065033376 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069796422 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064406225 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065306186 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067720351 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066064588 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065830395 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06581597 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064519758 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068361766 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065890946 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065520765 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067670786 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060507186 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071963326 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063615647 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071120915 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065259354 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062107856 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071105398 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06700278 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068733074 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065226308 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064047528 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066199379 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064255429 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.067275292 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071152841 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063387824 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.073811296 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071618355 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064435722 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06730561 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064309421 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065689633 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063488595 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.065657267 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06478523 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065386433 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064315483 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069509682 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066384355 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06495009 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066558179 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064580697 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064652272 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065522792 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059081558 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063982111 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063984545 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063659812 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072802848 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064622774 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063900112 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063134421 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064789226 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063701995 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06178006 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07064677 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071742687 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064322457 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071409764 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06351603 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065968631 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073829093 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059092338 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062912698 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06218202 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062904473 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071293324 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064700064 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.072783016 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064197789 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063651777 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061720904 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065949317 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062648092 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.05938181 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062533108 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067891411 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06381421 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063303865 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064225593 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067348642 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065092654 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073540523 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063456892 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065847692 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065252626 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061819544 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063985083 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.299023408 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071935465 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069315525 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066324235 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06666917 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068664685 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.0698094 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070431879 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068277405 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069659009 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078495485 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067915881 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070548304 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071169629 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063149181 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070973775 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067979179 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068050463 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067562161 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072039322 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071671749 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069398181 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077298705 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067335043 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06879648 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067627856 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06549638 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067425731 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067137958 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067105307 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066761468 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068908773 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07587164 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065578888 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070885014 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067942816 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068514321 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07412552 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067730099 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07047601 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073983846 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067552895 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068952204 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075006696 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071305124 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070915486 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067993443 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068648306 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073093699 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066065627 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073606828 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067763346 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067561482 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068822433 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064977665 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066662192 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066861199 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066103292 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07268686 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067405933 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066034163 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065898349 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064979817 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06784892 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070226515 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074513577 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069228265 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070114034 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062141545 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064515891 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067773255 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065040093 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06902014 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.0694674 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072572487 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069262519 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067635429 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065301308 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076263807 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072822775 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070550301 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065003111 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070058282 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067673483 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069316211 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068020723 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066875431 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067708696 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071257869 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068505185 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066464705 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074224631 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070446443 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068209044 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068638193 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067910382 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067080606 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062148792 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067487374 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068669825 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071983596 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069354531 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067069821 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077509754 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064952852 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067586873 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070242591 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066620069 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071784955 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062658193 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068048551 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067589882 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067662734 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061872706 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065577139 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064352856 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068580183 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065068781 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061114312 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075967818 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075259074 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069347081 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065535825 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064989504 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06176503 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.19823071 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067319271 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067961857 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068625613 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07704008 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066280612 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066248456 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062420767 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066635415 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07011309 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069898067 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06393409 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061791303 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066337972 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069503979 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072570206 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065640575 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066376137 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069993467 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069560587 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065134121 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069559757 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063658086 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070321619 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079364112 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067030588 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06782086 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072798999 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074676541 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06719824 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062192361 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066999962 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069217199 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067309403 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067206001 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067435764 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081881053 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070180013 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06589847 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065706287 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069376233 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066367134 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074872857 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068012575 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067375714 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071613095 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068569033 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075895151 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070169456 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074779259 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069713937 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070633505 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06674657 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067138159 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065028451 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06612394 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067590788 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06714442 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072643591 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074907587 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065923113 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077351873 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075989729 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068975862 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063449997 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06590058 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066502809 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062216565 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067562245 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065147579 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064744542 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064464782 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065164921 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067429034 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071743355 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067511607 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067566992 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066367115 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060979909 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068984702 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068674938 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067627347 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063456684 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066526752 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067048533 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070584439 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069577561 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064074289 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068323142 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068002024 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067245255 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061747956 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073067172 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065680359 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068869489 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06624061 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066323402 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067209658 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070005925 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071454297 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067303764 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068499447 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070401639 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069022447 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064013318 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063805925 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072119423 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064489676 seconds)
  done (took 42.398430804 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10103085 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064323126 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063169219 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063351521 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074680068 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063790671 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062464982 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06399029 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063651404 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066336373 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062751705 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06255669 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071492513 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078988442 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07513844 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067409511 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062837319 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063632772 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062769606 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063749086 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071727609 seconds)
  done (took 2.79789576 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075497512 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070897159 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073847561 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076479444 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068150048 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071365864 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073227301 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071428434 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077185481 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067970626 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076743618 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071026262 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067945886 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067866899 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068019219 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071500207 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085682971 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06827875 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071670778 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073507145 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071706964 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073229135 seconds)
  done (took 2.922789552 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067364892 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066230194 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068938788 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062079231 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066800313 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061848317 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070441879 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064614527 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069803082 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065748932 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065692294 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065824722 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068567807 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06238617 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066829728 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064922447 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110316251 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070233628 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.0662735 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067129895 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.0618758 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068682295 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062251351 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062386979 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065784182 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06995689 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067323282 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064711992 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066093626 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065782314 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066471727 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064324186 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068020557 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067370735 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065656982 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065292984 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066000769 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066000291 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061979559 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064326727 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066976755 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06218277 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066467517 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067706524 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064655433 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064551157 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067976684 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066493687 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061396101 seconds)
  done (took 4.603739745 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081178087 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109467463 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068383537 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089224898 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080774347 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076546038 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070116049 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089863263 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06368648 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064812954 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08197864 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080558729 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066293825 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070622589 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073175456 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066247876 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067318851 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065554113 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070939011 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065856145 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070507163 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072781205 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080441666 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08018182 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070299348 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06524246 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06553317 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070147722 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078801975 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070683719 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070746311 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071963806 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081277451 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071667112 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065391142 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068319703 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082548997 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066348931 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068586036 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063439466 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06787885 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070333659 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072188846 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082256416 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066024718 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070997733 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065844915 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062916651 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078614482 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068397468 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073516145 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08022585 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070023408 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065972639 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070546494 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080801513 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065576339 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063994685 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069476489 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078178341 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063542357 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069632939 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079496292 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067584677 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072828579 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080229125 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071142135 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069628174 seconds)
  done (took 6.407600882 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075735213 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073052523 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081546511 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080945205 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072360961 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073179285 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072483312 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072657333 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072288648 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077251721 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072929478 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093264247 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067880417 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075719762 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072697662 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073046173 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073050911 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072933888 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072943287 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072703522 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072820337 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080476231 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072766143 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080346485 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098538694 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067750781 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072475255 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072674514 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081236428 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07271358 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079829955 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072445142 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072591523 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080582763 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079973117 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07238109 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065608007 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072157459 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072711823 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07248444 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067886852 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08069274 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072325495 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067851029 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072377098 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071753504 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080242888 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079455321 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074950049 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077343089 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072583931 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080272843 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072356939 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072167369 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080178234 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105004846 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080569777 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080600472 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072366315 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07985523 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080620448 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086277722 seconds)
  done (took 6.076779725 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083868687 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075357233 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076625224 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061907336 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064682035 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070306914 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064093277 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064220754 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074961016 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074579475 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077322673 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0699582 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073017293 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077487358 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070056684 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073283772 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070133373 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070363039 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07485724 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070188057 seconds)
  done (took 2.79790113 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075272215 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083123716 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067654985 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072291464 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068893879 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072122523 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068412898 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069739452 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067381065 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069293928 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07625646 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076120138 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067029036 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071796956 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076014694 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071734907 seconds)
  done (took 2.503513778 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074508454 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072816385 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080092891 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066423549 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064547331 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063160428 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065850212 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061753002 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062428775 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078300808 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065898594 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068629921 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066189257 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064592398 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063217496 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06910218 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062546007 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063930113 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06610816 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078628244 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07676584 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064763846 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066412171 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065875028 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066264894 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071535209 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066062842 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064025159 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06368158 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066703316 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067053527 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069868002 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063697701 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064215807 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064965772 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063660226 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065599246 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066534456 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069449032 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066078921 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063811073 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065572744 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065756633 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06692037 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062268176 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066496488 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062224773 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068246612 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063879696 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066488514 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065866761 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06807971 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066942869 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072753936 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068613323 seconds)
  done (took 5.037139962 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079283418 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06992647 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062775131 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064576313 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068934241 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067981694 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069984311 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068143166 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068042056 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064362734 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068274583 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069295526 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067844675 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069314358 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068060316 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069872709 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0622383 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068282457 seconds)
  done (took 2.589481562 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070933263 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06641404 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073256043 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066786811 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065917722 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068495211 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062137344 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064945148 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06460899 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066046995 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066126999 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068036437 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06477782 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068752963 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065810242 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065976073 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068330018 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06451641 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066342911 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061988195 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068207303 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064602605 seconds)
  done (took 2.819208939 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072105433 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092722751 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138672429 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.084486256 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081671281 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.07840746 seconds)
  done (took 1.905748572 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090409374 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079451993 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066888895 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088735107 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0735003 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067321347 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06780481 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067940607 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076599465 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076171057 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067743463 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076481687 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07619647 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075969123 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073718731 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073457523 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067638553 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067317954 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066654995 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084252108 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06787185 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076327993 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067501385 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067457313 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067659494 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076173239 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075986765 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076379811 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067642101 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076092918 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073504727 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067597252 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076300514 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076131347 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069194396 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076218173 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06767659 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08465104 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073272127 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075978521 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069986765 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073818219 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077068738 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073536032 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076530449 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068449308 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072919909 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068659666 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068748897 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086859462 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073905331 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075589952 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074459325 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07649997 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077058021 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086999662 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076746301 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075864464 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073796197 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079171015 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075707034 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073684929 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075644328 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076634269 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0737223 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075942118 seconds)
  done (took 6.262254984 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082419636 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086857951 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068091003 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076355735 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075422707 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068183746 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067921684 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067930015 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067939122 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06737732 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107887736 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068131021 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076390015 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076648793 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068146636 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068202841 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067916923 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075833433 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067863105 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086604606 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067956044 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07557816 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075901357 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075758191 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076432729 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073389928 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067804665 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067967592 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067851311 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068401869 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073223872 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068504077 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07597639 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067580403 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07605528 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067960165 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067903555 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072809724 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067867027 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073111053 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076356333 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084620762 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067713411 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067704201 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076651959 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067876539 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068040158 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06770722 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068157503 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067850945 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076966993 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076954847 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076882573 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075869488 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068111633 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068105617 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06773448 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067675734 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068048382 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073409476 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076000295 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067639671 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086519366 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067976816 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068039204 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075838316 seconds)
  done (took 6.171604474 seconds)
done (took 128.817527958 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18679832 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172979654 seconds)
  done (took 1.714176585 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068278853 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097591697 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076558926 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128421226 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066577844 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099619285 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099072718 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078130392 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06636243 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066530492 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066429449 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068072193 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130708918 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067024289 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065907348 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06816573 seconds)
  done (took 2.680710207 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097101929 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.174590587 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100521297 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065280472 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097261604 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073179338 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064821481 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075104387 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071072916 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065470649 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07366943 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071062119 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065191172 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07112685 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071215252 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073469013 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065178993 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07323837 seconds)
  done (took 2.819219063 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099978291 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090386619 seconds)
  done (took 1.562773395 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159119399 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106543654 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.15628507 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.337910832 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162236147 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.232314142 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131391283 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129462867 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11928579 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123770162 seconds)
  done (took 3.026699052 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097645374 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148488968 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.25756158 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117659075 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072997611 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092133685 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116779716 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078244941 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077959452 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077888998 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078224646 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076765301 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09644162 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074178257 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07399667 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076715045 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099552671 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073185239 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075604224 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074314016 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097369769 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066049842 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074042119 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072567197 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075118718 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075866913 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066258948 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066097705 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075126666 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074524678 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077624225 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090586472 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075265882 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106592102 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070195145 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106647883 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076534593 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071611499 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07392725 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071692641 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076050968 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076033267 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072435099 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076242627 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065522883 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076501847 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065952867 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065940147 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078442185 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066961119 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078889018 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07746594 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106354277 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066987895 seconds)
  done (took 5.948697849 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.666432136 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104215848 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070516909 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108672684 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096831512 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072773536 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.692790476 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090713611 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.176996202 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092423441 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088668596 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070561178 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081559766 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083939938 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111821485 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10204001 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094334524 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071677427 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101007211 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.099517417 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068518429 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093783879 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090470647 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.376851858 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067412324 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069723069 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067861899 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070099956 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.111172038 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078247049 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069905404 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.121287076 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084659071 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.121864074 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067268831 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068503628 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067869157 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079631062 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.180055369 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.134326567 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.129938828 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067135921 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068006174 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068958868 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090008204 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067093619 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.111417916 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080416262 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.119470718 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07034664 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070131423 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067897019 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069306105 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080133956 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077631867 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080888463 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.22629675 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068187108 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067948747 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071491029 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.179388355 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079652874 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079685941 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092023134 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.131586949 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067133935 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.697666147 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0846362 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067677501 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069765951 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067521919 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070035499 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068667815 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.245392196 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.358178009 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07037287 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070299558 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069017251 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.151747513 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078955368 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069110358 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.11350702 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068134156 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068953364 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070700078 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070421833 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.118615019 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081275718 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070896753 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068555144 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069896808 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068725993 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068082586 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.16584725 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080841497 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079500501 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.16315678 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069986331 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.112903969 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079906189 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070760593 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079912458 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068646496 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070992728 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070126333 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079680715 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.096674465 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080221145 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070644515 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068743 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.098694118 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081725438 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068443695 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079069959 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.399334209 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080245512 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06753637 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081066096 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068448839 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.112819888 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07020648 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.181111015 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069244074 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079253925 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068774424 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067769842 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068267796 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.112168848 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069975455 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068853721 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069316244 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070551001 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079728414 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.134760549 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070235418 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.163006471 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.133603019 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070154291 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.119719874 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068579188 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.118403316 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070088438 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069277017 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067286325 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.689212473 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068521051 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068653874 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070088662 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.138474161 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067875615 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079257178 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077419338 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067124564 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.721703308 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079502099 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076585333 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.209565896 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070948983 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068985929 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068476525 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.0709882 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.111483093 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.147874651 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071377832 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069217257 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078363956 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.111919441 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067641569 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078995164 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078444068 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079086614 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068957342 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070443288 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081322854 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.121572943 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079027713 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.136621527 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.507023059 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069114222 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07773088 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.144901441 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069133926 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085826022 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069081992 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083325607 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.113882716 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077356807 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.230826124 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.11558545 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.138149385 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080548538 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082830076 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068030807 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067788854 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079387897 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068384008 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069993137 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078475938 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070255835 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07000141 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084687238 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069024991 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.176709948 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067647036 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079648104 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0675658 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070085823 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083899409 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068760085 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070306249 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079904047 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070179283 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077787806 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.785542142 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078302679 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068325746 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069790113 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.137133625 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.114550602 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068321656 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068172523 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070483313 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.110967165 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.158097722 seconds)
  done (took 28.390171232 seconds)
done (took 47.520646202 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209009194 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150424524 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.20248407 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11808988 seconds)
  done (took 2.150111088 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122650471 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101063218 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095006889 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065000059 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101799757 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065166025 seconds)
  done (took 1.95979983 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308800213 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210131067 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181460768 seconds)
  done (took 2.106934764 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.19784775 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187492127 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.39455341 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254217138 seconds)
  done (took 2.548381389 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142658981 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088809874 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067352615 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083729616 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134846121 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161464084 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101461199 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126367983 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078408903 seconds)
  done (took 2.443043709 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145664935 seconds)
done (took 12.767439396 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.194497416 seconds)
    (2/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.181568991 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.175536533 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095557037 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107017797 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.134032231 seconds)
    (7/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.204518354 seconds)
    (8/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.165636242 seconds)
    (9/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.172760014 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.090809052 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077630188 seconds)
    (12/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.186629274 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095836695 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134355653 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073503794 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.155394293 seconds)
    (17/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.148585496 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098358809 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078130764 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.183604921 seconds)
    (21/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101052779 seconds)
    (22/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074715665 seconds)
    (23/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069679409 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081976513 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.180614717 seconds)
    (26/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074388334 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087021804 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.199262115 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.147648099 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076362285 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112584811 seconds)
    (32/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.105270935 seconds)
    (33/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072023049 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064419853 seconds)
    (35/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191176381 seconds)
    (36/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052081767 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079656539 seconds)
    (38/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07657737 seconds)
    (39/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.146197463 seconds)
    (40/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068271823 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071321433 seconds)
    (42/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.120686237 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072342347 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146092475 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122973328 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051844505 seconds)
    (47/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.167744924 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.095410496 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076182246 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069730487 seconds)
    (51/309) benchmarking ("sort", Float64, false)...
    done (took 0.126177135 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.175086215 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073459869 seconds)
    (54/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.152055373 seconds)
    (55/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092448307 seconds)
    (56/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.106668046 seconds)
    (57/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.19497984 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.160870714 seconds)
    (59/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079294352 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072821185 seconds)
    (61/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064371344 seconds)
    (62/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.195449242 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108535855 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111676216 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072430255 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.107374784 seconds)
    (67/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.150505188 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177966867 seconds)
    (69/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051563391 seconds)
    (70/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.063458616 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092396344 seconds)
    (72/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.147132163 seconds)
    (73/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073081239 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06766636 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.172741598 seconds)
    (76/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078929636 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051094307 seconds)
    (78/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050807565 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096947837 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175831588 seconds)
    (81/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.136399931 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.14717077 seconds)
    (83/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.260326077 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.097313146 seconds)
    (85/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.141008222 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13765467 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.139746292 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066555046 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141255196 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 0.129674248 seconds)
    (91/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073305915 seconds)
    (92/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073507448 seconds)
    (93/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.151133871 seconds)
    (94/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072097843 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 0.067434231 seconds)
    (96/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113834757 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169068877 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.17294384 seconds)
    (99/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051494743 seconds)
    (100/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066587428 seconds)
    (101/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.140618296 seconds)
    (102/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074589233 seconds)
    (103/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.101463885 seconds)
    (104/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.204596628 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091191237 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101299806 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065811393 seconds)
    (108/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051386116 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082945798 seconds)
    (110/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051835137 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065625711 seconds)
    (112/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120954771 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.163821129 seconds)
    (114/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051336386 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094020118 seconds)
    (116/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076661449 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066396114 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.299614483 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071490832 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051702238 seconds)
    (121/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088342079 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073317131 seconds)
    (123/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08142036 seconds)
    (124/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107663157 seconds)
    (125/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069860196 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137454032 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099232078 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129803273 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066995721 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05273745 seconds)
    (131/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074809909 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.135158805 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074194156 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069247321 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093687214 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072880977 seconds)
    (137/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067056167 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05090256 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07102019 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071762991 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051297367 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070393348 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069251335 seconds)
    (144/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068057622 seconds)
    (145/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051958978 seconds)
    (146/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060619334 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052820647 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072580252 seconds)
    (149/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05232417 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086763404 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067208069 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077107112 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06475923 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072476871 seconds)
    (155/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.11465768 seconds)
    (156/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066158041 seconds)
    (157/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.137307435 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065184814 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.164463985 seconds)
    (160/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053946997 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07321021 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050692636 seconds)
    (163/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069048298 seconds)
    (164/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074999217 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086215486 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072722542 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.179526562 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097183193 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116428423 seconds)
    (170/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172006262 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088258936 seconds)
    (172/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051477405 seconds)
    (173/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076241872 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096490063 seconds)
    (175/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066916515 seconds)
    (176/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072554734 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.08992247 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053326886 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089489003 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089775923 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075299858 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051541985 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080133241 seconds)
    (184/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184869961 seconds)
    (185/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051736059 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070560832 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050590113 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067402373 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05374694 seconds)
    (190/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075343128 seconds)
    (191/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.110979872 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091935054 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071953859 seconds)
    (194/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052384947 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169393284 seconds)
    (196/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.217038347 seconds)
    (197/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052398872 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.0744479 seconds)
    (199/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053147462 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140570235 seconds)
    (201/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.135220361 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053664251 seconds)
    (203/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072985961 seconds)
    (204/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.158419943 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066148035 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07607816 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139364866 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064757312 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084599709 seconds)
    (210/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053211313 seconds)
    (211/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06157421 seconds)
    (212/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052372039 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051371893 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066612768 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066397901 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072920299 seconds)
    (217/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109643203 seconds)
    (218/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051580389 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073138231 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075322679 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126050172 seconds)
    (222/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071455344 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134196914 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08746811 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072458185 seconds)
    (226/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.110707 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.0526887 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052039634 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071246962 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110187731 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066502415 seconds)
    (232/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069032058 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053193015 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064850024 seconds)
    (235/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052234044 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051804641 seconds)
    (237/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06641904 seconds)
    (238/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067962811 seconds)
    (239/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065542348 seconds)
    (240/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052891348 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133111032 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067436087 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080452607 seconds)
    (244/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086391281 seconds)
    (245/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088515 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067189596 seconds)
    (247/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072233934 seconds)
    (248/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073249515 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077841496 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066892489 seconds)
    (251/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051556981 seconds)
    (252/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073256041 seconds)
    (253/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068346128 seconds)
    (254/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051602948 seconds)
    (255/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06465408 seconds)
    (256/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066962368 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.0715046 seconds)
    (258/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073265288 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05101815 seconds)
    (260/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.171940737 seconds)
    (261/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052223279 seconds)
    (262/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066859286 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06509303 seconds)
    (264/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052742025 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086892465 seconds)
    (266/309) benchmarking ("sort", Int8, false)...
    done (took 0.140000516 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088813516 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071723376 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066688932 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065289024 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065218881 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073331328 seconds)
    (273/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052848785 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088254532 seconds)
    (275/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07219304 seconds)
    (276/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068054575 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066081842 seconds)
    (278/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052515959 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134543905 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067854176 seconds)
    (281/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051960933 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051377964 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065465978 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065157802 seconds)
    (285/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051238885 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166305274 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072991172 seconds)
    (288/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050972422 seconds)
    (289/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051995758 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063786339 seconds)
    (291/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051078856 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064060953 seconds)
    (293/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072132087 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066863046 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072665913 seconds)
    (296/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08778631 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065436334 seconds)
    (298/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067276375 seconds)
    (299/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052503518 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052506229 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071119893 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088463248 seconds)
    (303/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053490684 seconds)
    (304/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06151194 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092527012 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065317983 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070885999 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051230123 seconds)
    (309/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071425843 seconds)
  done (took 30.356596415 seconds)
done (took 31.774331429 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084909159 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093480785 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076095122 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092503475 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080666412 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076673679 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072406595 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078935192 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080138303 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081952471 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07858603 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054965312 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074207405 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074464949 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074433664 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091492417 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078146932 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072442633 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073151874 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065116801 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07308421 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065860228 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06746351 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054897551 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078036335 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071843971 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072594878 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074083787 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066052442 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066033317 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06919976 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073193092 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065640143 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077582289 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072219029 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072963978 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074516082 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07594096 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067232118 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066027842 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073788539 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066060407 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07247082 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072936527 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071613914 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071598036 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072796574 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077971209 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091423106 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067763408 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074644685 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076295571 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076029997 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072104012 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069276838 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072678566 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07120818 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091305069 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073421743 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068245157 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073862668 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073797271 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071172299 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073044957 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073206495 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074984202 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075303949 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071055088 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074582743 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071047987 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.0655273 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073519929 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068747937 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065672767 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075841131 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076520159 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064392772 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071111091 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072971084 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07183299 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064807804 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067598595 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067125056 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071693776 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06723128 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054659121 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.0691921 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071882019 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064345429 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072871912 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071447336 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072110976 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067616592 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075527125 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065027078 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071389105 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065609046 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065595263 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067234293 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069108546 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065850766 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06743391 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07415996 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066946237 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071189469 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078912469 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065277623 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071375264 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06412684 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064705419 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079365559 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075131824 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06525642 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068197635 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.0644299 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072026848 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064673094 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065225668 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064783248 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064931241 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070420628 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065291587 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067275185 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072182347 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077145474 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065111906 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068027211 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066833442 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064891141 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069956356 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064690699 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065167561 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201181831 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062799109 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068006584 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065720309 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073101939 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067932864 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072784032 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067924059 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073864601 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070638262 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071485589 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07096751 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064686276 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058602716 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068069431 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068536969 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067348326 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065961269 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067456326 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065626206 seconds)
done (took 12.461505444 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06662707 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142646894 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098819622 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095216301 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086246821 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066682144 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076236401 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101756717 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068053314 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102233995 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087029663 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084846272 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112517983 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064929984 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066214811 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070082038 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06730504 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082040477 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10085092 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086526134 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109692302 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065354333 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094636005 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08980366 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087229243 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101385208 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066990501 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070296382 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069585631 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09122026 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086667333 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069645576 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066772803 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100975448 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092135318 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083640771 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066708528 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082352682 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066751121 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06607671 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.081187575 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097827215 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08000742 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080033244 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069632598 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068917026 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067132871 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08331837 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088933726 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078418667 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086513368 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103504455 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068849023 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065685792 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064610781 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085404327 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065621748 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068837488 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066348575 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067959492 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066363863 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069454292 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081466348 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086713216 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069674101 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080305062 seconds)
  done (took 6.82374722 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083890377 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089252495 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083211403 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082977405 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065418967 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066761466 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066521716 seconds)
  done (took 2.046999716 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066303297 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088123301 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089209901 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08920714 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084550267 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087286877 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07556509 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066607058 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080262655 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067534694 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087854349 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101952813 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067065657 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.0729512 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090554979 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066516657 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090554469 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066895717 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.0700967 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090235367 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068368345 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08210429 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069918289 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067121514 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080792563 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066670526 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113266319 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071143294 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068126176 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069692863 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064646167 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106325438 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080075027 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075709806 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066933174 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08134033 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080965129 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065237804 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082552565 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072413654 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080853327 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06737307 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067461078 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064830021 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070900606 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076833976 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067552712 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067308761 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068805142 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086140127 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066901115 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079695672 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070838707 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069277817 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068010062 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070206666 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07608367 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067315415 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085589524 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067722179 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08350857 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082928866 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080245636 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082728019 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068590477 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079893848 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080139466 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068913784 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068095994 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069961564 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082999 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065200707 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06809028 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077142793 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068314666 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089493382 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089666658 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068263199 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075848347 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067433747 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066888458 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066607407 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08916562 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069012685 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066374912 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070656148 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069013593 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064875266 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065418041 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070100492 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065137735 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068324867 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069435064 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069828339 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069350006 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082800536 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068860834 seconds)
  done (took 8.782610961 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068939012 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068029031 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070248911 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067961935 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068187226 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068359845 seconds)
  done (took 1.94577164 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094265933 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070143174 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081214842 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073171701 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10532391 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087777911 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087420456 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079462229 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083995977 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079459909 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087297603 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.0886863 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092962069 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072975887 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086763021 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072106461 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087521072 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076171242 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078548702 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073085975 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087220735 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07335447 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073167061 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082200742 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075825374 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072642752 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067548623 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079088186 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078829008 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079595478 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072763111 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075848439 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070806142 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078862323 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087426613 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070766325 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071949909 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.0775179 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072951954 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07564322 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088074455 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073293876 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074755552 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077545181 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078751969 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.0706979 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077360428 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076274322 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08658137 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077050276 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077452228 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071561517 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.0755647 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077308134 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070107006 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078518049 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076838792 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086245217 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072401634 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070138834 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06931044 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075306643 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078454612 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075060875 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078769971 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077359879 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.06995255 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072877466 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073131169 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07175778 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076841616 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06901812 seconds)
  done (took 7.11978888 seconds)
done (took 28.213741919 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.547441487 seconds)
  done (took 2.052112487 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.622069829 seconds)
  done (took 2.149707571 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.164168131 seconds)
  done (took 8.685870822 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.398115333 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.51176074 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.714765367 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131105857 seconds)
  done (took 3.312862197 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.659354229 seconds)
  done (took 2.19234273 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210563346 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196278855 seconds)
  done (took 1.94776637 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.370541801 seconds)
  done (took 1.894302355 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.105893307 seconds)
  done (took 2.632002002 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263191455 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163117244 seconds)
  done (took 1.957647539 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.458792943 seconds)
  done (took 1.989189657 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.824277669 seconds)
  done (took 6.355560952 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206073805 seconds)
  done (took 1.780937337 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242055533 seconds)
  done (took 1.775636859 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.677113411 seconds)
  done (took 3.212018461 seconds)
done (took 43.469696294 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079271814 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080460648 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081019724 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077964731 seconds)
  done (took 1.839723596 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07703855 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073006683 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076939467 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072578398 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077175432 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072201562 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074268843 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076226022 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072034592 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072847719 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072511746 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072458721 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074068682 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074268281 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070837601 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.0747389 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076010343 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072159551 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075530894 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072461845 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070807102 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074551879 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074480548 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071938916 seconds)
  done (took 3.306986635 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077279062 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07314183 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074048383 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071347399 seconds)
  done (took 1.83586343 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076653079 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092015164 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088637149 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076961943 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091969502 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085547172 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068864401 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068863183 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072641938 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07695912 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068294239 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096163381 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087486457 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076519164 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078838636 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065722051 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068032289 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086509283 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077309051 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077519981 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069681511 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077052999 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06734786 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087853608 seconds)
  done (took 3.420093071 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077909787 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102828018 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077484724 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086970865 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089682917 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065446978 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074035437 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088661239 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122345951 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06496761 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069787453 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065405018 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072184026 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064863031 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075972212 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104505906 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108030319 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068633225 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095412991 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06559607 seconds)
  done (took 3.187228729 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072212852 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068763544 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065252974 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069329347 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077763923 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072119591 seconds)
  done (took 1.971111982 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068275934 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066749074 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066935555 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067086105 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071241534 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066860183 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065650129 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067309855 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066533044 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067012907 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06671249 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065612331 seconds)
  done (took 2.347384956 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.325737826 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068512375 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068426673 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065886066 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070811529 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066330408 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079912213 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068098555 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090231181 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06616172 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066212394 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068167222 seconds)
  done (took 2.647964594 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206085889 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076147686 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236797373 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136779252 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111510259 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115526637 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104162503 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113311005 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14334479 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101840135 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167686326 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166148819 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106713748 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137552969 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089035758 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097775072 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155795532 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162867693 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10361415 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166086204 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143934119 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12518823 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14676854 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10109268 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105577028 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122464693 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070779996 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07969987 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170693924 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132248886 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147786243 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111137468 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093448673 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176598016 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170974355 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142640399 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133954032 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083917164 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101318394 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13318216 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200214114 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088609161 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164044672 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245003877 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080960457 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140475614 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121332812 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120210686 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107018394 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08922462 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146962517 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182488891 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138474714 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087205387 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112653187 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114947837 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117780877 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103378734 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181371408 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161372422 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12868221 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071227813 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099274391 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153280157 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131792966 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108305805 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126947882 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094455627 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133502402 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154659093 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119411396 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143049966 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128397449 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088094636 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118487899 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139265407 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128377451 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169752536 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125323031 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072189344 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124862631 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103583742 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081338548 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142627016 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075510339 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17541046 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098870257 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105744283 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112548943 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108557307 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108832355 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161526019 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143267644 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244118938 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066475156 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105021049 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121299454 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148284696 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087732955 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108656001 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117089504 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077682514 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138903445 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074867609 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123425359 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075542403 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125801041 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133516827 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075694682 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1215133 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102350891 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.0997637 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13337012 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159242468 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08888986 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082729597 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167001374 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121508542 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104985054 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143240447 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154492527 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098877678 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102171082 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150381066 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180944587 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089394693 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163067097 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107455952 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083480795 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087058503 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127154884 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116015553 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126215515 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083626129 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118874369 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168419191 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075458897 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095601914 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13428552 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078774109 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081084374 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103529341 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10024974 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095026454 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099891416 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104443202 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138573541 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12268377 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104746234 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268800781 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098454982 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170879027 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088486627 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100528485 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104070411 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069218144 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13663683 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156133412 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079220838 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164653013 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123481801 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104941986 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119015212 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083087615 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1401541 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07888571 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070748768 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145735213 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111283783 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110991456 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150941973 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104646056 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127735987 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119029722 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134992075 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133227353 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129008585 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105007863 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087281779 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111438142 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125869748 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073132989 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091176604 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080114462 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103939902 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095606088 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082844324 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143063004 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125036807 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100906218 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111181862 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096949462 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146742918 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076379466 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129823965 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118972151 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094619037 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152443928 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151605337 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131083626 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098787678 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144605761 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070109255 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073837877 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089153586 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.266591185 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083848674 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084182847 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118252562 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147063863 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129174012 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139096256 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112191915 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121951311 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154797001 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068779784 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116308128 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147088525 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121122635 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104399947 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090040409 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099246063 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142129458 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108372406 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182530263 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11383896 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12580471 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153599615 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099044563 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079540566 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102772715 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135681983 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105075416 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14923637 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099359407 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087502061 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10994809 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07413379 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100111999 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127632639 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120065839 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135680576 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114473638 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133258096 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077009498 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116985727 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121003778 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122955657 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063971167 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120906498 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16124989 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093458318 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118258509 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153198392 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078979801 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123747833 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174243495 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145107201 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083582803 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10830983 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117004206 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12505795 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116974023 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136730758 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107409612 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13204645 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106939018 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084179826 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085574733 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09579952 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102606705 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092790367 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104868035 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111200988 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092889886 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127703135 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099843731 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106938564 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114651343 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094589086 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.0877915 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094215707 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169418384 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116588559 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165518276 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096366716 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140673236 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158988438 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073092261 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077431327 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076432104 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136125444 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081607951 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127988234 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.095176767 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102916902 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120502195 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137840726 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091949091 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066818635 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105375375 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130034221 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108915874 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095288443 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10125546 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157575333 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098137799 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077607194 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110800076 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102342956 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098866808 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161092043 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060154666 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.349883908 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077368839 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083117888 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129839087 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156144706 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082712679 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102230689 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121062857 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111755522 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128932667 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102824898 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10015423 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115541516 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152791147 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130581573 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090436765 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114522583 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131810397 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15866911 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106197221 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096351975 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172378307 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154089344 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178260312 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088934806 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114577634 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115251122 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11225212 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140095499 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083535467 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164884112 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081989965 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137637681 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10453096 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090469586 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130240704 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099546713 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088356031 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148126857 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11809945 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0825812 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077994174 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118368969 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120611149 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107214116 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075437418 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140413077 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072656362 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131936464 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169182026 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080996664 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103994363 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244489708 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080447422 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109138223 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102728991 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089995152 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096619538 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173768609 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088836148 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150631246 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142070545 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11400483 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137409541 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100381325 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637288626 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07850547 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153501523 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117071596 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173702043 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098417237 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118200784 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10972006 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124848694 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144649177 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105646863 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176633628 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132050657 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116600692 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080335416 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102525143 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102700778 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089072645 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105089488 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113844585 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116174281 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093493267 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116218544 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12431703 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081980184 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09505092 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156498732 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117087128 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14536831 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140982936 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085108041 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118089734 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139281653 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080080061 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122681967 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152022315 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106052234 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097672186 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080364329 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.247805689 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170947032 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073742194 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162793122 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121566944 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109354164 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113204865 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115881526 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132310992 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108559711 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121423713 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093982573 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110230994 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112904266 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081802658 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076725894 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104768396 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112207778 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097285215 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09950514 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098006545 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152252687 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070861246 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095560928 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104002158 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144931051 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173702422 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.0874489 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08258219 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118920416 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112485287 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113383001 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120916778 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079574971 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082318483 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082102254 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076593872 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107930735 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111742497 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104394549 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111620104 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164023761 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082119681 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222653174 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095056171 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104633664 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069703012 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078548614 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095778816 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097282485 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108580882 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100964179 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171527033 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094896412 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090387366 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092741992 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072511222 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082233718 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12763086 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254625289 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119853599 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097617284 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061826804 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109230975 seconds)
  done (took 58.789396746 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108463109 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082512269 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096609105 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149501872 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12222246 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211927889 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156768309 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199778523 seconds)
  done (took 2.802997036 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067742913 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094414912 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099376771 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082659034 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067019276 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067964423 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226152579 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079870006 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066204879 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088305571 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078608663 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068423698 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.400291897 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065756054 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067196378 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063164463 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067348217 seconds)
  done (took 3.418847529 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373921404 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.363722446 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.37177587 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072986214 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.661459329 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088280454 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.07951746 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095367184 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070594762 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.278953414 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.69618112 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.094619044 seconds)
  done (took 13.924968383 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074669846 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069179397 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083929876 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084093034 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072017936 seconds)
  done (took 2.059364586 seconds)
done (took 103.124403298 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079311386 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.297045147 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053273956 seconds)
  done (took 2.053117871 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082603324 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084697012 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084271671 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082327255 seconds)
  done (took 2.019109046 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073779484 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075459176 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084303875 seconds)
  done (took 1.91435792 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223514638 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138866131 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08657955 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081500025 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078157461 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077946836 seconds)
  done (took 1.924081597 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072225117 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074759001 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072985861 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076580754 seconds)
  done (took 1.978299335 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075585492 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052249176 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055306233 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055928996 seconds)
  done (took 1.9216715 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086407903 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078407296 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077407585 seconds)
  done (took 1.925898889 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106519301 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085476967 seconds)
  done (took 1.875613454 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081735376 seconds)
  done (took 1.765875465 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097782164 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112663474 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128708966 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109067308 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136134201 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108927852 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085195482 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086821882 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076872069 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087062535 seconds)
  done (took 2.713209425 seconds)
done (took 22.292236852 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077660406 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366281268 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360155312 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091393311 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668939753 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357004767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98402094 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091890827 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12149266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067192706 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083481618 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648065711 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.011960677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325449856 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.999969249 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323463945 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650572772 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067757713 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067288086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067798038 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971132749 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066960596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067852753 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068277113 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649765667 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370535847 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067922572 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318671059 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067371171 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069290442 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354542429 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067533091 seconds)
  done (took 16.243391665 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070388958 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117202145 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07297155 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08338534 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070254454 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069194905 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071365126 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068799031 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125402018 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067780797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084266337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067216066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071715929 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068525912 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087117694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067909871 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068717907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068442577 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068317253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067916556 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086436673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067344814 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068267882 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068043334 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067633531 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079863655 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068482163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067863496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068366884 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069991763 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070965025 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068540093 seconds)
  done (took 4.085780908 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114713558 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125566968 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074316529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103375137 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112354454 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06978014 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143460083 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092815326 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127318992 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067860625 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084231235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067707923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100939406 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068909597 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087793063 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068283191 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069068489 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068393155 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068410799 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068830484 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086708099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067889283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068343151 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068401171 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068277859 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081424004 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06861341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068578157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068167728 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070101574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071659139 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069024933 seconds)
  done (took 4.342131804 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071983484 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075495862 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082353093 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082523568 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069088615 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071467191 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072099762 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069397281 seconds)
  done (took 2.298125929 seconds)
done (took 28.657682317 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07853951 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069077852 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072393644 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080546412 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07290452 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078005129 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066676235 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07423467 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071671162 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072701012 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074762429 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067489504 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070326305 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066923411 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073344349 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067667482 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079231971 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071312414 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078890693 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07911197 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069924871 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073275578 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073519834 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079183227 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078764009 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078829167 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076815053 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072083536 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068734912 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07009128 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076444989 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083369138 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068461765 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078973185 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068032039 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067956153 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071383893 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06778369 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078866387 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076655783 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070019075 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076344906 seconds)
  done (took 4.776105174 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088319456 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090156352 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084699025 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061112317 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066687539 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064822512 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088923645 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059787328 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059605902 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088080177 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055735444 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059388146 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062303724 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054058324 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059055842 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05660935 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061567161 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056312535 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.0592404 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05918109 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057878138 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054191467 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060088277 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065143838 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056353576 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061805416 seconds)
  done (took 3.402222534 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074188882 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084185454 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088426571 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126305174 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103859874 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076803347 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077711995 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092287207 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084827473 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066611044 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070685981 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093582481 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087579484 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073547933 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068108258 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084440207 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081790124 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068905533 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073223397 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089999786 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083706373 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083116816 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092028684 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080188503 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066224333 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069057808 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070819932 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080669006 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071875707 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075679605 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071220882 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070428975 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068917792 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078270011 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071111237 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068639893 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089850651 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076437603 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077155126 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068264021 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070609753 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067888096 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088876105 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12233407 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066845541 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07371132 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074906801 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076252511 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067133241 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085355292 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078241708 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066787732 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070538079 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066721539 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067382807 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080345331 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069443036 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.080733766 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076409399 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070278035 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085049002 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071169764 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08247894 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067104147 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074994871 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066627595 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068270261 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066266525 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092008605 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068894253 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107789833 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068174981 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068640091 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076157256 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074663761 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07292177 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068169438 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08218718 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077564766 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071002155 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075931191 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07030875 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070157772 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086861393 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069198056 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068288269 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067758444 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073492613 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069683344 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068823771 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079508082 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06731779 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07003449 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083361368 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066770183 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068689555 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072993421 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071942039 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06692541 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077850447 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071995653 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06775574 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076266562 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067001234 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070179547 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076910761 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073260611 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066325257 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071961995 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073297194 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067819221 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068596533 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070266337 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068931411 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076401226 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073696754 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072201812 seconds)
  done (took 10.584711846 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159225644 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152304193 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070390629 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144032678 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076048241 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079284937 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14684789 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09451936 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06753956 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068074957 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06884448 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115235186 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10596266 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121925962 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078363897 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06761014 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083209043 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117887533 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148522523 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142070371 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083468664 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076531227 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070081522 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068756333 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075509213 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081902273 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090867972 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076282532 seconds)
  done (took 4.476091102 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080552992 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100302815 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073859923 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088586383 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090635287 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067625087 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069894537 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069402114 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080254878 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078733621 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067208609 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073257455 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073921293 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07359131 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068379677 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074784325 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074850152 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069061796 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070740147 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072647221 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077303091 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080432005 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071512858 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066904508 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073797396 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.0668191 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064834317 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084255775 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06807971 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090096814 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065676843 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074985738 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081219259 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068881536 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067886943 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067468052 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067691826 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066980653 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069412837 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066885796 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066256288 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057765349 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066559052 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079421097 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073618739 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056333966 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072193657 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07250895 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072187054 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065292581 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070465226 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069745998 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070664415 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074542435 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072299753 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072598046 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068582782 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066075401 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074793269 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067233412 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064277353 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066220437 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071822345 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065983893 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074902099 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071981582 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066347448 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067051747 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068913005 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073820932 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067547163 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070086286 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065240274 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069446288 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072100029 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06887881 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068211091 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065935912 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067013576 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067539276 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055381194 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067283235 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053509965 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07066052 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065816419 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066047198 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067680293 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072240473 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080435772 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068740665 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073078147 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06798179 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06601983 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070372374 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060416816 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070350208 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082137157 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08260426 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067616069 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065945137 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082059282 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071907028 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066369625 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056051878 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075250325 seconds)
  done (took 9.182542982 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093953479 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088456639 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069679802 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083724179 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091102237 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086444983 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074425889 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076324611 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069141821 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082732771 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073756521 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075886654 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067805428 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077037963 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094246623 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076307444 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069878794 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077163874 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07198896 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101689212 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082711382 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082066188 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074835317 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068422454 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075905794 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079910677 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089494173 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080116515 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078018832 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075254132 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079571565 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089683291 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073874785 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071802478 seconds)
  done (took 4.454282166 seconds)
done (took 38.573616625 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.793145948 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.951875549 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.780997069 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.128135559 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.098643225 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.800377534 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.927284538 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.778414401 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.061017475 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.817357617 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.033650596 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.820505772 seconds)
done (took 65.711765153 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.803797111 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.925007704 seconds)
    (2/2) benchmarking "String"...
    done (took 2.085898139 seconds)
  done (took 5.731989865 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.082122416 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.30874842 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.025431392 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.777546396 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.785337456 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.086350278 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.575869038 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.304173207 seconds)
  done (took 30.584846113 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.970855395 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.236365109 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.436390808 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.474868649 seconds)
  done (took 15.885935055 seconds)
done (took 63.884114676 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.807897542 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.790656828 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.793829125 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.764719085 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.83800825 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.796430124 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.168133228 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.814957939 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.781022695 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.771611035 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.782105407 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.217717569 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.787122685 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.173328891 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.780264564 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.788390939 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.831485982 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.242410423 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.935697417 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.786733083 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.80409351 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.804022712 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.78296624 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.790647184 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.823118064 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.783640104 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.210577257 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.789723357 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.410266322 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.783626253 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.815969703 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.316231358 seconds)
  done (took 204.490033125 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.780621421 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.832264097 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.905306956 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.818521821 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.311119347 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.982094769 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.911083397 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.348218422 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.786427796 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.81175459 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.146179538 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.782855032 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.155838809 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.79131655 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.789229655 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.892833662 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.0752302 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.129847154 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.781572898 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.035663551 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.79486569 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.899297952 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.873034166 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.080341811 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.821726687 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.857315676 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.805458998 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.954073494 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.979900619 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.063240585 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.825351965 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.825186817 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.003881948 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.654144942 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.787305943 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.787935751 seconds)
  done (took 171.804590059 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.174728998 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.781946699 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.781311273 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.783174394 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.78291279 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.7949221 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.782849631 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.904727133 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.917253227 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.244327912 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.165093058 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.8336618 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613644154 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.782625886 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.851403836 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.796409387 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.787045854 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.798670069 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.808988397 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.784089676 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.784885799 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.909584385 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.796513891 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.309942072 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.793933939 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.785023016 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.790240729 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.153783359 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.785758832 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.790620801 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.045696499 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.786573322 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.784966802 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.685436903 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.148138104 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.875055751 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.785675217 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.785644392 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.790758739 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.785053973 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.003908855 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.785507849 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.785253266 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.78779298 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.968212943 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.785049715 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.910260072 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.785265735 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.2898059 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.785448326 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.784628879 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.544998908 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.485692479 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.787574983 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.78515027 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.787319632 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.786174902 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.785793249 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.792078271 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.547292668 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.859836071 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.786266409 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.786604697 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.788399365 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.791746262 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.786063031 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.8468626 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.789039576 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.289094059 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.845948807 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.890908885 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.908832311 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.790067734 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.854462359 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.881116304 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.787620653 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.785934918 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.786572169 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.786163681 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.867521555 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.786436205 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.908073214 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.793230363 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.787393023 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.836041021 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.855628788 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.788108547 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.68239334 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.78989933 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.787104027 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.10136231 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.854696433 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.787313712 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.78714639 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.787593144 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.914260188 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.918873149 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.555691151 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.790533562 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.497745549 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.78948421 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.926207042 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.789319034 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.977974436 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.790449866 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.787865746 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.869938817 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.793182494 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.789863679 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.788159412 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.819081502 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.789163511 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.845957995 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.79198904 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.159613618 seconds)
  done (took 404.70247175 seconds)
done (took 784.946578213 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.438329621 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.4080914 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.521975508 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.434527046 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.409717499 seconds)
  done (took 13.942209297 seconds)
done (took 15.670691071 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.875737461 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.880614133 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.812690461 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.87702772 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.809392218 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.87666833 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.859023605 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.814040031 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.844381625 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.814627456 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.845736309 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.813481455 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.800700549 seconds)
  done (took 25.654371695 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.017089393 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.024316853 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.858394532 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.025280987 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.834682747 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.036793584 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.950337701 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.942025857 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.938536988 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.804420382 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.802254593 seconds)
  done (took 22.965280515 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.028586151 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.025837476 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.861782312 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.024803419 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.835981109 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.026017208 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.966420245 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.94338892 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.942560061 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.805295362 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.803872557 seconds)
  done (took 22.995940183 seconds)
done (took 73.344944994 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.799032844 seconds)
  done (took 3.531344197 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.82123676 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.957976348 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.804765174 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.802080626 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.798847957 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.800286346 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.803502795 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.799060147 seconds)
  done (took 16.32115868 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.795795618 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.795269359 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.798453518 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.795707318 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.795998117 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.79682141 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.798596466 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.798637537 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.795974215 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.798375866 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.79828084 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.798541869 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.798924199 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.795438325 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.798546717 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.795941201 seconds)
  done (took 30.488570166 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.798047835 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.796070766 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.796309907 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.797390395 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.796395881 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.796649774 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.798056453 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.796791329 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.797040573 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.797162182 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.797643124 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.796675455 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.79727784 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.796989655 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.796965739 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.796989417 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.797610525 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.79770505 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.801735915 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.797690654 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.798166686 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.796788022 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.797874756 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.798701933 seconds)
  done (took 44.873934817 seconds)
done (took 96.94663798 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.459452254 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.20209943 seconds)
  done (took 8.395613567 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.80175954 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.799660871 seconds)
  done (took 5.365850119 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.800979074 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.799924153 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.801216702 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.801387978 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.800804787 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.801323406 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.800521958 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.801133045 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.800235074 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.80082598 seconds)
  done (took 19.743237503 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.801240005 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.80091372 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.799079649 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.801263965 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.800222649 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.798357956 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.801706172 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.801934025 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.801284199 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.799662823 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.801418585 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.798735872 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.801580101 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.799542779 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.802251681 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.79848378 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.799075434 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.79975053 seconds)
  done (took 34.142175393 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.801664754 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.801607282 seconds)
  done (took 5.339163672 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.799207927 seconds)
    (2/7) benchmarking "second"...
    done (took 1.798773338 seconds)
    (3/7) benchmarking "month"...
    done (took 1.799577736 seconds)
    (4/7) benchmarking "year"...
    done (took 1.800280236 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.799392789 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.799780292 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.79929479 seconds)
  done (took 14.332619881 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.802750913 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.960581441 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.03461478 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.498367757 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.803172285 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.806395752 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.729128423 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.806211803 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.809040468 seconds)
  done (took 19.986731524 seconds)
done (took 109.039188143 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.621054686 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.799122589 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.123358139 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.89704225 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.816595254 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.143274701 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.833840611 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.024092322 seconds)
done (took 42.995238977 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.870541476 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.261193329 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.27175334 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.88082194 seconds)
  done (took 12.150748694 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.782898143 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.323610989 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.831080799 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.388158446 seconds)
  done (took 20.081241141 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.166223323 seconds)
    (2/2) benchmarking "read"...
    done (took 2.151256104 seconds)
  done (took 6.060067407 seconds)
done (took 46.900630081 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804405998 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.801305039 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.80578735 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.801308076 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.804916813 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.801767105 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.801841189 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.804649351 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.802230868 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.804811761 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.805259047 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.805538507 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.803673181 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80489983 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.803943227 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802644815 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805462318 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.802958761 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803324453 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.806460501 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803200748 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806092243 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.802264118 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.803141121 seconds)
  done (took 45.031019351 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.805592413 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.80364156 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.805298517 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.805854552 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.803407136 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.80610206 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.805900751 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.803237095 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.805940733 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.805932364 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804269855 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.80363652 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.805957603 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.80325295 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806661791 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.804119446 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.806490862 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80402037 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8066718 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.804543925 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.805981833 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804860506 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.803957969 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807729194 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.805049593 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803970898 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.806958174 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.805765608 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.80711261 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.80439429 seconds)
  done (took 55.897020655 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.812688516 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.814455602 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.807076494 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.80786698 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.808287667 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.807339991 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.80701429 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.807334373 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.808053191 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.808512698 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.808639982 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.807586617 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.808252286 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.807881243 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.808074532 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.808034406 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.808704318 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.808515333 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.808099039 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.809227731 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.808518531 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.808630992 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.808798252 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.808664444 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.808116871 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.809564452 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.809820729 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.808633047 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.809047953 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.808677911 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.809241926 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.808471853 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.8097496 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.808810819 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.808535138 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.809464246 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.814345723 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.817851577 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.80905302 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.809716863 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.808559067 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.809751764 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.810026589 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.8093394 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.80872215 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.809282273 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.808961271 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.809930248 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.809620671 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.809855766 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.809589654 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.810082161 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.810378647 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.810164167 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.810235721 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.810222484 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.810708499 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.81093388 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.811395824 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.811009448 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.810342319 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.811058937 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.810919128 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.81191561 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.811769077 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.811037144 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.810580147 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.810444562 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.81012635 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.811260786 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.810289625 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.811688327 seconds)
  done (took 132.04038401 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.811311312 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.808475393 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.808081407 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.808579473 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808696063 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.811765635 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.809326658 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811306201 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808809946 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.811285273 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811559734 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.808558885 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808942552 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.811476347 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.812070645 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.8089892 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.81135034 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808445366 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.811850033 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.811970802 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811775972 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.809480869 seconds)
  done (took 41.570163245 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811634991 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.813139391 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.809967901 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.812671384 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.810315268 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.812471553 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.812487701 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.812660169 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812017379 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811179231 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810243747 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812288193 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.80997831 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810572798 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.810622295 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.810698565 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813423027 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.810708495 seconds)
  done (took 34.353980239 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.810750643 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.81116181 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.813904536 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.810689701 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.811702011 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.81402558 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811572469 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.812885161 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.813828313 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.811397118 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.814314833 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81460203 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.815137196 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811638559 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814393043 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.811216543 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.813858097 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811698033 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.814429731 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811622703 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.812097963 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.814041753 seconds)
  done (took 41.629060932 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814135026 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.813477512 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.812836399 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.81193103 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.811679181 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.814562437 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.814926937 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.812331512 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.814892104 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.81399506 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812334176 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.81421546 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.81205965 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.813735852 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.812773461 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813078552 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.815024448 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.813024352 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.815470324 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.812460511 seconds)
  done (took 38.018258244 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815737281 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815884783 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.81575447 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816614598 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816708864 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.816436765 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816861343 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.816403897 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817270527 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.817441784 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.816890066 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.816493613 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81661952 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.816509096 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.817161531 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81757125 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.816855514 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.817585912 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.817327398 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.817219732 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.818339912 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.817148748 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817053586 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.81745553 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.817617766 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.817567398 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818027745 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.817234883 seconds)
  done (took 52.626297763 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.817288849 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.816862724 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.814191641 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.814212452 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.815016722 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.814745846 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.815197344 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.814438241 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.818080533 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.81434236 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.816983616 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.817596804 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.817816955 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.817447751 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.817445647 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.817553739 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817076909 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.815009886 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.81482452 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815107658 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.818021612 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817620695 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.818249661 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.815018588 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815044932 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.817912557 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.815470246 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.815894588 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.818524812 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.815528331 seconds)
  done (took 56.239924476 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.83619896 seconds)
    (2/2) benchmarking "in"...
    done (took 1.836381686 seconds)
  done (took 5.425016652 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.815735607 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819785854 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.817826836 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.816635286 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.816373119 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.818698573 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.818916026 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816391614 seconds)
  done (took 16.293300694 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.818658254 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.818899853 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.819219283 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.819525434 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.819126635 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.820846547 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.827698263 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.819370116 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.821830413 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.820057368 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.827026525 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.829497562 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.824048964 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820004183 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.820893411 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.82161857 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.819222415 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.820499239 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.819979519 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.820614597 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.821118294 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.822788945 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.82173492 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.81784981 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.822951773 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.833024692 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.826528886 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.819608262 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.821237714 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.826876267 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.82113582 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.817473458 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.821292728 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.821120376 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.820355099 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.822045657 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.831824 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.823192327 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.829159799 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.820742412 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.821217076 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.818352535 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.822662132 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.825517072 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.822818879 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.821670256 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.820816411 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.819086642 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.822288329 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.825152348 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.827078881 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.822090565 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.819583521 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.827552478 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.823326163 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.829540321 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.822095919 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.82595078 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.831590984 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.835666645 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.838806911 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.831241592 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.824050288 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.823545245 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.833617997 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.847132957 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.832108419 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.82022255 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.820488605 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.822680796 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.833383141 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838962552 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.833268984 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.822614864 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.823748892 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.823233879 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.824398131 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.822669027 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.832688493 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.827002204 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.824033503 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.823594673 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.833987925 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.846366361 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.823172896 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.823483749 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.824289327 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.824228487 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.825247632 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.834907325 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.823285698 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.82410618 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.82425596 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.824357707 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.827583578 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.824471277 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.823137794 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.826091108 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.822136435 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.823571102 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.824899384 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827642357 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.834779601 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.824645838 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.8254139 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.833852541 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.824516903 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.82497193 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.835865913 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.824718455 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.826188 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.826080443 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.835520814 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.822350019 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.828813516 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.834380042 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.826166847 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.826781792 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.825424953 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.824727532 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.836188908 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.852666415 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.826560983 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.825017928 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.831597648 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.837891059 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.825472012 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.829965218 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.826020512 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.823269696 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.823622922 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.828008378 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.826271427 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.82728625 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.826704856 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.828781469 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.824059051 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.825816524 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.827287158 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.828307998 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.829335842 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.827412401 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.827940087 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.831965197 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.827663441 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.829201707 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.836342274 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.828320907 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.827792 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.829482495 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.824635296 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.827661024 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.829945724 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.827727236 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.828619631 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.82738236 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.827840119 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.828321671 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.827924515 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.827398344 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827202684 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.829373057 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.832521099 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.828916798 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.834190936 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.82783401 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.825801264 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.828238617 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.827819215 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.829031678 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.828951889 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.826738489 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.831431143 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.837515851 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.828108331 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.829360143 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.834960456 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.82912827 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828461841 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.829473692 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.831848375 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.838163156 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.82877318 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.837898922 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.829674733 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.828931418 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.828408374 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.830150311 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.828848411 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.82964488 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.832348771 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.838646472 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.845254823 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.839588317 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.83139031 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.833393745 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.831298674 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.833921749 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.836791347 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.83020385 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.829196961 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.830017812 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.82953791 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.83092689 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.833896728 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.830228826 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.830140546 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.829139577 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.829756684 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.830662442 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.830792549 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.832195523 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.833811449 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.827843734 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.830947591 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.831520847 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.830786797 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.828185605 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.831416748 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.83062768 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.830255742 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.831856499 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.843143327 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.828172732 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.832900845 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.833154865 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.83228754 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.830066877 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.832234117 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.834670586 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.83253215 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.84013693 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.833276727 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.834263502 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.838751366 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.832057717 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.831265077 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.834702364 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.831328203 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.829047861 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.835526195 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.838698704 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.831533544 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.832848586 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.832978652 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.832964047 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.831697701 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.840345292 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.829131211 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.831667777 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.832289944 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.83656444 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.830172994 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.833922814 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.833804136 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.835590844 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.835634158 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.832105801 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.832465481 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.834723224 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.833549727 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.833345816 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.833859221 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.836354317 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.840863631 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.839307257 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.834948022 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.837990915 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.836049728 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.837518723 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.836181599 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.834613583 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.833619592 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.851162635 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.84274094 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843424497 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.837615612 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.834481892 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.84148915 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.836094936 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.839869984 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.835165856 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.835559596 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.835114284 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.834523298 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.831729882 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836547919 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.835218158 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.837216724 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.836980942 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.838524005 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.834671094 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.835239474 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.834898952 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.834596036 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.835055037 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.834650425 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.835534167 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.839692407 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.83809358 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.835404958 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.835839727 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.842713846 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.836644056 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.837820766 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.835437442 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.836398488 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.835047881 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.837904733 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.835763294 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.840263327 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.843935049 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.839456161 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.847398452 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.838195845 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.848511879 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.836503458 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.839864953 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.845265267 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.83319829 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.835569403 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.837461565 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.838150494 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.846194942 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.837869775 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.838183723 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.841672415 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.837041743 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.837233369 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.836730537 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.837101467 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.837436017 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.837456016 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.848172283 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.839224183 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.842032925 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.840109639 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.834848351 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.837984967 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.836298155 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.837426688 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.844847362 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.837925786 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.83880049 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.837302784 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.839337129 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.837535407 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.83829405 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.83735718 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.834813073 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.838073142 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.846312079 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.83909044 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.843728044 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.837183107 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.850432956 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.839091193 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.847238301 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.838962925 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.840283857 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.83945526 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.838439561 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.842650154 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.839256176 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.841193428 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.8379954 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.840001971 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.842439211 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.839236628 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.842939556 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.840138293 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.839889896 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.840295511 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.849997069 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.863339541 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.841171102 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.843121544 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.836936005 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.841335905 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.844837789 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.839663178 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.839163664 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.843799603 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.850953406 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.848663576 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.842048617 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.840403768 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.841840799 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840745353 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.839981356 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.840500291 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.840195799 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.839611424 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.84264076 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.84155524 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.846841921 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.840745979 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.842234947 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.843457403 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.842136815 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.853567074 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.841846823 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.842888199 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840850524 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.841423258 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.843151504 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.842334029 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.841627785 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.84524552 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.840607817 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.842804565 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.849443923 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.849758413 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.84459031 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.841735822 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.841628955 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.843210921 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.843871189 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842670836 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.842636725 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.843158086 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.843454078 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.842722824 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.844909807 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.841054623 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.840599226 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.84362458 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.842707326 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.847167052 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.849118257 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.841694447 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.837543789 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.840778614 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.840286002 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.841759569 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.842686849 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.853972971 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.844796764 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.852876156 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.851187442 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.845730461 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.843396874 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.845370675 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.850570757 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.841840583 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.845005821 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.841983609 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.845511402 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.843100376 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.845861417 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.844046201 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.850907085 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.84250523 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.842349462 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.851514378 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.843007963 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.84200945 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.843490017 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.845861936 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.842908962 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.839293914 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.842388102 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.841010287 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.851737824 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.845463684 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.842284479 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.845351101 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.83913892 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.843166787 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.845994753 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.840704998 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.843479099 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.837879016 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.840873207 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.840369373 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.840591839 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.837568468 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.841507528 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.837123439 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.839820621 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.843502374 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.833237988 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.839103814 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.837316559 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.836886046 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.836557548 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.835862302 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.832670685 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.83304016 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.835822429 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.835633539 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.836363967 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.838735423 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.835703014 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.836894044 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.834517069 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.835720059 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.838277563 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.844760179 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.84282659 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.830974936 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.8346396 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.836506611 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.837779374 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.834760509 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.835392433 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834854225 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.837149339 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.8330791 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.834139387 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.834595613 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.837698353 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852290483 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.833123878 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.835059057 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.836090442 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.841031818 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.834161173 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.831167288 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.834270876 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.838422241 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.837293919 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.842839791 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.835052598 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.841414876 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.83470992 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.836027734 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.838781176 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.838622527 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.843967171 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.838994719 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.835989066 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.835716317 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.839872533 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.853204901 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.835432249 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.845560372 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.868558302 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.836082619 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.836467996 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.836753251 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.834206147 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.835718649 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.841119641 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.836114279 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.834917399 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.83467458 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.835659279 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.837564589 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.842501073 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.837305827 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.835000199 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.835083944 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.837755059 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.839257222 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.833352351 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.836402852 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.8356687 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.836807968 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.838176352 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.836083515 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.83725578 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.853161605 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.848565364 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.837196981 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.836143377 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.832536977 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.841348676 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.84006878 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847282331 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.845156549 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.836482344 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.836842817 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.838437279 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.83677107 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.833576507 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.838455596 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.836675864 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.836083209 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.833380645 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.852771456 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.846247497 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.842414288 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.836989883 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836920034 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.836542741 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837956981 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.832965193 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.832659518 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.835163612 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.833230145 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836791761 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.830105301 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.829742076 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.834358988 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.838465936 seconds)
  done (took 1095.38593016 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.82962718 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827141863 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827463229 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.827875463 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827502555 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.828549113 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.827195398 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.827337762 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.827067717 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.827170373 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.827841363 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827495261 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.826495335 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.826335234 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826897749 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.826911068 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827157277 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.825832151 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.826666748 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825832221 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826000793 seconds)
  done (took 40.13436753 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.829329739 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.826905164 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.826269167 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.829571657 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.826060595 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.83036516 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.827139978 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829553085 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82909511 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826279501 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.829621177 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829668963 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.826231841 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.826661087 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826703566 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828736923 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.829152564 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.827400602 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.828612485 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.825812981 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.829726912 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.826698755 seconds)
  done (took 41.97810379 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.830869591 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.830237523 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.830109452 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.827514481 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.829980393 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.827576968 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.83010718 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.828878327 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.829889328 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.833195232 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.83004773 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.832653974 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.838736993 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.83603287 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.834646478 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.830740519 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.974038809 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.832530474 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.830553654 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.831092177 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.828288435 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.839445147 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.8283754 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.826340063 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.829163757 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.829994494 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.831310139 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.828955451 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.83009677 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.83152341 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.834214147 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.82931735 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.831503979 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.831860485 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.829387468 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.830338399 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.833652799 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.8306809 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.825679756 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.82837462 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.839511656 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.849539201 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.831809336 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.836437235 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.82822881 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.828781692 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.832261577 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.836788085 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.827060457 seconds)
  done (took 91.652865293 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.827600827 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.827585724 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.824887208 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.828976889 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.826020464 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.826820057 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.826229956 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.827141863 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.824613135 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.825665941 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.826772206 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.82396844 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.823427073 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.826654703 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.827385184 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.822981877 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.823690367 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.822851521 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.824460065 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.823914121 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.824771406 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.825216415 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.824465219 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.822681418 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.825446013 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.824544009 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.822045763 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.824673531 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.822769716 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.822328519 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.824959948 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.82674243 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.824473898 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.822192279 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.820651387 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.824954337 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.826765836 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.821940362 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.823999417 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.821800602 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.823961602 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.825156515 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.826842867 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.824667875 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.821648018 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.821991437 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.821726797 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.8227179 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.822233543 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.824231202 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.823453636 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.821244247 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.823624395 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.821302623 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822684158 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.823653432 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.822120859 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.820790732 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.823600956 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.821470822 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.820761438 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.82327706 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.821728664 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.82452654 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.824700962 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.820585337 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.821328468 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.823598715 seconds)
  done (took 125.792151823 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824877583 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.824437629 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824431724 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824657125 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824185013 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.825687738 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.824780129 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.824756851 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.824946242 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.824509053 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.82472955 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.825879971 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.825317401 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.824076325 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.824971393 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.825319311 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824771523 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825278966 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.82496855 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823955127 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.824474293 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.823998325 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.826590343 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.824228405 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.825126431 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.824451286 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.823682632 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.824928522 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824972023 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.823760388 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.824905692 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.824327453 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.82453306 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.824482164 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.823674243 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.823841301 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.824542813 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824358943 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.824331771 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.824309039 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.824405836 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.824014066 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.823593811 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.824607212 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.825327151 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.823230501 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.824288996 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.824822098 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.823065647 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.824537241 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.826470092 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.824387203 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.82389361 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.824242987 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.824444708 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.82503949 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.823785526 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.823409433 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824379213 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.824179493 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824330938 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.824931511 seconds)
  done (took 114.880661194 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.82337074 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.823498595 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.822220526 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.82226035 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.823846997 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.820479457 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.823395622 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.82375691 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.82337915 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.82452747 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82408442 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.82092828 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821631847 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824081156 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.823581114 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821043161 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821076697 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.820215931 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.823585948 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.820827574 seconds)
  done (took 38.208454276 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.819656992 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.823324686 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.821044482 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.820984582 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.8240393 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.819724968 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.823151569 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82277274 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820079129 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822785344 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.825416978 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.823099983 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.820192628 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.82064664 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.822773409 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.8214928 seconds)
  done (took 30.909540756 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.820076739 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.822956102 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.823141315 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.824185019 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.821832997 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.820215852 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.822448334 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.820060897 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.820060297 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.824779661 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.822486299 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.823506531 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.822449432 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.823964543 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.820121504 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.82478518 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.819633727 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.820571111 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.822339314 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.82278824 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.821437244 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.818981065 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.822775818 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.822345752 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.819574085 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.819875836 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.819510908 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.819512096 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.820790599 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.822128262 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.81937854 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.819765148 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.81622606 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.817192544 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.820590729 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.816899501 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.819974538 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.819822664 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.817822549 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.818460023 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.81755622 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.815751567 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.818943022 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.818435905 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.815970598 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.817951429 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.815967204 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.816418661 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.816809367 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.816792607 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.817872602 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.819598344 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.818001914 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.823064299 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.81854828 seconds)
  done (took 101.861411506 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818628667 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.817829763 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.815743908 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.819407189 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.818759157 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.81604058 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.817890324 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.816088691 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.816883618 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.817925441 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.818076866 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.819400801 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.816763385 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.819490314 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.818370318 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819180194 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.818024055 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.816332712 seconds)
  done (took 34.47325013 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.818158104 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.81708018 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.819519267 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.81687895 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.816187124 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.819959264 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.817546213 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.819601466 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81912854 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.817313638 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816724999 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.821528363 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819453267 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.820110599 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.817130728 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816852908 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.820490575 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820628779 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.817617562 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817605363 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.821023969 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.820155418 seconds)
  done (took 41.764924753 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.819909464 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.819970275 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.836723644 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.859824175 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.847453247 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.821844056 seconds)
  done (took 12.760736248 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818986522 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820811729 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.819029933 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822463434 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821358594 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818355321 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818392408 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818607394 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821555329 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820142847 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818107013 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821525357 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821033658 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818305521 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821939877 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820726742 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818604268 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818701516 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820077176 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822617921 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819876622 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821109779 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819335965 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81977743 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818747762 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820872482 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821814177 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820272389 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819125285 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822469065 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82255606 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820371748 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822447462 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820213001 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822126868 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822918542 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820594625 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822414217 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821896169 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819977471 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.822558381 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822592872 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824025802 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820134094 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822920456 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820349377 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82045735 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821791167 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820457029 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823628688 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823006669 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821203704 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822709806 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824315791 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822953354 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823725995 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820822444 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821544801 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824243272 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821142158 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820939485 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823876313 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820549343 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821854081 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823373797 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82096591 seconds)
  done (took 121.953095406 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821325427 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.821498637 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820659686 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822297652 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821754796 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821157847 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822225612 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822045915 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822548762 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822162722 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824347577 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822180043 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822337189 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822669315 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821774592 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822592307 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822283493 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822645482 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822880936 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825120662 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822553594 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822565683 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822152095 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822506782 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823576294 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824878546 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82284646 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822822573 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822457359 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823572339 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822547708 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822371114 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823032155 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.823677107 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823044229 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823598653 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823467855 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822487741 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823179273 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824574845 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823909869 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825469184 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823254127 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822800958 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824019387 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824087648 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825721076 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823585209 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823696155 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823795341 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824443366 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825743309 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824485963 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823964097 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823701903 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823584513 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823866041 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82479699 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824777045 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827141576 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824326035 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82391694 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828428117 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823849883 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824885767 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823900437 seconds)
  done (took 122.104545416 seconds)
done (took 2534.722527302 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.884218308 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.973415866 seconds)
  done (took 15.618149939 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.998086826 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.950539739 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.835013275 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.843363419 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.834211087 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.860834159 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.82842555 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.83414839 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.834422212 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.834016972 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.836497377 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.020301771 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.837099833 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.835100587 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.834619321 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.928338601 seconds)
  done (took 51.716759209 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.837815144 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.839809589 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.849380902 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.841042645 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.837720832 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.854998296 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.871662228 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.84279541 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.895903047 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.861410261 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.965397694 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.849303893 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.840372679 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.90022508 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.851354277 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.852624499 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.938143501 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.915080481 seconds)
  done (took 35.414600537 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.916994651 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.839367673 seconds)
  done (took 10.532772596 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.861955557 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.834870167 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.850293777 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.860408314 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.848361644 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.832559052 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.87173288 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.836008205 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.847199088 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.850577963 seconds)
  done (took 70.26682689 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.844485221 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.840259502 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.839796553 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.839127232 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.831767034 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.836838049 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.837994113 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.832814429 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.535249882 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.874544059 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.844904026 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.845087797 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.838746419 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.841091673 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.836329978 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.861576056 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.953092351 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.837693644 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.836008591 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.844355953 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.839479354 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.900656333 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.853887728 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.839319505 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.869330384 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.531339887 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.849262913 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.845699633 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.948206571 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.836795312 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.838522067 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.839738836 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.844013307 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.230988537 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.12681232 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.839012465 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.849637695 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.847444325 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.835809 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.974933844 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.841699427 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.8457587 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.832584001 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.101591684 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.924862638 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.882746755 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.210148273 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.845166119 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.842562649 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.871294289 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.843661564 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.842076449 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.854484342 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.355280289 seconds)
  done (took 131.06133433 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.885716654 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.331311824 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.989061752 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.835845274 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.127854064 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076284986 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.836702253 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.885524249 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.88879633 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.086816746 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.065422136 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.955949925 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839510541 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.837372831 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.836572081 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.836034952 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.987305502 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.909171378 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.838938662 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.839569152 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872508834 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.103991591 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.965041914 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.993492835 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.861157493 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.063051383 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.96367047 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.955802849 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.839817944 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.835177041 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.906575109 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.843915769 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.836787952 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.839622368 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.003047975 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.9450941 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936974843 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.839117995 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.88091908 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.835846896 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.86169679 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058306774 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.946223996 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.976813472 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.089926442 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.065738404 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.839275243 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.837112742 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.843246643 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.029026649 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.053709485 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.0927966 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.968438223 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.840262882 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.093621818 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.836302042 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.837959988 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.08996963 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.071697509 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.950146593 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.861702093 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.840539438 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839371858 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.152141312 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.840188297 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.947253757 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.97093761 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.840431371 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.947381261 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.953299628 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.07192629 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078736837 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.871787137 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.850489568 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.906939589 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.1233969 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.911602261 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.092403616 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.846528225 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.838531032 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933030956 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.841769636 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.051312139 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.155711832 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.10593145 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.882388968 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.847730397 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.83934947 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.087275949 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.089005003 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.078859242 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.086228609 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.006713474 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.863244415 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.839437888 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.841167177 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.851122192 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.973014041 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.843167746 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.201154842 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.085708075 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.611121439 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.872126649 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.157607663 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.978746549 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.842416239 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.83927912 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.840506183 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.046401363 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.885015908 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.843528658 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839156263 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.089643788 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.714142247 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.97441033 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.54612809 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.907772192 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.845546011 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106910831 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.843978423 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.090489359 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843396358 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.155313617 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.186542529 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.885265235 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.033356265 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.087821237 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.844680479 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.137544718 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.154923006 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.966243675 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09131566 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.600453466 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.844799856 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.134540618 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854992371 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.866326837 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.01033901 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.850483035 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.997398703 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.849158189 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.110575072 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868581739 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.013871478 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.876106723 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.120206852 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.889532327 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.896880023 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.887566665 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.969866358 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843786612 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.877436068 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.025082053 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.121970782 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.84504879 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.393971642 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.843782721 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99171277 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.141754719 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868442495 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.915382527 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.845083202 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.846093868 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936559004 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.872706179 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.458886745 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.842257477 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.067302323 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.831610611 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.298984307 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.84287903 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.153171523 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.055187216 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.844883739 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.846241662 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.645276938 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.845288068 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.917188874 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.003039669 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.511504776 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.850194661 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062597693 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.846239053 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977495662 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.849132318 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.846345839 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.196042298 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.876080209 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.843750342 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.866733783 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.845609433 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845827527 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.071375664 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.873566235 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.575260952 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.981832443 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095947191 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.156654771 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.108226491 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.893548741 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.847420967 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.110068393 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.91418873 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.914260551 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.846068798 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.870840468 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.090819518 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.848122361 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.115256326 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.133198885 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.893489036 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.896824588 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.847517304 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.193369001 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.845520134 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.985548675 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944090145 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.847977197 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.846424346 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.963727694 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.973957687 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.038861349 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.847786216 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.873358545 seconds)
  done (took 948.454664982 seconds)
done (took 1264.824114109 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.845180842 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.846478392 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.838076513 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.849670066 seconds)
  done (took 29.164438594 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.8544182 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.851771633 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.853964087 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.853579077 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.853559534 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.854093253 seconds)
  done (took 12.90441773 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.867722133 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.849693563 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.851311866 seconds)
  done (took 21.354169713 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.921763067 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.260544911 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.957220414 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.298505509 seconds)
  done (took 10.222680269 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.857020858 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.855482314 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.854578984 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.855089559 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.857231025 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.856603834 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.855690112 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.854415107 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.857276705 seconds)
  done (took 18.490693825 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.098363497 seconds)
done (took 98.018750578 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.022842954 seconds)
    (2/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.920770991 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.848301183 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.137196327 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.150079407 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.925432345 seconds)
    (7/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.443890249 seconds)
    (8/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.245556471 seconds)
    (9/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.775564632 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.987885507 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.892741656 seconds)
    (12/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.738779628 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.234207211 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.948190064 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.874422258 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.113002118 seconds)
    (17/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.395638575 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.851154964 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.309296097 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.155857101 seconds)
    (21/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.368379781 seconds)
    (22/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.834909926 seconds)
    (23/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.009237886 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.992605503 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.804297352 seconds)
    (26/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.010345774 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.908609122 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.251963263 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.958899687 seconds)
    (30/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.979239301 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.924416876 seconds)
    (32/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.016066611 seconds)
    (33/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.940424403 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.835611765 seconds)
    (35/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.965001682 seconds)
    (36/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.980450192 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.518723249 seconds)
    (38/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.882576096 seconds)
    (39/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.041770326 seconds)
    (40/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.920952753 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.951140934 seconds)
    (42/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.005644475 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.879034267 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.950580183 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.051762714 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.929601957 seconds)
    (47/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.455169292 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.19129285 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.85499338 seconds)
    (50/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 4.574509932 seconds)
    (51/309) benchmarking ("sort", Float64, false)...
    done (took 5.665385236 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.170478638 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.881728664 seconds)
    (54/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.055014707 seconds)
    (55/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.780363422 seconds)
    (56/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.942425292 seconds)
    (57/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.449535985 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.146491295 seconds)
    (59/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.023061603 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.963037173 seconds)
    (61/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.949982572 seconds)
    (62/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.457121975 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.841602122 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.860135247 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.135729459 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.770788031 seconds)
    (67/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.362755545 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.855745002 seconds)
    (69/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.019461946 seconds)
    (70/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.800567909 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.228834012 seconds)
    (72/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.05361371 seconds)
    (73/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.882646144 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.910474364 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.033402399 seconds)
    (76/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.966906464 seconds)
    (77/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.735281758 seconds)
    (78/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.934133313 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.425961879 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.940428301 seconds)
    (81/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.842214214 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 3.462459035 seconds)
    (83/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.109377121 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.236206804 seconds)
    (85/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.949983581 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.859502075 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.004995781 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.153614658 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.858266144 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 5.628707017 seconds)
    (91/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.942465225 seconds)
    (92/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.958849018 seconds)
    (93/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.057527286 seconds)
    (94/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.259203131 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 5.539972315 seconds)
    (96/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.149610449 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.947408613 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.204999659 seconds)
    (99/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.484252699 seconds)
    (100/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.861412105 seconds)
    (101/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.977706008 seconds)
    (102/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.885260011 seconds)
    (103/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.998336271 seconds)
    (104/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.845859964 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.107881216 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.202461902 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.01905694 seconds)
    (108/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.454110365 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.673457572 seconds)
    (110/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.958578531 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.15156606 seconds)
    (112/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.86245965 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.041139609 seconds)
    (114/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.041676705 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.504488084 seconds)
    (116/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.865729065 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.183463941 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.947590622 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.954598991 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.16777736 seconds)
    (121/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.881297701 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.053848916 seconds)
    (123/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.534084087 seconds)
    (124/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.043334193 seconds)
    (125/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.990686982 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.858466808 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.913728997 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.88179622 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.859104835 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.0858008 seconds)
    (131/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.981824982 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 2.406328186 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.882659283 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.84366599 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.380144384 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.137163758 seconds)
    (137/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.256090565 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.053097234 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.08141268 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.12550529 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.15285366 seconds)
    (142/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.889706827 seconds)
    (143/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.877560141 seconds)
    (144/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.924018471 seconds)
    (145/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.98348471 seconds)
    (146/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.053453491 seconds)
    (147/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.849309506 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.416327295 seconds)
    (149/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.458749729 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.76325679 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.865006582 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.047731259 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.080457298 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.888048882 seconds)
    (155/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.845128352 seconds)
    (156/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.939088835 seconds)
    (157/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.107053761 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.997637925 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.723077392 seconds)
    (160/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.941150082 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.966727143 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.139675693 seconds)
    (163/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.437602479 seconds)
    (164/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.863418786 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.878471001 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.011899107 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.94372026 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.537277635 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.962647493 seconds)
    (170/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.859903702 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.846337296 seconds)
    (172/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.234694062 seconds)
    (173/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.946443613 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.546135755 seconds)
    (175/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.994628368 seconds)
    (176/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.885605633 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.658801805 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.851514284 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.169312286 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.007864591 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.975816829 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.158140573 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.369356223 seconds)
    (184/309) benchmarking ("sort", BigInt, false)...
    done (took 6.868026421 seconds)
    (185/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.992140317 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.08396617 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.082229362 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.851609866 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.856419142 seconds)
    (190/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.883058592 seconds)
    (191/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.186825392 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.661801273 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.895773197 seconds)
    (194/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.254934157 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.865439993 seconds)
    (196/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.436811848 seconds)
    (197/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.096835553 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.907080562 seconds)
    (199/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.217672977 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.865873531 seconds)
    (201/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.904053808 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.381033836 seconds)
    (203/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.887218921 seconds)
    (204/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.374910183 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.194656375 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.921060297 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.88068173 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.915935419 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.679168583 seconds)
    (210/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.378074261 seconds)
    (211/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.379066765 seconds)
    (212/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.995564453 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.037266458 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.080204954 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.102848418 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.11365055 seconds)
    (217/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.170523204 seconds)
    (218/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.240030314 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.069839198 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.569332336 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.981400734 seconds)
    (222/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.946605229 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.861586034 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.787542313 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.140452292 seconds)
    (226/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.144636603 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.848698187 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.160855485 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.890793574 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.938165695 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.201428307 seconds)
    (232/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.765174384 seconds)
    (233/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.358819614 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.909658695 seconds)
    (235/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.006027917 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.237140219 seconds)
    (237/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.864405362 seconds)
    (238/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.981747782 seconds)
    (239/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.27432146 seconds)
    (240/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.289830985 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.802379169 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.953033009 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.427564657 seconds)
    (244/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.892514057 seconds)
    (245/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.57055364 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.950860371 seconds)
    (247/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.892722938 seconds)
    (248/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.87280576 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.863521196 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.586862026 seconds)
    (251/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.223436214 seconds)
    (252/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.875334756 seconds)
    (253/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.986773064 seconds)
    (254/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.966009905 seconds)
    (255/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.948631297 seconds)
    (256/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.864540838 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.930387208 seconds)
    (258/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.890022092 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.244610264 seconds)
    (260/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.849773294 seconds)
    (261/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.044933144 seconds)
    (262/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.453075685 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.052427708 seconds)
    (264/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.102174075 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.782190976 seconds)
    (266/309) benchmarking ("sort", Int8, false)...
    done (took 4.868832355 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.514308187 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.897690128 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.440956002 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.552263089 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.209056751 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.249886547 seconds)
    (273/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.741283644 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.866101679 seconds)
    (275/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.908375264 seconds)
    (276/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.949092415 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.25289449 seconds)
    (278/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.038253531 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.868784396 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.869586176 seconds)
    (281/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.94068017 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.168677485 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.241242476 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.196680709 seconds)
    (285/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.15731583 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.832977095 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.951005498 seconds)
    (288/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.876252434 seconds)
    (289/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.207341143 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.95202901 seconds)
    (291/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.923821458 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.984476117 seconds)
    (293/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.891916394 seconds)
    (294/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.998937968 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.125067373 seconds)
    (296/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.893105417 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.110199804 seconds)
    (298/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.973878611 seconds)
    (299/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.457429519 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.851385529 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.916680588 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.909856427 seconds)
    (303/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.852390301 seconds)
    (304/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.513808289 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.896157403 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.20878138 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.891790084 seconds)
    (308/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.295929048 seconds)
    (309/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.993258445 seconds)
  done (took 1020.010150247 seconds)
done (took 1021.811724868 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.898224465 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89336773 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.876102304 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.898157584 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.989216498 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.909126126 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.886871319 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.878952245 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.92465628 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.926751201 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.876103022 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.909989705 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.878615021 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.878183432 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.878007771 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.89149278 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.182403339 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.904005918 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.89422412 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.887579114 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.895376911 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.877787489 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.927599575 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.910847044 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.88219288 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.880356345 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.882521329 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.898276126 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.99023237 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.882209725 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.882239466 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.889704547 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.181806568 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.900909945 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.872652971 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.899895973 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.889652721 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.887694775 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.882150554 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.910300606 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.319581185 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.88526346 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.881272866 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.879574346 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.879738544 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.883529652 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.881151183 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.885136795 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891669798 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.894212158 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.318885254 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.901011754 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.883917704 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.880047153 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.889335164 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.879730425 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.884692488 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.896495756 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.899537991 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.896582925 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.174219992 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.909370792 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.882698631 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.897874138 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.888660814 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.353154932 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.883286132 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.884423184 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.318246767 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.89126842 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.355043006 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.897617627 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.883009816 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.895830343 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.913077039 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.184914762 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.901097863 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.880116 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.889034443 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.881071081 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.889954819 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894230872 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.887110742 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.881360001 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.895579166 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.913537233 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.892305964 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.883251283 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.889058027 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.90146953 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.889886633 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.893149486 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.886359834 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.877166662 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.891951865 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.885749285 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.886000073 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.887601617 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.887238842 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.893231116 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.317869378 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.905776501 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.879076988 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.879157601 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.881018969 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.896255653 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.317504455 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.891131093 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.904326169 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.930035077 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.884412583 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.175251936 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.910369404 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.899431374 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.891194754 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.886922971 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.878667421 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.177983312 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.342355805 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.905204165 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.88483746 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.882024626 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.901370274 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.886546985 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.879861962 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.186418068 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.908853752 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898729292 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.005218742 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.894861094 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.916542548 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.882898505 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.886813859 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.913230499 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.900415893 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.915886379 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.886910783 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.900714341 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.901774973 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.881143649 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.895542467 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.894120593 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.886222426 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.890237288 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.879292377 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.91991882 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.897339424 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897362674 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.906103541 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.005462259 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.882740332 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.178163883 seconds)
done (took 295.67974438 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.952721619 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.879833557 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.980357444 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.881097274 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.966367087 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.96827401 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.877426908 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.878985641 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.878455256 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.260823522 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.879561701 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.879937452 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.880272225 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.878625393 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.966915162 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.881602871 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.879794782 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.223577591 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.88323236 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.953594774 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.879189117 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.879090725 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.882638731 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.265404552 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.882425287 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.87817148 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.952985829 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.881978909 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.230161268 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.877774237 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.878715527 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.229365445 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.973350309 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.901864446 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.893346954 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.889795857 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.969042818 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.886783711 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.965502001 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.965031504 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.981659834 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.923516823 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.876009364 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.877389339 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.885890352 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.885388651 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.880311155 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.911067442 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.883286721 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.881730941 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.226023597 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.893229388 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.882510572 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.882961867 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.882117362 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.915295491 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.8826773 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.884785885 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.974054354 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.885168539 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.947377065 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.268999695 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.262944338 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.883807638 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.878233148 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.882145554 seconds)
  done (took 185.226374829 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.950045738 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.958773699 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.952912386 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.887822245 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.936223231 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.957475506 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.887652899 seconds)
  done (took 15.345664782 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.891230823 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.886029879 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.935742611 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.936018626 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.885674459 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.036326826 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.885022015 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.896718359 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.883114039 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.938873481 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.886723639 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.886316552 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.892229882 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.88271897 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.934306613 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.89732335 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.00150569 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.887969672 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.888234124 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.043679779 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.883759901 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.892918895 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.94139934 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.900016111 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.88743515 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.893431472 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.470435297 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.887158699 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.884251731 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.887016171 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.88361935 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.925579761 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.886674404 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.886462019 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.884429433 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.002956692 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.887034963 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.88434688 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.886850373 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.884116735 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.887224276 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.887478752 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.88711254 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.884476265 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.886324441 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.910472014 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.886968742 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.88727735 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.886473349 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.8881171 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.938897152 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.887894296 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.885082349 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.885505287 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.945179414 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.895284314 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.888964858 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.885155946 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.888044135 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.885284358 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.045469615 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.937003536 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.888717262 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.936787171 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.888023928 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.889135189 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.888852149 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.888686984 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.944854184 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.888588668 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.93803243 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.886391049 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.045899098 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.914541997 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.889141329 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.892362983 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.892172587 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.890105138 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.888779218 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.896039302 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.886313703 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.890084735 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.896773878 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.887176918 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.886440321 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.99757013 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.99860009 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.886668665 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.902733601 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.897021909 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.888006995 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.94409956 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.88971791 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.888831207 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.94276708 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.005475835 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.946140087 seconds)
  done (took 207.576603867 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.895575183 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.898291778 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.891026395 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.906467594 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.890337117 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.890049188 seconds)
  done (took 13.192108018 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.892158096 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.891174241 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.889723709 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.889778625 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.891666499 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.891508362 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.891113481 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.893457408 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.895658949 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.890394469 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.892012413 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.892628907 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.892083404 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.892101039 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.892942912 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.892433728 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.893010026 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.888863764 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.891325843 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.892291 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.046536769 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.325789784 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.892617663 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.893463926 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.896188917 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.892227828 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.899644164 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.892352862 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.891395093 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.897218643 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.895642537 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.892519939 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.893945621 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.898288562 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.896629551 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.893194583 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.895974902 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.893803258 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.88931695 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.893377743 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.893517395 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.893317985 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.892793282 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.894226558 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.894018685 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.898363226 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.898295821 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.901197053 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.893730684 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.894595407 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.894825513 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.89287451 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.893251489 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.895340788 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.897612256 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.899127331 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.900188193 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.895256654 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.894200274 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.895922183 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.894999848 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.896530644 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.895358368 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.899270165 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.891771276 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.896748666 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.895814854 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.899179371 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.894355279 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.894309169 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.895782781 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.891427374 seconds)
  done (took 139.788380811 seconds)
done (took 562.952752637 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.149569012 seconds)
  done (took 8.973541459 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.990854749 seconds)
  done (took 8.913389346 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.388874764 seconds)
  done (took 10.214722273 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.911273408 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.901626121 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.900440965 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.891878353 seconds)
  done (took 29.439201529 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.192822202 seconds)
  done (took 9.017398098 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.901744801 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.886783739 seconds)
  done (took 15.683900588 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.930674266 seconds)
  done (took 8.75614126 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.942125643 seconds)
  done (took 8.77043482 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.903698292 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.901960013 seconds)
  done (took 15.643849911 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.874408279 seconds)
  done (took 8.69882237 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.569666581 seconds)
  done (took 11.40533098 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.89790896 seconds)
  done (took 8.735154086 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.889438513 seconds)
  done (took 8.714363432 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.986320737 seconds)
  done (took 9.811022091 seconds)
done (took 164.600137194 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.890903492 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.891499283 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.891059049 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.891264439 seconds)
  done (took 29.389132479 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.929487277 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.928662776 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.929096057 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.939273056 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.931180002 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.927525432 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.920893526 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.920939312 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.939050879 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.930761986 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.929669362 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.930436779 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.928075892 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.920999215 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.930945216 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.93056274 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.939874943 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.93022122 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.921270502 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.932106818 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.896319647 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.940230918 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.932557462 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.89639664 seconds)
  done (took 48.082926647 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.093533718 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.967630769 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.050155925 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.949317511 seconds)
  done (took 9.886676797 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.9472189 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.949222739 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.962833343 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.999724321 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.026181573 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.959133758 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.922903853 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.919078124 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.904541068 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.95058924 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.025470771 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.965926054 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.05114096 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.896831266 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.078242646 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.896539039 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.895913801 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.949159995 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.001030347 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.019451502 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.897632886 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.949350323 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.951583863 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.966590489 seconds)
  done (took 48.913455062 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.896247828 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.903974251 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.903557331 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.897820419 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.895988241 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.897002302 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.902547893 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.897987758 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.917717463 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.897714393 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.89632386 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.896829503 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.896063342 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.897453566 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.89638485 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.90913651 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.910545021 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.897185175 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.899968557 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.903712868 seconds)
  done (took 39.84260019 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.891384231 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.746407357 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.244660664 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.148592921 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.892204885 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.895632695 seconds)
  done (took 31.647823017 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.910871789 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.961391501 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.905943089 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.954941199 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.035225465 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.905843457 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.899563917 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.965463426 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.007512209 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.969217499 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.920646912 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.92512576 seconds)
  done (took 25.19130803 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.894355195 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.895156386 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.895598211 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.912123408 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.909744975 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.906190818 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.906262229 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.893615463 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.913976362 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.917325215 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.906652581 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.910690675 seconds)
  done (took 44.694555255 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981632339 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.939072271 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.915122111 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584374258 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.271824363 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105794746 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.54740472 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.22465538 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.899617238 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168206771 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.012033699 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000262228 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.150707416 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3376097 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.926056935 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.35573564 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195355068 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100158378 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921234255 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.610768108 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962312113 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.026651959 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.671519954 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958257743 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106671102 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.028927213 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.221026063 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.895582572 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033482227 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937415105 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905806843 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895233409 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170195953 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270728811 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000804776 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907595369 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.514740787 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.608479345 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.886061716 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.694341073 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.671236681 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.028188101 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907508132 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897556866 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.831012704 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.991609263 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27086985 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.901275201 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.608894107 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.896723869 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907910502 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991975759 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.899787695 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.712669075 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843158512 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.898938282 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.895361381 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905827626 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.470959315 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.048251366 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.040907533 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.869039344 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.990017891 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.678966494 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.285219777 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.046704013 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.903269093 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901380142 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833403211 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.680102637 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955888185 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228117927 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.920101614 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547779857 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201067072 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.090428369 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.841933738 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164223883 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.373500546 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.868990318 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126025806 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899004336 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835505557 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.865920379 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.833571884 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157786457 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935395958 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.650503215 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938226917 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.227110474 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.90998453 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91843609 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922932394 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123838002 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.784012172 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899676201 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.757005655 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044070179 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92120931 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235767051 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833885659 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.904157992 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156648582 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.111372152 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.921752133 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.395860008 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060705445 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40714427 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.949694614 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.000787019 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.945739376 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.168376188 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957968563 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.053328167 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955908952 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.900988965 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193199454 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.435987656 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.035271252 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.044013945 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.027459139 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.213158904 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927160509 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983123865 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90926132 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.901469066 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.723707355 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.455552825 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.903104888 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.904376643 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.926226434 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.945912707 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.903418485 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849751849 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.527184233 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04347408 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.916219933 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.1247222 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.414995969 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212106628 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837504773 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230905222 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.994776457 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.125098966 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.552217227 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.986182348 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163679168 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929508797 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.95997469 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947737965 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921999951 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00336983 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924235448 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.998279357 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.194602316 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.904616859 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.905976299 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.718329777 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.94209568 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903505373 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.908281029 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.656102306 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170984441 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.935679951 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.909597856 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.795071681 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.917206681 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967903361 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908054794 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.915890463 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.445354399 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.614629737 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.909188943 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.493585821 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129046447 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913967568 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.62370536 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025993525 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.986349551 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175157109 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966518588 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.839665359 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.615068072 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.599214534 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90499879 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.841054401 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.905508514 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914305268 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916767265 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.101743966 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.176625074 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951877914 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.626300095 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.952082952 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916231283 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.910485545 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905178389 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.415050608 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.057445401 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.046390934 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.949083151 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050075982 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.920788546 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.841436914 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.909877185 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911540101 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.906443292 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.906453314 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939295149 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.632703532 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286250779 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167839977 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.515583821 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920018909 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.656123314 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.969443005 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.905410911 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.777087049 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02935661 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.029450956 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921298831 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.918172262 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.707819542 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.616741263 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479142802 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220713178 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208109366 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346655818 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.067946158 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.935719867 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.246900852 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842724456 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.473147769 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966158974 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.24723035 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852328274 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992024874 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.561442696 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259284716 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924144706 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136356319 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296423085 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.692130621 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085988657 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120214146 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945981168 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.00803797 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.869733063 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.196019058 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047923104 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.658289078 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123428144 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239506933 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.632925088 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.043092529 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.909360866 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.578962956 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990502061 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.626651179 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.079764315 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.039215421 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.921941729 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386828661 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913833879 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.136521091 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254040794 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.027424258 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.02725098 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844925634 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.918993515 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.919677989 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.910099616 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.903574993 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.795804402 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.163567466 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918400095 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842557688 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.965336261 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192130526 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.810733874 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.912885377 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909259616 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194228728 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.393490895 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075825494 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.959836742 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.423353281 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91309546 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840538693 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840177416 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.599074467 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.91355151 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.883381034 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107767043 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.005771828 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.822941706 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936515211 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988080139 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.16256237 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.918845106 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172215847 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181946805 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.603453613 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927689424 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.004187852 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.596372582 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.031833045 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.910288644 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.146656007 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.663417523 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13816905 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.936091048 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.862254344 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.911981221 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124730056 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.911209561 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.887217129 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154998609 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.634962829 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.044276836 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22982402 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988035495 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.900205606 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96821691 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.004570225 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923542936 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994106126 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924361261 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.924492732 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924905043 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960454247 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.906095793 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.045374345 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.927434476 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006903001 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.067505941 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.438253006 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.919679283 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184501648 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27603899 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.237541497 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974238476 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.914590396 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91492469 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848603122 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062310503 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.139228647 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191854793 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.043167606 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.028954717 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94127574 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.636658793 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.093217424 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158196681 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190518478 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.810567444 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.374888132 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.956649616 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.917177717 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927247099 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.126438952 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121099546 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208430316 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.0616122 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.945353207 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.278116608 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189170167 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.915562777 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.915538335 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507765804 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.039950951 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.593893057 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.956311395 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.914659728 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200773098 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927126024 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296007681 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.940782788 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.077338933 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.691987154 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.636421297 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.209229301 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.904930115 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.98070601 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186645639 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.297990945 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232148903 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986058588 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927723673 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.028611059 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064056672 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.805637969 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.918031121 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917745165 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965347906 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.627398027 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.926140614 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189868035 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229514266 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.91485064 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.809218829 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940552148 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.925353211 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.138483857 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176181354 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.168233244 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925867614 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.922182185 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.732039174 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187658719 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97545074 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850679788 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.918479397 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013010341 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.162457591 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93729164 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.367539261 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.625561608 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181870822 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.916153087 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937376899 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.022595137 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.276594828 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236256454 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.450024479 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11875304 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.50082428 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.436802375 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216408144 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.919237018 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.018585299 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221618964 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.917570183 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.948982801 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953447676 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.181611117 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22904584 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.041896904 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.655195325 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.891329261 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.264287584 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.478563653 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858212685 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.932973177 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.980858222 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.923323308 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.049049952 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934959934 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.812367734 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.026192524 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.680878774 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201004894 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.925425493 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.911039473 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.698216807 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.17361635 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956743997 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064076054 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932581573 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.595217457 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.270832684 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.178531745 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.959516228 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.931861371 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.926492814 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922077566 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.909756101 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.121593591 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.118758527 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192588115 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.987022236 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.961056489 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926677201 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.139132746 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134148631 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.914899364 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069811628 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.95833246 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96571377 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.829468532 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.424160392 seconds)
  done (took 1692.993474469 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.938458767 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.950034572 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.025892107 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.941743197 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.941716238 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.005262731 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.085951672 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.992205051 seconds)
  done (took 57.739777256 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.919710647 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.135346536 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.929140682 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.920512834 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.930010268 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.920309716 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.085415775 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.934161717 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.928447018 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.929881894 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.919222526 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.920035491 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.229505074 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.941487426 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.920416247 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.905004926 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.928616371 seconds)
  done (took 75.27226274 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.919183585 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.150064556 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.939949446 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.939344032 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.912735685 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.928924127 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.718510248 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.947410235 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.923123169 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.042009001 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.547969573 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.936912714 seconds)
  done (took 87.762882809 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.929636846 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.927903302 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.927209417 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.927019391 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.928579577 seconds)
  done (took 11.498745897 seconds)
done (took 2204.76599191 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.175932248 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.13860724 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.157058944 seconds)
  done (took 6.152467333 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.072511989 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.119855303 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.2406361 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.245335101 seconds)
  done (took 10.540857767 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.213795981 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.304822826 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.133473821 seconds)
  done (took 8.510761814 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.322284672 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.932963743 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.037811708 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.922967144 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.924040963 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.92455831 seconds)
  done (took 22.631532892 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.9274334 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.930120452 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.927067042 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.930328287 seconds)
  done (took 9.573801802 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.908602027 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.635574028 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.908763077 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.922241506 seconds)
  done (took 21.234327461 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.674704372 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.68565834 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.670645797 seconds)
  done (took 9.890384205 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.623210394 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.864064267 seconds)
  done (took 9.346688773 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.184295406 seconds)
  done (took 4.047781008 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.063518754 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.194308961 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.395096858 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.434968124 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.492994982 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.801900106 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.238325628 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.170842101 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.323567603 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.372104425 seconds)
  done (took 25.352661926 seconds)
done (took 142.606587137 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.305006604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.163624641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.130524076 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.264672028 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.220968874 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.157180165 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.140924453 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.249933478 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.771867398 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.770004617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.264235203 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.207267552 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.298570969 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.161863137 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.299318213 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.163963935 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.153242996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.310331721 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.96193272 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.195152621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.143398063 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.900588569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.106480711 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.914226412 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.152554771 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.08182347 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.478506722 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.165428625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.117567107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.489188067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.084845941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.349590334 seconds)
  done (took 175.041313088 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.685813788 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.932303354 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.932054999 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.931822065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.40289617 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.932831465 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932354437 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930947909 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.173272092 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.165105568 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.937092637 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.429476785 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.941731268 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931492821 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.94677082 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.932900927 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.325381304 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.794434435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.962257134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.963369177 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.968493008 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.369547595 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.963345142 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.417429216 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.342341933 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.960206797 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.932924705 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.959628389 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.937110753 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.94919516 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.953376846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.932877893 seconds)
  done (took 210.73934646 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.933150922 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.935247743 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.939597207 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.933937984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.940756985 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.941064902 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.936967793 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.932936928 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.510399587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.504541549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.945590141 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.939658376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.938515695 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.933594123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.942065478 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.935228242 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.963320729 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.946928843 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.941536651 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.944255542 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.949132396 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.737295697 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.971265976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.743643694 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.966337 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.942241292 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.934892924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.942619719 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.94453004 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.946223274 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.944601811 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.936185346 seconds)
  done (took 222.791675063 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.138254189 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.942884138 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.943634653 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.895951014 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.941471 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.939756942 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.93561505 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.197164994 seconds)
  done (took 20.286177293 seconds)
done (took 630.732709492 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.505766577 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.265857601 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.125050703 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.962821097 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.203612592 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.004513431 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.955763467 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.025257732 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.157333363 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.036698256 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.651630262 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.975998865 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.737731066 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.98122228 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.084423112 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.01389372 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.52344709 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.612649204 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.140496457 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.02586294 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.129572775 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.965503531 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.032527706 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.186284142 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.766797449 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.97059352 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.127254766 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.535110936 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.967912842 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.121586835 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.685274881 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.340251802 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.968963969 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.953006239 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.006418632 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.988688109 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.299009464 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.968612285 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.077866659 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.732067297 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.016571921 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.03156082 seconds)
  done (took 107.729791041 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.926355602 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.924062367 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.923649064 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.92514995 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.925946935 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.924385184 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.924449164 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.9245612 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.924809985 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.924319238 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.924847358 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.92675737 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.92467166 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.92622602 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.925290662 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.925118571 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.925880478 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.928688429 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.924976569 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.926114371 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.926522062 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.925179269 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.926200039 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.925951241 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.926186394 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.92655503 seconds)
  done (took 51.946792038 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.937950453 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.079702202 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.165259759 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.957965069 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.937944439 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.941547289 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.957797934 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.943363057 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.941058792 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.9410103 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.031757874 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.944768865 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.957985267 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.163361149 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.955199678 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.939178816 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.938683019 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.939076256 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.087023734 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.956361 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.961014681 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.943952422 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.959294934 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.953051588 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.941179181 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.940307857 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.943535041 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.375143507 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.949099106 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.031165645 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.034637973 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.964727246 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.329150053 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.171685447 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.006567779 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.946591929 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.939345128 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.035658164 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.945647654 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.94004021 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.958981071 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.946232194 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.164135139 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.438589514 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.956979391 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.940553607 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.385837165 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.043909125 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.983172986 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.953012029 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.168320903 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.958118509 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.942172296 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.942118245 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.979212405 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.952923942 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.941845878 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.257835898 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.953795867 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.960617323 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.947607229 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.942922728 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.101654441 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.950610543 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.082667695 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.951377076 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.949145132 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.942232473 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.165537307 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.958486987 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.437678183 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.960597463 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.94568499 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.037019698 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.093642955 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.414620024 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.959055188 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.110970596 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.353686834 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.970701659 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.956503038 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.370049958 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.975127109 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.95726069 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.947960933 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.948096526 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.946826065 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.990605559 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.962892166 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.386559074 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.450152327 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.266885535 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.974413199 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.962795227 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.947415355 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.254242821 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.956693777 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.946521358 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.164091308 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.462908026 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.960539836 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.951587629 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.428071967 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.962001844 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.967387396 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.957749412 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.173463902 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.963405162 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.990120964 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.947252192 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.953977961 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.950507546 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.966651162 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.958955937 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.947492094 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.42235773 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.057341463 seconds)
  done (took 240.391237406 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.943979448 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.945326815 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.94292214 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.958575183 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.942176412 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.947591183 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.942095011 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.942708332 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.947468598 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.943310988 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.942470208 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.946955676 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.94559733 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.944998118 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.971873475 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.950312135 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.55281241 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.942003258 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.942158358 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.944777408 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.593333343 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.950117708 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.944809655 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.962753939 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.947462094 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.94495296 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.952144351 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.975957558 seconds)
  done (took 169.69161017 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.950819102 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.067906066 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.969665973 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.978278797 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.959660855 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.947518004 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.975184438 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.966116146 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.95486487 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.94716326 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.94705602 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.011699549 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.961087036 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.052916676 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.982657317 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.981764604 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.056272547 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.957800582 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.948188994 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.948258525 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.979055162 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.945765804 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.011480192 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.08044307 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.968398522 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.068939459 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.957860698 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.951639624 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.951037901 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.06862163 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.965100805 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.011030412 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.980583358 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.970070703 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.072847491 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.069030264 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.059072974 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.981849235 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.955505541 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.948684596 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.949036387 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.939596391 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.070244054 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.968735714 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.95310023 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.060705246 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.969151486 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.952852101 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.960802266 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.950029496 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.966191263 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.969645781 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.018486931 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.086774743 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.984367464 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.978109684 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.978100626 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.241155916 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.962554267 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.053889667 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.946226946 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.071598136 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.97466438 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.941670846 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.952500936 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.956584771 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.981480588 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.983669211 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.060067533 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.960931969 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.054877283 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.988129552 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.958714131 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.952642579 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.954721151 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.07018969 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.072669016 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.988240982 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.991668046 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.984881246 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.949441725 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.952919901 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.942907032 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.971061551 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.956518289 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.069066389 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.074734526 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.960540472 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.955224867 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.954843462 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.954360101 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.979278777 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.078732977 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.989618755 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.054799266 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.023083127 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.028187214 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.967772187 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.966742136 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.957186094 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.019436801 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.967557795 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.965963628 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.290230303 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.02697313 seconds)
  done (took 211.361794828 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.04837085 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.427561158 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.009247119 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.009977159 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.248664204 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.372986667 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.741670359 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.001842954 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.003099819 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.028618481 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.163324332 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.061362402 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.015904342 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.990233615 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.407919034 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.993382311 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.00249869 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.024882606 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.006722761 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.592069666 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.313735369 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.12636532 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.001805052 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.107124997 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.983976021 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.290780352 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.505299668 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.399664605 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.03782824 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.348783861 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.33926042 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.70451569 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.211085839 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.247283979 seconds)
  done (took 77.658506765 seconds)
done (took 860.644755177 seconds)
SAVING RESULT...
DONE!
