cset: moving following pidspec: 14274
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.335289339 seconds)
loading group "string"... done (took 0.544081551 seconds)
loading group "linalg"... done (took 7.509451086 seconds)
loading group "parallel"... done (took 0.168695131 seconds)
loading group "find"... done (took 1.170584109 seconds)
loading group "tuple"... done (took 2.084786022 seconds)
loading group "dates"... done (took 1.333876849 seconds)
loading group "micro"... done (took 0.243374796 seconds)
loading group "io"... done (took 0.96939404 seconds)
loading group "scalar"... done (took 41.211162073 seconds)
loading group "sparse"... done (took 13.476512259 seconds)
loading group "broadcast"... done (took 1.060876638 seconds)
loading group "union"... done (took 14.135576515 seconds)
loading group "simd"... done (took 4.768897286 seconds)
loading group "random"... done (took 9.645365351 seconds)
loading group "problem"... done (took 2.007632157 seconds)
loading group "array"... done (took 22.526077394 seconds)
loading group "misc"... done (took 2.035514588 seconds)
loading group "sort"... done (took 3.441707092 seconds)
loading group "collection"... done (took 19.639464379 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.578564978 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156570821 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150732153 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147529179 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.196065433 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144003142 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157051871 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096877038 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.921491725 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.173309688 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151579659 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523587863 seconds)
done (took 5.138324906 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217593625 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095654413 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104290658 seconds)
  done (took 0.880256793 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078214605 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147145325 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094088621 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078153773 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095312572 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077015477 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094494043 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077563428 seconds)
  done (took 1.349948481 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087067324 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096888677 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081465752 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095740471 seconds)
  done (took 1.046411486 seconds)
done (took 4.265694849 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.723750962 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274521524 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206811644 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462427928 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196263443 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216434575 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671686886 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.332887882 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254132273 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09956659 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134792387 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.393042397 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136841323 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68166147 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089485568 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123448521 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176813356 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.436058246 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082240671 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109008371 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116124097 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141278734 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129641518 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090263493 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184689979 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081295387 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192682117 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108141697 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079718636 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.274671976 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201296266 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.703051537 seconds)
  done (took 10.840446564 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112806592 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133878909 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098202549 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137472175 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134914592 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099071689 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084469801 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096464422 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.1218487 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175116066 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129707579 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120424597 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094625829 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082191162 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114748878 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243848018 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119615624 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098959791 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100254184 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087053044 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138540116 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112381791 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108792664 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093987553 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166111822 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220464944 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109980828 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124622348 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095969384 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112541285 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143182172 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143210113 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094170813 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079950775 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172056467 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123113711 seconds)
  done (took 5.1268019 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.075754312 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188693743 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120498355 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169380363 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.0801311 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142550369 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094279319 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112889707 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255489277 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.182049863 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.488098328 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141164828 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098871853 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098532769 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082033622 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097335367 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.646846513 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156684943 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114987572 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115466107 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105802174 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084189699 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364802898 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09528812 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080226564 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097428815 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066061676 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.129364558 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162119147 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098612362 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.147258087 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101059973 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1027817 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133080237 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195806213 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122604992 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133359682 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079078327 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096463499 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175060394 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086012563 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097679775 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120399624 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133298007 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11654667 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098841233 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096998579 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.195964454 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079559011 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114125997 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.931697278 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178880085 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.101801292 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096180221 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286271857 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115965719 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101036962 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077690204 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094562914 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.261439696 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.204396019 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097130465 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079770857 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096057012 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081410549 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382944833 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098091862 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.685851992 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08399168 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106833608 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08230266 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096091808 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103160285 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087842104 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117257105 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079285574 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098541493 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078704523 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096265622 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080933986 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107340736 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212967745 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097346726 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079319067 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095122307 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11577833 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110571599 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097977389 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094818906 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112781175 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098562273 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096531705 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116339538 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09883582 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.121813276 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078075522 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108063367 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097612736 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126189681 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096859526 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.138232551 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093981679 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123014165 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098433915 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112809696 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109678945 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098741955 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167700639 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078099877 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095145818 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080082391 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.0953786 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080336143 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098791352 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108853867 seconds)
  done (took 22.759259249 seconds)
done (took 40.484209496 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.322039502 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102500445 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101501592 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102029527 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099642601 seconds)
  done (took 1.501412686 seconds)
done (took 2.238985986 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285227319 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172250831 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094421891 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16511487 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093286184 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.162713955 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157702216 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093335371 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216314673 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093197163 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.158689224 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076206242 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093903502 seconds)
  done (took 2.636517829 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095562731 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117358848 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082837577 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108512141 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07711696 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109344942 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092487711 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113942231 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107988023 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084196767 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091878412 seconds)
  done (took 1.820370553 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095205423 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113023186 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08178526 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109191212 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076598725 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10961058 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092958061 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115292065 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108613194 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086134182 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093199403 seconds)
  done (took 1.819246333 seconds)
done (took 7.006973271 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092431034 seconds)
  done (took 0.827753025 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.927329052 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.663248505 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112481677 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150125588 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.315606777 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171795608 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.469291168 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125568389 seconds)
  done (took 10.882073772 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.114288093 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.11144771 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100201091 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084373757 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103060727 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082310743 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101516173 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095738733 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081210784 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.0977405 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083070717 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100314718 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100194304 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085785117 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097072658 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08183328 seconds)
  done (took 2.321381346 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117704606 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117148038 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104814253 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106179073 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085705509 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103170613 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103733259 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087922645 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099701808 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101790103 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089860302 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104433894 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101416219 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07893459 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10389162 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105466996 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085367473 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104306904 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105701044 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089751441 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104562982 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092836964 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085760459 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103209061 seconds)
  done (took 3.229879323 seconds)
done (took 17.997090869 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160178626 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106787878 seconds)
  done (took 1.012615886 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095596993 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111652641 seconds)
  done (took 0.948453862 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097350007 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095091832 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119574853 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10660358 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079233306 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094879945 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118308849 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079385187 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094705372 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079221756 seconds)
  done (took 1.709425039 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08338306 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10796535 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099088629 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093663209 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104253064 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093403156 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087298387 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097612457 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108003342 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076106139 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.0998918 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112393016 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08498535 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114196192 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103244009 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081978866 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.1011834 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096646055 seconds)
  done (took 2.495440985 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080812692 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095933292 seconds)
  done (took 0.92311332 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082137622 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092949403 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079187194 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096044428 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092495364 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075880714 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092568748 seconds)
  done (took 1.35414882 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48143929 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134035642 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257763604 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099712055 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101466408 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.296320257 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.095777774 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083545205 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101570689 seconds)
  done (took 2.453831395 seconds)
done (took 11.641580836 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094054306 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11380417 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110854135 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.450617402 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106059582 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.095741456 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144852339 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.245027866 seconds)
done (took 2.113342777 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.145031561 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.595047907 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.417883524 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.228212872 seconds)
  done (took 1.99692866 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.40291522 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098158386 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081673784 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080136411 seconds)
  done (took 1.420975083 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081210082 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099993471 seconds)
  done (took 0.941605684 seconds)
done (took 5.263456257 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081656816 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096649113 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.112003569 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09551891 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07901724 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094638352 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077134113 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097303669 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079716156 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.09497946 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092698165 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079952578 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09529903 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076708281 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092957055 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07991024 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092372529 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076847932 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093307843 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079939666 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093035623 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07917376 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093452493 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077142526 seconds)
  done (took 2.907972448 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101351486 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099274307 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101591037 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085180052 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100906325 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08474848 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100855019 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095382858 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085528749 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098086252 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0995643 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084108869 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098952999 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084113446 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09792408 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103422554 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085941699 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097318788 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081115505 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100878285 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101285363 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080127969 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100211657 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084625725 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099793817 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099675949 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081774993 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096554886 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101603712 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082905081 seconds)
  done (took 3.576618393 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086404762 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092421989 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077643842 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.099874261 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076808314 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096378254 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076531843 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094191187 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077809772 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094148175 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079057204 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094080544 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076941316 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095395198 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07724404 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098074381 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110025542 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078193093 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093986617 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078190848 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096806592 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077965084 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093792762 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076759342 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.0942191 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076950879 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094032449 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077385245 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094910283 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076945685 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097557724 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080726292 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093915886 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084862707 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098036991 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077077728 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097293275 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076569799 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094811202 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.092637971 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076963993 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093754865 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07747513 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.099885841 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077742863 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096027545 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07768266 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096305808 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.0786038 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097285232 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077358136 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093894056 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078905917 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094813245 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081023313 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094039025 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094600305 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077898031 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095619519 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077287894 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09369631 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077347805 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095713909 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07758877 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109881744 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.083360347 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093716949 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07880653 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095963178 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079677838 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09545419 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107963664 seconds)
  done (took 7.093811423 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.131059378 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122956122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079034628 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096707226 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076490844 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095072336 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0812937 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094574784 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097444861 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084421249 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095100217 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079994361 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096890506 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094077467 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095153262 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096636134 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08328552 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092849931 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078159327 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098567073 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0781223 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099283962 seconds)
  done (took 2.810010207 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206633525 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103909203 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140681623 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106320408 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081893058 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10523103 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10119594 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085998201 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101838217 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08559503 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099814756 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100814075 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081592682 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.209076674 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099711257 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084242322 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10155822 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083986575 seconds)
  done (took 2.74576017 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093763027 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098128715 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.0978495 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097311076 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096943213 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083979127 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102997615 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106425594 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083572917 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09725162 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089000498 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100365597 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100131957 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080569666 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100046221 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080715348 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099658239 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080297939 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106606484 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103115471 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086236456 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106233327 seconds)
  done (took 2.861002013 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097445688 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099877601 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116738584 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083997117 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0938048 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079507884 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10410355 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080405513 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105335835 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098799101 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080174021 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096398671 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087189367 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096653409 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102620805 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080439255 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099063752 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080620969 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099166352 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076518963 seconds)
  done (took 2.629242117 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101135317 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098671093 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098597331 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089659223 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098947564 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080875657 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107295589 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098463844 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080991595 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122481478 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098593198 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082146888 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10766255 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103951229 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098147059 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090029521 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10661729 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107653328 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081572991 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098945103 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123146776 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08132779 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10755809 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098756004 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081020427 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098211422 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098315744 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087883025 seconds)
  done (took 3.50522136 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080515571 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097220333 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077784968 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095570501 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077961398 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094905991 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077888182 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097119922 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080327463 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095139647 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080381161 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09679859 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080212435 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097794175 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079662873 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097598675 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079893872 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095188722 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078205368 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094864578 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080757955 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097052945 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.07996235 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094939916 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077935558 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097542755 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078139981 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094861056 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080562351 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095753527 seconds)
  done (took 3.402819383 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08886677 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105452605 seconds)
  done (took 0.962023547 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078580769 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113485027 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077741418 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101994447 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085917917 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098511403 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106662965 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085327609 seconds)
  done (took 1.517911462 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095627412 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109192581 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082163889 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111296056 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108763969 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097433074 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168696074 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099600204 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104049172 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078700112 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111828382 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079877057 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105046601 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081402111 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103812702 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087131849 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09599545 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104174345 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085074475 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097215071 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082507536 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107405547 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085883914 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.094470856 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.0993843 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089981605 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111000839 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082527376 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10201659 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105656445 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086382168 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092900879 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080373921 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09919347 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079183324 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107761422 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115046962 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083119048 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107745122 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099485542 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092065751 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093536496 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085248887 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104668553 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109590709 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082007243 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100320185 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076409539 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096542107 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083685112 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095082955 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081402128 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093347455 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105240161 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.084888289 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110442567 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080796827 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100230775 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084412885 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102423452 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104800751 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083407867 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100917888 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080573447 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106253001 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085671498 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108612013 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093436865 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075021225 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096233044 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09156167 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121769071 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.104788461 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081925061 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09982433 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.07988374 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103375118 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082494223 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104132395 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104764574 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081282652 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105384862 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088761106 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09895148 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101055091 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089825157 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097388541 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082507495 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096434615 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115138276 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080355061 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096324897 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078469324 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110307754 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084970041 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097953498 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.095971241 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088583947 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092408812 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082004124 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100645352 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081552364 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109617822 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104854273 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087179097 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107969289 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105985156 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08122931 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102802623 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.077612563 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100450823 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083587389 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106226999 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075137956 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101878852 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081994187 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099856297 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107848318 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080823918 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099836587 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089033025 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10438074 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097544446 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077757846 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101815439 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081124542 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102511076 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089870882 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098717047 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094447917 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07711301 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102507734 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081539494 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103039102 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086853201 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101671745 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093158954 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079230295 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103459146 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091862787 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099550387 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081823414 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104766251 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100402302 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080930162 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105590747 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08423009 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098316318 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087552527 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099226225 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094527147 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08530682 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101799457 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080021573 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103275516 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084848061 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10179994 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099286812 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080348906 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104364597 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082749031 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098143662 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081981724 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097380726 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109998273 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084067465 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094204803 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079241451 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.106758774 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079703729 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098770233 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080056373 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102010878 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100073384 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080194872 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098286392 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083242615 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111657603 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103758821 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082155494 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105298953 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092709214 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098713784 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083923306 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099063303 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100484113 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.082971608 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.10891419 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086737979 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104128924 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100915345 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078266692 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106196739 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089235231 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098118555 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080045512 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09839639 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103210459 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.087448624 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103789481 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083388694 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097618118 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082809755 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103433126 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101929671 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081327607 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098793081 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087707603 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.098486764 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106424079 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082962665 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110470114 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085021994 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094990697 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103454556 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080286483 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105691891 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077720453 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096800037 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08109906 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10074308 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080894163 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103156881 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075270611 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106642249 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107496289 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081646748 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098942187 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082063436 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106264895 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083910563 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104154731 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085417518 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106486485 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110988776 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080744102 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103409495 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092350326 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100139154 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093705818 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087113996 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098432593 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081712104 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099267384 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080100712 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102897206 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109104106 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089368151 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09451017 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084962817 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098913028 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080583146 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095645264 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08582241 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102955144 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100688823 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088880755 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1015166 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082539684 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103644899 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082112493 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100674969 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10034791 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085067684 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103164701 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085483991 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099435245 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08451176 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099085368 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080510012 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101347353 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100123928 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081842302 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105515077 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081918288 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100467714 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.083975621 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100674788 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101271281 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082618052 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.09903174 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085443309 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10125795 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082604015 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103091226 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077376122 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107348326 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099520764 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089561447 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100488372 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079238716 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105689197 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084069642 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106537984 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101291684 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.082690002 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101595324 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081337817 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103320118 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08892087 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098276192 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110820203 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090682595 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101521089 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085009453 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099689777 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.0837922 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099606615 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100230921 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083231229 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100360314 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082538497 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105021744 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084194223 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100497763 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08416016 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100833909 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100197071 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.082963563 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095210686 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081140468 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101287754 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.081938002 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110727008 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101504469 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085513173 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098220315 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083425591 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099533163 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079033799 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108173255 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10951566 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082961684 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108259683 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081417922 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101780423 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11132719 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.075784998 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098131172 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080556442 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098277106 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097917586 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102049727 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109672531 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082208449 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.099781284 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079462164 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100901553 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081460546 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094796271 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079893071 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104989564 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084543728 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098925206 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082460908 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103300243 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101859353 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092953735 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100018375 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082883211 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100917631 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078689489 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099120639 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099703826 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085212136 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.1012721 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080226346 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098128249 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08175199 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101361532 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083598655 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10032189 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084368782 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106871449 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10088064 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.084855351 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10458459 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076442374 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103346776 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082610476 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099413482 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.098867681 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086304232 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104247701 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083545462 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109592855 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082869155 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101123871 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10058578 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081107846 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100148489 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082032425 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101111497 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081726192 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102029988 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109672463 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080048391 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10368671 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082250048 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100875757 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090183252 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101730878 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084992178 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108419572 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103734878 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084032448 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109131481 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086038488 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104136004 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101787949 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084208691 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106684373 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081476308 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107671254 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082737133 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100739485 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102743559 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.080611309 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099982897 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082750275 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099943978 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088997153 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101782353 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082090154 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100316001 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098537265 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083704186 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10549465 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090219615 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10299584 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08558035 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096231008 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079221334 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101196738 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099211771 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084438752 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104046877 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088987672 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103500094 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082452306 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099926252 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109523731 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088791412 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105042543 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080816618 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105544023 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084445453 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103246833 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101809317 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082727959 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102620623 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087078441 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102392318 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081897245 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107791056 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086206564 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102560239 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102854717 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083210623 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101498964 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078963332 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10235611 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084967381 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107209701 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103668716 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083204289 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112074004 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083025684 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101260432 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08729721 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101134579 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105730214 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07847324 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101860062 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084649973 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102152923 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078599249 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100867364 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080571725 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103059436 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082316605 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096988027 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111702655 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092268587 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104447859 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08207004 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099749406 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078154417 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09700166 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10024454 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084335137 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102743223 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093751962 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100258434 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082113645 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096655881 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082776796 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104349336 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104116257 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080805904 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.095917534 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081564508 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104725711 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088799944 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100257867 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082812272 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104780702 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103932275 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080905131 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104657201 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079083857 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104910535 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115993605 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084305988 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101879155 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089373298 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109575072 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083358282 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096018996 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102618794 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085828812 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101985285 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084512834 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103258029 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117561075 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086685947 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099995245 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081456532 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103490216 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082704837 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109724411 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103096173 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08406652 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108279724 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085648175 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110206279 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085003279 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110347529 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104623027 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086043011 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100385968 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083003589 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099356348 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082210087 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103108915 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102489075 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088525162 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109155632 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081604073 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112079908 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110586059 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088029096 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097977626 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082060184 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101174214 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078722953 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102311299 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080877302 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100237395 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098771852 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082051777 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104558343 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089299016 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102036573 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084104328 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101942351 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07720789 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103424852 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.103658755 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083958476 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098538352 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083203833 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103146899 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087782168 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106498895 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083654061 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103024866 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084335831 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102676464 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09685548 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089820714 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101105159 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085900929 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100952055 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083618843 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103084484 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086786329 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107339535 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103632962 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085987909 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11407471 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086058159 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099626874 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099403903 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089053308 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100344142 seconds)
  done (took 57.142613914 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147977729 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079666823 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09715281 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07946547 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11160163 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099011874 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07891763 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098501771 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079601645 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101350915 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079213163 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097192795 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108296083 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122177768 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092483826 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102356371 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07812905 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098614598 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096983841 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080155448 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108256859 seconds)
  done (took 2.858103003 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.1074813 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121618136 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114203237 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116848651 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09002821 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112979457 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113545762 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113260665 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098472022 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109517219 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116867538 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112959982 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090958664 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109205024 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10901114 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092877044 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117146535 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108520935 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114165554 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095124055 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111915395 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113460267 seconds)
  done (took 3.20993466 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087355533 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104514439 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084509354 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097480468 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082992173 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097002109 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087343956 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100473502 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086717739 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.100908124 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081935083 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100985257 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103135288 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078055837 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.100967558 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080981024 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150910705 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106370377 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082591767 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103102696 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078528337 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.104699437 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097277932 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078927306 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100796282 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087996868 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102141799 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082140982 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102036527 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081760251 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10203626 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080454603 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103760498 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102094666 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082677524 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100962968 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08259418 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101515361 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07867537 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099739042 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08423733 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097887906 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084187133 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103474875 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081262316 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100012836 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084560191 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102459181 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096780272 seconds)
  done (took 5.429860671 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10439718 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160593432 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.0854834 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142145368 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119129551 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111770388 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087272792 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141457221 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101176672 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082551701 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122011511 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118671071 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102496067 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089468223 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109285085 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102712449 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085165691 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10157957 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10652576 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083854711 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107292844 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089985707 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11911372 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116841412 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106429839 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082595682 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102391167 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10785116 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097641 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108456959 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106911303 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090493286 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11998156 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104870214 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083230063 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10541787 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121112471 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084103189 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105557904 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099545912 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08644356 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107385464 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109441915 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102359406 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104194363 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107528501 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08366037 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099871364 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117933504 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087084213 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112200806 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118771908 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088137256 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103744775 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107293655 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119320543 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084378997 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101499219 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087188263 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117324838 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100044753 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087508558 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118095578 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105285591 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09112301 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118378177 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108395423 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10737133 seconds)
  done (took 8.062028025 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092043506 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109152664 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119488939 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118712357 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090985106 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110202293 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11026748 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090279002 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109576334 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115041786 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109992177 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131160843 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086499171 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1126301 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110504397 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09044847 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110665155 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109031102 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090856994 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109211335 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110176933 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118931484 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09047716 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118690353 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140500101 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104345925 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090308482 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108942207 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118410504 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108798662 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123990013 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09065596 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109876973 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11987837 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121313888 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090597284 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102492132 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108481888 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.0913689 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109411404 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104768525 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100129355 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110821283 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104209131 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090762895 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109742272 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119135098 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12252159 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113848421 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096213517 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.10944453 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1195201 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109301469 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091433296 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119449231 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145925388 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119267442 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119325979 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110058101 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099900434 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119363705 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127042508 seconds)
  done (took 7.596156267 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106336088 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113462778 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.115133645 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.098775668 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082696751 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107369414 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082031678 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101019121 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112224474 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093615202 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114708194 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107503394 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091372035 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11561153 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107137789 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110395959 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087695828 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107378862 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113154115 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088805297 seconds)
  done (took 2.889995656 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093730922 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122552036 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085163457 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111403775 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106902955 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091835806 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105992474 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106016115 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085330018 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106591947 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096115205 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115060713 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104674495 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090838613 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11516007 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110015515 seconds)
  done (took 2.482918515 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096474652 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.115967648 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.118497443 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083597327 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102719381 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083331156 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105113518 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099431395 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081003207 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119175997 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084391933 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107399615 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104046637 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082431809 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100282253 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086902053 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099819183 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082111612 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103456265 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.117661014 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095347918 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102911025 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105836948 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087004636 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103890283 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089974325 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.104366735 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101679977 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083468938 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104165884 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084879084 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111185203 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100900286 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083497909 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10120651 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082523074 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.1029866 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084617663 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107361448 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103380347 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083484425 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103181471 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084657765 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104706402 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080785725 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105332523 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099880607 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091077115 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101297417 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084668212 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102922126 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086509582 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105588079 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114224024 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087837733 seconds)
  done (took 6.188088999 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098608272 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108065174 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079794864 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101832792 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087978842 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105926205 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107686188 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088058096 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10518964 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08258708 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106625625 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088642213 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105366149 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107898065 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086475467 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107640509 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080425376 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105819369 seconds)
  done (took 2.597990692 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090259757 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103655629 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092624184 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104622776 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084116792 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107831746 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080138138 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103198354 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101809657 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085138108 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103976884 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087284689 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102885276 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087421137 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104299504 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083914059 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106913198 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102799464 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085128081 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099968415 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087411182 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102333227 seconds)
  done (took 2.948618119 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119138705 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124738721 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093168394 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229609576 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103745191 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.130840337 seconds)
  done (took 1.640940471 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110260567 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119141609 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104966638 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105970183 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113972199 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086544234 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106270021 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106476061 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11636585 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100844917 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106701689 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116216974 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116967472 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095872741 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113083445 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113145961 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107064514 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086686132 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10492293 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125859931 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087988272 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115898713 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106976217 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087051057 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106816116 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115701124 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116796357 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119989985 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086646881 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116686688 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113873205 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08742928 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116543267 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120170186 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10807622 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098080961 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106762185 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127351353 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113349805 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096071954 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107911021 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113765888 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096695542 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112976518 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11674571 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106162275 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093199411 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105965926 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107403212 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134276564 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093725043 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115523759 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113813586 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116027985 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097035065 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132966762 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120350302 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115041981 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113653633 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121367946 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115495799 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093946356 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11649649 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12010076 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114362873 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095745079 seconds)
  done (took 8.04241019 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10236762 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125512566 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107873455 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12093426 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095764351 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107114882 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106729809 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087143325 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106838718 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106758265 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150561404 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087363892 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116019289 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116483357 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087008925 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107442081 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106540848 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116187474 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086758123 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13331674 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10733593 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116248006 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115570932 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096516755 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120711564 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113002395 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107323952 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087327797 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107214465 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10709546 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092672311 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106808225 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116212274 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08555991 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116446787 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107154486 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086651123 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112156415 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106715168 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113475545 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096315755 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126333412 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107564979 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107517691 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10175407 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107232951 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106555424 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086911113 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107351014 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106388479 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100566578 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122061324 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120946 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115925801 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107672597 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0870566 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106742818 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107754637 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087766057 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112998387 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115469151 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087125715 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133170819 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107990909 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106852604 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116763972 seconds)
  done (took 7.943949248 seconds)
done (took 153.802034348 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213407946 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198073399 seconds)
  done (took 1.254753946 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087105576 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135614882 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095936824 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168157557 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085710508 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139292287 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137699399 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096608972 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105673334 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086124335 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106139831 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086568182 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169347993 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084978309 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105257108 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107043473 seconds)
  done (took 2.647067562 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.115150951 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253355685 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.121620864 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104834669 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088155957 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108819614 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083997264 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111067832 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089085193 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.10405539 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087301487 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106424376 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084229186 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106396072 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088751723 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.10801216 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.103409579 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087780689 seconds)
  done (took 2.803386464 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112070455 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145453045 seconds)
  done (took 1.114195829 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.245631211 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.159803364 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.240085034 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.44722003 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.268017554 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.363070284 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.195538531 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.208510393 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.159904056 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.207582838 seconds)
  done (took 3.343504933 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118514404 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179771887 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314906843 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155989451 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105600603 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126361824 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155731797 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129564491 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.121130669 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100403694 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123457121 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116899075 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136974497 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094119041 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113341259 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116377293 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120249715 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.112797818 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113562781 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096185986 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136664093 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084028305 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114785332 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.112859541 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098054609 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119339404 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105004763 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084456769 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115920752 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093927155 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112647744 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124525839 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117793513 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.15318468 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122330014 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155253854 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116642805 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09058921 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114747026 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090691271 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117430692 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117558761 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123967731 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096644086 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104719686 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096257353 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105764959 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084490265 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114113568 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118357755 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.092479268 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112416462 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153310791 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117928851 seconds)
  done (took 7.324609291 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.783078048 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155509921 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090796508 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.875446431 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13465736 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102889293 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.770005185 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110921139 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25393269 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.74709309 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132423089 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096143426 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227479844 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257944117 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925681896 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286678554 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.636462284 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125038493 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151128249 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152624639 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117659364 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114034324 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130235819 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427804307 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115229841 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08963392 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117577668 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118011158 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158048995 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124231143 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092166595 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196631307 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.243952593 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201498351 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093956647 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11071672 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089137649 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189243071 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261228331 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192886643 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179404345 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107566458 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089102816 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121365914 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131771582 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085881743 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182974925 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172999579 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169718653 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114135047 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11749081 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09828593 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12006531 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164744965 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120897354 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308418552 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.315551163 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089315572 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120743319 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124947811 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237034384 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122919583 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223109057 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139131538 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188001276 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110782521 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778464698 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169239515 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109633076 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094945687 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118287905 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114865053 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098112824 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165894379 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.404718323 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121647445 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112915985 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089733186 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22449481 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102726559 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110706704 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160550557 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116196384 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119794232 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101332148 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12146455 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167606665 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250296019 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10119073 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11937736 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114881803 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102985827 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11577461 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213150054 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217834928 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161622492 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.226768905 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099991998 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182204975 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167077685 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118623543 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.169931935 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118518228 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102481928 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121468436 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213678934 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14346307 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121573288 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093183777 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117376303 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146424592 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125717215 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096634775 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189433864 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454330943 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16699187 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108555586 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127346633 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097406879 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180844243 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09620293 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26189283 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12109501 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167160311 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118154074 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086490178 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119889736 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163017296 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120907996 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098570377 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122404776 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118422188 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233740185 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213386056 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119577536 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221053742 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182422356 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117521931 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169157148 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119983789 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166325198 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119254374 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098332295 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116112893 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768580775 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122386613 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097099587 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114324998 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186258477 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0894723 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122773853 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12380957 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0858776 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791691164 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125537115 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121311944 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102149906 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116631641 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118177857 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096257962 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114395227 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160286366 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227978521 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118312232 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097379075 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122852438 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158324416 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115636264 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125118471 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123142413 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102012448 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120667521 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114168302 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102642913 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18822359 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163081065 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21673729 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.570792209 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110804906 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124224305 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203377123 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111150785 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28655742 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118811032 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.200182934 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182104588 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098889802 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314127795 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162706573 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184879854 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125577089 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170930269 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1087167 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116718815 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164008784 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110645703 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095244467 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160427279 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124384953 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122016837 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.961762984 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089526097 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244914414 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086803721 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16971198 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115552724 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118282555 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.284444007 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089112363 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127106129 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162852187 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113675337 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101486042 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.869606415 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124549491 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099451539 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11651507 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219133208 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161502483 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118662185 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117717147 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097029012 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180695295 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205879067 seconds)
  done (took 43.683444514 seconds)
done (took 63.021148279 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275947446 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216307882 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.266798682 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.16907907 seconds)
  done (took 1.890345456 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170626363 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148530255 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121495905 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106598674 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149914626 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08527879 seconds)
  done (took 1.665773929 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.356758633 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273794254 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241801101 seconds)
  done (took 1.757750473 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289585138 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.244974595 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.469236399 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.322197256 seconds)
  done (took 2.333469584 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208024683 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131240721 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.109525767 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10274769 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.1969037 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.242961263 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14075754 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200039838 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098429888 seconds)
  done (took 2.363931255 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195592641 seconds)
done (took 11.092062471 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.318613386 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.191084028 seconds)
    (3/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.168856711 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.252751218 seconds)
    (5/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.12044479 seconds)
    (6/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.23351 seconds)
    (7/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.26318841 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.180455957 seconds)
    (9/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.225750787 seconds)
    (10/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.230841007 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.114905814 seconds)
    (12/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.100865316 seconds)
    (13/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.224018661 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.223845811 seconds)
    (15/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.210665173 seconds)
    (16/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.157287919 seconds)
    (17/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.116917449 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097561198 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.120218364 seconds)
    (20/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.217147989 seconds)
    (21/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.252459548 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116981428 seconds)
    (23/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089433386 seconds)
    (24/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.212702314 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115972761 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112193422 seconds)
    (27/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.192430491 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.129176077 seconds)
    (29/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119824281 seconds)
    (30/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.118741612 seconds)
    (31/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.175778914 seconds)
    (32/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120641081 seconds)
    (33/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.172375042 seconds)
    (34/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090487888 seconds)
    (35/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.123403484 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.147424861 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.142136768 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095466306 seconds)
    (39/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.140343316 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115566772 seconds)
    (41/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093478333 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.217944652 seconds)
    (43/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.12147939 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065773782 seconds)
    (45/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113919267 seconds)
    (46/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.126180104 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110977959 seconds)
    (48/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.096930953 seconds)
    (49/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.148251541 seconds)
    (50/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.147467445 seconds)
    (51/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.136362073 seconds)
    (52/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119548083 seconds)
    (53/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.190452345 seconds)
    (54/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.115102611 seconds)
    (55/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118388281 seconds)
    (56/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.162540658 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117080699 seconds)
    (58/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.190466336 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132953599 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.174063065 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.088718148 seconds)
    (62/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.198854537 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113592084 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116209893 seconds)
    (65/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098849975 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110558712 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.137508135 seconds)
    (68/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.10788006 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108518485 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086024636 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123597856 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114693288 seconds)
    (73/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097153982 seconds)
    (74/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.099031573 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09350677 seconds)
    (76/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.187967937 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.252233005 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.137724719 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116242694 seconds)
    (80/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111096621 seconds)
    (81/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134396772 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137701905 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.086792545 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115206647 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15305947 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173311983 seconds)
    (87/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119466412 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.192376707 seconds)
    (89/309) benchmarking ("sort", Float64, false)...
    done (took 0.147729167 seconds)
    (90/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.110344631 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087983284 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117606035 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082576491 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.088982006 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085516402 seconds)
    (96/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.118828397 seconds)
    (97/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086840963 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.194500346 seconds)
    (99/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.144281636 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115378517 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114409187 seconds)
    (102/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082516508 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121402088 seconds)
    (104/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099788948 seconds)
    (105/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.113992279 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096880474 seconds)
    (107/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134288914 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.189421702 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.138820364 seconds)
    (110/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093076397 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115933345 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.138320693 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094058515 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.168188325 seconds)
    (115/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.184320228 seconds)
    (116/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.124835818 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.089565449 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.183033167 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168949413 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090011731 seconds)
    (121/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094148285 seconds)
    (122/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.331226477 seconds)
    (123/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06616415 seconds)
    (124/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.122871952 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085841203 seconds)
    (126/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.088969641 seconds)
    (127/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08538748 seconds)
    (128/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.107942745 seconds)
    (129/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067126955 seconds)
    (130/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066941047 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.178876941 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117107735 seconds)
    (133/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.147846037 seconds)
    (134/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067253528 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093545498 seconds)
    (136/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.110753348 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066847968 seconds)
    (138/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090013271 seconds)
    (139/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086622548 seconds)
    (140/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.10627883 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091086642 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11540651 seconds)
    (143/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093475191 seconds)
    (144/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.172706788 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.178481493 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087695492 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116552512 seconds)
    (148/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.086786172 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.18803085 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.186234747 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066987892 seconds)
    (152/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120098362 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084690555 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117486487 seconds)
    (155/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067033825 seconds)
    (156/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.112830965 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067273124 seconds)
    (158/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.11149103 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092134374 seconds)
    (160/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.0930507 seconds)
    (161/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065454784 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085506105 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108275135 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136766554 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170996257 seconds)
    (166/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.20579109 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.108805811 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065301217 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118387438 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084729686 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.089103042 seconds)
    (172/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111856115 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.139425095 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065862845 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.10959913 seconds)
    (176/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.129686094 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.134293039 seconds)
    (178/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.121964063 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085207612 seconds)
    (180/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.07652742 seconds)
    (181/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.100554562 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.13905939 seconds)
    (183/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112282818 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.178810272 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088194115 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.089570841 seconds)
    (187/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066678573 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.154554306 seconds)
    (189/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.092703168 seconds)
    (190/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091416896 seconds)
    (191/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.122901291 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090940646 seconds)
    (193/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075628942 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.130365647 seconds)
    (195/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065842436 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.166542437 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093258822 seconds)
    (198/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.089396431 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.108255373 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.224082025 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179582539 seconds)
    (202/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.214398588 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214646557 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067049897 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111667409 seconds)
    (206/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066912337 seconds)
    (207/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.188897598 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066142405 seconds)
    (209/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118361685 seconds)
    (210/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101394009 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108109999 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122679042 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066899947 seconds)
    (214/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076653429 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.137465631 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.132053408 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086240886 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108626382 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085015035 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.21354493 seconds)
    (221/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109395087 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156310507 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111492207 seconds)
    (224/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.087805796 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.116898685 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095598045 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.137772517 seconds)
    (228/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066844923 seconds)
    (229/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.090604687 seconds)
    (230/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066114543 seconds)
    (231/309) benchmarking ("sort", Int8, false)...
    done (took 0.18718953 seconds)
    (232/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.090114687 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.085659387 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.13348063 seconds)
    (235/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.120863461 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109511269 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091902957 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.089608477 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.114518838 seconds)
    (240/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.11234562 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085384146 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.090315833 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.108110603 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.187305949 seconds)
    (245/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090101468 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066267769 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.156157252 seconds)
    (248/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.084697419 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10961997 seconds)
    (250/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067475522 seconds)
    (251/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090691444 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.130496951 seconds)
    (253/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.138026787 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098426357 seconds)
    (255/309) benchmarking ("sort", BigInt, false)...
    done (took 0.219005605 seconds)
    (256/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117032299 seconds)
    (257/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134717618 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149064188 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091375094 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156766007 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110072581 seconds)
    (262/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.14369642 seconds)
    (263/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078561205 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085619023 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.092164524 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.205116458 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092735358 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066362115 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.133130579 seconds)
    (270/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.110637098 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094637613 seconds)
    (272/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077014151 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.133448009 seconds)
    (274/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113179686 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068667475 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06907385 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.182279182 seconds)
    (278/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066334779 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.172043224 seconds)
    (280/309) benchmarking ("sort", Float32, false)...
    done (took 0.17304139 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.151646967 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094786755 seconds)
    (283/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.076085156 seconds)
    (284/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.090447962 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087089485 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.157361511 seconds)
    (287/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11223491 seconds)
    (288/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066994251 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094876748 seconds)
    (290/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.090710804 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084945573 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092107927 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085394822 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066933678 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223362595 seconds)
    (296/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.217354258 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118844812 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088082458 seconds)
    (299/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118303874 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.171629546 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092117637 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110627355 seconds)
    (303/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067106802 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068293179 seconds)
    (305/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.162978508 seconds)
    (306/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06775915 seconds)
    (307/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116411021 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.133510419 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092013261 seconds)
  done (took 39.610411183 seconds)
done (took 40.502483179 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10262342 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145439169 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096157901 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.133977848 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124248586 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090951067 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117757134 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098296632 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122644989 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124254607 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098082132 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092875912 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096201789 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119914388 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096066661 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138639917 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123131126 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093394851 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117607313 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08642079 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118258489 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086800375 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111433752 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069828587 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121427387 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093889283 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115930508 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119863256 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086314922 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109589975 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090020425 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117082465 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086629613 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124209922 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092273982 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118428971 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097568431 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119288438 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088227499 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11032359 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117924197 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087229592 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116789173 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094572667 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115969905 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092565205 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118447047 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099620129 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139092244 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117855715 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094584878 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122745619 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095602077 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119246882 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090854147 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119188496 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09197747 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138789462 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119661442 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091214961 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118555253 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093958327 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116170337 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095232301 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119049137 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120160428 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09826102 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116203421 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096348225 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116352827 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086412621 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11831793 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090087002 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110493283 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096108397 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12044346 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085623697 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116485204 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116650905 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091608289 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109675948 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089137555 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111335722 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093401894 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112126652 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069637449 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113475597 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092861996 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109844827 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095243003 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116219654 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093197503 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112045529 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098538289 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11002753 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091905582 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109894851 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086549046 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113038825 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090448793 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110162906 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089271765 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118560919 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08954636 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.11623478 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122275614 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085962453 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11640297 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086047478 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109821498 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101243073 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120500234 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086790206 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116158757 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086640773 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11812629 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086241307 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109975037 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086804912 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110315202 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092606855 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109754574 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088758744 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.116808521 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125103587 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086430686 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114127762 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090047605 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109700845 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092290983 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110880924 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086412832 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113502632 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077159324 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112824842 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086773103 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118200527 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089299302 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118891524 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088756042 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119926905 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091905331 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116773875 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091811948 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10925011 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.0743298 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115645971 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088775519 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112007777 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08754424 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112189862 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086825205 seconds)
done (took 16.876494912 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092075088 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184562119 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150790648 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142074752 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107639547 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111059048 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121300192 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119438202 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112542835 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143063815 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110952354 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132183409 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147406476 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086351574 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111273587 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.0910234 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112386121 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103162936 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144827096 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132795788 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163709231 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086266055 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145081979 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134793312 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119945806 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104524718 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112125374 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091163418 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11489045 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112908566 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131764776 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114476675 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087497559 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133349643 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104968373 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12001142 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087316013 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118531351 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087852189 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111017335 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139304798 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132613446 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092120428 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116613467 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091619463 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113855478 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088736498 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120289384 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098483794 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114617735 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125451367 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154424097 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090667425 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121630431 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086566421 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121679538 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120683677 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089801056 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111734667 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089867807 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110977848 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091528564 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126462739 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140658075 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092080877 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121457356 seconds)
  done (took 8.588567249 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109958905 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138747353 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105294685 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129086708 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.127780857 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087696285 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111816248 seconds)
  done (took 1.767694141 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092874418 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133011453 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111346756 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135268151 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130597067 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108363022 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122096167 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087559252 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.12948726 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088869067 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132920872 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152070632 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090107322 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119472012 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137159029 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087968969 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136673709 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088014507 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115369611 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112463882 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114284942 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133479764 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090292093 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112506273 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10258082 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112410331 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160698677 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093920959 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11491499 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091941044 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11105378 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.164561615 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102859621 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123428301 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08822398 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126980679 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127750075 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088497733 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128769041 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09350575 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126468349 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089405709 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.113945056 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086264642 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116947727 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122667034 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090137465 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113002964 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091239528 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133564251 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089202378 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126429015 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08956189 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117245609 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090001531 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119621404 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122463381 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.088935077 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133741399 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089663693 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130358918 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105317699 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.126674716 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129241856 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090708392 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126885697 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103113542 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115301037 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089856932 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116394928 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129458186 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086128773 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114035678 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099705326 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115770507 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112839241 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136553627 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115118552 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098769803 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113020211 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.08933558 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113288267 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112791256 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117275495 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089136244 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117790405 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091776294 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111356586 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088645423 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116599061 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087652759 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114915997 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.115896529 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089505306 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115451728 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105726202 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115217673 seconds)
  done (took 11.753507785 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096612778 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11764928 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091191678 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113370842 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090427494 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115168644 seconds)
  done (took 1.590936602 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120948362 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119191021 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10416339 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119359267 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156567277 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103910055 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128508784 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123532567 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107828559 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126781077 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129087818 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105183618 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134803085 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120109245 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103908325 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120091016 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128630627 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098805252 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127499651 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096764305 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136918503 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120478808 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096656703 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131627598 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117192358 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095251677 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125189394 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102343135 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127152092 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122719349 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096318097 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117285958 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09607867 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122335067 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.1296003 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095846278 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120617387 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118330888 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100237276 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117995299 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105092799 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120958477 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126291674 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093858384 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122719139 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120532618 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094247887 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125989868 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.10366816 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118461401 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11922735 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095161559 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117965356 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093643369 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120314512 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123822228 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09409164 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129712019 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095583749 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120686099 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118001467 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093065134 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123571689 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117268577 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103553677 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119041585 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095443713 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120609177 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120428247 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09568785 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118578137 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093144969 seconds)
  done (took 9.193167073 seconds)
done (took 33.849896366 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.684874521 seconds)
  done (took 1.649207194 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.711624771 seconds)
  done (took 1.679074612 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.921927808 seconds)
  done (took 16.888910097 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.499798784 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.573139561 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.810783614 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177490977 seconds)
  done (took 3.027963213 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.945588465 seconds)
  done (took 1.933152542 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.303126788 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257024469 seconds)
  done (took 1.534065454 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.768774872 seconds)
  done (took 1.74628425 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.365822689 seconds)
  done (took 2.33877078 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.34217907 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18492008 seconds)
  done (took 1.507310164 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553425453 seconds)
  done (took 1.534377803 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.647900529 seconds)
  done (took 7.633634568 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268080554 seconds)
  done (took 1.262619342 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.306259431 seconds)
  done (took 1.289288837 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.353132243 seconds)
  done (took 4.33681761 seconds)
done (took 49.340842729 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104650292 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127006327 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10158647 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123376008 seconds)
  done (took 1.43435071 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10604754 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120902127 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100455012 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120333949 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12538336 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095298537 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122172791 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100275023 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119816786 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097101572 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120102751 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118773807 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097954697 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122235994 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093739137 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124489883 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099445387 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12062706 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123547281 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096732606 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118106823 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097690884 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124039436 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094235042 seconds)
  done (took 3.646349894 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105680073 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118159281 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096107896 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117536413 seconds)
  done (took 1.430806591 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105146908 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141384296 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.137686912 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099438462 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141293038 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135011782 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.090966021 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116801272 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09396454 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124935613 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089640325 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.147736438 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137012439 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099123739 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126020538 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087990841 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115984374 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13577371 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099923486 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12620288 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093994367 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124026656 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090396426 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138697747 seconds)
  done (took 3.786473149 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176873957 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150677585 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139923893 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09505407 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159808125 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140386163 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087986144 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140356358 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087483862 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.12999545 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11759565 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132270437 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127299995 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088068794 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113635628 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088476728 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127560323 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127916562 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091135959 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.144574994 seconds)
  done (took 3.464480247 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104501281 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116649369 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088214837 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115537373 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098795385 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120137506 seconds)
  done (took 1.639038012 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097649106 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113965871 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.08919182 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114052148 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093654525 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113403456 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088556106 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114113819 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088597892 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11358948 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089566405 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113088528 seconds)
  done (took 2.223940743 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.47143415 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092621101 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119844685 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111380117 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097370048 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114643643 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102752931 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.11782442 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14033591 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089032781 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114405597 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091617227 seconds)
  done (took 2.657463029 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241433553 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125021072 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283553254 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191810073 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15659254 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170487306 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151966441 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163191932 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.220580428 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158713066 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20277948 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220826085 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124834482 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21063318 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112026781 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143025639 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222216425 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210408254 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152470626 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224893575 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198711155 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164209142 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177910207 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148423309 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13769052 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170580137 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119863417 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103623643 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230978531 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174959498 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21172912 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160937343 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145786384 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207355774 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249377442 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216144612 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188090594 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134726875 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145243948 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162920543 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259236565 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135665118 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226342824 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153375287 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104533016 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212475104 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164261113 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173062585 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149302795 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137174023 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192592748 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236663544 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190601194 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137318601 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162995636 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15720048 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167217371 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153577597 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246199466 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194842818 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173812707 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119528726 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144460493 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191239623 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180590281 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166582004 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.202735217 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145572438 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189775228 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186068547 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162336932 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213307993 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18472715 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137848001 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16701183 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171701053 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1709523 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251865578 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173711754 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120918538 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167579675 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148152023 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130772174 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167067933 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123934288 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207046542 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146258862 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.132984862 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163512137 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15799398 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159472964 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198199861 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217700003 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120652322 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110044474 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152922184 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15412715 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187486711 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138237534 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156622623 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162046829 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128389957 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176981426 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09752443 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197345032 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090671293 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171386743 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177847723 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127363415 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157709529 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150453316 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.147093818 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172745443 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194826676 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1406356 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13178461 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206420996 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174113862 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.148614872 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176477321 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223597952 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.115207403 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149342419 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223996434 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241087733 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112802633 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225530783 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15485554 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107324967 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13021621 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178655669 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152819618 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159307031 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132650812 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.180219946 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231587714 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098313559 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137936593 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18177081 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133624351 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131573909 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15901656 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146138959 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112076496 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146459673 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151614744 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180489945 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174122101 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151568649 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162638829 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150700777 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249349245 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140381796 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148431008 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14673138 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093283508 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.215873195 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196230091 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128238003 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203894292 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.168778919 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159172318 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167019905 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134157258 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17665911 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128283285 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092780495 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217500965 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164281717 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158956184 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193438113 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15814778 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180244157 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180949515 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196775951 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171215923 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162123895 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154422659 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111614572 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157814445 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165301046 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122696473 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142123849 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107181823 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152980014 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142113029 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13327224 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194750173 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194433212 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121020917 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156980425 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148777732 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179020304 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128029926 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172096902 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175204421 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146060165 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.22160122 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191690192 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18184994 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142591279 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230545903 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093442281 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123656083 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141169952 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169085773 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106567583 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135437696 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166311294 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178788256 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205130691 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17659319 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16469437 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171682657 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187807559 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094608741 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167404574 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209178269 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176505829 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.162789242 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136431045 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149091293 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175092872 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157474722 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252586573 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16604575 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172216569 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230786826 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.147744644 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104400962 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150293872 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184959344 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152463963 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201273343 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119981699 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140798732 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16128357 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131807956 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159200118 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181216295 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162790504 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213360629 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149152568 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18300709 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126757886 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163836825 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156748624 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162959327 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081928328 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174190227 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229304971 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147507721 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167642583 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188440818 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130395164 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.177104448 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208905862 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216873895 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136105846 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15676084 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132450788 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16105813 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19472557 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176498128 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156914489 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185022156 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156148023 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109899963 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140768909 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147871474 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14978446 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.130434806 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146538342 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17371161 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.111518549 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210238357 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159535104 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156440412 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169393987 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.122489522 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14363456 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149316012 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237114516 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173195456 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208500038 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148402763 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178440825 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230695182 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097853059 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132014762 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133001649 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177343521 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134855705 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187364805 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.145850053 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159793915 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179094476 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188866381 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138488968 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092222056 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155271768 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170840748 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167577426 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151813148 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158287155 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228175151 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114697752 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131145084 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171417426 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159440137 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145981367 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195657484 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079057173 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147905982 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126624083 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10509216 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162536567 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233268856 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133801504 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.157488572 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187675068 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167081122 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162986467 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147400612 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122674265 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165445529 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226487179 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178898553 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131416116 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152487944 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17529418 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191246222 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159694281 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139612158 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201292898 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217532191 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195746206 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141362983 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166756404 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166075056 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155175715 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186217013 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133624383 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204703061 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133678221 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22268078 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151634847 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141608258 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174784489 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.120627444 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140052053 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213000439 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174991918 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107908254 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132559925 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168918761 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174629001 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153877256 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126933921 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178513041 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124005504 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18945433 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25438816 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133559149 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151527832 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120885722 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133919333 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156271803 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157462051 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139148631 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138346891 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223971233 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133530213 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190551467 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227282835 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168251122 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172586706 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143929049 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691556551 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.129492157 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193619561 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154397537 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204532288 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148751164 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170658944 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156475363 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169075152 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219200163 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159580317 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.22838023 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192858812 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.174864254 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131903584 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157745774 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16060086 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143902507 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151142224 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166338446 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159677974 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150783133 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176526783 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168310064 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.132916014 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112003418 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222732689 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154172828 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181620664 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178019659 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137013609 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170881011 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188332664 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132142104 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177695972 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233476725 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140808509 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123794998 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132477468 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15361234 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2564857 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097391302 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225946722 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1740327 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156208441 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16580766 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146323539 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188288829 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156852529 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201063153 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118894737 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.185240107 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129671995 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136662259 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12804358 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153076233 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165312822 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.147108824 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157342601 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137364957 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187879032 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122928053 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143988498 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158674891 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189610643 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213992747 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134156611 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134148925 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161525723 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149373591 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17321351 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176760791 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135225738 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108483833 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136097509 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.152986159 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112407027 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155899093 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156429088 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165338628 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229403072 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109082815 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278961537 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137477534 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152782261 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.0886678 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12986529 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147239779 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117560843 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156573959 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148605323 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257184045 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.144477834 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105236026 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146696787 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124447868 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134229987 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136491131 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186200589 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172814777 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142637337 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081142367 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156340952 seconds)
  done (took 80.017591154 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165761633 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.128883299 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144999087 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199710874 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174978156 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267353588 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208045681 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251569518 seconds)
  done (took 2.615623672 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098895166 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144170088 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.151240204 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131356888 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091037713 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117950818 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.328606794 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13173845 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090407355 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.137805884 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.146677386 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.115940983 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.508842969 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.115650561 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117128893 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082645398 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.114778986 seconds)
  done (took 3.692992859 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.461170773 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.670073158 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.480365442 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.12249378 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.978659724 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.132995005 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.424415042 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.20240232 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09534399 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.465326897 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.764791225 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.175040178 seconds)
  done (took 18.049119729 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.104177676 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.119726299 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107367819 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.134146436 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096354603 seconds)
  done (took 1.637068297 seconds)
done (took 127.275085542 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.109052265 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.399839889 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07174922 seconds)
  done (took 1.583998076 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.112322132 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135905205 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108507011 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134439371 seconds)
  done (took 1.57903122 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103016548 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125736898 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108552975 seconds)
  done (took 1.417924323 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.318654693 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.187783178 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.140807504 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.11239257 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128220988 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102716453 seconds)
  done (took 1.424823659 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102244108 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126591321 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097559296 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.127785547 seconds)
  done (took 1.539658572 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101161442 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070894018 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099272759 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074492618 seconds)
  done (took 1.426690391 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.12029687 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129961993 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104623999 seconds)
  done (took 1.44080862 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.136316533 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137048188 seconds)
  done (took 1.359969653 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111732978 seconds)
  done (took 1.193171413 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.124694232 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.167919853 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.187840982 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.163548909 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.225624961 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165913603 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14084439 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114055945 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.128634529 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.142568942 seconds)
  done (took 2.647797709 seconds)
done (took 17.451593645 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109900871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.412830354 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411577292 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115772351 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.719657865 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380145886 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.05460824 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144634854 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164295044 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094130793 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137692045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672134595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.00997234 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.367037355 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965575572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.460043125 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702817366 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092919994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118085109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092632977 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.039203887 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091941673 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120569176 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092720571 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.700402012 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424261415 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093884148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.457617362 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092270972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124445674 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383103467 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120795608 seconds)
  done (took 17.04279805 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100876512 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171844289 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098718814 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13758754 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122638125 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094465151 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121957163 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093515075 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17710015 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120974814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110385994 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119559706 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123745535 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094168261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139827263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092879983 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124209109 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092173492 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119696034 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120040622 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111150689 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118197786 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093761105 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119873281 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093894656 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134873368 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121661538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092757559 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119493805 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098486221 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125351899 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094498976 seconds)
  done (took 4.788757667 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146613363 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180845981 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126544774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126804471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166724449 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123022251 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196999644 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117697303 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180656974 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120985465 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138281026 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093063246 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155230929 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121050361 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113036279 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119998893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096658715 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120626693 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092967753 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121219152 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138994218 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092363206 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120615086 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092473615 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122498197 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108756988 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12257153 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119607895 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092897681 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125414068 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099985929 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122544062 seconds)
  done (took 5.115090646 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.10343714 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12565069 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108678663 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137263238 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095165786 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124232007 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097204364 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122690626 seconds)
  done (took 2.007970703 seconds)
done (took 30.038387939 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117847535 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126569636 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107255542 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133411219 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102449999 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130041547 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091431236 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132780745 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134012243 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101601954 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.1368103 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091539786 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121932523 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090829504 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134584195 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097506272 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131688713 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102190284 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132438598 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131328706 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094234615 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133138522 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103220892 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132022062 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104985281 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132055078 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136646967 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09957841 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120847347 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094999606 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123819714 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103945769 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122953138 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105644271 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12523923 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09689174 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122030691 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094247563 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131531388 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131214542 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098992559 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13215021 seconds)
  done (took 5.97422753 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113409441 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139318311 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105268866 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082293448 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115272814 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08092463 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136328675 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079436375 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109603247 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107227268 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074331861 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.104408602 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078185995 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100293954 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077384906 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075608822 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107913524 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075845023 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076814915 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10479739 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079979067 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073015752 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106824143 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07856422 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075563219 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109027226 seconds)
  done (took 3.565511986 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.106381458 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134070962 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111863695 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182487866 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160385254 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099584217 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131489077 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138310441 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107340053 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119262153 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095325485 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148495438 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110737039 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126347924 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091596195 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135152913 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134442439 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093512131 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126180749 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113093051 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136675022 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102382246 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141963581 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131006977 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092009565 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121785004 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096362691 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133044821 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096934386 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129694325 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096208072 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124083535 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121199172 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104365741 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124695368 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093857163 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.13995247 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101764056 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129111609 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092693985 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.123693756 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120773583 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113675006 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16545285 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091137073 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128218405 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.100980307 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129910102 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119904029 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111283422 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129562929 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092198101 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123501074 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091805506 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120471659 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106662922 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.130391346 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.122006648 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101207233 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123136372 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104776734 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123859026 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108344058 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119968671 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099979876 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119313826 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092964212 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119580077 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142040678 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093684658 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161984581 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093299674 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121476888 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.129715482 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.099949516 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126695464 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092245124 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136043758 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102583757 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12371829 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101697296 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124641044 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094417998 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.137605133 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122724589 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094448936 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121602136 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099426251 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12217893 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093691909 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134412074 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092392519 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123228544 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110058591 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11943456 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121833061 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.098947092 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124288363 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091681509 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133236977 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098091025 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12066668 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13032039 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092789413 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122789151 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102423362 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.124935865 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091774624 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124952973 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098732632 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121908215 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093320568 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123725432 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094380503 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129805658 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099339201 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125362929 seconds)
  done (took 14.699671946 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.233995041 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213501213 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.235424763 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260114247 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133227611 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115465479 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209885049 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153422333 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122326429 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159509115 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.160889819 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179947749 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139127406 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.177945638 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.138367061 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121545575 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111080938 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163094565 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212165802 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.286808164 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112512725 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.130307405 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161045658 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158317398 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105869013 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130889398 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.137563196 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105205747 seconds)
  done (took 5.686250565 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114632795 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154215062 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09874394 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.142797939 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146683838 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092130191 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125156045 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094195497 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133262252 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133267138 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091877303 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126979351 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100031743 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13039904 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121930869 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102081673 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130709188 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094478624 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124134666 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097199924 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.127975288 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101680671 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125075113 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120458426 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102113628 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120259669 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08567896 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141618828 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120896178 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115006956 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119882985 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099587055 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.131772958 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094030899 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121222235 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095226073 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124492274 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094960373 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12284898 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091477976 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120331908 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077704287 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120269982 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134564375 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099440755 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079500465 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126964196 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126776092 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093633174 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119866316 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09533127 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123831951 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096632581 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128664213 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098858763 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122749109 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096652996 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114699706 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099025777 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.122706567 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084058812 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12021106 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097397572 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116343259 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100897048 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126518592 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091837146 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12367746 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097440448 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127626752 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095226254 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125372178 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090881144 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124703493 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095563848 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126155026 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096917293 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.119643904 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120837592 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093837832 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075361252 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122480889 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074126601 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124879771 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091578562 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120050034 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095550598 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127893763 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135375033 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094843801 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130874542 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094416602 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120938909 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097228005 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111750321 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096055466 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136739998 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138374392 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09325457 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120031937 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106932601 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.123718659 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092905125 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10418585 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100649002 seconds)
  done (took 12.840472297 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13301373 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150714575 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095873603 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140568887 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.153731234 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155709286 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.09921908 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128847374 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094895697 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140563371 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093833026 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.12990965 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096335639 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134887578 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.154641448 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.101961149 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124157177 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106793232 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12959851 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168663038 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11204256 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.140721294 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.10828354 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122406051 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127212537 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11014338 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159901408 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107466326 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.134703396 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140411534 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108128088 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158891777 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141818313 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09752215 seconds)
  done (took 5.438744064 seconds)
done (took 49.300079559 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.228358466 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.408878938 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.192276572 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.07588522 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.196265656 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.232933158 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.200743121 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.186470229 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.295430542 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.186778798 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.449608511 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.7451133 seconds)
done (took 59.523271949 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.271986827 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.323214613 seconds)
    (2/2) benchmarking "String"...
    done (took 1.462858016 seconds)
  done (took 3.901221243 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.551720177 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.100697331 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.446074658 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.190830869 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.185503627 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.492600612 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.715064551 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.458116843 seconds)
  done (took 27.701707621 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.188950538 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.540319432 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.440806621 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.432044429 seconds)
  done (took 17.716741209 seconds)
done (took 59.258697366 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.211830689 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.203457178 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.195158952 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.164891114 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.286231851 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.209459378 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.477673616 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.415654534 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.187253142 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.186532779 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.185617368 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.186381773 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.192380617 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.525277435 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.190167862 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.19003237 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.236520575 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.651539143 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.547974762 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.197122854 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.202734584 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.233523799 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.184879486 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.189015902 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.202408676 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.181606732 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.182746159 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.191505515 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.194013987 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.187796197 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.276640338 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.693601663 seconds)
  done (took 190.674638241 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.18478785 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.23302637 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.328869859 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.222401326 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.640142971 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.383778407 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.32311147 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.708870822 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.199366996 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.188613286 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.441674297 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.183675549 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.500041576 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.166670044 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.19330514 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.244969889 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.367263087 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.512619642 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.200484076 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.457202903 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.187982933 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.418081823 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.331554098 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.400170286 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.187712923 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.278269262 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.235811998 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.198789843 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.376285851 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.343148868 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.20325982 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.245054366 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.71633917 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.044312436 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.18525323 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.210064042 seconds)
  done (took 149.354957739 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.441465502 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.185596502 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.185907112 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.186815216 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.21401078 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.186069198 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.675374574 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.673557185 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.674296197 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.642680587 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.245565234 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.369150515 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.188798652 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279255584 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.198139841 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.186026564 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.202921596 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.227700061 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188335758 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.188146641 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.675742875 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.201614848 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.391011576 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191265296 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.188116284 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.215446084 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.576490275 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.184491129 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189803579 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216440625 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.501021942 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.228409734 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.188368135 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.440776429 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.343294294 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291889192 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190358239 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216723712 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.189406165 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.451183655 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189976514 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.189385536 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.192629489 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.72836517 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.186609111 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.677440141 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190017343 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.03928113 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.187358837 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189958026 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.574125857 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.555715678 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.200068703 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.189676031 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.19265754 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.190571416 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190011205 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.191440289 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.218548858 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.536603183 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.28228843 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.204970454 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.194427772 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218353858 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.190437981 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.385662301 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18996609 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.737260005 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.242967026 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.410269473 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.680431556 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19082904 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282483728 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307050164 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.189791622 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.191120316 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192640487 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.1908118 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.296247911 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.189627684 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.552518545 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195785217 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.193818046 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.249473342 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.284389119 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.191757172 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.459528385 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.19265919 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.191284851 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.832596661 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.279093046 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.190199281 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.19202524 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191910618 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.192553497 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.193165177 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.555121034 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.679778131 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.32425187 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.192747416 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.59678516 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.192415034 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.571733687 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.669195673 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.744344916 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.192861679 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297235246 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194580684 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.194494622 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.193146489 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222008279 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.207673806 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.252726419 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.190205236 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.588764402 seconds)
  done (took 343.311142231 seconds)
done (took 685.895548379 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.846135362 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.832347255 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.93672865 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.824208542 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.812187347 seconds)
  done (took 10.370636854 seconds)
done (took 11.488452977 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.363445013 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.364881818 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.247606468 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.366143949 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22022311 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.379965365 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.343425749 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.214699919 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.288987304 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.265981861 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.287357957 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243328109 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218348069 seconds)
  done (took 17.923208386 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.49749824 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.502792504 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255260782 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.491700563 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23135737 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.490945066 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.383007124 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395385233 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395084348 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221209903 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208896232 seconds)
  done (took 16.194015323 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.494263961 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.492219015 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258648257 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.503198257 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234027852 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.498390639 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.384819082 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.397766831 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.398040713 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22417269 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208920881 seconds)
  done (took 16.215044357 seconds)
done (took 51.451140674 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.204413236 seconds)
  done (took 2.324997387 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.237434963 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.394421277 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.218118151 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.210749561 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.204907763 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.206271995 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.209544241 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.20518048 seconds)
  done (took 11.009346429 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.202032274 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.203568709 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.204446117 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.203476346 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.204385604 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.201772608 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.205741289 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.202531149 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.202738483 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.201968884 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20193744 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.204227415 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.205216053 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.205329391 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.202651327 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.202998275 seconds)
  done (took 20.37673376 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.205269891 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.202279044 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.202356526 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.202861462 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.201873873 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.203552119 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.203936935 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.201832625 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.203739319 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.202202395 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.203469948 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.202613649 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.203910517 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.204258225 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.203940553 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.204429533 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.203574316 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.20507234 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.207870652 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.203146909 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.205968131 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.202369889 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.203503434 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.203610251 seconds)
  done (took 30.011844427 seconds)
done (took 64.842436529 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.114983235 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.664050177 seconds)
  done (took 8.903027679 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.206273884 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.206558261 seconds)
  done (took 3.537461567 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.205926114 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.206724845 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.20638344 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.206544477 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.206076769 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.206938609 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.205856087 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.206659872 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.207038899 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.207739702 seconds)
  done (took 13.190658134 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.207772834 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.205876034 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.205038801 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.208128473 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.207786634 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.20415066 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.206902767 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.207051403 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.208441288 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.205727552 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.207307138 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.206291428 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.206881109 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.206090809 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.207903138 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.204428084 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.205825587 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.204264708 seconds)
  done (took 22.841265985 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.207552176 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.208059032 seconds)
  done (took 3.541606522 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.204746894 seconds)
    (2/7) benchmarking "second"...
    done (took 1.205189699 seconds)
    (3/7) benchmarking "month"...
    done (took 1.206099171 seconds)
    (4/7) benchmarking "year"...
    done (took 1.205539284 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.206461698 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.205438413 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.206067178 seconds)
  done (took 9.564818654 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.209611324 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.390608056 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.471455232 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.83187761 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.209965373 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212794123 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.054601767 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.212245682 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.215255959 seconds)
  done (took 13.93507367 seconds)
done (took 76.636224006 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.185855813 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.216726794 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.264905836 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.206049614 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.220001282 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.50321273 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.211223305 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.321363444 seconds)
done (took 37.256167077 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.205334161 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.916475758 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.921100327 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.200161311 seconds)
  done (took 11.163276624 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.193604018 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.054744411 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.186655148 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.156240234 seconds)
  done (took 17.719781919 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.161886853 seconds)
    (2/2) benchmarking "read"...
    done (took 1.533945732 seconds)
  done (took 4.822451023 seconds)
done (took 41.036353274 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211446329 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.21095264 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.210722911 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.209255435 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.21024084 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.20758158 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.209125525 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21111272 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.211238455 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.210981334 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.208621058 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.211831075 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211727087 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208811709 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209029342 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211613403 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208752641 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209304188 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209869773 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.211789426 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210438542 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211849373 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.209391705 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.210056037 seconds)
  done (took 30.172659451 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.212535656 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.211571745 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.213121309 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.211587206 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.208406084 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.212247881 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.212988277 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.209260961 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.211779665 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.212227668 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206755772 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.209006121 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212007895 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.20902396 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212253575 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.209770726 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.211779989 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209469325 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213995131 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.20917587 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.213157795 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21080542 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.21043292 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212504668 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.211131382 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212000285 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.214187934 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.211204738 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213655253 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.211092523 seconds)
  done (took 37.467789609 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.217193086 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.219856849 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.213234095 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.213378499 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.213693783 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.212269945 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.213868895 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21320583 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.21334495 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.2117624 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214476425 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.215099204 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.212735277 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.215291685 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214213324 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.214896117 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.214305005 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.215093962 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.21500124 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214629807 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214384285 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.214969244 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.214564144 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.214833727 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.214931246 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.215642585 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.215743837 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.215234323 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.214531791 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.216040321 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.214562108 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.215632969 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.215268491 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215614477 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.216732842 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.215873427 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.220229391 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221634142 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.215342421 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.216257675 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.215026165 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.215404626 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.215688061 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.216437911 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216040135 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.216235313 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.216584182 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.216392107 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.217072021 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.216455513 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.217200136 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.217671041 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.216747094 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.216359244 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.217130675 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.216285282 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.217495966 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.215607883 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.21667294 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.21751688 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.216728119 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.216987869 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.217316633 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.217239219 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.216006201 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.217172263 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.217440855 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.216820527 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.21737524 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.218622245 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.217850334 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.216582121 seconds)
  done (took 88.674898327 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.217824409 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215888431 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.216226011 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.214777742 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21547286 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.217481356 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215632495 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218286449 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215035511 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217439309 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216783105 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217414165 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215665336 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216980198 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211209414 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.208241361 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.212361052 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209125255 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.21189905 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.212748802 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21131049 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.209043061 seconds)
  done (took 27.851220263 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202602519 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.205582895 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.198721361 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.201655922 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.200247469 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.203013184 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.202380434 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.196169275 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193735674 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.193374166 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191680195 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194751143 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.191836425 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192668122 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.191011487 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.192237353 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.190977635 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.188456635 seconds)
  done (took 22.650778849 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.189823598 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.189505668 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.19116434 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.189364978 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.189593175 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.188350707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187193732 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.188432804 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.19009874 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.188326678 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.191394878 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189433263 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.190021708 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.186944454 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.188288536 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.186286436 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.189100014 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.186985764 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.188804379 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.187343572 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.185872177 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.18880526 seconds)
  done (took 27.260513434 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.183658635 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.184214912 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.180730668 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.177813472 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.181138861 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.184426406 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.184820493 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.182486095 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.184319013 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.180286662 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.177393527 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.183769922 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.182713636 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.179070232 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.181871634 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.178835451 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.184980589 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.181805578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.182720346 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.180121364 seconds)
  done (took 24.740975964 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.184602073 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.18764758 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.183490146 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.186694348 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185543678 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.187138639 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.185657712 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.183971177 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.185988836 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.186463646 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.187075889 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.187644006 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.184726683 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.184262056 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.180314296 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184774352 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.18214116 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.177731645 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.184557676 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.179033383 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.183341914 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.179719586 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.178893167 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.179441721 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.17893575 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.177061967 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.178530833 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.182508926 seconds)
  done (took 34.232396052 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.177031661 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.181882714 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.17931662 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.177071616 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.176895161 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.178523056 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.177279139 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.174470834 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.175603453 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.176064711 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.181536038 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.17638404 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.176756054 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.178728776 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.17920208 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.177112436 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.18115069 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.176054307 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.175711136 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.17718761 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.178697063 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.17677622 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.175646407 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.174526173 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.177940669 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.180388988 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.178959794 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.176241811 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.180866231 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.176149957 seconds)
  done (took 36.43104895 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.197508752 seconds)
    (2/2) benchmarking "in"...
    done (took 1.198129622 seconds)
  done (took 3.495049464 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.172253593 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.177636863 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.176882147 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.173390849 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.174666351 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.174838596 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.177304027 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.173465332 seconds)
  done (took 10.499139968 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.173465073 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.174240017 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.173780237 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.173695217 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.171447187 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.171169995 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.178062243 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.196525021 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.17471831 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.173387831 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.182421675 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.182984032 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.179349173 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.174493828 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.175059183 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.175197128 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.176673963 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.175858673 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.174993079 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.17872524 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.175717825 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.176956407 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.178817841 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.172396249 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.178765899 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.185283507 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.19415435 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.173956734 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.173210718 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.181610176 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.176582155 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.172746863 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.174386395 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.174812348 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.178818464 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.175272905 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.184800953 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.193191874 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.182605382 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192192494 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.17807168 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.171481019 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.177656297 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.178510355 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.178531404 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.179155707 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.177181931 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.174372787 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.176900523 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.179278436 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.18394375 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.176711209 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.175679291 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.182178816 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.178723437 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.183318784 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.193003584 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.182266029 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.185043167 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.184016106 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.206698219 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.195936826 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.17694718 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.177498007 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.185057967 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.197853335 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.184762621 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.193694946 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.176024405 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.17841168 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.186209697 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.20266038 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.199121972 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.177108005 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177085116 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.181641494 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.18006731 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.177915679 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.186620972 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.196557817 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.177554764 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.176855347 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.18528286 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.198582575 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.178001196 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.179304118 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.180760237 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.181455457 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.179855896 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.191996111 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.194673524 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.178727049 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.178234766 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.181354483 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.180013228 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.182720009 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.180409495 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.182639143 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.177669107 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.179146591 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.181119365 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.181636454 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.190244539 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.179238385 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.180679865 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.18497058 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.195388774 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.179034587 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.188417641 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.17936083 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181143187 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.182671163 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.186650089 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.178276997 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.183776465 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.18693687 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.18039288 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.182540341 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.17890735 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.17720134 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187799603 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.207518481 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.181866282 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.181897644 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.184000166 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.189105894 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18342975 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.182832766 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.182280025 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.18031545 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.178449645 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.182273247 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.181394562 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.184424398 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181075328 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180695813 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.179157459 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.180621474 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.183576848 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.18416685 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.18214352 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.183215225 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.183327813 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.183164353 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.182972638 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.183488335 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.189158117 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.198121989 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.184638985 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.185029914 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.179157597 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182993726 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.184942972 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.18379161 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.183519978 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.184360373 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.181827083 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.183617614 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.18080097 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.184272466 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.186229264 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.185372522 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.188842805 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.182649033 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.186928658 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.183946265 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.182237554 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.182846041 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.181909519 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.183228041 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.183952503 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.184068562 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.185586162 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.193290979 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.184037026 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.182957977 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.187058047 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.18412336 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.185901385 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.184176746 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.187654836 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.190252797 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.185502225 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.19363936 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.202253673 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.185137313 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.184574475 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.186084051 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.183343507 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.186334282 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.188273687 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.192883141 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.196850588 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.206728562 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.186765719 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.188469036 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.186938463 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.189837851 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.188384507 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.185203809 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.187194524 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.185467171 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.184124858 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.180160014 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.182945286 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.180149081 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.180546591 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.181959051 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.18095096 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.181290366 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.181469929 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.178175514 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.178985307 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.176219284 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.178331086 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.178204486 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.177946796 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.176886546 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.176980419 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.180139954 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.180150557 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.178952887 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.188979286 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.180194512 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.181630169 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.183744602 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.183348073 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.179376017 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.178136655 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.177086564 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.175365504 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.182815543 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.192274727 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.176348219 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.182476836 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.191699276 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.17509136 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.179007607 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.177589293 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.172955909 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.177509595 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.181484507 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.175589994 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.174831998 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.177813365 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.17511052 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.177664961 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.184799358 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.188394129 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.175059717 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.176793908 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.179000615 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.173356186 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.177806189 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.178350741 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.1775144 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.179680906 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.177399677 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.176930784 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.179514724 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.177357597 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.17989365 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.180024465 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.181334922 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.184607799 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.183649537 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.178329071 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.182457286 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.178978028 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.182555329 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.176282865 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.178431741 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.177833483 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.189362437 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.19892893 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.185057554 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.194111897 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.178928414 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.184586006 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.195039716 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.181753703 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.179340426 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.178588898 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.177744196 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.179372773 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.176253892 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.180354563 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.180778605 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.180488544 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.181528142 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.183723313 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.181630737 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.181808661 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.179632432 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.182483643 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.180452237 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.17956123 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.180110189 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.182768251 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.181992416 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.178872523 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.179293408 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.186796918 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.19512474 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.180490736 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.180561141 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.179110562 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.181051175 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.182773466 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.181399567 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.184152707 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.186707878 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.183556887 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.189897021 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.182364719 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.190108565 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.180925451 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.184484271 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.188617391 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.180855467 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.180723764 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.183954763 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.182431301 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.188717852 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.198767018 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.185456701 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.188013903 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.182987087 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.184489879 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.184095917 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.182793978 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.184884382 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.183974386 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.190662514 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.196663975 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.186739818 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.185586674 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.178715156 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.181149427 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.18400852 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.182848206 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.185911797 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.182830164 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.182373735 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.183264655 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.184541626 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.184580059 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.183592004 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.183745478 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.179909367 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.183949108 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.189305423 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.201637333 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.187550548 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.185026613 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.191799496 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.200074044 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.192526476 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.20122597 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.184391545 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.184811654 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.185967519 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.186506168 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.185271368 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.186318807 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.183835524 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.184248577 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.187821984 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.182849859 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.189186274 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.186418035 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.186247133 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.185940495 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.193711484 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.204698341 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.186085013 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.187228431 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.182740922 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.184875935 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.188759199 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.185852094 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.18710423 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.186867353 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.193131353 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.191186735 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.185520301 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.187527127 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.186485451 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.185183077 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.186549785 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.18781359 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.187260484 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.186990348 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.18733129 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.184719899 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191224955 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.186868047 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.187206947 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.190187813 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.188584526 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.200369924 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.206172185 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.188190669 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.187306585 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.186981604 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.18492411 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.18617429 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.188563343 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.188043479 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.187509928 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.188657391 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.191600138 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.192542047 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.189165926 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.18431983 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.188838855 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.189140797 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.189173167 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.187426044 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.187618176 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.187130317 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.189566674 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.188600494 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.190159247 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.185192278 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.187619329 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.188336246 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.188866914 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.190636006 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.193917157 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.189970248 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.185812864 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.189607459 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.18993191 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.186174025 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.188195633 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.197198307 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.207956728 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.196754529 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.196577144 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.19144005 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.189605175 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.191627539 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.194157032 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.189170015 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.191201994 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.188667773 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.1917409 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.191174181 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.191783156 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.191357094 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.198810717 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.206000844 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.191020467 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.19788174 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.207574435 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.191128724 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.192741939 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.193032025 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.188960606 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.189431833 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.190930059 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.187117056 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.195180025 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.208405699 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.189755981 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.193467064 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.188119294 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.19065649 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.193619464 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.193548906 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.193100867 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.187058478 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.191883163 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.1917313 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.193016888 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.189825066 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.192079702 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.192213796 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.196050912 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.19750494 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.190397189 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.194452035 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.192123915 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.190544122 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.192857596 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.192112687 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.190932935 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.189262352 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.192680933 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.193488038 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.193584314 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.196707044 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.19220131 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.192468353 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.194192995 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.192990945 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.194578016 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.202034118 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.199611114 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.192074129 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.193598673 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.194615024 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.195202749 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.194527064 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.19382993 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.195292139 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.195625147 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.195277066 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.19325905 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.195097098 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.197091514 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.207149345 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.210500876 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.193574647 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.19500505 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.199031212 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.194732293 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.192568984 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.194810138 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.197393281 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.19647358 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.199273781 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.196590906 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.20068192 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.21282732 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.19676571 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.197358565 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.197858949 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.199053656 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.198752762 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.196143788 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.195320129 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.201610245 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.208760211 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.195381593 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.203021037 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.223674078 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.212952398 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.198154186 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.197314138 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.196451574 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.195533408 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.199529835 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.197565938 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.197419798 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.196615721 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.196755908 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.196442686 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.198126366 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.196128654 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.196833268 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.197435613 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.196825054 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.196857373 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.194406755 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.196564568 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.197152583 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.19700068 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.197897376 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.198495555 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.198382503 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.209492542 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.22212858 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.198043115 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.196051835 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.195207826 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.201546124 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.199791624 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.205814249 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.202995188 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.195690084 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.197563297 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.200816328 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.198748359 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.200270859 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.199021629 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.199394486 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.199526937 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.196194792 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.211203676 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.221321321 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.203981858 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.199821716 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.19940945 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.200200942 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.200906798 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.200455634 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.199334851 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.202389435 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.202026591 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20224029 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.197591602 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.199890314 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.200630581 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.205837157 seconds)
  done (took 708.803296945 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.198724359 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197491847 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.198206845 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.197823693 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.195637499 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197137001 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196673619 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.198046732 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.197808776 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.198389922 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.198491804 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.198477928 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.19764123 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.19895927 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.198505009 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.198327426 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.198537727 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.198410062 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.197947305 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.197807044 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.197240486 seconds)
  done (took 26.274350734 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.202272288 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.198708159 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.199054218 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.202426937 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.19909604 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.201241872 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.198890091 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200895963 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.201487184 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199078353 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.200920016 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202401034 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.199674041 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.200474355 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200106839 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202382922 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.202171499 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.199793836 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.202028757 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.200130707 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.201936833 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.200361274 seconds)
  done (took 27.535505654 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.203523538 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.201602636 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.200777063 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.201233069 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.202637601 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.200522201 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.201880591 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.203548885 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.203706861 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.203137495 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.201769666 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.204911724 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.20798886 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.207040629 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.20561975 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.203106287 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.346089921 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.203488022 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.205072969 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.205523589 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.201009776 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.209095812 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.22020043 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.202201623 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.202396926 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.203295176 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.205191112 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.204965927 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.204351454 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.206079633 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.208294762 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.205194928 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.203796382 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.206318476 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.203285495 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.205545455 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.207658805 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.204658442 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.201705468 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.203676974 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.213855134 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.220537815 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.204971155 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.211138554 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.223191485 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.204453843 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.20820618 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.210684771 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.203456391 seconds)
  done (took 60.343622762 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.205289742 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.207308654 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.202376217 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.206488676 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.205804225 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.206000812 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.206487012 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.206147304 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.203435454 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.202176422 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.205887531 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.203510716 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.203002678 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.206663742 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.205520743 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.203649305 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.203455111 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.205073264 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.203076716 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.203216481 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.2031715 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.206053866 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.206900573 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.204999359 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.206696189 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.204942974 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.204319335 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.206954436 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.205218097 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.204596795 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.207702532 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.206728829 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.20843292 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.204765982 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.205431835 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.208248245 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.207568447 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.204580343 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.207645673 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.205541363 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.208074318 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.208993567 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.208048316 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.209315074 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.205895696 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.205462765 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.205456165 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.206434742 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.20703816 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.209102298 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.209395509 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.205536492 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.20917152 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.206479319 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.209662293 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.208466581 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.205501863 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.207484767 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.209362844 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.206822766 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.206577906 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.209476788 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.207796721 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.209229001 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.208049184 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.207052663 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.205498152 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.209620326 seconds)
  done (took 83.156094881 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.207573728 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.209229193 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.209874538 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.209747445 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.209177234 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.210328457 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.209936653 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.209104806 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.211465783 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.211401263 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.209437758 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.210346515 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.20763441 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.209659502 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.209457739 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.210637514 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.209565912 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.209608903 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.211766644 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211092576 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.211158032 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.209125997 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.210244662 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.209059009 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.212246439 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.212048974 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.210309976 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.210369393 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211902837 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.210553044 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.211127924 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.210074977 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.212127145 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.212021838 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.210452733 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.212480709 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.211592331 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211928935 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.212503601 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.210221269 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.212646053 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.211962635 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.210515531 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.211458686 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211624307 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.21052539 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.212457445 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.215939392 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.214213853 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.209767373 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.213855746 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211972662 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211544414 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.213179929 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.213510984 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.213530825 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212654626 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212968901 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213296283 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.213755047 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212203349 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.213619945 seconds)
  done (took 76.224633004 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213296592 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.213349076 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.210968279 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.211567691 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.213003637 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.210582875 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21392906 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.214088059 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214485911 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.21300367 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215035523 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212398687 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211469777 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213226997 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.212174263 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211560301 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208828543 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.211323771 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214828739 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.209618324 seconds)
  done (took 25.380029938 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.212999899 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.212554383 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.212022289 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.212863084 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.215583983 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.213033249 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.215135391 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213685791 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213276911 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214333922 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.21527858 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.216215421 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213731811 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.213001188 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.21592494 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.21453719 seconds)
  done (took 20.553935959 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.213678328 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.21556274 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.215648577 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.214517259 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.213121406 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.213463452 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.215318484 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.213326278 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.213459103 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.216341616 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.217071338 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.216236898 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.21378647 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.21712207 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.212482699 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.216272694 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.213599485 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.214529049 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.217079775 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.215297052 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.214763088 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.214254107 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.215199549 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.217358008 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.214337383 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.215721859 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.214717133 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.214640106 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.214102015 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.216475989 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.214942941 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.215001768 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.21398792 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.215446618 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.21444409 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.215608256 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.219140006 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.215894486 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.218791296 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.218767454 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.218411523 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.215822674 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.218600469 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.218229127 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.216911006 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.217735835 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.21591801 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.216219915 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.2168184 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.214938921 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.218999039 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.216029751 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.216270871 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.221106585 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.217102832 seconds)
  done (took 68.002478015 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218374551 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219434239 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.215554476 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221246879 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.218351896 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.215554627 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219175178 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.215666677 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216038804 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.217523581 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.216370332 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.219110627 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217324618 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.218211678 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.215485184 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218916071 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216473274 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.216467485 seconds)
  done (took 23.051090844 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.217343352 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217988039 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.219688527 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.21566519 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.21747028 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220759177 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217330015 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.218320812 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220639721 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.21986942 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217845352 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.220505595 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219738143 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.220890526 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.219962114 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218401624 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.220048849 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221251871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.218893023 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217419715 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.223497606 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220500114 seconds)
  done (took 27.960287833 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.218852731 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.220585515 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.217734766 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.234640296 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.23567705 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.240041995 seconds)
  done (took 8.504768593 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227129049 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221347997 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.219394044 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220529986 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221869122 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218491439 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219071681 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219103398 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219286558 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218338831 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219154716 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219476213 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21992708 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220812391 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222077845 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220613416 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219670795 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2197875 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22178607 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223032403 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21985744 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22272539 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221144201 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218172035 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218736341 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22016524 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221786674 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220386055 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220540092 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225119476 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223880605 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220197744 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223722847 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221977125 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222859194 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22362734 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222271571 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223405515 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224468772 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221028268 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.223654018 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2245363 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22226986 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220119659 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223248909 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218273349 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22070068 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222385182 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221420285 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225200933 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223672512 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221741466 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224221526 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225641394 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224192605 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223997951 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22061753 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222083501 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223038865 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222992596 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222405912 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224166255 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221875424 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223239418 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224390206 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222481516 seconds)
  done (took 81.800666552 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221932886 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.225618713 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221366926 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225139231 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223689621 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225334612 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223784533 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222648798 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222190107 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223193946 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226158158 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223433402 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224261203 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22441987 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224235454 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222797915 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223824535 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222398273 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223938378 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224795265 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22331229 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223200962 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223064055 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220527509 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224961419 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226962667 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226815378 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224927747 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223897707 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225415363 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224234137 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225486129 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225618035 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.221725997 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222733629 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223283121 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225239347 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226646857 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223031988 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228359508 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224245838 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228363347 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226121151 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225382806 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225247082 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224693488 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226109819 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226112514 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225320251 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226303583 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226166779 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227013789 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226700813 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226498722 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226938311 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226316286 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222854283 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225853076 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227355571 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228834365 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226959512 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226676156 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229814539 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224859988 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227057145 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226857528 seconds)
  done (took 81.990732383 seconds)
done (took 1664.184497938 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.233140106 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.266692971 seconds)
  done (took 13.641352533 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.391098291 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.340511811 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.226450048 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.231069309 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.225340597 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.219727733 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.247821282 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.228268201 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.228657493 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.22968099 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.226957204 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.415945655 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.282556686 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.228491329 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.228027633 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.321273747 seconds)
  done (took 41.417531209 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.247601228 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.236314386 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.341189744 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.256761257 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.254959421 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.408673122 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.289671429 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.23946125 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.396434189 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.276641497 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.690460181 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.256276093 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.234330887 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.288757545 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.257705861 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.412890076 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.472108727 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.721880822 seconds)
  done (took 28.429553519 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.645832321 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.238966239 seconds)
  done (took 9.032934739 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.287107346 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.256279557 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.232208833 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.270893768 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.25043124 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.262266682 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.291140843 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.298083783 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.250818197 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.263821867 seconds)
  done (took 63.817167551 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.25148644 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.238777912 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.238569306 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.238499292 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.236199444 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.226431201 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.232695953 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.228214407 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.605916149 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.356984427 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.25693626 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.242041599 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.253677145 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.235542137 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.232778932 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.271810328 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.364791324 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.251369356 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.234180171 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.242780453 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.237346964 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.33519423 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.278636209 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.241006041 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.351860036 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.610255545 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.242835735 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.243491113 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.34551172 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.251248499 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.23732515 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.237803152 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.235531801 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.812405221 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.73845617 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.24896765 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.259312472 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.246699089 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.235068132 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.36224976 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.252346383 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.241474294 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.232502766 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.701180919 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.39149883 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.343216481 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.444940246 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.244288265 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.239142463 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.295722255 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.245441381 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.237448856 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.266295395 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.979859107 seconds)
  done (took 105.458363426 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.270027851 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.716976979 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.400616544 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.252246114 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.994465018 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.922608215 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.252015299 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.498570949 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.296716735 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.233271141 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.523929102 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.720045704 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.2571292 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.244733307 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.868824528 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.295001253 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.235112931 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.968791536 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.252872871 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.232534701 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.643836779 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.254453655 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.249457044 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.4008894 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.269136588 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.684516362 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.609957233 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.678837238 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.255459628 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.234282806 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.675346707 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.256646575 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.23988358 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.232127317 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.496347125 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.577244448 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.575157272 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.259150278 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.276440591 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.233437567 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.268406713 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.67709641 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.584524952 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.253728519 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.248954359 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.681569996 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.25240741 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.234173476 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.237251392 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.431770075 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.966147484 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.240368008 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.59336873 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.242460646 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.577495806 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.27899984 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.323874846 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.705634378 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.250720861 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.287315092 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.279010975 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.233946365 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.236668245 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.239203344 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.235076075 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.569042961 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.380892103 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.237997846 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.566641054 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.691003428 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.264979412 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.731672657 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.181893637 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.251539304 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.307371362 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.236732889 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.790228687 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.726862602 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.283680606 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.236352976 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.552859595 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.253277929 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.505285132 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.247241936 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.239143913 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.659387476 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.260030984 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.289716742 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.237243441 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.242936588 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.862027528 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.242018194 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.509350618 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.283499307 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.23786784 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.23681189 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.246540972 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.237692563 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.241458932 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.239203188 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.734209761 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.260387431 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.367323996 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.258923448 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.24386806 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.235351459 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.239610162 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.237512925 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.449851052 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.823662902 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.236805301 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.238737636 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.236274994 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.241475378 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.372664943 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.240911807 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.523650634 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.251314018 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.239124082 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.250610524 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.945229575 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.259015264 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.237392345 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.237186222 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.064815823 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.468385331 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.257762153 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.236428838 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.241288527 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.266544912 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.537203356 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.243831431 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.280047499 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.238823492 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.915842242 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.295051637 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.280149703 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.621336174 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.248660851 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.213425305 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.262742023 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.238654379 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.557357177 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.510555597 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.293986428 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.244778442 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.257558561 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905893036 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.293205991 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.384344721 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.261547936 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.269985161 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.437993786 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.655864475 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.240315055 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.815765735 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.239993091 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.447151629 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.246273639 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.549715566 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.711073121 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.259574054 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.247098832 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920719454 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901612714 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.832893501 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.246696768 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.50993639 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.217158565 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.69548086 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.239377696 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.23867336 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.664094464 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.249972736 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.251260115 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.241818608 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.244806897 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.388739616 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.414791871 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.433694802 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.24519502 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.682995694 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.266442052 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.241730005 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.248227112 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.243595262 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.593851907 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.24370816 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.242770893 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.27199513 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.243540013 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.250518783 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.698860289 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.230102601 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.24569558 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.393944805 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.85110311 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.262402206 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.246685898 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.014769079 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.477835181 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.734425036 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.329834427 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.535723473 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.262606529 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.279759219 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.942404275 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.280162689 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.700041044 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.265903815 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.248295517 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.804813445 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.260745423 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.596436858 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.242489231 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.24357051 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.765049537 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.262241643 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.24243852 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.54282807 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.249791798 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.485752572 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.250248931 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.286841995 seconds)
  done (took 1089.341348824 seconds)
done (took 1352.281131681 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.245543988 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.249299937 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.23214585 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.24995224 seconds)
  done (took 26.138788079 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.256027392 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.25124262 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.25172247 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.251039385 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.254983526 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.251257825 seconds)
  done (took 8.682464517 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.29147007 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.248788531 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.252530401 seconds)
  done (took 18.959196455 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.456532504 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.487930857 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.600354161 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.343864336 seconds)
  done (took 10.056550264 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.25352332 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.259508978 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.258590809 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.256585855 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.258254089 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.259388879 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.255617543 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.257427936 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.259652163 seconds)
  done (took 12.483823679 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.005934963 seconds)
done (took 82.491462422 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.657592821 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.129576235 seconds)
    (3/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.257964511 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.714635488 seconds)
    (5/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.331223928 seconds)
    (6/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.102637215 seconds)
    (7/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.258209181 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.653668887 seconds)
    (9/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.829607302 seconds)
    (10/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.537359967 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.48719136 seconds)
    (12/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.263769736 seconds)
    (13/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.76739196 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.344861381 seconds)
    (15/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.468126162 seconds)
    (16/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.584551613 seconds)
    (17/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.258379452 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.290533674 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.278172445 seconds)
    (20/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.233458861 seconds)
    (21/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.9423415 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.287925274 seconds)
    (23/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.314242177 seconds)
    (24/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.606400429 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.292413123 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.289046678 seconds)
    (27/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.673130308 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.580943065 seconds)
    (29/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.273429307 seconds)
    (30/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.310535939 seconds)
    (31/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.401520044 seconds)
    (32/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.315518807 seconds)
    (33/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.968089609 seconds)
    (34/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.335148865 seconds)
    (35/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.37319476 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.126583165 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.25202986 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.376200415 seconds)
    (39/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.018025122 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.37987901 seconds)
    (41/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.260624769 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.06326027 seconds)
    (43/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.256762365 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.874420182 seconds)
    (45/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.357905675 seconds)
    (46/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.970205642 seconds)
    (47/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.320282623 seconds)
    (48/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.335943847 seconds)
    (49/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.014052525 seconds)
    (50/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.273779109 seconds)
    (51/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.509974758 seconds)
    (52/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.35064709 seconds)
    (53/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.770293366 seconds)
    (54/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.42841271 seconds)
    (55/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.292215893 seconds)
    (56/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.280598602 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.381011327 seconds)
    (58/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.620300579 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.527884815 seconds)
    (60/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.759861193 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.470156327 seconds)
    (62/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.241717411 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.29697504 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.055328286 seconds)
    (65/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.336142512 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.309733728 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.886749555 seconds)
    (68/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.535446589 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.137110397 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.874178633 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.5679477 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.979107695 seconds)
    (73/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.337794246 seconds)
    (74/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.324312414 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.301571922 seconds)
    (76/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.265304392 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.261761423 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.598618141 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.385340545 seconds)
    (80/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.271594304 seconds)
    (81/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.269126235 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.498483022 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.417305662 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.04185236 seconds)
    (85/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.611158342 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.096086845 seconds)
    (87/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.258265582 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.254234445 seconds)
    (89/309) benchmarking ("sort", Float64, false)...
    done (took 5.557376428 seconds)
    (90/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.33733465 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.293250779 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.279952991 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.232342598 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.719489879 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.953622295 seconds)
    (96/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.36220215 seconds)
    (97/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.253989368 seconds)
    (98/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.578935421 seconds)
    (99/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.6139722 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.687103821 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.463002586 seconds)
    (102/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.254307555 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.270522358 seconds)
    (104/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.3457259 seconds)
    (105/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.282021196 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.600961782 seconds)
    (107/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.301856411 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.52689099 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.868965682 seconds)
    (110/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.340053703 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.270865234 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.253134171 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.501433588 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.233527007 seconds)
    (115/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.249760191 seconds)
    (116/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.457826963 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.662266789 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.251661565 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.293086341 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.068836223 seconds)
    (121/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.259849586 seconds)
    (122/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.651972698 seconds)
    (123/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.570839375 seconds)
    (124/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.39993986 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.500951556 seconds)
    (126/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.659519871 seconds)
    (127/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.625867344 seconds)
    (128/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.373334825 seconds)
    (129/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.099681554 seconds)
    (130/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.614472697 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 1.784438975 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.300959167 seconds)
    (133/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.481322997 seconds)
    (134/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.842743377 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.539282529 seconds)
    (136/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.305375044 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.238734064 seconds)
    (138/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.78237066 seconds)
    (139/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.271345003 seconds)
    (140/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.797003565 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.987910858 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.518245459 seconds)
    (143/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.283653615 seconds)
    (144/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.063524151 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.255988437 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.396062914 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.35888586 seconds)
    (148/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.272767237 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.258250578 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.572919309 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.286778749 seconds)
    (152/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.275940263 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.040269297 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.285003442 seconds)
    (155/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.85510557 seconds)
    (156/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.731685212 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.272829792 seconds)
    (158/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.258744475 seconds)
    (159/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.348470014 seconds)
    (160/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.613851927 seconds)
    (161/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.617005838 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.691485608 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.657275029 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.207399537 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.25928467 seconds)
    (166/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.452862912 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.677811886 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.399441408 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.296510274 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.025934203 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.802697777 seconds)
    (172/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.263794796 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.594929703 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.458552171 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.277291496 seconds)
    (176/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.255327751 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.311268148 seconds)
    (178/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.41004695 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.827948725 seconds)
    (180/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.076616012 seconds)
    (181/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.550057013 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.103157002 seconds)
    (183/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.290255224 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.798619677 seconds)
    (185/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.373106328 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.343363405 seconds)
    (187/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.565236817 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.331023677 seconds)
    (189/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.365496529 seconds)
    (190/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.241387737 seconds)
    (191/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.517115939 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.826025953 seconds)
    (193/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.597199045 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.641227836 seconds)
    (195/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.696514283 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.274854953 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.286774284 seconds)
    (198/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.441306656 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.181889878 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.266405778 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.268550307 seconds)
    (202/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.266246596 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.341114417 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.256575479 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.277887615 seconds)
    (206/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.274690618 seconds)
    (207/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.517328075 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.974673049 seconds)
    (209/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.317278855 seconds)
    (210/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.584286528 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.867986701 seconds)
    (212/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.956934894 seconds)
    (213/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.85937659 seconds)
    (214/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.502407068 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.248798417 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.644004785 seconds)
    (217/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.283934669 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.32150362 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.157686199 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.269057928 seconds)
    (221/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.007450113 seconds)
    (222/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.819957886 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.394121265 seconds)
    (224/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.34359895 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.476946075 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.886420984 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.24316344 seconds)
    (228/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.109612747 seconds)
    (229/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.499212228 seconds)
    (230/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.00108666 seconds)
    (231/309) benchmarking ("sort", Int8, false)...
    done (took 4.350030763 seconds)
    (232/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.869234241 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.112302678 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.669148103 seconds)
    (235/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.46233129 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.663551342 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.300335886 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.582271162 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.096984122 seconds)
    (240/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.432976267 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.303851782 seconds)
    (242/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.247338325 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.636273496 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.270438666 seconds)
    (245/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.986685472 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.815498219 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.338320918 seconds)
    (248/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.345861413 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.6725062 seconds)
    (250/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.82779733 seconds)
    (251/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.397981463 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.656981423 seconds)
    (253/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.476147007 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.310909188 seconds)
    (255/309) benchmarking ("sort", BigInt, false)...
    done (took 6.264025133 seconds)
    (256/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.312658113 seconds)
    (257/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.348602208 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.285179956 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.257683616 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.552488102 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.116646093 seconds)
    (262/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.250872094 seconds)
    (263/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.272943696 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.489052388 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.694710251 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.582472872 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.294692111 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.893003231 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.174711783 seconds)
    (270/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.275201406 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.661336248 seconds)
    (272/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.002926982 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.318176753 seconds)
    (274/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.351483589 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.247770927 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.997060847 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.290324951 seconds)
    (278/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.50185368 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.357326372 seconds)
    (280/309) benchmarking ("sort", Float32, false)...
    done (took 5.258502798 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.343332826 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.293063302 seconds)
    (283/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.630677402 seconds)
    (284/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.057492939 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.298107774 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.367658132 seconds)
    (287/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.318918607 seconds)
    (288/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.855680479 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.365040374 seconds)
    (290/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.447565211 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.369238405 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.673728719 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.396459236 seconds)
    (294/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.582453229 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.269133767 seconds)
    (296/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.266200346 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.082628712 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.287122361 seconds)
    (299/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.303962395 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.357039633 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.306751991 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.806073016 seconds)
    (303/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.571477142 seconds)
    (304/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.005668146 seconds)
    (305/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.28384363 seconds)
    (306/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.249727533 seconds)
    (307/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.29620676 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.671133122 seconds)
    (309/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.291683262 seconds)
  done (took 893.842413332 seconds)
done (took 895.010252412 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.300630023 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.296668455 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.279341157 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.300867138 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.390591312 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.306461602 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.289780919 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.281091717 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.32611599 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.329225017 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.276737327 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.306824732 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.280431201 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.28035752 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.279538653 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.29462779 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.263348781 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.27987931 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.297138423 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.291019816 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.295449095 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.279018898 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.331277699 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.306031005 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.282077905 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.283390658 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.28295244 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.302067985 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.392079752 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.284647579 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.283461516 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.291542099 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.263002734 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.280268113 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.274973976 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.300462128 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.290199752 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.290753457 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.284511056 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.311929203 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.652161797 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.292724743 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.282473079 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.281992053 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.280688816 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.285788926 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.282082799 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.288656119 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295585028 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.297426503 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.640618707 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.307215387 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.28551629 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.283575808 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.29300239 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.281278148 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.285029579 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30018352 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.301195067 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296901386 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.249834143 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.28861314 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.285729997 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.298461952 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.289641777 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.677353781 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.294913419 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.288398412 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.661767901 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.309157099 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.70588509 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.31368321 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.284652161 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.298959428 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.314680253 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.267670629 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.279638624 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.282467607 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.290886268 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.283167448 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.293647225 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.297075553 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.289017811 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.285163839 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.299092112 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.311981685 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.294989332 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.284752605 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.296196893 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.302841431 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.291487765 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.294266383 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.287939151 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.280643955 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.2934096 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.288700649 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.288841412 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.28821217 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.289946501 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.296269314 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.667327039 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.326216841 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.282105284 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.2816093 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.285385916 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.299670452 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.669920973 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.306533496 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.308056636 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.334065701 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.287499508 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.25761669 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.2895293 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303521718 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.295279497 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.288795329 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.282182288 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.261302478 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.677006061 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.323639415 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.289314149 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.284443282 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.305997694 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.288944751 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.283397114 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.273544838 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.287369458 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.302009328 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.408448349 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.296061302 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.318594546 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.286258369 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.29001291 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.315536232 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.305734747 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.318043971 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.292049959 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.304668994 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.304657276 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.284735214 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.2994656 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.298412697 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.289080769 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.294633696 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.282319878 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.31489059 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.302349182 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.301163466 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.308638057 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.409077322 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.283657538 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.263735189 seconds)
done (took 217.101630387 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.348142621 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.283124066 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.365690017 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.285198264 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.383859338 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.385165434 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.282482002 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.28324216 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.280664134 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.662442314 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.286004158 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.283184185 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.280605265 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.28492133 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.367986309 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.284984434 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.281789966 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.62577713 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.288197771 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.357274212 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.282062413 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.285939088 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.286297882 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.666047837 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.284637165 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.281280057 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.35669509 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.287145573 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.631735506 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.2797995 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.283183869 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.632201244 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.374269617 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.306602187 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.296206618 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.29437593 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.385821999 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.310865739 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.367822349 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.368032511 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.371174657 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.327496992 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.282108886 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.287065392 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.293117591 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.288341019 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.288487925 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.314055887 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.288116255 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.286711627 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.627157978 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.299265265 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.294974001 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.28611738 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.286602605 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.308714605 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.287620063 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.288512096 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.378596256 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.288702368 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.350194767 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.669956023 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.665318916 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.290932664 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.287709858 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.287633728 seconds)
  done (took 145.284637672 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.354146325 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.360540975 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.398614078 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.311716777 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.339216498 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.404223033 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.309947786 seconds)
  done (took 10.67915548 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.29743529 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.288606669 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.339174567 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.339309096 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.289719375 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.437345329 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.2891805 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.300135936 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.286906213 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.342213963 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.288619023 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.290343264 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.296755174 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.286116684 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.340123224 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.301404527 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.404013016 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.290837645 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.291411994 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.446094845 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.28739289 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.296906527 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.338816123 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.30043674 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.28978147 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.293824997 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.858175023 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.291101473 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.287740732 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.291082816 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.287266752 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.328057345 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.291144919 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.286307619 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.287846762 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.407507444 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.293444293 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.290942034 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.29235348 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.287140304 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.292005292 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.290385588 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.292129126 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.290737701 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.292168383 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.312988838 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.292851668 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.293721403 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.292460599 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.293035674 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.342403031 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.289370588 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.291299673 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.291448232 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.348454204 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.300729751 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.294794037 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.290726785 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.292705269 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292469365 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.448306186 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.342152825 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.295739599 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.341911556 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.294478763 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.294098861 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.29145129 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.293090017 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.348310426 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.295133583 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.342230881 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.291673225 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.446845969 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.317599191 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.295526944 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.295639173 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.296506282 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.295842158 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.290298662 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.299319096 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.291925054 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.295160197 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.300942098 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.293408246 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.291496524 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.398151977 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.402407269 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.293142215 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.306578665 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.301557113 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.291942593 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.348053927 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.295189048 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.291785734 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.343360573 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.40716878 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.349097335 seconds)
  done (took 149.131256433 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.301559908 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.304961052 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.295815757 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.311215388 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.297373023 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.294520456 seconds)
  done (took 9.013572903 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.298215436 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.296355396 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.297117959 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.296762862 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.296497928 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.296002404 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.296549423 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.29755117 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.301696913 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.298821703 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.298585826 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.299664434 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.298345002 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.296387735 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.300014013 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.298176001 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.298473057 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.297592241 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.297123668 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.296693129 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.394577645 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.300233933 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.298852 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.3014391 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.300798893 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.298103633 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.306087107 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.299560919 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.29741287 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.305911093 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.315420536 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.299151107 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.299249232 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.304016247 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.299925855 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.298973833 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302408148 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.300691039 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.296229881 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.297394875 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.300422304 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.298492024 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.29874256 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.300165905 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.301754148 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.302307413 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.303814365 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.306856722 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.301283277 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.301500162 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.300963711 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.299360928 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.30162171 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.299855133 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.301428419 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.319365763 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.304609831 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.300383543 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.299404694 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.300305197 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.300827108 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.300114992 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.302318492 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.304050491 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.307716743 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.302160207 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.303467474 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.304225159 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.300746979 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.302664685 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.301971035 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.297729372 seconds)
  done (took 95.953460212 seconds)
done (took 411.257140905 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.594727183 seconds)
  done (took 7.807370158 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.35620997 seconds)
  done (took 7.569351819 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.158145267 seconds)
  done (took 21.377683098 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.302641108 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.302726526 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.32047553 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.314593151 seconds)
  done (took 26.453263284 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.649381053 seconds)
  done (took 7.86170444 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.296397253 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.294046266 seconds)
  done (took 13.802603905 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.240699659 seconds)
  done (took 8.453378568 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.409316346 seconds)
  done (took 7.629927921 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.319969233 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.311267367 seconds)
  done (took 14.10151205 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.276677454 seconds)
  done (took 7.490299842 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.027637068 seconds)
  done (took 8.243631816 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.308497871 seconds)
  done (took 7.524736632 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.301029107 seconds)
  done (took 7.516541479 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.083042015 seconds)
  done (took 9.297929307 seconds)
done (took 156.339710989 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.296833539 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.297056314 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.300327651 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.297612248 seconds)
  done (took 26.407985935 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.338253239 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.337968505 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.339481016 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.348162728 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.339575299 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.338200123 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.3314696 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.331339555 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.349738862 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.341802749 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.340334758 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.34057068 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.339665596 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.331107296 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.340675878 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.34118723 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.349372245 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.341186021 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.331976875 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.34117852 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.306376514 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.349062626 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.341764594 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.307426428 seconds)
  done (took 33.314587739 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.829603408 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.378364554 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.459223542 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.357634287 seconds)
  done (took 7.241530756 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.358282378 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.360560587 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.371201854 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.410989708 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.451936913 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.369157792 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.333599308 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.329560404 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.314456076 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.360239801 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.436640518 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.377054229 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.465962141 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.307425435 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.508270684 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.307282587 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.307751442 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.360860712 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.412361269 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.423422861 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.308526413 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.359922272 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.362354625 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.376548193 seconds)
  done (took 34.192825662 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.308256047 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.314946504 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.307913062 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.307472375 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.317620308 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.307292864 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.308873372 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.308219548 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.307977085 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.31160992 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.307595495 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.320288934 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.307190736 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.307142141 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.314700868 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.308621476 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.314725947 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.30736472 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.308591448 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.31296037 seconds)
  done (took 27.429113787 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.301813695 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.249821264 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.654356779 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.55554789 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.300022579 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.301758697 seconds)
  done (took 28.584192356 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.37605161 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.526964614 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.309664492 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.657355169 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.751845734 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.334694444 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.310286412 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.543073427 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.850626473 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.843903749 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.364891011 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.38113031 seconds)
  done (took 19.469312425 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.313413249 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.311754649 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.315565159 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.327600514 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.361638211 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.332313607 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.31660726 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.303093062 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.369621104 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.385074196 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.337774406 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.365485149 seconds)
  done (took 37.261827862 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392261754 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350437149 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.279233455 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.057372972 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.023303121 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.515754297 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.072402191 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.734078932 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.309604809 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578755963 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312297586 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394258144 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.560385784 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305318524 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313580017 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.269213059 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556094248 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788044479 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30736815 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.175941605 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34014963 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.306185139 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.290079434 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.343991951 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.517350104 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.44912792 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.566683357 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.084091687 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595889476 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.325407398 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317482147 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30645137 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582059555 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965286277 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421180987 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318377796 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.021758799 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.852055719 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.306179753 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.28350621 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.076441904 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.31679714 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32023265 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307034461 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.242626252 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316967733 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741705778 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.313699124 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.021416041 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.307767268 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.319096365 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408135384 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.310934581 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.877285979 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334178944 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.314308619 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.305246658 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315603594 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882818287 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.66636879 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321746566 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.250754317 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.6984663 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.27090632 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945522401 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.428400633 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.312973658 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.312829197 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244315144 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.246343893 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334807241 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457301189 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.3327049 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.960077706 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005440688 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.344967491 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.240572101 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855631185 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325230127 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.251260895 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.537857551 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.086215101 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245600461 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.255928631 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.244936998 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023896155 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319587544 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.719383238 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.319511697 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.739300733 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.322648504 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328714389 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335942587 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.534506045 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.193081152 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310966968 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.188816779 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456314631 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333606997 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.736896969 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246672796 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.316292575 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567094919 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.52454684 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312455566 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.308237939 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531270565 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327837602 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.335037019 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.324497736 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.329426659 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.873019536 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348648483 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.664601194 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337476944 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.091043286 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054819236 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315449046 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.421291604 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.314489696 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554118558 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.083379917 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.474117386 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381009719 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314936858 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.313147552 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.286677091 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.912144299 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.47140609 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.310471341 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313221862 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.348339768 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.314122388 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263205275 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.323389914 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324390461 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.091961147 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.537581437 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313792233 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614275686 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248705021 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460208084 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.322712229 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.537917249 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.506526637 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.329915158 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575703957 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325075581 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.323803426 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333319046 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333046666 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416063109 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337066652 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.32545907 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.577805563 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.31944409 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.318257811 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.305365521 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.101925955 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318676116 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.321753554 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.15809157 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882921445 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317468113 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32437116 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206307779 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.329326307 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384721566 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.322204035 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.326586346 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.091982664 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.15331531 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.329216646 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.31420465 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539663196 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.326802517 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.224314921 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402974848 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.508646215 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.887367889 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354981835 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.251500977 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.028368833 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.00968048 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317811461 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.514012316 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.316909877 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327790057 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327254723 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.846466685 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.88876528 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344216385 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.225703752 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.329706764 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328276986 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.323001573 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318354857 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.070471459 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.716863729 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336024958 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.337318244 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462403477 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.331722904 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.252140724 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.834989575 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32314687 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.318103374 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.095732434 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352504121 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.217721263 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798738222 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579119637 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.020426157 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331214586 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.400497374 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.358828047 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.319309941 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.195174123 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357816921 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.340984862 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343670174 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.329252006 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.29341367 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.689916585 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889577635 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022391615 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874279528 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261881698 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.329195316 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.224053268 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.750025341 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255481853 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.977050763 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505765536 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.766889098 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265545216 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.515800892 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.513588754 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091202532 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339581599 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549698074 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233923427 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.212932298 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359469453 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53235568 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35612628 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.321307131 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.257010479 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.618740261 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553277079 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.177273486 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40790687 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.750291288 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.203888886 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.127112217 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.320307822 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.678469242 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507612071 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.874027993 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.709649236 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336518342 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.328871404 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821695961 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.333736218 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.848147888 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938802583 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349476984 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.522468303 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267228304 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.333766209 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.333914469 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.319365319 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.588842491 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.327519325 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.583426428 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333980124 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257543221 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33292675 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848908767 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.201964327 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.328769449 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323161124 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080117458 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338288882 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621979464 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.343650358 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.069301152 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34959385 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.25838369 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25675107 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.016949161 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325509878 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299767608 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828589736 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.701187176 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.333027112 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347724779 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175142506 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.579595585 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.338688318 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.896947187 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574464853 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.138202158 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346400096 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.425317406 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.220914073 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.334016659 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.207142552 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.561207131 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.165093621 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549505288 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.316214321 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.227334897 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.324269982 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.536714313 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.207750737 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.33552288 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583897983 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.054936541 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.34954263 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017335364 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376022274 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33128994 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.344701358 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.716378595 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.335736065 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396741316 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.336954755 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.337238219 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.337291715 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494657446 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339299293 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335792798 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.341310959 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421626658 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.716875689 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.076267644 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.107629807 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902522031 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072851908 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.925177585 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364241799 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.327423588 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327839852 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26150891 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478508354 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.853321244 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60105373 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456949871 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.786905452 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350407434 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.237898724 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369670402 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547070849 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603247847 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.298555019 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33770493 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121153465 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.487455109 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340227503 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.539508979 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833988865 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900496398 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437782558 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.32804909 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.77972735 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603549069 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.420744283 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328860781 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.919655024 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.334129855 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.689380007 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.353983609 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329806417 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500974965 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339462872 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991093406 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.358511213 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.486769631 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.102474864 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.262568755 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.593123829 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.781839428 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.349401094 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90945772 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.049602413 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594408342 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400271789 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341320032 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.453012954 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479303887 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.33191855 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.228494312 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332002996 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17622689 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.040086873 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.340698918 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905227164 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617778906 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.328562331 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.330894252 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354697963 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.340430277 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.555649538 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041955778 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555547488 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341583351 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333309838 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.321182412 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906047471 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370329463 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266670467 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.336194068 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581070034 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.585843156 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355153261 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.785208951 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.043453599 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884627467 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.305213739 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354426594 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332873839 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.028526373 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916349822 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.129375223 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839747129 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.991452917 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337041247 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615015008 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.339133688 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344885125 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618062158 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.336619093 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.333333745 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353833264 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.910189467 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121671711 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.33840248 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.280480988 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.277991516 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.559783566 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.985322271 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271611854 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344714676 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.507594889 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336229564 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464914588 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346374362 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.340306473 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34445917 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.075062556 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607783281 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.34167008 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.333872591 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.294695381 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351767879 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350324016 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566134084 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341679333 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.010649855 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.685217594 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.590926402 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.335075316 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.32256363 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.339667155 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336504747 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.053124265 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.345222728 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.861440813 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916557834 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.348379416 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.353601421 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33949515 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.552056973 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547542283 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33685814 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372718503 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340114207 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359671638 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.236674481 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.102554596 seconds)
  done (took 1577.791556038 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.361963909 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.38751738 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.369473294 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.394340804 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.394209733 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.438249397 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.417471021 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.455261935 seconds)
  done (took 52.470285301 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.344359752 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.502421168 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.367415814 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.336743389 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.361750471 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.342336802 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.792651362 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.371882983 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.346719854 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.348114251 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.352797431 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.347903397 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.975947871 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.355783843 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.349737726 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.340565103 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.346009663 seconds)
  done (took 65.444981606 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.338977559 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.892529667 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.42895246 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.338790336 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.331121316 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.353595438 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.066539315 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.383094974 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.338000554 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.661895363 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.007379397 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.365185904 seconds)
  done (took 84.760446543 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.347439567 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.346970642 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.346827912 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.34729669 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.346950656 seconds)
  done (took 7.98908962 seconds)
done (took 2003.575311492 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.755500979 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.026853254 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.973738667 seconds)
  done (took 5.255340254 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.489826377 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.538271433 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.659905186 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.664518872 seconds)
  done (took 7.609694098 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.623377283 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.71877127 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.529620116 seconds)
  done (took 6.129340449 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.743762029 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.341050709 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.485439397 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.343463369 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.349289309 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.349692239 seconds)
  done (took 20.300903204 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.345707287 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.349025996 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.346535062 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.348721362 seconds)
  done (took 6.647146893 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.323822937 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.002780141 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.327883696 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.348227873 seconds)
  done (took 18.261373458 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.092484963 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.107744749 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.090674799 seconds)
  done (took 7.548464381 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.350849126 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.186282057 seconds)
  done (took 9.795325838 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.632680757 seconds)
  done (took 2.891753493 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.479458282 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.673808918 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.371496679 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.316709226 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.413428626 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.077966786 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.940675818 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.54016374 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.297711299 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.458493202 seconds)
  done (took 27.82927472 seconds)
done (took 125.848228589 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.113056643 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.346994472 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.547431082 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.12503464 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.571088142 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.547330763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.762590617 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.09343134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.640167447 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.591993333 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.088733744 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.568940074 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.499274199 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.347574616 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.497501765 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.725655766 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.569523717 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.164161327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.80394166 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.971611156 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.766465088 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.722671445 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.918123291 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.743125583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.567976031 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.498717823 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.307362404 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.728395882 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.982227628 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.382491989 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.50648733 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.139594972 seconds)
  done (took 190.098599637 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.345858871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.361624623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.34592341 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.347836424 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.346226234 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.354027412 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.347437765 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.362712644 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.346098382 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.355120404 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.3620865 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.361682565 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.34617024 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.361376158 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.347204759 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.368760524 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.359234662 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.345688975 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.362963022 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.345800762 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.347444492 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.347964004 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.360670479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.355365058 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.35186775 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.348315294 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.347522592 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.365321634 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.347779571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.345679845 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.347822241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.354363701 seconds)
  done (took 204.554643758 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.349239821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.348419028 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.366559164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.35594899 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.362500689 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.346468596 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.355614619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.347913826 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.349490565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.347736183 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.349036692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.34944959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.348498284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.35014496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.348818485 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.349153804 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.348693913 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.364753534 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.363323985 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.348445633 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.350175729 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.365187557 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.365262786 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.348706561 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.360118142 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.349455052 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.379519601 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.349016251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.349972285 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.349200292 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.350952556 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.367333044 seconds)
  done (took 204.598625861 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.552000747 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.357392293 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.3573203 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.308459381 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.357967031 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.35562691 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.352752852 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.547178145 seconds)
  done (took 14.454153334 seconds)
done (took 614.965294813 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.602167035 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.322323613 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.554034325 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.378455987 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.126531513 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.396478301 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.37763674 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.543246548 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.275070146 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.554333972 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.628847466 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.392831869 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.776033954 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.382839342 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.6292362 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.472753789 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.282629424 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.407105674 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.69849007 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.913377953 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.637038968 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.876120962 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.572923845 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.261914023 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.791884394 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.875181016 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.119472748 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.2671752 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.394489764 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.699263289 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.996057055 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.355431247 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.441337501 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.437184034 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.494342982 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.473425589 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.342250014 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.442827729 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.580988417 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.637598493 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.906746726 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.087164544 seconds)
  done (took 92.671913043 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.343496729 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.344863647 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.343194951 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.343572668 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.346885168 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.342933956 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.34292217 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.341674194 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.343419037 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.343136512 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.342321422 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.344461057 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.343119877 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.345817528 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.343396172 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.342882911 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.343718669 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.345279331 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.343866358 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.343534674 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.343723524 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.344279755 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.345102818 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.343508538 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.344283005 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.347125878 seconds)
  done (took 36.212495779 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.362118011 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.610140935 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.775004296 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.371210029 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.362729705 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.365132279 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.439027236 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.368114131 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.366179289 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.367142629 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.532636833 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.366648722 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.399632172 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.796788084 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.366225837 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.36498738 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.365144644 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.363688899 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.618933514 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.373033676 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.462372919 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.364949305 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.441251287 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.37398988 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.385962605 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.363508036 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.368671735 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.883314465 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.382807899 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.530921413 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.13660132 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.446175728 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.832607744 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.798432412 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.146347237 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.373621663 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.364984976 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.53786907 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.365965127 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.365693095 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.440929431 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.367886641 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.778158548 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.981436908 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.383351811 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.365601853 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.90251061 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.552214039 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.604174059 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.38145943 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.801407089 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.36878782 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.367978916 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.366895935 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.606347066 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.381643254 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.372026933 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.896593708 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.389870273 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.443542346 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.368573178 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.366539916 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.626663 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.368250675 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.61541357 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.371724279 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.375022106 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.386160664 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.781709382 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.37005075 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.009696507 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.390221742 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.367043895 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.533515512 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.616576588 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.943741905 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.390891295 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.632366381 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.858524565 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.458899014 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.371445871 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.874586198 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.463102161 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.370681641 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.370492307 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.37075181 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.368038629 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.418113731 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.442745774 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.928940755 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.012350359 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.917838981 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.464385271 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.381019114 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.36873396 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.898415037 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.387635647 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.369912424 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.778719851 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.002467617 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.386870958 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.377354761 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.014935717 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.389485697 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.44634905 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.374699762 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.791090788 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.37101071 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.422002106 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.368887826 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.377045914 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.392484864 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.447186529 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.372867018 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.370297242 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.978212442 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.563674667 seconds)
  done (took 179.723595248 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.365228746 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.362370949 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.37876918 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.363983283 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.363257443 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.372252388 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.364022162 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.363865946 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.369359895 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.363133269 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.363299534 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.367054717 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.366500843 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.374192572 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.374655113 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.370772382 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.02144348 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.365568796 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.364865643 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.38118521 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.163096673 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.365235288 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.36804411 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.383443386 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.366618354 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.368935366 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.378325783 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.368028386 seconds)
  done (took 153.055588562 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.372082625 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.924830969 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.390342817 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.501664539 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.392988766 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.371161099 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.499660389 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.430589275 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.389866749 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.37088188 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.370119529 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.667088512 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.373811224 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.876755014 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.563230726 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.519336422 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.87945522 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.391000556 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.372154683 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.371217822 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.503917411 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.375188862 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.669181484 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.925609537 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.391230618 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.926431407 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.358073577 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.373666318 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.371886005 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.927536996 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.389249073 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.669883692 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.449883115 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.434545838 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.944771207 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.895525197 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.8940984 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.519707835 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.381856762 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.372432397 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.371668085 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.358076276 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.930158774 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.392153384 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.375273149 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.920192428 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.393469957 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.376454151 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.379124955 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.373019188 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.432854704 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.450944533 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.691199653 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.934710819 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.466674289 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.387787743 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.504444883 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.737633948 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.378597286 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.880889277 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.358752843 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.935419294 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.396176698 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.358967513 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.374685267 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.380760623 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.521835868 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.504409718 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.885450732 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.393253819 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.880527192 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.539019961 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.374210688 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.374631828 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.378574193 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.935532681 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.899731804 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.541471617 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.511724795 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.567589627 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.360879617 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.375474276 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.360687131 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.452094224 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.375595633 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.937553779 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.898736762 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.39517017 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.378113756 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.378522464 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.37827249 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.550642315 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.953893536 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.471059443 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.87089415 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.693922694 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.678743607 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.379222903 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.435608998 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.392323949 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.679275064 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.379876873 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.435718571 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.795644389 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.680745353 seconds)
  done (took 163.622973878 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.618222911 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.580114193 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.467319144 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.50794823 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.976372053 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.940810959 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.602465154 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.516143991 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.487413664 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.647052281 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.521835023 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.470369946 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.545460046 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.45819761 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.114765944 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.46415976 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.494809761 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.524891893 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.500113942 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.407486635 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.020131294 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.664282327 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.547764703 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.23356265 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.470392291 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.122355784 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.933412233 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.894898077 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.557703186 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.722047893 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.898270856 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.507872283 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.337374833 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.046502169 seconds)
  done (took 66.088133249 seconds)
done (took 692.63566599 seconds)
SAVING RESULT...
DONE!
