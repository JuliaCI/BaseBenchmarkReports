cset: moving following pidspec: 10328
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.282874254 seconds)
loading group "string"... done (took 0.579202118 seconds)
loading group "linalg"... done (took 7.100994704 seconds)
loading group "parallel"... done (took 0.168798175 seconds)
loading group "find"... done (took 1.11996755 seconds)
loading group "tuple"... done (took 1.735191837 seconds)
loading group "dates"... done (took 1.198453515 seconds)
loading group "micro"... done (took 0.225133057 seconds)
loading group "io"... done (took 1.015902551 seconds)
loading group "scalar"... done (took 38.558807034 seconds)
loading group "sparse"... done (took 13.416527578 seconds)
loading group "broadcast"... done (took 1.038294146 seconds)
loading group "union"... done (took 14.073331724 seconds)
loading group "simd"... done (took 4.848935294 seconds)
loading group "random"... done (took 9.623167631 seconds)
loading group "problem"... done (took 2.011752147 seconds)
loading group "array"... done (took 22.574772996 seconds)
loading group "misc"... done (took 2.002067079 seconds)
loading group "sort"... done (took 3.243787459 seconds)
loading group "collection"... done (took 18.34967274 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53742739 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145189967 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119092767 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.143542779 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.19277791 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134767073 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.149591441 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086210954 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.11890917 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16865064 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142214798 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.487942057 seconds)
done (took 5.293815765 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.249451543 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085863561 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096338346 seconds)
  done (took 1.001082397 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066336764 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125760357 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081798242 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068703317 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067121533 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084200215 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068223531 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06656799 seconds)
  done (took 1.380099273 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07409166 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067612302 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084391562 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067006502 seconds)
  done (took 1.111944908 seconds)
done (took 4.635379618 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.900689001 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.250859072 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187496024 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.458032297 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.152170567 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.192288063 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.732547476 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.350419605 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.212079045 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102975121 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106782276 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389273369 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108646382 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.723851279 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075493756 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107689602 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175242598 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.470471201 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081602107 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082999415 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106775219 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.147374946 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104706979 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079336486 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170912038 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069883111 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149536135 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.099440529 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068552019 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.248504524 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192526658 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.756424731 seconds)
  done (took 10.910919334 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099314902 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117115858 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069467643 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139908865 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099851804 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086620045 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071236438 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083625216 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090728249 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.15839091 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113552092 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104061553 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082641408 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068876163 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102570944 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213739338 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110028678 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085785168 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08995518 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076829505 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125334828 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081650079 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094529165 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078101666 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153673611 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195721315 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112603016 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112251484 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067979826 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079832677 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132649643 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142990165 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065627006 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082124839 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140166074 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110817809 seconds)
  done (took 4.669359422 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.054917162 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161340866 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092016771 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153887079 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088966314 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113114481 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.087012903 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103545593 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257312132 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.172950431 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.463766177 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13183537 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103162635 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067604978 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08509252 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06747574 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.546849719 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147905164 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106293073 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105941637 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07619373 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.090695565 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.720791527 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070503144 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06761628 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087586904 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060919979 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149857411 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070430903 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.247139387 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089598518 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088965803 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103545248 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196580152 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095337996 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124534612 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06701201 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084982645 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174946742 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076403066 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067497636 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.109232119 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122117842 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.106875434 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085771389 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071017672 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.186253218 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06848507 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10362188 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.917563732 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168703946 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098382324 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.086921496 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.279022487 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107529027 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068176306 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.08370369 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067026875 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.276862045 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.155823966 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069454664 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.111665185 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06761818 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085031819 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070249271 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.730397649 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069310404 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.161264892 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071654963 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079481291 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08809302 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069107361 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092074983 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074283234 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104417111 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069602367 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068781072 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086279085 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067373037 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086604699 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088319007 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.209517421 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08645514 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068832309 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065629034 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083983599 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087787671 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115553009 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07187797 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08540312 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101804574 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085008616 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066975098 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.123546794 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0684715 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083413901 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.088044198 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.090139307 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130749086 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070043283 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.137442026 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082790687 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100309357 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.091068656 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122970504 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081967714 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086696668 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157893225 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067170009 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066219209 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086432889 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066710883 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086715537 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071142605 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099588804 seconds)
  done (took 22.61333555 seconds)
done (took 40.065925115 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.298533436 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096715555 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096723962 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077910496 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09696098 seconds)
  done (took 1.558841458 seconds)
done (took 2.420899841 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120769193 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118889378 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064203273 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11577915 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063572924 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119687063 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116039328 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081972119 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119941191 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064479092 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114825307 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064692462 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064502352 seconds)
  done (took 2.123256617 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083240904 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084636582 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08871986 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081698432 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082199047 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085019665 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082061655 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110022764 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082068814 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092845387 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066291486 seconds)
  done (took 1.800472665 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082682744 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083737231 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089445544 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083296114 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082861739 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084482532 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082422346 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10786823 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082714394 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093372772 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065728251 seconds)
  done (took 1.802303247 seconds)
done (took 6.580677822 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079114417 seconds)
  done (took 0.936136056 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.720324638 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.824276277 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084277183 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137812396 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.232742451 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.161147388 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.458302975 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113792941 seconds)
  done (took 10.769953328 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104015359 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090939505 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073903179 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091522002 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07139909 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.090953723 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070956694 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07202927 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087553848 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072602214 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088837282 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071038671 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088979629 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070102789 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068670039 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087733775 seconds)
  done (took 2.221278705 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094049687 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093238235 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092873908 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076388481 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091115962 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073777901 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092900337 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074775289 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089082195 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073636478 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092672035 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074818822 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090128892 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066471245 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091490907 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076863685 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088794068 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075881501 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.093407726 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076638447 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093600284 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065253631 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089969815 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076314998 seconds)
  done (took 2.973021969 seconds)
done (took 17.763461965 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133523249 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077894245 seconds)
  done (took 1.073509332 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082863036 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09943258 seconds)
  done (took 1.050546523 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084627511 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083048262 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090211506 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095643697 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066646167 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084100236 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103852127 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067089972 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082490727 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067037186 seconds)
  done (took 1.692928042 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070185975 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093939109 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071955787 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099510106 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073878625 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082530655 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074417149 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084978891 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078884808 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081315617 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071563956 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100992929 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071679325 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102987214 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072263729 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087581091 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087642349 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068807024 seconds)
  done (took 2.346029887 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067228184 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066816567 seconds)
  done (took 1.005571402 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0697613 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06305635 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085362816 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066064862 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081674099 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062878338 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082430362 seconds)
  done (took 1.381808378 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.408133407 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110943935 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.253679197 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.093363213 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.108505092 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.272151039 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.088411773 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073356198 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.0925877 seconds)
  done (took 2.413622623 seconds)
done (took 11.832455112 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081270583 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085395908 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.1130226 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.426658244 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110567557 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066582398 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.133381193 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.227609479 seconds)
done (took 2.117542844 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126206477 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.621241891 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.412044299 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.223604926 seconds)
  done (took 2.132454505 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.382611709 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094926477 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078207254 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070730714 seconds)
  done (took 1.505817585 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067252764 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069035099 seconds)
  done (took 1.015160956 seconds)
done (took 5.654980153 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068332883 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.105409333 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068880083 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065220356 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088478836 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066469033 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06542205 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088914457 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068425975 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067549457 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087724251 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.071322782 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08310853 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.069940718 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067605251 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083925731 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066606016 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067511776 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.084862241 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065934438 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065223579 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086920221 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065899772 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067227812 seconds)
  done (took 2.700217727 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087216046 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084931289 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073404553 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091766376 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073689594 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09176514 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075456262 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068621508 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.093409392 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07207966 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091506453 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072100044 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08962268 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073380344 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088413006 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073518215 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092341965 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070706643 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07410253 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092117301 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073759483 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088153555 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072308012 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092451045 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073067509 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090959111 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07107475 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086684371 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075570452 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090309185 seconds)
  done (took 3.325057371 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071738375 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063813951 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084630625 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073159447 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064680738 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087003776 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065500966 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084532721 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06858101 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065718338 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.086338731 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065979601 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065506663 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086393209 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066647837 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08657638 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083827093 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065740191 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085320125 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066666116 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068687083 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085794498 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066093753 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083916882 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067032685 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065781815 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084752341 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066716455 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065903462 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.085571259 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069183484 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068384409 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.085145688 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071975043 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.088009957 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067371062 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069352314 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.084183264 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066627766 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06545713 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085312423 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066053913 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065337807 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.091294347 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065899136 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.086294028 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066235295 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066701818 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.086408603 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069610036 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083091894 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067210302 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068045677 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.086166988 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070808175 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064347067 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.086098223 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065457116 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084900568 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067497492 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065266865 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083957911 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069143342 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065928253 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100976792 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07346833 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083667429 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068954098 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066586959 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087259318 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068081634 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079522132 seconds)
  done (took 6.253003415 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119582724 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092235332 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085198258 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066591127 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080168395 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066428042 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068972117 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08588683 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068652512 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090657168 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066894744 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067042159 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087821453 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078907271 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084948506 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06902837 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089777786 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065811701 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065930296 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088854932 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067760258 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087971978 seconds)
  done (took 2.635504919 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.190828028 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090317096 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112869824 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095462556 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069583019 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096130179 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07178356 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09299055 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07228401 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090068622 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070602024 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091363182 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070057661 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090033332 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070594205 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090414235 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072984802 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088662275 seconds)
  done (took 2.516553278 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079367614 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065657214 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109942068 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066440317 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086658512 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068877786 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091313744 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074463582 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088937626 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06796578 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095906428 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07178396 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.089141229 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070246281 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071223716 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087936572 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071822517 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087544727 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077357272 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092943845 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073775626 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096427055 seconds)
  done (took 2.676386412 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083334862 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067857079 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106299836 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089060196 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066127847 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066572163 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.094543285 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068765278 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093469449 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070919121 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067526241 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086680165 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073536555 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088115861 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073950477 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087829507 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071648016 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067946955 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090521176 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064442876 seconds)
  done (took 2.470207624 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089121139 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086135868 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070145591 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096625148 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070327699 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088217163 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079719682 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.088571077 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070621295 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113379271 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069998142 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088479544 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078584847 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094107022 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070510345 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0971965 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077268524 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097417614 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068535342 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089718077 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113544703 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.187373105 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09637109 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071109927 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087671975 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071315841 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069316588 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095154679 seconds)
  done (took 3.372540657 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068074574 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066684506 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084222335 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066879416 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065991456 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085508013 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066739509 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06620237 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088663521 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066887158 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067707651 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088340264 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068179957 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085881982 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070090022 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068010898 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087023539 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066797048 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065447935 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085744046 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069230612 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067834832 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.088288282 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066325142 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064840889 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.088557944 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065725206 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08505073 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069522028 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06551324 seconds)
  done (took 3.104795302 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077738406 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091928165 seconds)
  done (took 1.068844758 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065494553 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080802474 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084834014 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072007603 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091982075 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069986793 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095374942 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07330353 seconds)
  done (took 1.530298294 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083817637 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078961474 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090451512 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079901428 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.1005493 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085042234 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161242601 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090254663 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07594567 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086220211 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084348987 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067152677 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.095807841 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068876325 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09393818 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075912605 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066187032 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.095117619 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071418143 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086790634 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070903506 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096192923 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072166834 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064636149 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.091094514 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078409773 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100395232 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069874975 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091793557 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077962797 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073860926 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.083659275 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068885166 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.089354412 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067642904 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096716086 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086421909 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089910745 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079452709 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069691548 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099646224 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063625618 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093355274 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075647601 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097988958 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070160759 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068690819 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.084678606 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066698607 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090116739 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065255715 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068089476 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.083767931 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075625277 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091565588 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080937855 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069371786 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091531393 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071893061 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092324468 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076000804 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089495788 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072971956 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068498779 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099714732 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07376269 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097753422 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064476818 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062323964 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.086964717 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077855378 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111622733 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075915557 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.089816759 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070667114 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084173208 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073298211 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07020411 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095632425 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075055796 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088426069 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0753129 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095483317 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069689858 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070905546 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097077645 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068032868 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091850373 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066852966 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10481378 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068204764 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066062434 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08768203 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079532434 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.092355947 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069160081 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065588705 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097241776 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063309078 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.089812272 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070666174 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08754375 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.08089888 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092372246 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0757297 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096191889 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077814023 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068353672 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.092591464 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065571189 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088773888 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069246618 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074974588 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.082831171 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072105125 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088718652 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071416253 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076637369 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087653776 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068982928 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0967354 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074786599 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.086345869 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066808044 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07135446 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088863668 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071890129 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096107691 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06860157 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063507411 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084362641 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072561351 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.088303013 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073353675 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091388674 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073569238 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063486549 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.086564208 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074351628 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.098189851 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069867401 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069378322 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095234641 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069675934 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.088286218 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075927282 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090039158 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069282971 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074393123 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.09014745 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064264525 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091927488 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072140514 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066878797 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092525946 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072375539 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.09079333 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070022857 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067095523 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.094573728 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070164388 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.088325043 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069298227 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066749517 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.100366504 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070264783 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.084640584 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065792243 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095930033 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067543977 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068219384 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08829588 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071893245 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089506414 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067712162 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067627573 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091754834 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079961567 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094165292 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070282005 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094082747 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080569128 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087799026 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072507088 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068127525 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090115064 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070084079 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.098197842 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07507088 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093023952 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072469473 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065227876 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094777543 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076523521 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088022257 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067336782 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067627109 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.093260282 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074825283 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.093123467 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069584768 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086082695 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071256191 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071452779 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092169055 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068993821 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087055816 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073834163 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067074421 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.096342908 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069374323 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099454516 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07226953 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.084183163 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072530788 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085562067 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076170394 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064238661 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086526183 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068602263 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069347146 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089462038 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072030831 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082878764 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077411028 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095269998 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071257582 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06859471 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.089051136 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076152131 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088509579 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074626105 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07228791 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.095877384 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079077575 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088187367 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072804959 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098511012 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070066055 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062358479 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094860504 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068323976 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.087317016 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069478597 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066581817 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091976986 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077646729 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.096016707 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063185318 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070044874 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.088280781 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067890822 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.084373157 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074288339 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070964497 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091196908 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075214374 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090532423 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06958519 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092336309 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069742778 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069320791 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.090790622 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071948328 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.089842192 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072317032 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067639312 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092973184 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068323709 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08672401 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072397791 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06863286 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090457403 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074082765 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08862555 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070426516 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070780167 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090408199 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069468947 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089377689 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069212822 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070975015 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090254508 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069070086 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091152797 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065074037 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075345809 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.089553293 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076978257 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089597179 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066321363 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072671229 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092922949 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07381252 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.090696741 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070001999 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090879707 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069413378 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07045489 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097213492 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066772392 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.100492951 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076766701 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08964453 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072864203 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068787384 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09126649 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068201192 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089438158 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071068791 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068541727 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.090301008 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074059176 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091016771 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069825393 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070530503 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.090812389 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069390894 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089796638 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064576248 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067790375 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08938352 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068907245 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098868827 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070231823 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06798354 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08951273 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069582787 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088842129 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06709676 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0957724 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079217608 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088769725 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07761666 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067560749 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091459194 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079403648 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083704548 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067992633 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065989688 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088050771 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076380133 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089130828 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079537659 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068203465 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.090027064 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066289531 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090045999 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069166032 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062267745 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.087814588 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072894121 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088323547 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069299928 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069210517 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093060816 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070046565 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099495782 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069174102 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088786379 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071522277 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066362552 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088766225 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068954278 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070951918 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.091281819 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067499216 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.086176799 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070363428 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068998383 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091204031 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068853499 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090283196 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076699243 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068745488 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092986751 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072026556 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.087233131 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072349158 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068228798 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.089926191 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067599461 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093179818 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073082754 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089285731 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07922073 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068289402 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09085916 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069633062 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086905595 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069796264 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067795836 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.089640743 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068430624 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.090068027 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078184843 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066403301 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09376052 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068465959 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089470548 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076842664 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069154911 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.094369745 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075274046 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090880309 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070614384 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.097479877 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073549206 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092560813 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071591699 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071863672 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097756479 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070072489 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09693019 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070125683 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06903272 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092323982 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067340355 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08842967 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069891594 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067431961 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095931449 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069463132 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088934103 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069289974 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066404138 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091124358 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072474089 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097714733 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072984522 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071059855 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.086570731 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066336057 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090356959 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067620092 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06988422 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.093246155 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075215522 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092748238 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070341052 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067256119 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.099031328 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073952619 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094743327 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067899309 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093057602 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070539583 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070442902 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091572349 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06996689 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090548723 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073780902 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070389149 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08982132 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076080617 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093150665 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07086672 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089553871 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071638352 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069287133 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085290205 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070677646 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069930747 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096269997 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071154225 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09014003 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08021898 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087223481 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07123624 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071138112 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089543306 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074340937 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084695843 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071516591 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069543215 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09156399 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063543254 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088751023 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068051555 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070830058 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089450788 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065118419 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100421956 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079454541 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092690269 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069452641 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067876533 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.085286657 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064459272 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067929115 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092203713 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070713248 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.101070981 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068425901 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088564465 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065360785 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068911981 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093690203 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072990132 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085543252 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065781645 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067734197 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094016909 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074731408 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066736955 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091916101 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071645528 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093315911 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067103798 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092827003 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067259232 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071883474 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105018515 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069291662 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09133815 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076373974 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098128197 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070838492 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063594383 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091134897 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072733148 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.090389679 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.07124233 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069225399 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107345835 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070702656 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089852072 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068108173 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092749788 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068979023 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076473532 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092356091 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069307646 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095067271 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070652904 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098324977 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072770021 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097957368 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073695825 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072159864 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.090300182 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06962242 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.087935853 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069312558 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069500664 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.092180295 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07322418 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.098218113 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068899603 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101739138 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07864921 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090464573 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067287676 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068123356 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089725108 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065531133 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069111004 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.088881262 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067187458 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087952306 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069437193 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069583384 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095770691 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069729992 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091539904 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069983829 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063627341 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.093068627 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071783728 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090297053 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06728316 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068961469 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.091338674 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074246187 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092916749 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067749129 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070783762 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090802656 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068424961 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080992918 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07512778 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065636153 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090237216 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067220056 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067059789 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089551682 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070666505 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093010074 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068377751 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089659545 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076907368 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088368445 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065719726 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064034152 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093833397 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065238697 seconds)
  done (took 48.335135727 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108298675 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085076014 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063098226 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082588462 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075235484 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0842635 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063036459 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062925229 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08448322 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065736615 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082974372 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063536178 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093778099 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089684432 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099420039 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068585318 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086665702 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065667847 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085952537 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066598722 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094566419 seconds)
  done (took 2.620600361 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076823912 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091551223 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073390852 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097776302 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068213886 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092313735 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073221369 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092592069 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096411302 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069181935 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09738436 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072307951 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087594826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069108376 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086959806 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072819242 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097767161 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068474702 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091702905 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073722268 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09221329 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073354351 seconds)
  done (took 2.759219943 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068561981 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066061688 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088197835 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062516962 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065615539 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083435602 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070061618 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084818996 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071162478 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065485434 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086578684 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066425488 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09693783 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063318224 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06693269 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084670197 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.135220899 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070897693 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065712338 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089299395 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06196335 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089309714 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062780169 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061884101 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.086729787 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070691723 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090511517 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067257689 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067468038 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.089058752 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068592523 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086001041 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072153947 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069477262 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.088808922 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068215382 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067518074 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090608807 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064682525 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.087278695 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070574246 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064252582 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.090774746 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070641047 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065857908 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.088213402 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070033607 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089562777 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064386455 seconds)
  done (took 4.686496786 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085506967 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.133248174 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089768354 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090071656 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.106030279 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09564714 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071004029 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11372093 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064248135 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087338508 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08281591 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.106198748 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087728708 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073771584 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093434277 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067646769 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066867137 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087556243 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06982011 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08787311 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069667021 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09495045 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10231296 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080649648 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091511315 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066342919 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086510875 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072578437 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099973342 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071662372 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092365682 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071625783 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102875631 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071580815 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087105236 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068888228 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10431328 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066184894 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09039106 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064014682 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089925 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071033262 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.094114774 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083256901 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089222938 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071482804 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087939803 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063739686 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100791379 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069143647 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096123832 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102087275 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071567932 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086519265 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072731925 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101970741 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067257793 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085045124 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070274983 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099554279 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065427178 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090718698 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081516394 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089429278 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074283684 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102023839 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071735272 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092052802 seconds)
  done (took 6.831595963 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076225705 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093922094 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081928136 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102693877 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094276331 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074490482 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094045022 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073989794 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093994794 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078169109 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09449024 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115183917 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068357707 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096630388 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073330891 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095485123 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073133227 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095465497 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072638278 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095833357 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094055718 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082584151 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094093902 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101171634 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10453252 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088999782 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073668181 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094161883 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081600747 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094628464 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10508011 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074053468 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094219484 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101386373 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086812034 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094005304 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066227662 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093787559 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074263636 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094081253 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069172555 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102588575 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072983194 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089729592 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072467967 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094563154 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102578576 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085130419 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097503935 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099017194 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074197721 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10322719 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073140483 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094427347 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10068567 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107717455 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103210012 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101435751 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073024417 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103023342 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102541787 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107736699 seconds)
  done (took 6.522737716 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088445908 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096875178 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098115137 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064216898 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065037537 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093053619 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064939689 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084887453 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076807477 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095973682 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078088423 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092149207 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073141858 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099287109 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091065602 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075465888 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092700695 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071772082 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096422798 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070836144 seconds)
  done (took 2.626737142 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076947222 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105059741 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069021294 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071967435 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092544295 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072582924 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091062143 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070117404 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089094485 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070424744 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098246938 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078170466 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088470988 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073353128 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09841271 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07364739 seconds)
  done (took 2.281983579 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080007124 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.098972996 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081319398 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089319968 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065487916 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084868166 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068054756 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06246158 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085150304 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080742802 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08910167 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069309479 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.0879815 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06661595 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063085984 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091463681 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06369116 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086108144 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067318377 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102540221 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078271416 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086125522 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068562437 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068101892 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089844447 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071898721 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088830698 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064913756 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086633616 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067977429 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087801191 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07605213 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083845975 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066904628 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064795101 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085637826 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066956609 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088176625 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070594137 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065594646 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087483246 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066557866 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088132775 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068727566 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083539501 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068419242 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06333406 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094564927 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064947116 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088263923 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067581168 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089307356 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069354653 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076639277 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092544364 seconds)
  done (took 5.24659301 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08137856 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069477793 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08499663 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064951745 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090757303 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069351605 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06927931 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090431586 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06832435 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085650647 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069512372 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089905021 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070406734 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070366262 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090533064 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070510266 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083611279 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069792451 seconds)
  done (took 2.356791369 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073963717 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067252258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095589559 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067318958 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08781476 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070046922 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062252345 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088035899 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06618801 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088006869 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068677353 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068480963 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087527256 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069367823 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087926461 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068196289 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068534996 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087119725 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066937352 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083221385 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070639875 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065111837 seconds)
  done (took 2.627913541 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073666992 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093038192 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164590027 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.11012467 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082752821 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102784944 seconds)
  done (took 1.59760624 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09236473 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101460628 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068220813 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109223743 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076061328 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089403612 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070038266 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08965066 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078250008 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104348998 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06910351 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100036552 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09787636 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078070346 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095674922 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074168182 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090424724 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068686859 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089490121 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106933819 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070588044 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098026426 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069647875 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089556242 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069570475 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097539419 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077024185 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104006685 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089546439 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077647502 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096286658 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069268032 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098800514 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103518965 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071166997 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098438435 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070473814 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107950807 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074436101 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098762582 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069099839 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096934884 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097607656 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07378496 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098079812 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068925337 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095516944 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067796865 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091690057 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114050837 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073906972 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098560871 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095127132 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078721991 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098540349 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115543003 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083428788 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098814388 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095863143 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083335711 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099113937 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07463055 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099539749 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104788922 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075505578 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101723656 seconds)
  done (took 6.803988962 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086017828 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10907303 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069857629 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105351906 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098480169 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069712748 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089710155 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07118739 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092273094 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071377338 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134128963 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07133032 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102488518 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101036371 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072093511 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09283216 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071883347 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101464981 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070120925 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116138689 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089753702 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077432414 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098482229 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097220004 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083399418 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096757248 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068321208 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09083334 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069948385 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094207175 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07507499 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094244401 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101158192 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071052729 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101066368 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071819321 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093071139 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075722349 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093223912 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076848487 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10260183 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111032059 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07100212 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093550934 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084419563 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094026343 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070185333 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093847514 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070570796 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091991598 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082385817 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105428654 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104079849 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09790927 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070723456 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089682029 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069854992 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089458676 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070504155 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095638083 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077549337 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09078806 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11531211 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069822248 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089551711 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077200019 seconds)
  done (took 6.771003531 seconds)
done (took 134.599426686 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.219562902 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.199995904 seconds)
  done (took 1.391667462 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070106396 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09591208 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102334321 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157710812 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089254835 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10118463 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120971571 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080829881 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066359767 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089565555 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067340091 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089210944 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136642359 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066515714 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088819159 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069875427 seconds)
  done (took 2.473535556 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104172615 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.198609031 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111639207 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065614057 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101988705 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079053875 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087324607 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077644603 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095853649 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066959343 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077717261 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098719939 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065005667 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097582196 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074834728 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100474887 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065567989 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099859082 seconds)
  done (took 2.652014119 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104653528 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.157492921 seconds)
  done (took 1.242389539 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206899526 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.126139957 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209745799 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.422992983 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.21674164 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.285604823 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.181274527 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.179718532 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.168413236 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.178271347 seconds)
  done (took 3.154388365 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100532901 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172494639 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316617556 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139005488 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085620579 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118388543 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14131147 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090373347 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.105115097 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106208125 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083451555 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.103243715 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100787672 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.100736353 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077109001 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.1025254 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126811595 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077591242 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078709198 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10148721 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120150671 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067691383 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074530039 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096752613 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076851906 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101025215 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066286705 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088704998 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07614702 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097080075 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078628232 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115635432 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098813581 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132882316 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082913777 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.132709903 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100155947 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0725146 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097150717 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07295695 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.10015903 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077603929 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10623843 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077371454 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088854001 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078282417 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08766167 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068117633 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101044945 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078663272 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.101000305 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079269001 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.131893907 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099971757 seconds)
  done (took 6.433433481 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.766469586 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111923782 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098248878 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.83669903 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091130387 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110612805 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.731764953 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119795114 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209264855 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.777260214 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089498265 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099129593 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.181121162 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.214910019 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.931485108 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.28986075 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.641847546 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105303438 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109638522 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132350205 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138985441 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.176985927 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.15038444 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438118511 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075660945 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093638333 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137134369 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074868235 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.137856799 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.105960794 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072221748 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175426226 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.228156004 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155823848 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098063079 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069773344 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091722579 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.149204417 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220062036 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192551913 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157785237 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068230466 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069586873 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.161117434 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13188814 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068456802 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139213478 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.152745235 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.146680176 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095681295 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074086503 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.161866443 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138047059 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143266036 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100978427 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.274385336 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.284870392 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06989984 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119707826 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10452507 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2164078 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105081574 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.177257765 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139459037 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190051873 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069836698 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756766052 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147561315 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090845489 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075134984 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118620936 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073969769 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.159506536 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.126971953 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.370063858 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141632315 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09534127 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069759239 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228677712 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083458419 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090062484 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1407112 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075751914 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122076617 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142524147 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140457091 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168701668 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.214411988 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14212096 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139163491 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095633002 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122951578 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077418914 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.191107225 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.193221375 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.141151766 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.186290923 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138665594 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.139044105 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169546917 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077604934 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.148768317 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11884807 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100158376 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138385486 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.170106028 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.125089966 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107735654 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074654275 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.14267912 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129861155 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111862061 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.1442048 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.153121327 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.484758229 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.152747395 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070658281 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111281757 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13994127 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.141534307 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07437924 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.23576041 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123350879 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146499867 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120899893 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067883251 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122376201 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.141528072 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102841923 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123178067 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137710467 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075612428 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235257252 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.170484165 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098350882 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195757329 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161821367 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073419953 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.14780417 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119372056 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145108782 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099079688 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137733967 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097320654 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753346303 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142811944 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1213692 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095465141 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176183113 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071465646 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081614288 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104736849 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067116663 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786619979 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106773175 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080323289 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.106428921 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074311804 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124501761 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140422837 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098909611 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.143484543 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207572437 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079113706 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124081562 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084468784 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.168275868 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078409818 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108625268 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085605927 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.110456661 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122740646 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073720432 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10673324 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147089509 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.141615613 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.194035691 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.542582472 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091643639 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083583756 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199760481 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070536951 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.263865135 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136764023 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.198558062 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142122591 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078575981 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.283055715 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142720833 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.177318517 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106095462 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151945016 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068344315 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136391195 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141769673 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093437426 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073642732 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.140152436 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.166701172 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143020535 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.934429854 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071618119 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204751013 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06777837 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175934178 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076423611 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098932157 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.252717434 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096936916 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151355056 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.147615188 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074866363 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109905573 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.702966965 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106643254 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138828903 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097650283 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.175043745 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.14590671 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.163717864 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1419221 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075988148 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.14257599 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.190437992 seconds)
  done (took 40.838920264 seconds)
done (took 59.165599194 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.263546688 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180692151 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.247373187 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146505328 seconds)
  done (took 1.918572732 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.146740955 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104164592 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120122586 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087438454 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103451223 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090444659 seconds)
  done (took 1.658140504 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.412239135 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.268306931 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232972314 seconds)
  done (took 1.918408438 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.287653511 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.215071003 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457874923 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.304685543 seconds)
  done (took 2.381085252 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.179078828 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.120784272 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068628892 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111152543 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.167745164 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.266004054 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13341842 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.19479431 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082500605 seconds)
  done (took 2.378197456 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.205283396 seconds)
done (took 11.46767302 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.111184957 seconds)
    (2/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.269511155 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.158099369 seconds)
    (4/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.102523908 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.149717635 seconds)
    (6/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.187720544 seconds)
    (7/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068277827 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.208844409 seconds)
    (9/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.235203323 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.099439431 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.150943571 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.203347142 seconds)
    (13/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.099262187 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080525743 seconds)
    (15/309) benchmarking ("sort", Float64, false)...
    done (took 0.154473355 seconds)
    (16/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075465995 seconds)
    (17/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.104848917 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076147984 seconds)
    (19/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.10989704 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069060651 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.209632792 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.236277896 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.225142135 seconds)
    (24/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.238059409 seconds)
    (25/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.180986245 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.113548471 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100950179 seconds)
    (28/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076367725 seconds)
    (29/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.157810729 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.107779665 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.194688163 seconds)
    (32/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.097879253 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079941643 seconds)
    (34/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.183109035 seconds)
    (35/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13763119 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07300127 seconds)
    (37/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075104829 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.16394934 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.161912576 seconds)
    (40/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.187535189 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.071323176 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.136427224 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.192907663 seconds)
    (44/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.094098175 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09560881 seconds)
    (46/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.103917459 seconds)
    (47/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073325593 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.118063564 seconds)
    (49/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069378175 seconds)
    (50/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052591784 seconds)
    (51/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.098578727 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07409432 seconds)
    (53/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072354274 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.174532953 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115311607 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100607181 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.225453539 seconds)
    (58/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.101882138 seconds)
    (59/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.162696294 seconds)
    (60/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.094214452 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068455257 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.173333339 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092559997 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.177833839 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.193815845 seconds)
    (66/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096391583 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091268006 seconds)
    (68/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077155381 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071667865 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.193131645 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.186149047 seconds)
    (72/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07373965 seconds)
    (73/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094168107 seconds)
    (74/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.19166364 seconds)
    (75/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.135633625 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072660935 seconds)
    (77/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.215037127 seconds)
    (78/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.207120659 seconds)
    (79/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053386752 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.114626986 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.116349956 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.117077414 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08767057 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075609512 seconds)
    (85/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100757833 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 0.235866392 seconds)
    (87/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.08044434 seconds)
    (88/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104176353 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.093053391 seconds)
    (90/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074580156 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098714455 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067159645 seconds)
    (93/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.163765086 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079200477 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114239055 seconds)
    (96/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.198505696 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.179809601 seconds)
    (98/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.182360245 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.120767224 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.0661375 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090346982 seconds)
    (102/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.100000045 seconds)
    (103/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.096439764 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.174695388 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164585641 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088086703 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.091693896 seconds)
    (108/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05230608 seconds)
    (109/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.161358887 seconds)
    (110/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051831739 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065213959 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.119500616 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069820672 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138498391 seconds)
    (115/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07328098 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.148617482 seconds)
    (117/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053995877 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.101506188 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089410825 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.16960909 seconds)
    (121/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074432021 seconds)
    (122/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.132389413 seconds)
    (123/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053414776 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.062092345 seconds)
    (125/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.077968045 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.101504638 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064341929 seconds)
    (128/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10570922 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.160251606 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075155818 seconds)
    (131/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.162389757 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073365857 seconds)
    (133/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.132020541 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074080846 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075217079 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.122406202 seconds)
    (137/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054451173 seconds)
    (138/309) benchmarking ("sort", Int8, false)...
    done (took 0.17192093 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.115065081 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.101111775 seconds)
    (141/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.16446043 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072772275 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09254171 seconds)
    (144/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051962473 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066282563 seconds)
    (146/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.077050282 seconds)
    (147/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101191207 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089260424 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075361741 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075426364 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.076108002 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.134234854 seconds)
    (153/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106917906 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067138767 seconds)
    (155/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061046941 seconds)
    (156/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.128142758 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073690889 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.099845602 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079676089 seconds)
    (160/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061192742 seconds)
    (161/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.12801439 seconds)
    (162/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079470466 seconds)
    (163/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.08066691 seconds)
    (164/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085292683 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.07724912 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068346486 seconds)
    (167/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077548345 seconds)
    (168/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079766278 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121527116 seconds)
    (170/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.08844384 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07649378 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.163206893 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176349862 seconds)
    (174/309) benchmarking ("sort", Float32, false)...
    done (took 0.158591016 seconds)
    (175/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05377256 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.080463281 seconds)
    (177/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054365337 seconds)
    (178/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080229001 seconds)
    (179/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100694338 seconds)
    (180/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063906617 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.176819821 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080416077 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092119442 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.074014089 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.176026406 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074915885 seconds)
    (187/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06432617 seconds)
    (188/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.13874775 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075433698 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.093505079 seconds)
    (191/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055847475 seconds)
    (192/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054408258 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.102786239 seconds)
    (194/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.071219907 seconds)
    (195/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053547834 seconds)
    (196/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06865321 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.081319119 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074853972 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055983857 seconds)
    (200/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097157556 seconds)
    (201/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.175509486 seconds)
    (202/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078442276 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.204274711 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065296212 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.337260579 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122763081 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.128422705 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.19300872 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091676437 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091624498 seconds)
    (211/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090397969 seconds)
    (212/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067931582 seconds)
    (213/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.093712518 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.169610885 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091459106 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075710709 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.09761074 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07856273 seconds)
    (219/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068536926 seconds)
    (220/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.101737161 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.16007482 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078189346 seconds)
    (223/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066932966 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.155631362 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072006417 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090974835 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053851399 seconds)
    (228/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.137767964 seconds)
    (229/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.077117012 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065567872 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065595842 seconds)
    (232/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088447446 seconds)
    (233/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051637191 seconds)
    (234/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.099113445 seconds)
    (235/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110661284 seconds)
    (236/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065600848 seconds)
    (237/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.076153777 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140349828 seconds)
    (239/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090859182 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092111176 seconds)
    (241/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094877574 seconds)
    (242/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074180657 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067191676 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.118601347 seconds)
    (245/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.0923162 seconds)
    (246/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195588804 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120658193 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053735808 seconds)
    (249/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051794501 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195374048 seconds)
    (251/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090306754 seconds)
    (252/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078722192 seconds)
    (253/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067505819 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064047547 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.077893499 seconds)
    (256/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064067484 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088020021 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.078246226 seconds)
    (259/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072811866 seconds)
    (260/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053414921 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077810425 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052369219 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065210569 seconds)
    (264/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.077260217 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067048147 seconds)
    (266/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065762288 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091453636 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088963574 seconds)
    (269/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.125030404 seconds)
    (270/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072069482 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095902042 seconds)
    (272/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06355756 seconds)
    (273/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051950554 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051582602 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099893584 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052343991 seconds)
    (277/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051841003 seconds)
    (278/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09735746 seconds)
    (279/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.148261349 seconds)
    (280/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078591264 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067330169 seconds)
    (282/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069919768 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.099113353 seconds)
    (284/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054404002 seconds)
    (285/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05291897 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089869032 seconds)
    (287/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065963326 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088123206 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075511447 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053391019 seconds)
    (291/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096207575 seconds)
    (292/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075289037 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09049055 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120822046 seconds)
    (295/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052413498 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.075464256 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054492254 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071826638 seconds)
    (299/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098536839 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092622098 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067083304 seconds)
    (302/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105329095 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066096062 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.160120227 seconds)
    (305/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052423514 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.095089216 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.105055026 seconds)
    (308/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053083543 seconds)
    (309/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.077245636 seconds)
  done (took 33.874857945 seconds)
done (took 34.892654968 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082503091 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118924383 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076166253 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120103903 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083880182 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104217478 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074176528 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103020247 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082168226 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106765625 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080293075 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054835163 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100704558 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075666174 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100335281 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092844594 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104166393 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074325172 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.098399656 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066343729 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074082563 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091125009 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068294446 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056204225 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103127299 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073925408 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097209858 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076906936 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065893173 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.091436183 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070416442 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072570941 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091181819 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078884978 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096960383 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07449116 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09910957 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07983418 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068862642 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.094526471 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077690298 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067544151 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.101575694 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076112795 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.098604933 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075640037 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076125016 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.108785 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095544279 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098090466 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076538164 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.105060944 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080538054 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073825951 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.098664558 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076032282 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.098673929 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096814969 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.102814257 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072495877 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075369796 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.103598087 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075048663 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.103925446 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07931531 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079823504 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.107229241 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073836753 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.103525282 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074806886 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.0679244 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.103584806 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070223115 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.08986548 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078459422 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07703059 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.090646538 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072943552 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072783202 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.099148997 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066143255 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092189413 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069470606 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072445049 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093350382 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056158532 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070042132 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096381694 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066666414 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074369179 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097390431 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073262337 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091645328 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078237131 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065219971 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.096846556 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066743795 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066057067 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.093649868 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070359108 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.089483125 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070358318 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07656684 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.093880577 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074194211 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081406277 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.095319095 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075190532 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.092704672 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068954905 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083368587 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.104626056 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068444832 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094933513 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066205514 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073742891 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.092356736 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068054369 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067668949 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094198399 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074285939 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067406328 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097540344 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074630759 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106071388 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067566881 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07070012 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097022728 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068411913 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073353693 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094575679 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068624225 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.095459605 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067114946 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069871443 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093304945 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07485726 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06828087 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099622953 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068713391 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100384141 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071889173 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071872496 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096475971 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065991441 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059448709 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092720991 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069054572 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066999102 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091388006 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067970812 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065390115 seconds)
done (took 13.655351871 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068044683 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170387878 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.128261656 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096284075 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113827425 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066862612 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101725432 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103589653 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093869578 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12899577 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088720018 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109773052 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115805002 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090562013 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067458071 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069350065 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092850823 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088548827 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127345232 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086089282 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.142146608 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090623093 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122101874 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091597619 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113390845 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103185932 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.092039432 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070902282 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068967614 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118943821 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110580073 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07113999 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06677279 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125391953 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118604699 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08578306 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090329117 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085194823 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090240749 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068209315 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116012913 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100028981 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107349481 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081326758 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098382684 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068965875 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092118137 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086392727 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115955026 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079873699 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11376894 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136370813 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068973548 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108459536 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065487059 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112475514 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081269497 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.095135008 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066756457 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093034257 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068142024 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069774334 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113355837 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116796079 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071883639 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10672479 seconds)
  done (took 7.437114723 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085977697 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117770168 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085794665 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108620889 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06777342 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066473493 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092587074 seconds)
  done (took 1.703755936 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068713852 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088505238 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115243018 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089518956 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111552395 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086890845 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102512298 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066707737 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109290924 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069265142 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08803669 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130638503 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069174279 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.101221824 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092269536 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.095670168 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091876858 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095570891 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072111776 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118949528 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072230113 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089180218 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.096163911 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066918621 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106521966 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068238168 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140566294 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071825701 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067247255 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.096788522 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065602672 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.142567646 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106180609 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078885878 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067113204 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10851334 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082502982 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091003938 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085286697 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097513415 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083863986 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068526235 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095763123 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066299416 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071115725 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.104664048 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068208722 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092461418 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071284773 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087290163 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.097250187 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083629826 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.09616708 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074149501 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070823357 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102772837 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079388446 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.095309281 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091078907 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070291359 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115174393 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085859488 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.112015996 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086049684 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099303534 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084484977 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.110802865 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07302711 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070915645 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.100188424 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087141534 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.093400158 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072158985 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080389777 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098594751 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094535953 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.121037746 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071251612 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106536247 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071231702 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069696885 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096512047 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095144681 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099786917 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070994848 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073619642 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100584734 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069014801 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06858649 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.10100621 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067822757 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070621693 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.099028169 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068282536 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094629186 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085201976 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069063425 seconds)
  done (took 9.650115172 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070638467 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068285431 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094945158 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068749826 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067860949 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094765894 seconds)
  done (took 1.558982652 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099599336 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095028364 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082390929 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097518475 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107929637 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10747105 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082680494 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109632265 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084864755 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105587876 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082309782 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108507812 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090132157 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.103632377 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084566151 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.102096422 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086182948 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105815564 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082511614 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102368759 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092458342 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101367036 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078501582 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085283468 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.101914156 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07517654 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.107785532 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082695161 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.109396479 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08522233 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.102721219 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074018364 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.101206673 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085499009 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.11250086 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075192631 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102070897 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074699533 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105626252 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074646222 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110457203 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078333908 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080333236 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.102605396 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.08454809 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.102304872 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071540231 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105577385 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082234512 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.102526327 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073511908 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.101284901 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073598348 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.098685668 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076754102 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111416841 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07554908 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.11092933 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077279122 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074392354 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.100439286 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073957526 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113426786 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072832705 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.110541845 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073883016 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.102528011 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077366379 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102408094 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.077030148 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07419763 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.099925095 seconds)
  done (took 7.71231978 seconds)
done (took 29.137454083 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.677126658 seconds)
  done (took 1.764700302 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.796674059 seconds)
  done (took 1.885848281 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.007190021 seconds)
  done (took 18.102551893 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.64668798 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.815208161 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.801839032 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158587062 seconds)
  done (took 3.512549526 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.935978629 seconds)
  done (took 2.048622412 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238283616 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225978029 seconds)
  done (took 1.559664875 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.788072893 seconds)
  done (took 1.889845849 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.30919421 seconds)
  done (took 2.404252385 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.336604717 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188275904 seconds)
  done (took 1.630429985 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.537328601 seconds)
  done (took 1.643103129 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.969420423 seconds)
  done (took 8.077437368 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233182257 seconds)
  done (took 1.350842757 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.272044514 seconds)
  done (took 1.377729431 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.484711567 seconds)
  done (took 4.592075747 seconds)
done (took 52.932443997 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08051482 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081240439 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108735122 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07924741 seconds)
  done (took 1.454591493 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079810979 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072851416 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103760965 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072909105 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104002484 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074054078 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100400372 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079432607 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072154123 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102220399 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073248593 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099939751 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076754376 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101478415 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074165789 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077501101 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105002389 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07406112 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104797432 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076407431 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072731242 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.106341938 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078262875 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101420791 seconds)
  done (took 3.198884992 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079663564 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07327449 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100897032 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073003281 seconds)
  done (took 1.43769851 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079464087 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116504879 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090871611 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076831263 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.11977066 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.113220298 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070455718 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069179412 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09809176 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07732075 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092933674 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099635273 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115161888 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077652819 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104544737 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067215029 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068381115 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.114115999 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077199289 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104123301 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071471449 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079270087 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095606453 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090378561 seconds)
  done (took 3.286605725 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078928536 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102846539 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.105934656 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088510733 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.119893375 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065598326 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103327114 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091425389 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.151923545 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065924341 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.097888873 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066134385 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097743241 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068075179 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076524985 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136102154 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11133151 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.096313468 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097716509 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.095519291 seconds)
  done (took 3.037739179 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076275294 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071141523 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094313121 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071912792 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07790824 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100805992 seconds)
  done (took 1.605886479 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069842662 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067661327 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093519339 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068240675 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071464997 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093668953 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067034403 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066859306 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094154741 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067745297 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066661429 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092915755 seconds)
  done (took 2.034909943 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.389349814 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09776464 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069448222 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.093161441 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070667722 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092594635 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081840999 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067858172 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118136481 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066840275 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09332413 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070485923 seconds)
  done (took 2.43100638 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267034878 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078217988 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.330086675 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170361842 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142722245 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156861107 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104162871 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142017857 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200762293 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139130834 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206169769 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231160671 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139276951 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17406702 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117150491 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106413638 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215302564 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224447379 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104747988 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227675426 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209432694 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162487885 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187965943 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1335451 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139506162 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156844314 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073773638 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110868566 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238963767 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163174533 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20444998 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14043594 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099510687 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241058575 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236582461 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205093148 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169396012 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090625732 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.165822683 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.174756996 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270469577 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120797327 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202210729 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141790737 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1114146 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181962383 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153906328 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.15434318 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144127781 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120910223 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183521405 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253848641 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.17317948 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119357322 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143663564 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149152359 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150098329 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107691344 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254184858 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230034905 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166616282 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.102080083 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101697047 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224407526 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169056817 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.149050619 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160016018 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126530586 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176576306 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223291247 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153522805 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182892144 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.194368994 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093539463 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155302387 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204318801 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165523989 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210481957 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160405188 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.105644021 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160487962 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136611563 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085234499 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.176813572 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077727442 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245564209 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132096164 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.146929908 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144910813 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113278896 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142909418 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231823983 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21220083 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108370795 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.09809541 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135379124 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155217084 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184853741 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119233034 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112405478 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181908942 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082839894 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173507336 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.106951964 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159965544 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.08120237 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158116067 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197837358 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080457874 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163124318 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136448386 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.133226221 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171022964 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231184911 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094180308 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115463089 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208959883 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16150927 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.1383278 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211567933 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197099189 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.135820306 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13673636 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18717815 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252711034 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123700914 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234228264 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141471444 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088475146 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.120381415 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161558569 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146481867 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156494143 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086585687 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159629818 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237746248 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.107193604 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100152018 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17153729 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113924887 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11233488 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146144279 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10535107 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.129097185 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.133007473 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139325096 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176662234 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161650829 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142245525 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160426816 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131711829 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237607109 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120729153 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109202618 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137787993 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099799727 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172581255 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198139133 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112707253 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236468368 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163903569 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108501436 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153641367 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116343191 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176250721 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11141727 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074424154 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210005347 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115619543 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143746806 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.22172822 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107049886 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191642284 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158098527 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170672861 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166193136 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168511024 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14054886 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.120357514 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147264703 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163216407 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075248582 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127704036 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.115131568 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136832466 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101274126 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116780044 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178108847 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161545305 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132372868 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147098039 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130715912 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18901603 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108716314 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165708891 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.155643257 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127343317 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196250739 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223721127 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173425204 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133847409 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183383956 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.102393007 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078235887 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.123531422 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165336 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086167732 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118158554 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152418746 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186840674 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194454316 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175725033 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144320408 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15689905 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196121493 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.103284006 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120937866 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216432471 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162592447 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.140823689 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118836497 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.130958188 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184132572 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143605454 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257716706 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150712293 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159168298 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219748936 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.135243443 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08603996 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140071472 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174957506 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142068383 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218333944 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104085411 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122082542 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144954323 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.112207007 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108536312 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194363774 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154869231 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171647328 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151778375 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167365676 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110369018 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15291672 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158880465 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157806482 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066919287 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153372485 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233095572 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128596724 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153394799 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223132637 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083916471 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.159873828 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249240469 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182011968 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11903916 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144495018 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166400178 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165897953 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154477118 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177272645 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145645223 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171788745 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14578534 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.118995767 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091183321 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132219877 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140963442 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.128621685 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146636624 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.153115725 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.126052609 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169353528 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14559106 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144393185 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155461195 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103525156 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.123793084 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101216787 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247931226 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157041972 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2472304 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.135395259 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187295051 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237770253 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108030193 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08381175 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.113858679 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178275809 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086754223 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200546325 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100217565 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14002643 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162171042 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210275729 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100223247 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.100707965 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113841212 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201372155 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144415998 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103918069 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.140514049 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23488105 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137017626 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084219996 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161601272 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13863519 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134128396 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247651723 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066008925 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100477528 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112765853 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083489411 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194699783 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195721531 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.115715571 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.13669128 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154444117 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185292874 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166892207 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136177939 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101752837 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14850608 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217468377 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165762661 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093329589 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148518274 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193651349 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198034192 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141390831 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.129070291 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212538336 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225031522 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.23534815 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092148518 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150311949 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150691898 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144624087 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209546903 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087062352 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238436036 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116138666 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174820133 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140034075 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12709191 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167202926 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.129259566 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093249579 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217314477 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15780322 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108929866 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113924588 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155055777 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158821208 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142505465 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077753539 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206538161 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075990901 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204579679 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212491971 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116140221 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13869653 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102105376 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116181952 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143553846 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137781882 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090724573 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.155226264 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243648774 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.093395822 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219251207 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178584012 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148085695 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205329593 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133815892 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.6704661 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08210392 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225884912 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156474227 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25119474 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130201774 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154779478 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115946087 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158548637 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212414117 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140426737 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209612824 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170565548 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157538403 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082889649 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137877655 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145768249 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.126803025 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142043913 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150436046 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152613839 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133900382 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156058185 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165029431 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.113680619 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10053165 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230532592 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153892276 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180926523 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178167526 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117928105 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150859525 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202415794 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083881094 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.154518739 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21913442 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139195371 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126833686 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084419772 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136489539 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23735295 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074537333 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225004142 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155013501 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140323694 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144050114 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148708139 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163026997 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137912574 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185149915 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096588439 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141697741 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146155026 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113234979 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077787017 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136045079 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142770694 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.129351143 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131786609 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122499733 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215289309 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072422741 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125762129 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133121834 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176750812 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240935207 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.118033618 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084710239 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149543948 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143321041 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147371218 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160958193 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115507764 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114707878 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087455945 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.146656494 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112335314 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145682724 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13364805 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140954287 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231445392 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084730848 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.254706127 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124442364 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134618575 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07169714 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106739878 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099597537 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130500291 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139028004 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127681864 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213952902 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.132199283 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123944232 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097767461 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106371791 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086256274 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166915858 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144825472 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157354729 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132802598 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.095862096 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1435503 seconds)
  done (took 74.464915051 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.147984731 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.124133649 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.137933888 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.19326772 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169691627 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.261884574 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.204178627 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247101896 seconds)
  done (took 2.686230523 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072565083 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.122711117 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.1036401 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.120029437 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09428842 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070098392 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.304040199 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113228199 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067548885 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120399055 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.122236399 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096490268 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.486390696 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068211594 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.100228971 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.093784476 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069268442 seconds)
  done (took 3.417583312 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.451869672 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.690225923 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.464894839 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074462654 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.232290611 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112595686 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.839100757 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.173953392 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096553892 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.461839493 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.729047393 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.165722588 seconds)
  done (took 18.691291893 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079621835 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072051921 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.117323284 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088004772 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.105598161 seconds)
  done (took 1.663389005 seconds)
done (took 120.516562508 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084535703 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.357193429 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055092598 seconds)
  done (took 1.649858322 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088473763 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087439043 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.120157773 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086119364 seconds)
  done (took 1.5923878 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079080404 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078298417 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.118399997 seconds)
  done (took 1.48579194 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.296072364 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17655526 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093775364 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084776145 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077472349 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107525666 seconds)
  done (took 1.475767099 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075289699 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074704911 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102866885 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076863598 seconds)
  done (took 1.529197006 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078972895 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055171226 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056676739 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088975741 seconds)
  done (took 1.486008727 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092372184 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107257961 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082085916 seconds)
  done (took 1.485299851 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110939089 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116861569 seconds)
  done (took 1.435323585 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084827158 seconds)
  done (took 1.285238942 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09326727 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.143062823 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.159756801 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.139050177 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.171931259 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.140617737 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087714059 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.117156874 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.1070473 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088000463 seconds)
  done (took 2.456192303 seconds)
done (took 17.730661968 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079874897 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.490536176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361666166 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1188894 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670971923 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35863767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.049067589 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123903287 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127272736 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101416627 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087266247 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681779527 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972603499 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.450911237 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.960674794 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.41787545 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.684649329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071198196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069697835 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102223221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.00368587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10165621 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071253007 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070401497 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.681570266 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371591564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098054125 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.419445756 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067295645 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099296239 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355508314 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096802476 seconds)
  done (took 16.6106088 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074401658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15133052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077526017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087167564 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.104910249 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0724272 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104477429 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073092602 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161092369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069971488 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11899413 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070988373 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103499821 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073251632 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090011737 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102411371 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071857741 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071211254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100845328 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068719891 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11641667 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068951279 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068031533 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097790067 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068187965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108652382 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069096721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067439393 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098254038 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070252057 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099959629 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069675483 seconds)
  done (took 4.058511169 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117274054 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15574497 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076437009 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13388482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116320841 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.104708463 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.176544702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096062783 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163134625 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070128842 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120001039 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070403411 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135817477 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071566613 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119674705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071015334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07147228 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098977024 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068176083 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096734499 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088581015 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067459985 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097643967 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069239262 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097248363 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082036695 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095433555 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070393514 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069388171 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098631074 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072448722 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068202098 seconds)
  done (took 4.327714296 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073570205 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074927383 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11287275 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084970765 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101523373 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.0748475 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074674477 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099858123 seconds)
  done (took 1.91545045 seconds)
done (took 28.119712207 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07949684 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.0695324 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103003142 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081179396 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100848261 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081209887 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068918672 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10798845 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079349933 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074725459 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10973836 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069457459 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.10217678 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069619614 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075990172 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.10117729 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083189449 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.104182309 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083636123 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081634999 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.104547535 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079461381 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.107038827 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083088865 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.112053934 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083729673 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084611017 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.107443367 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071257218 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102869519 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080402579 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.118590088 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072139367 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081838363 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.101807517 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069859656 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068906382 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101673114 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081610556 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107494562 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073593828 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.106429056 seconds)
  done (took 4.934174088 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089860944 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093207381 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.120465256 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068056127 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.104335122 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066515752 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.118622272 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066825557 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06193214 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.1225353 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058688878 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061013143 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.096311782 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056176182 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061331084 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058204451 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.09320401 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056877468 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05928274 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.08885037 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058494907 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053744343 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088966642 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063954701 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055998088 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061807712 seconds)
  done (took 3.203388114 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076513657 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084166566 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118605103 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127589312 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.140147316 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078630246 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.113359072 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090294307 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.119449711 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069777659 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072555517 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.131121462 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090128963 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105805141 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067579644 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.117862871 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083325004 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069202033 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104454585 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089523941 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114184067 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078616843 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120427507 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083055706 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067006437 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10028105 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071873266 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110873899 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075190145 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07836445 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.104262825 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071566488 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098860663 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079827423 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07321671 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.100514519 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090492141 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109080867 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079491216 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069806198 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101983573 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068578987 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.117721891 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.11331455 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.100705616 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078617526 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077134867 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.111427121 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07016061 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117078227 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078462584 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069036675 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.102608446 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06828053 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099629074 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085889637 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07182644 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.104401556 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.0800527 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10275029 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084578044 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.0741426 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.118148455 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069681999 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10800156 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071436989 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070699254 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.098810917 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093399438 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070436364 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.140974917 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070407881 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.099602713 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077139753 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105273092 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074755135 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067871714 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114263294 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077429456 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.101937718 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076974676 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070998749 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.101484082 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088234889 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09876876 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070308812 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069332976 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.114292196 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070120438 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097677382 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081757514 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067352432 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101777585 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085470812 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096301687 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07038601 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073522022 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.103170131 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067031152 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109217931 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07337576 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096602448 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078840114 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067805301 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100462565 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078390219 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.10004952 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069321343 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07297812 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103393482 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069495887 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068932867 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100860987 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069589108 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.106158727 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074784082 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072680525 seconds)
  done (took 11.682647606 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.19719045 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.187057621 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071816683 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.180400595 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076328685 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.111224503 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.181433978 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097230211 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097909259 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069480843 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068861659 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.133901616 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124989506 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.110180857 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.109705353 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070324915 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.117380646 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.109176832 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.189474558 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.184625497 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.120846313 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080601541 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072730063 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.105017294 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073180426 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079709327 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.123281726 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078996538 seconds)
  done (took 4.458341127 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085803825 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.133327339 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075083618 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088583277 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12297591 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067829996 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104148645 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070296044 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110289041 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08018755 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096495788 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075261657 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074882877 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.108433894 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068788592 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107173946 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079133461 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069346269 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101656168 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073558086 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106632139 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082678762 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071313188 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069448225 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074299558 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097105201 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065079692 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115663993 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068561571 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.1193734 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067672179 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073723571 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.111969887 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06929891 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096735242 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073538239 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071435931 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.10134356 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070643927 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067838138 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.097733057 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058929668 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067040253 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.110527339 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074484835 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089831107 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07466106 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072506885 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103143094 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066000942 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099866287 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072093491 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070859141 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106617985 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074064418 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073229965 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.10295746 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066530535 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104497035 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073044182 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06511458 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096292611 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076226488 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068093584 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.110235091 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074573669 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.099471992 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07403957 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075342035 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10583499 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072111534 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070136613 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096386813 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070661769 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101993044 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074402898 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072153883 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096904067 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069085815 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068255362 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.086093662 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06882289 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054014147 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101299901 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06727303 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066526662 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.101603928 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07413823 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110792278 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069613304 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102933158 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069975335 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067008248 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101518437 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06453111 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069925097 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.114592105 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112334832 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07005432 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065998134 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112230676 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073638796 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066381173 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.087020938 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076117479 seconds)
  done (took 10.089642583 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098821073 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092052115 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101147818 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082817283 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125708584 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093808975 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105468523 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075281302 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06911724 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115048824 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068116475 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10603484 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069395555 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076608594 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.127194577 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075914704 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099384419 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077712129 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072290264 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.138568068 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082607604 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112762826 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081288317 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097550039 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07394921 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079815223 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127060877 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080095141 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10887296 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085870847 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079484406 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126786949 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085404145 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.103698699 seconds)
  done (took 4.444487804 seconds)
done (took 40.023916204 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.301531529 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.527587823 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.292257225 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.337805345 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.336966254 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.30570431 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.302728783 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.292028964 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.778470731 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.291108642 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.538275825 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.029390879 seconds)
done (took 60.570787398 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.302007028 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.43483429 seconds)
    (2/2) benchmarking "String"...
    done (took 1.570047163 seconds)
  done (took 4.252593387 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.659976752 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.250874762 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.553074261 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.296271321 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.294314451 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.598040425 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.057867879 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.214164799 seconds)
  done (took 28.502406153 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.303621971 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.696534356 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.095501931 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.099307771 seconds)
  done (took 19.433870121 seconds)
done (took 62.385102639 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.315405801 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.367516563 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.303192372 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.279889049 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.413395072 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.329685997 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.414052137 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.365071157 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.306427239 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.286834552 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.297557297 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.29550963 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.309015905 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.412651918 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.296808569 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.295522894 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.349485467 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.895389194 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.710719173 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.304163002 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.305642233 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.31610264 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.300028702 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.295731914 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.318986763 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.297794517 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.304299725 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.301845265 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.038971639 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.299464373 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.31075231 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.58308973 seconds)
  done (took 193.46118049 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.299099303 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.505113702 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.598699357 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.324020202 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.967864193 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.493518633 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.435283715 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.046680817 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.314920207 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.310112959 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.548867062 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.296708859 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.619216363 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.33687221 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.316997889 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.307033004 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.585306601 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.641207138 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.318311682 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.57458016 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.315710373 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.45246965 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.406885097 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.531190289 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.300235033 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.401432509 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.313945184 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.315843161 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.486783702 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.512201344 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.354124593 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.327699144 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.944051928 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.159544682 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.317775745 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.297712339 seconds)
  done (took 154.520845561 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.604801019 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.299855496 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.300435706 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.30033387 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.334547892 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.301150906 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.899953438 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.908898751 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.851151959 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.751976729 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.365384998 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.611371542 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.30168039 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397304692 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.309773023 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.298751223 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.317277223 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.32870238 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.297067027 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.301749996 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.911372523 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.316027718 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.320611104 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.30896294 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.30178269 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336962012 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.697470585 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.296539591 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33515019 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.628337727 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.350925907 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.297929384 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.673816714 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.258390751 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.411361195 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.299063125 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335334555 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.302533647 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.575072064 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.296614716 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.302441916 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.303918928 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.952317558 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.304361551 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.912280177 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.304458008 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.251258285 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.299109942 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.303235155 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.142613359 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.829617474 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.300908552 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.3036435 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.305978833 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.302648642 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.304250507 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.338553913 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.302547998 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.062558309 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.407156622 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.303050416 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.302589514 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.305567493 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337312863 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.305162348 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.637368559 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.305084189 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.322243856 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.363553632 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.523034276 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.910025671 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.30520624 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.399013342 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.423357854 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.300072304 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.302439245 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.303747413 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.304787253 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.413058612 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.302082652 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.745146507 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.306603923 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.305648114 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.365592114 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.401841659 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.299617797 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.305451269 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.667246878 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.306703359 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.305421746 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.066621239 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399087188 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.301364048 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.306332486 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.305739938 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.304809344 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.74869267 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.910389638 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.574006089 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.307733897 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.036669566 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.306472488 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.761051742 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.875634277 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.958553642 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.306074956 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.418326863 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.306224721 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.308181151 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.305813734 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.334952467 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.307212888 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.365449552 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.30296301 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.70625316 seconds)
  done (took 360.014510335 seconds)
done (took 710.840452557 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.988690549 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.973933298 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.092576056 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.9668815 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.938874095 seconds)
  done (took 11.20771498 seconds)
done (took 12.455247371 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517532995 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.519314197 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.373123632 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522318085 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.340060432 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.538480338 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.494694681 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.32996364 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420358497 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.3956526 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419959205 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.362174975 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.339597194 seconds)
  done (took 19.820164283 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.644512998 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.640314238 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.371719863 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.646131473 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.349218328 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.662662769 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.517296152 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.548051018 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.524117437 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.321920588 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.324355556 seconds)
  done (took 17.798345943 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.655838095 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.643156881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.376593652 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.657733576 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.351207865 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.685930142 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.516737997 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.548012935 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.514407608 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.324597017 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.321129175 seconds)
  done (took 17.844027323 seconds)
done (took 56.71105916 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.316966611 seconds)
  done (took 2.56634942 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.354167133 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.524360194 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.333456264 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.322065028 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.31739267 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.318295011 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.322426777 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.319300436 seconds)
  done (took 12.063333339 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.317370729 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.31624058 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.318913348 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.317248889 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.314944544 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.319793299 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.316070569 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.317318495 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.313983763 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.318878728 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.317419955 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.319046528 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.319555999 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.315071903 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.317889806 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.314065603 seconds)
  done (took 22.323448011 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.318834843 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.316026497 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.315481098 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.316852343 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.317136915 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.316290423 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.318200662 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.31624748 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.315805215 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.31722418 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.318227659 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.315098037 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.316735005 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.317296902 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.317467174 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.316242526 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.315679922 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.317578505 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.320068349 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.316372216 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.316358341 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.317163546 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.317943961 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.318580189 seconds)
  done (took 32.860281112 seconds)
done (took 71.061341892 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.578596453 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.079714679 seconds)
  done (took 9.908303675 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.31751751 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.318760104 seconds)
  done (took 3.889239083 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.319651974 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.320007339 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.320307024 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.316194183 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.320247005 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.320075375 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.318738258 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.320755567 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.321384861 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.31995083 seconds)
  done (took 14.449837257 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.320960177 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.319711584 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.31847344 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.321991661 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.320644924 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.316941967 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.320750004 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.320206827 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.321596428 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.318588011 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.320311387 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.31791898 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.321322392 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.319183396 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.321063669 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.316117708 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.318228478 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.319081125 seconds)
  done (took 25.004969596 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.320291921 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.321500633 seconds)
  done (took 3.894954167 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.318740818 seconds)
    (2/7) benchmarking "second"...
    done (took 1.318018291 seconds)
    (3/7) benchmarking "month"...
    done (took 1.316694792 seconds)
    (4/7) benchmarking "year"...
    done (took 1.317761169 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.318356724 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.318793551 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.319088304 seconds)
  done (took 10.480569811 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.31782034 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.496735665 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.57877576 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.886041041 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.323297452 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.323933086 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.165861883 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.324372962 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.328112989 seconds)
  done (took 14.997699512 seconds)
done (took 83.87596579 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.356378467 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.309913721 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.243414272 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.330011126 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.325034533 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.656558121 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.370861277 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.442607781 seconds)
done (took 38.290125758 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.332120861 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.02969164 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.079967986 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.31676347 seconds)
  done (took 11.680072961 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.312633921 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.313210176 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.318448056 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.386341464 seconds)
  done (took 18.588730134 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.971373793 seconds)
    (2/2) benchmarking "read"...
    done (took 1.647084038 seconds)
  done (took 4.874668626 seconds)
done (took 42.730575868 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323612714 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.322096854 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.321771378 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.32182658 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.322618771 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.321110103 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.319978534 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.324790251 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.32427194 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.3247691 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.324207305 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.321798479 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.321977211 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.324866086 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324439103 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321955459 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320886581 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32465513 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.320920024 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321101292 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321053068 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324068536 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.321963556 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.323808283 seconds)
  done (took 32.999925121 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.324314864 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.322678448 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.323850612 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.324189291 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.323426246 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.32576868 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.32403331 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.32124884 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.324826657 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.326927656 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.322956205 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.321541114 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.325605218 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.323112489 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325480058 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.32285449 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.324637353 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32311215 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325762557 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.323270879 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.325576173 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323742379 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.324063358 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.32576548 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.322756303 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.323620325 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.326897297 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.324442755 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.325935174 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.32396183 seconds)
  done (took 40.983721391 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.331787112 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.334461136 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.326122863 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.327172022 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.3261518 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.327251837 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.325400765 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.326127529 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.324910363 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.326260031 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.325963534 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.326311184 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.32769671 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.32711369 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.326658572 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.327208787 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.327261007 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.326122518 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.325912353 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.326943131 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.328288948 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.326868521 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.328784043 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.321074341 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.321494191 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.320101647 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.320133939 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.319757382 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.318663028 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.318714475 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.318581845 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.321825059 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.320547667 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.321752205 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.320812168 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.321409165 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.327946771 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.328923227 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.321657136 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.32066941 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.320789276 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.323001837 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.319056611 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.320147222 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.32083595 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.320094896 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.319494612 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.321310258 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.32009109 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.321792706 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.320606663 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.322854114 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.322718872 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.320077873 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.32032792 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.323714345 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.323794007 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.321532124 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.322082072 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.323628233 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.322132088 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.322366123 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.323313813 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.320809099 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.32175199 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.321287349 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.320206662 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.323784128 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.321611321 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.322130578 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.322122608 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.323363304 seconds)
  done (took 96.545104035 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.321924705 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.321959656 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.320584037 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.318770569 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.323014932 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.324335039 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.321653515 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320842947 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320811999 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.323151602 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322643929 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.319835324 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31796278 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.323341368 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321551204 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.31938497 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.323029283 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.321850838 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.323551154 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.324256491 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.323912338 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.319741533 seconds)
  done (took 30.331811738 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.321036392 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.323097374 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.323726818 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.325516505 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.321626064 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.322810675 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.324699869 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.321834388 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322730682 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322336974 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321208061 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325535725 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.321784409 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322361885 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321733737 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.320861041 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324403535 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.319165027 seconds)
  done (took 25.064210964 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.321565144 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.32141259 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.322180598 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.319917255 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.322923633 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.323628737 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.323219461 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.323234553 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.322940122 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.319692834 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.325369417 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324294738 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.326495514 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321614788 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326611547 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.323722508 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.326979711 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320497945 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.325479409 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322991149 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.322889907 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326478033 seconds)
  done (took 30.372106773 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.327571134 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.326653325 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.324591328 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.323402779 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.321241635 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.330241983 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.325304969 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.321640144 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.326057809 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.326351185 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.323232245 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.327935179 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.320018376 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.323412809 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.323665894 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325730575 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.327457018 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.323313177 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.328022177 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.32345711 seconds)
  done (took 27.760256857 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.323741581 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.32628319 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.329498692 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.328748267 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.329672625 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.329148379 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327311603 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.327620713 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.329300426 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.327801734 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.329395722 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.329299959 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325791873 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.327849941 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329870231 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327148545 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.328704968 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.331643698 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.327573982 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.328261371 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.331541298 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.329169242 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.32995589 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.327888985 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.328505813 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328471522 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.329573628 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.327461762 seconds)
  done (took 38.458023337 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.327424696 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.327784523 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.328825473 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.324362856 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.328380262 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.325317175 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.327096967 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.326531552 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.331756824 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.326397263 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.329719564 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.331310794 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.327708544 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.331945396 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.330285808 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.329598499 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330960842 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.324362623 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327617221 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327845369 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.331690405 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329675862 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.331969607 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.327783581 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329034056 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.329266494 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.329512635 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.330449122 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327855546 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.329114845 seconds)
  done (took 41.123620136 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.345323558 seconds)
    (2/2) benchmarking "in"...
    done (took 1.351548518 seconds)
  done (took 3.961655293 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.328695664 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.330281945 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.330891037 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.326253685 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.329481015 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.328484149 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.329735432 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.327378475 seconds)
  done (took 11.89279674 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.329300682 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.330963839 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.328556878 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.32824313 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.331871822 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.332158546 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.341282649 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.350891548 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.333873563 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.332253417 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.340185467 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.340768228 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.332572326 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.332405231 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.331558116 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.330858186 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.330858311 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.334899342 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.332825211 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.329486815 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.331776173 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.336520575 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.336529706 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.332498266 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.332623176 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.342012896 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.335310521 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.330827384 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.332888013 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.337941721 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.33456694 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.326980555 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.331432933 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.335416607 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.337207936 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.335765321 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.339859193 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.35303019 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.343140546 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.334043585 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.335980922 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.329963126 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.336442064 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.337714422 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.337443996 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.337591499 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.335723986 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.330063037 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.334517776 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.336140847 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.339570329 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.332943781 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.332394189 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.336054517 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.334337662 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.34068619 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.352453256 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.337735343 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.342581241 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.34509875 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.347918987 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.345304772 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.339809175 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.336730316 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.346365337 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.361000315 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.343412176 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.352328492 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.332602346 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.334743822 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.342435267 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.345413133 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.348027708 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.336793704 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.336143781 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.334814165 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.335334252 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.33594789 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.34302053 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.354323919 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.33577182 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.33420297 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.347001547 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.360860529 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.338295243 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.336311845 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.334270407 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.337361406 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.339026649 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.343146295 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.356679104 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.333078463 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.33525706 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.336083827 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.333758987 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.335074887 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.332809865 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.335557435 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.332755248 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.338957483 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.335757042 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.337016982 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.343916293 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.336776896 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.337832938 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.344088224 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.334944689 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.336698614 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.342475797 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.335917839 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.338638781 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.339125447 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.345786967 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.336717366 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.342057992 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.344636976 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.336678617 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.341509123 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.335744499 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.335656729 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.347539157 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.363334895 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.334899348 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.335439276 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.344393208 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.348585964 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.339054448 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.336978177 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.337906276 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.334528521 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.336505144 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.341925783 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.339310211 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.340418443 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.339408014 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341330377 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.334572131 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.341227068 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.33888448 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.339634475 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.342706188 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.3387739 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.342368503 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.341045003 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.338772693 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.337045617 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.347973888 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.338426592 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.340820403 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.342018892 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.33711222 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.339426265 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.344315606 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.339024107 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.337885931 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.34238718 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.338833907 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.339032282 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.340070772 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.341204861 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.341858822 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.343646191 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.343315862 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.340112186 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.344666881 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.341715342 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.336292544 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.339304691 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.339932233 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.340632308 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.340743525 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.339681815 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.343575019 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.347565807 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.339925137 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.337079389 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.34257149 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.343935478 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.341739348 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.340669562 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.344153607 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.349842504 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.33991177 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.346387845 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.341839588 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.341971791 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.343302686 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.341326845 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.339370493 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.340956023 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.344718093 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.348927688 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.354795019 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.352405682 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.344517426 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.347845555 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.343174256 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.347218885 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.347696419 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.341198956 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.344565528 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.33997148 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.341402548 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.341278546 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.343118922 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.346034204 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.343526919 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.344812369 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.341370506 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.342114055 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.344206393 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.342332392 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.342620334 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.338083416 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343725595 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.342842405 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.344253672 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.338192194 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.34151267 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.343728845 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.340731369 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.341960369 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.34709389 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.340501372 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.342860785 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.346014842 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.344731824 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.341334202 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.34510762 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.344599484 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.342593418 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.34887605 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.361509811 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.345875077 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350099285 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.363048522 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.344573155 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.349782291 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.344459659 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.341884063 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.345710934 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.351088997 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.34520313 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.343607212 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.345280554 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.342201706 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.347195837 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.348100623 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.341803145 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.340418689 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.344731995 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.345063447 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.343047226 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.344522151 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.345012563 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.34527173 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.346568624 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.344097066 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.346564826 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.348820486 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.34754793 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.347979549 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.346599974 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.35184895 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.353934065 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.35169354 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.345180964 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.349286527 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.345727055 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.349045212 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.346943523 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.345210749 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.342664522 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.357490027 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.359005715 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.35255689 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.347728007 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.345496317 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.350254698 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.34752624 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.347924333 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.346247723 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.344488751 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.34863195 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.348046086 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.341009619 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.346856092 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.347313553 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.347357682 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.34834939 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.352119233 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.347901537 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.349482136 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.349697329 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.348137159 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.345541684 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.346413327 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.347860591 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.348882445 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.348646431 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.346799599 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.34950407 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.353879145 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.368566837 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.347578221 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.34837865 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.348601382 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.346714609 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.350039612 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.348398223 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.352363654 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.357226183 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.352635651 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.359026906 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.353058342 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.358101864 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.349883768 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.355235869 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.358334337 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.346425427 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.346398635 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.348755969 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.348214858 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.357102536 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.36854647 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.350009758 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.356928315 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.348907752 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.351511754 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.347767992 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.350596508 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.350402595 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.352223587 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.353629765 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.368515812 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.352168465 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.348836849 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.34729153 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.348354919 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.349737443 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.350899267 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.35464429 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.350841505 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.353267952 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.350622824 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.350554462 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.349479286 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.353296644 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.351870029 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.349998838 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.351380885 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.357863864 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.368475543 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356333928 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.352738274 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.361387292 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.353471282 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.359885671 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.374909585 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.354069372 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.35071053 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.348627918 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.353662234 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.349806661 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.352053336 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.350588057 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.352485744 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.357944647 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.351641832 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.355645704 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.354806436 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.352011405 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.351883553 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.363907071 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.375677371 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.353723009 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357556066 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.351636618 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.35507956 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.358271851 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.352246952 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.351478395 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.354859007 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.365168658 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.359367461 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.353991797 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.355964579 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.353013497 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.3528191 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.350072177 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.349843424 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.351645647 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.351456482 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.355676903 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.353007206 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.35590776 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.353433024 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.352470798 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.352961928 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.354830192 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.361164822 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.353048254 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.351535329 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.351171248 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.354253064 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.351985888 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.353485789 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.354604775 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.353507966 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.350202893 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.356501308 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.36229854 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.360514247 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.354934976 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.355211718 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.358247766 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.353546097 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.352200032 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.354273459 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.356426572 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356410484 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.353323515 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.356307907 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.355430908 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.350712481 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.352474298 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.353696516 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.354534332 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.35887155 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.359990541 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.355028412 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.354853503 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.354664078 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.355530009 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.353819927 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.354086401 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.359702461 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.357374827 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.365867212 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.362816358 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.357902168 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.355646214 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360612733 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.361499173 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.355476665 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.354483328 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.356713757 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.359102862 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.357982577 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.358545524 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.354168059 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.360194444 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.356309968 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.354272474 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.361731186 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.374157853 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.356824341 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.356752819 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.35663842 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.355883187 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.353869937 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.355337167 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.356781006 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.363479328 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.372937223 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.353033672 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.352184531 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.35248252 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.355443231 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.359134307 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.353891889 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.353819456 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.352570067 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.356069623 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.355900526 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.356687521 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.352877117 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.354822422 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.357636926 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.361510318 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.36047892 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.352113059 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.356247254 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.354589044 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.357679513 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.359207824 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.356899471 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.352961294 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.355504275 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.357404406 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.354956211 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.355883314 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.359358351 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.357284623 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.358579754 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.360369836 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.354834476 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.359500935 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.368213939 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.363678521 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.353232714 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.356212758 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.356903753 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.361658339 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.360647883 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.358726415 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.359459599 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.361097782 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.358617184 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.359691285 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.359735061 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.363550205 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374541559 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.377292771 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.35938822 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.35729829 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.362203917 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.360750058 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.357210138 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.359601225 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.359594218 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.364677041 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.367447523 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.357785675 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.365547243 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.377563254 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.361196284 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.365445504 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.360530291 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.369310751 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.360083315 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35880852 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.360393585 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.363465193 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.376178565 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.357717847 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.372106837 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.387151059 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.376336708 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.360203158 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.360629903 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.356434861 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.360638385 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.362007951 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.362807544 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.357791104 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359645006 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.361014659 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.360062871 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363059718 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.36098799 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.360679086 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.360488938 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.359424539 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.36141961 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.359706639 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.361500129 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.362047638 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.35937256 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.362514983 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.364282381 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.358026408 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.37379299 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.372684351 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.363076389 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.363946387 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.358378005 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.364676708 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.366418772 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.375650318 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.368458029 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.360327801 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.35989492 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.362926948 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.362781284 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.360807596 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.361728978 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.361942105 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.362065456 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.360165211 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.375361656 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.370612661 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.365698781 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.359769878 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.360455088 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.362175746 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.361244925 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.363476361 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.361655031 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.361461461 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.36226095 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.368659155 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.363494463 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.362669205 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.367439434 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.371280174 seconds)
  done (took 805.744331198 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.358299676 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.362503489 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.361472799 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.358967208 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.358118306 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.359238682 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.360030349 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.361918606 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.361672787 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.361373936 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.362094916 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.362730466 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.358593535 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.360216997 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.359686033 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.362307946 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.360642984 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.359581499 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.36220244 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.359487513 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.36051758 seconds)
  done (took 29.866304049 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.36359247 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.361307025 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.359676495 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.36685901 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359752489 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.366583521 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.360145163 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363054514 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.364320845 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.361174087 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.364251244 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36427705 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.36336664 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.362074529 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.36181349 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.366848088 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.363600908 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.361189286 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.363463664 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.364907534 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.367237763 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.363386196 seconds)
  done (took 31.289158795 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.365921696 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.364828149 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.365456883 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.361416124 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.367792853 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.360493884 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.365345564 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.365571362 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.368558013 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.364228158 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.366157027 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.368906124 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.376586134 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.370163435 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.367531506 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.365891423 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.511318113 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.367247048 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.365674637 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.364039606 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.364190929 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.372827722 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.362820689 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.365994672 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.367530975 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.366018702 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.365265162 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.365945677 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.368341489 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.369001952 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.371278768 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.370187945 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.368165866 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.370225732 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.366174243 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.36544792 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.371328466 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.367745449 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.363693518 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.367598257 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.377684698 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.390376925 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.369385959 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.373686478 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.370374475 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.368140745 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.373583802 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.375972044 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.363717912 seconds)
  done (took 68.483425226 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.366730857 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.367468188 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.365805249 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.36671136 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.368013653 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.370410167 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.369687211 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.36720853 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.36425788 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.365981841 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.369721167 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.368344502 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.364325502 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.367810093 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.368538192 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.366824384 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.366377112 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.368832197 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.365088639 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.366356181 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.370135191 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.370430618 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.369162695 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.368747763 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.372373155 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.364015313 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.365005644 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.365744542 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.365052879 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.364297682 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.369419673 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.371410955 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.370808113 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.366242334 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.364138987 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.371419972 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.37068943 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.367460457 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.368509989 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.366390845 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.366876708 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.369223614 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.368998058 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.370039298 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.365678126 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.36656936 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.370224427 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.370647297 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.366373998 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.370278692 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.37288201 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.366169261 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.368417976 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.368264744 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.375335181 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.374053246 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.367892136 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.372092372 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.372775267 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.369344892 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.367292336 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.372515619 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.372271957 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.375279373 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.372060332 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.371406117 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.370342717 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.371637415 seconds)
  done (took 94.373537877 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.375472986 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.373499279 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375956521 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.373014281 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.372867878 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.370401087 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.375218137 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.372109387 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.374908152 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.368642574 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.375616234 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.370496719 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.374441634 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.372749132 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.374937839 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.37095787 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.370636206 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.373849966 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.373865963 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.370703001 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.37120797 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.372627884 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.37087515 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.370830211 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.374714124 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.372072744 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.368791512 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.368162557 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.370431709 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.371875542 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.372587959 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.373555541 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.371993014 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.373447879 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.372340805 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.369147424 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.372555195 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372060629 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.370442372 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.372058237 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.372593558 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.374621226 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.372453 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.374820496 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.373329348 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.373029797 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.371501125 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.374190115 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.376691638 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.37326052 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.373774695 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.377013963 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.374245453 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.375191045 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.373167874 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.374966386 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.373697574 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.371443675 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.373366982 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.372880298 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.372993218 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.372977796 seconds)
  done (took 86.420975729 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.373529036 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.37418858 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.373177244 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.370570972 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.375444736 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.372427175 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.377204376 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.376195953 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.377640518 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.37856014 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37491808 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.371715342 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372596197 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.373736254 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.371430568 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372422341 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.372415115 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.370328017 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.373250143 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.37296177 seconds)
  done (took 28.78599325 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.372910896 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.373979717 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.374127698 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.374201989 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.375488077 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.372584946 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.374724219 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.373828539 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372288094 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37651437 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.378952711 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.374606981 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.371453106 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.372916535 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.378256335 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.375836391 seconds)
  done (took 23.304480144 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.37531014 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.379138656 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.377331664 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.375539355 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.371186343 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.371811783 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.378210512 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.375730356 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.373197449 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.378614159 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.375851161 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.380597272 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.377655521 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.379873569 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.374255344 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.37626002 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.37363553 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.372601011 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.37568973 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.378731994 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.374550301 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.373336889 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.379039173 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.37646925 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.373113528 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.375806548 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.374880881 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.376283968 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.376083644 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.375840199 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.372829512 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.373124482 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.376800593 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.375510265 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.37635153 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.374640807 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.377561907 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.379669099 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.380238254 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.378472389 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.375716755 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.375396131 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.373708795 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.378966352 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.375880454 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.379065752 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.375245946 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.37726805 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.372867398 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.378056029 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.375796949 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.378150671 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.379478304 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.378100602 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.378743443 seconds)
  done (took 77.009193874 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.378118039 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.379174252 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.373292396 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.379211393 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.381132158 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.37917416 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.381198596 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.375514903 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.379812921 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.379735555 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.3788252 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.376188946 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.375854676 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.380552193 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.377065693 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.382685742 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.377408664 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.381124874 seconds)
  done (took 26.125595099 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.379970702 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.379345942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.380590747 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.381389689 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.378021101 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.381526365 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.379672663 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.382146656 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379617622 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.379043964 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.377495973 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.382179677 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378673913 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.382945494 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.380420254 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.375825981 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.383170525 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.381530194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.377254851 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.37771662 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.383243267 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.381043677 seconds)
  done (took 31.678388846 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.379489331 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.378769092 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.398019098 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.426218231 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.412371715 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.377905597 seconds)
  done (took 9.685681435 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379686509 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382493173 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.379551061 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384144401 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383195917 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381940715 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381342359 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380701692 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383518031 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379624187 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380552287 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380805437 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381531724 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379388767 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382133969 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380523733 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378009699 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378930198 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379213676 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383689578 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380418646 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382161533 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380428863 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379200614 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379390161 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378441168 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383386568 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380659107 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379062704 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38439079 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381472175 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382159357 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380962111 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379769229 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383488032 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383445051 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381123965 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38208621 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380341792 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379667061 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.381543074 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383647629 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383606365 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380146428 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380819771 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381799701 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381046054 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379040637 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381131448 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381988322 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381109987 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380434902 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383887657 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37976136 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385402779 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383731388 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382417997 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382772139 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384198173 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381745849 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381747135 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384209391 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379618478 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380720838 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383841102 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381125941 seconds)
  done (took 92.491118576 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381861904 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.381140407 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37983185 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383509774 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381508104 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382328661 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380239607 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382535538 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384505214 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382914274 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384741868 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381533602 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3826987 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383008066 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385179299 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384568367 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382323748 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381325238 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383198623 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385027745 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380194626 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381358695 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381895449 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380524686 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383042742 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383633884 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380848807 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383768369 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380598786 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381780392 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382891157 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383222307 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384390593 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.38500363 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382620146 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38604393 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381869844 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383911283 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383115029 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389299652 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385147988 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38645725 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381448586 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383111153 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383888183 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38590891 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388011074 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381699782 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381714712 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385235682 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385963031 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3829971 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383553788 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385527402 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38549442 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383957706 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385675878 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38585687 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382835361 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386607799 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384098151 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385263376 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388341864 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383090016 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383039588 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385470325 seconds)
  done (took 92.631522085 seconds)
done (took 1878.636031692 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.445234951 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.385576784 seconds)
  done (took 14.149909818 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.547400498 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.501127499 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.388186001 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.423104425 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.385710708 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.396755298 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.405707606 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.384269065 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.385764785 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.387356568 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.384645921 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.577018591 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.39492261 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.384479399 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.386816102 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.480902272 seconds)
  done (took 44.142234238 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.415435908 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.395363273 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.523784359 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.408005281 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.413427139 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.59848994 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.452394236 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.392260708 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.593037733 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.432807747 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.120619509 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.41480515 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.390381321 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.613029139 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.408959925 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.606098205 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.664919839 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.119591913 seconds)
  done (took 32.283417612 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.918430912 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.404949109 seconds)
  done (took 9.64455816 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.440273911 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.387077922 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.41984828 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.423578964 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.407361101 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.435354539 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.418165369 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.405838825 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.389840453 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.444903771 seconds)
  done (took 65.50398538 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.415133284 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.392101799 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.38836105 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.385606372 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.385551842 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.380264153 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.388088554 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.386264372 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.596656665 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.536982444 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.406484453 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.398219795 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.390146929 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.39264466 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.389850019 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.430630238 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.528104127 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.389245204 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.390719524 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.396423843 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.393693965 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.500094507 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.439426676 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.391405923 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.542037708 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.598601335 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.399795038 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.401031202 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.51632059 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.390258618 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.393436138 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.391170859 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.392022876 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.995878944 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.923377404 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.402138744 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.417543753 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.399723722 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.389618297 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.509526237 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.397662846 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.400330449 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.388433441 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.881854658 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.563376178 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.527933552 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.784980266 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.394856782 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.394386691 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.461628205 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.395833909 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.395288574 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.424092307 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.183325022 seconds)
  done (took 116.074622678 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.400481573 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.875030208 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.55894574 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.417394067 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.304900153 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.128833067 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.391529976 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.728059088 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.439771454 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.386451376 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.684634896 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.956316453 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.393860064 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.419689755 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.866210466 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.413368374 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.383102626 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.354718084 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.389276065 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.391644 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830564932 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.406440842 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.384674675 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.427124574 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.42945931 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.892648817 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.04896002 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.833420441 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.391632538 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.386370422 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894140348 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.38751365 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.408036319 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.391229361 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.68279534 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.784290628 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.75728811 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.386665802 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.414257817 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.39049176 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.405332329 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.883999859 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.766598455 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.384414241 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.385699823 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.888842748 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.386832704 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.388626512 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.391756647 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.60201951 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.182206681 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.38699932 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.049850332 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.388945902 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.750693193 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.459735369 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.398374847 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.917542085 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.388866667 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.525952083 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.433723653 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.392725407 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.393441787 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.388528922 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.386098824 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.771685229 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.74775251 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.387242968 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.774466016 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.891375474 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.388125386 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.955292667 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.301131569 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.400550406 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.429709374 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.391203118 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.135086398 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.921764206 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.394032964 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.388556176 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.759071598 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.393518039 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.685601858 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.40620906 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.388946401 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843149357 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.414650741 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.42461137 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.399259156 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.393324986 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.180259096 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.388780356 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.677137488 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.457495678 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.38681423 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.38856288 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.419254109 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.388638845 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.389456195 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.394204566 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956370865 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.391632591 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.564367724 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.411233354 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.388601038 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.391297821 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.39447757 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.391076806 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.6271409 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.984573763 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.396393305 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.391157005 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.392518769 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.392234428 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.701299897 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.390847535 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.73351269 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.391668129 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.39213732 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.390470872 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.182427886 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.42044989 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.391378723 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.390209 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.268842149 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.600654049 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.414759748 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.392656164 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.391686117 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.407549604 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.919737852 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.391945504 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.444295715 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.391412628 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137810142 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.400104491 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.41451511 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.827913481 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.396559712 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.392335849 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.391357092 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.395038191 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.712111245 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.692693288 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.667182707 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.394868946 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.413732816 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.119290248 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.401124068 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544739256 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.415529643 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.394323555 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5947312 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.677675922 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.395265155 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.952451076 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.391341159 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.61919462 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.401430881 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.731392865 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.926439654 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.392413032 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.401359306 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.141085363 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.063695215 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.194651691 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.392279969 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.688399983 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.38035755 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.852001449 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.394364951 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.391994363 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.977037106 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.39199692 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.400010623 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.392164881 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.391464277 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.455408957 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.573989977 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.724470931 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.394831878 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.893872596 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.432741019 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.393969218 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.400696469 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.395462411 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.749167338 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.408957192 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.398383896 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.441835303 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.395507882 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.399386131 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.905277346 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.342743298 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.393954331 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.552922977 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07481461 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.393207032 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.39501916 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.112654625 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.650688846 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.985426536 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.398747367 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.74372262 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.402164301 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.439994277 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.230579504 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.395145199 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.907691691 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.396579155 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.394048186 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.040875116 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.395062019 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.584768617 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.395419353 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.397054335 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.989231024 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.393460782 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.397587104 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.931023937 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.394749599 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.658713765 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.397789979 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.419553225 seconds)
  done (took 1127.831593731 seconds)
done (took 1410.948963378 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.394181399 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.397124324 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.389099918 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.402987686 seconds)
  done (took 26.919155102 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.406976476 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.403223173 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.404845023 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.402448067 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.406146624 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.402283278 seconds)
  done (took 9.763142919 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.731301901 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.396914027 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.400389593 seconds)
  done (took 19.865086058 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.658290434 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.813216004 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.840325069 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.863760549 seconds)
  done (took 11.517931737 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.405075027 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.404791247 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.403572436 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.40571382 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.407508134 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.408969251 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.40706677 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.406015614 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.407261382 seconds)
  done (took 13.994115835 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.73915422 seconds)
done (took 89.133698663 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.456207451 seconds)
    (2/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.75069825 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.394401476 seconds)
    (4/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.438417406 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.634639832 seconds)
    (6/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.597481845 seconds)
    (7/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.45770515 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.410449386 seconds)
    (9/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.38560911 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.676277768 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.511898189 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.404936783 seconds)
    (13/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.47790504 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.438008861 seconds)
    (15/309) benchmarking ("sort", Float64, false)...
    done (took 5.779915324 seconds)
    (16/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.423757392 seconds)
    (17/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.404128462 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.499018185 seconds)
    (19/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.486501893 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.497825443 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.529480613 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.089413473 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.361027786 seconds)
    (24/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.16393797 seconds)
    (25/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.833406243 seconds)
    (26/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.406332003 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.360880192 seconds)
    (28/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.972981119 seconds)
    (29/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.400226444 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.408811902 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.549062373 seconds)
    (32/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.464050142 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.409232026 seconds)
    (34/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.091692492 seconds)
    (35/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.426531206 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.505655785 seconds)
    (37/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.49957148 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.426168127 seconds)
    (39/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.574487924 seconds)
    (40/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.844109006 seconds)
    (41/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.533020821 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.106653163 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.604848822 seconds)
    (44/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.526794461 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.411835441 seconds)
    (46/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.557888026 seconds)
    (47/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.430356533 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.009350526 seconds)
    (49/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.526066258 seconds)
    (50/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.114786592 seconds)
    (51/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.518252133 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.515371481 seconds)
    (53/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.423005983 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.506221519 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.669883837 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.420592622 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.394188096 seconds)
    (58/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.40420595 seconds)
    (59/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.952681786 seconds)
    (60/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.404705459 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.479036672 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.424473698 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.303544993 seconds)
    (64/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.091143957 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.392805906 seconds)
    (66/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.62163485 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.407779313 seconds)
    (68/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.525012018 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.255908652 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.490995381 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.960144616 seconds)
    (72/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.452185742 seconds)
    (73/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.46569192 seconds)
    (74/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.207704315 seconds)
    (75/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.278896799 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.908946366 seconds)
    (77/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.42985727 seconds)
    (78/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.399934034 seconds)
    (79/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.206662838 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.837201418 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.493932158 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.139348231 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.860503787 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.379975464 seconds)
    (85/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.897124598 seconds)
    (86/309) benchmarking ("sort", BigInt, false)...
    done (took 6.404891159 seconds)
    (87/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.430887903 seconds)
    (88/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.780137749 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.714935267 seconds)
    (90/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.434297673 seconds)
    (91/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.433360427 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.255449297 seconds)
    (93/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.058731443 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.898364131 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.419997472 seconds)
    (96/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.708145223 seconds)
    (97/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.390849278 seconds)
    (98/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.169420403 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.039120501 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.77820635 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.382384329 seconds)
    (102/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.604489592 seconds)
    (103/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.487941438 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.690793445 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.424213404 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.858741979 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.854656806 seconds)
    (108/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.963587816 seconds)
    (109/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.084407367 seconds)
    (110/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.82944095 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.093214288 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.833783491 seconds)
    (113/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.570497042 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.481438566 seconds)
    (115/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.51168769 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.390312427 seconds)
    (117/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.385708826 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.617159163 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.156209353 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.406491388 seconds)
    (121/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.451143894 seconds)
    (122/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.00224205 seconds)
    (123/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.457937479 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.833669383 seconds)
    (125/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.881487819 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.455211255 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.492277195 seconds)
    (128/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.166614936 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 1.94026264 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.43050335 seconds)
    (131/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.709750429 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.679087051 seconds)
    (133/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.818504563 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.254591215 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.686256545 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.032011396 seconds)
    (137/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.324032957 seconds)
    (138/309) benchmarking ("sort", Int8, false)...
    done (took 4.474912925 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.136300748 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.176370817 seconds)
    (141/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.279427828 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.537078435 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.417704469 seconds)
    (144/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.859291509 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.362773059 seconds)
    (146/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.996518108 seconds)
    (147/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.333891098 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.257883527 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.432547624 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.412891588 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.859947454 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.448803209 seconds)
    (153/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.913697697 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.107357662 seconds)
    (155/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.00421206 seconds)
    (156/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.739959267 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.434532791 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.434923532 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.163621278 seconds)
    (160/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.800317136 seconds)
    (161/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.396192072 seconds)
    (162/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.123035601 seconds)
    (163/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.392895076 seconds)
    (164/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.073867969 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.845813753 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.382985769 seconds)
    (167/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.434160585 seconds)
    (168/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.560993208 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.408182661 seconds)
    (170/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.798890229 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.493461645 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.413534562 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.414772117 seconds)
    (174/309) benchmarking ("sort", Float32, false)...
    done (took 5.443918629 seconds)
    (175/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.882613793 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.394919907 seconds)
    (177/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.741713311 seconds)
    (178/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.407979082 seconds)
    (179/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.668051548 seconds)
    (180/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.824088124 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.408467531 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.537814369 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.937748711 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.408263627 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.425101331 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.435276229 seconds)
    (187/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.26649119 seconds)
    (188/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.883305236 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.437604464 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.429970037 seconds)
    (191/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.408692233 seconds)
    (192/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.639078177 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.455847381 seconds)
    (194/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.04506628 seconds)
    (195/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.610212172 seconds)
    (196/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.518029493 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.397754071 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.347200277 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.396013754 seconds)
    (200/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.430188676 seconds)
    (201/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.399045829 seconds)
    (202/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.516529694 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.414223106 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.470322857 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.440157757 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.506644588 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.423387283 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.409901255 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.706129127 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.485301484 seconds)
    (211/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.429161724 seconds)
    (212/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.534236156 seconds)
    (213/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.517911098 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.118002137 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.810742344 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.057339915 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.64370886 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.499211563 seconds)
    (219/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.475575784 seconds)
    (220/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.420767975 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.91857184 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.578453888 seconds)
    (223/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.281039918 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.518021417 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.438769906 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.240058199 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.401867271 seconds)
    (228/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.772556674 seconds)
    (229/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.321381996 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.471867112 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.42431742 seconds)
    (232/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.23240428 seconds)
    (233/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.281796633 seconds)
    (234/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.427839012 seconds)
    (235/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.90116257 seconds)
    (236/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.413941312 seconds)
    (237/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.173939408 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.411150284 seconds)
    (239/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.710372908 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.062082778 seconds)
    (241/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.430344982 seconds)
    (242/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.444688891 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.43200427 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.464188694 seconds)
    (245/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.497371726 seconds)
    (246/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.411184035 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.462006832 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.348678701 seconds)
    (249/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.764402635 seconds)
    (250/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.418780338 seconds)
    (251/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.457593745 seconds)
    (252/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.990149805 seconds)
    (253/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.411034255 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.592953518 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.92166247 seconds)
    (256/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.442142802 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.748142078 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.9852504 seconds)
    (259/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.501829034 seconds)
    (260/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.41347767 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.398963201 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.597425743 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.665368551 seconds)
    (264/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.744513827 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.847112261 seconds)
    (266/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.448141049 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.435242235 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.154861317 seconds)
    (269/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.133642584 seconds)
    (270/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.523724805 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.441613802 seconds)
    (272/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.885874892 seconds)
    (273/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.654367286 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.180672262 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.803590663 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.784942679 seconds)
    (277/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.131786629 seconds)
    (278/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.439804412 seconds)
    (279/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.019511446 seconds)
    (280/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.176340309 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.257458832 seconds)
    (282/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.501620787 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.499812351 seconds)
    (284/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.401110961 seconds)
    (285/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.742204462 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.49962618 seconds)
    (287/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.006858827 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.533959624 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.162029623 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.064613614 seconds)
    (291/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.443673185 seconds)
    (292/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.428532394 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.426630499 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.077398794 seconds)
    (295/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.160600261 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.85555039 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.406749346 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.459971967 seconds)
    (299/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.427508168 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.313798009 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.483986989 seconds)
    (302/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.969491569 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.2411868 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.429988654 seconds)
    (305/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.337672899 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.439650907 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.490219113 seconds)
    (308/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.375242604 seconds)
    (309/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.838399885 seconds)
  done (took 965.153400172 seconds)
done (took 966.492078881 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.449966293 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.44519724 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.426628057 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.447230726 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.541911357 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.459390191 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.438849473 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.431128611 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.473573017 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.476890157 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.429858133 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.454052707 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.432225374 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.428474257 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.43150468 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.442986113 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.586771724 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.428621506 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.445507757 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.439210112 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.447032061 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.427093487 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.476650622 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.455208081 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.43580464 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.433861742 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.430602967 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.451108451 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.542285926 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.432180697 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.430460382 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.438062194 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.642546029 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.428782319 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.427783244 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.4481494 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.442305353 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.441243564 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.433749388 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.462568769 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.023164052 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.429253564 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.429149233 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.434255282 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.432342008 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.439009944 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.433427682 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.440841727 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.447589721 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.448544569 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.012012595 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.445809256 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.434096596 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.432986793 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.440997318 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.430135996 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.434037182 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.44632825 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.450874737 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.447946734 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.639390933 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.437564533 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.432523196 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.449974754 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.440353585 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.051556446 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.425385633 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.436923044 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.026039411 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.435279114 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.053078502 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.438798872 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.431969456 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.44759079 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.465350061 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.64871112 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.429986244 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.431658659 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.443333019 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.434192322 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.444063801 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.444475907 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.440113557 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.437182392 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.446535711 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.463197531 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.445691946 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.43613092 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.444171296 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.451461393 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.442257497 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.444300875 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.438518413 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.429220672 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.443641235 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.438485537 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.436592195 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.435968023 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.438445479 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.44569235 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.030282708 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.448150838 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.428861935 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.432471154 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.434584604 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.447572344 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.034377402 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.434560562 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.456663404 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.480714769 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.43414206 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.568190442 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.435855608 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.451299827 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.441687233 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.441605686 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.430231041 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.565542338 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.02383404 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.449478069 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.435919705 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.433628 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.451642875 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.436536182 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.431749937 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.574300334 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.435265296 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.446146637 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.5556668 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.444510429 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.467755734 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.432764435 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.438335441 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.464371132 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.453329077 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.463855593 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.440644984 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.4512625 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.454825323 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.430809847 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.448712632 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.44507861 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.439756752 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.441828591 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.432901223 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.465984066 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.450008913 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.451671009 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.460055823 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.557402229 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.432344447 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.570283788 seconds)
done (took 242.989278194 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.494706852 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.43389713 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.52445712 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.434031902 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.541182842 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.531307499 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.432389841 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.43421015 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.432556717 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.815706436 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.433279693 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.432579694 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.434446493 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.430026835 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.519453845 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.43324154 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.432811015 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.803973878 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.434375287 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.502645907 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.426080671 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.432126045 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.438608354 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.846241358 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.431580141 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.428197687 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.504302949 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.433927995 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.779132883 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.427065404 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.431437039 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.811273794 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.521332096 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.452908505 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.443765645 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.445542649 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.539036478 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.45246718 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.5153334 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.517343001 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.526379064 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.47580786 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.425631075 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.431104095 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.434188902 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.440927832 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.434591357 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.464890199 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.432230808 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.433161803 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.777282083 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.446854971 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.434891234 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.437404721 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.433640902 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.468908672 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.433043058 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.439902256 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.524573026 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.437447102 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.49737189 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.816457455 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.856415836 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.436676381 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.435059298 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.435688509 seconds)
  done (took 155.38752623 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.499676649 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.510894478 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.558419979 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.436652898 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.487034491 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.563948992 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.435116174 seconds)
  done (took 11.858458593 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.44286555 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.441368051 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.488485222 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.486220629 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.438817701 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.588221557 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439095557 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.449441472 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.434709516 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.491656808 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.439425003 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.439075111 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.443379698 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.432373538 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.484131252 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.448491007 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.552491823 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.435330502 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.43675797 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.590313737 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.436987631 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.447756237 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.491339088 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.449020723 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.438607284 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.442252085 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.006601476 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.440641286 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.434832437 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.441916183 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.434631713 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.475716329 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.439267292 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.433644104 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.434627255 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.556042658 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.439216506 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.435237818 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.440095357 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.435816885 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.43947033 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.440325391 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.441099578 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.435525562 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.439464752 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.459453258 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.43713106 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.442071573 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.441425722 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.440507421 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.490541956 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.442530525 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.438885382 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.43839134 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.496311303 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.447165709 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.441933806 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.435401015 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.439557344 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.435316775 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.591598072 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.488955483 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.439003027 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.486938775 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.438611314 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.440213045 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.440813871 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.440094715 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.498127376 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.439614843 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.491089915 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.436461176 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.598107861 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.464739254 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.44088429 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.443288095 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.443217255 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438839187 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.433236271 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.449085809 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.437539053 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.44200279 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.447420938 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.43873173 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.437825035 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.542503567 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.550923677 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.437940149 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.456698521 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.447835748 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.439202862 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.494556314 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.443540217 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.439240067 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.493859782 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.554253487 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.494748832 seconds)
  done (took 163.595021116 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.447954926 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.44935624 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.442800897 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.454359391 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.442163874 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.440901466 seconds)
  done (took 10.051850481 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.446027316 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.445628068 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.440983905 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.442798595 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.44428248 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.44199191 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.443675894 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.444719284 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.449388576 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.444058136 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.44764352 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.442456892 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.441959424 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.445010594 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.441908423 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.443565257 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.445905353 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.44028983 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.447354141 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.447131681 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.536646275 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.444199021 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.444515156 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.444220354 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.451163589 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.444087539 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.451950295 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.441497185 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.447400103 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.455139823 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.447668234 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.441807801 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.445601046 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.451187884 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.449122245 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.444498064 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.449820806 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.447484351 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.44196238 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.442108296 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.445354022 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.444334777 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.444073845 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.443700922 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.44590005 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.451040595 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.451723054 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.45015657 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.445777236 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.446036066 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.444239928 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.443791564 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.445592575 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.446387515 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.444990767 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.45186551 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.451346375 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.446021119 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.445967896 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.445297121 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.44531647 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.448918816 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.446688126 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.451096989 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.453421428 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.447745055 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.444244608 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.453833419 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.449084088 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.446519963 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.447090043 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.441018529 seconds)
  done (took 106.594582622 seconds)
done (took 448.851932966 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.51209817 seconds)
  done (took 7.890807281 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.699630711 seconds)
  done (took 8.077133974 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.544655616 seconds)
  done (took 23.929426357 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.44538228 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.440303843 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.442033833 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.448477902 seconds)
  done (took 27.15629577 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.64060914 seconds)
  done (took 8.020954263 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.43840691 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.439759166 seconds)
  done (took 14.257933364 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.722411501 seconds)
  done (took 8.100441591 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.816611924 seconds)
  done (took 8.075656827 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.318233657 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.345621423 seconds)
  done (took 14.159935545 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.313750448 seconds)
  done (took 7.562849751 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.403918513 seconds)
  done (took 8.656386557 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.316459573 seconds)
  done (took 7.569377846 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.326853674 seconds)
  done (took 7.578967931 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.91584083 seconds)
  done (took 10.167015627 seconds)
done (took 162.580038127 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.305386809 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.309143294 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.308068078 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.30758374 seconds)
  done (took 26.480979592 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.349239858 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.349310141 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.348358903 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.352780862 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.352997817 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.350033962 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.34351291 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.341975607 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.355134189 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.352174471 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.349534248 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.352810738 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.350310438 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.342172831 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.351070511 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.349698885 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.354498826 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.349828615 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.341084966 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.352917226 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.316882005 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.353624517 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.353098338 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.316634979 seconds)
  done (took 33.582404209 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.498495935 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.383675751 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.470553977 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.369624112 seconds)
  done (took 6.972457079 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.369113013 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.369183151 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.371120993 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.421890382 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.446459214 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.37009691 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.340284894 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.337619601 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.326417445 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.372163244 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.445850474 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.387171888 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.45193586 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.318290043 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.497519385 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.319841303 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.316825528 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.370906383 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.42156745 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.434004542 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.319974954 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.370171089 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.368878469 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.38780446 seconds)
  done (took 34.388822721 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.316807859 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.326433645 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.323850537 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.319179002 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.318293589 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.316672595 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.326252607 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.317823269 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.339661665 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.319846216 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.319340862 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.317823741 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.31783977 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.315773037 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.316850865 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.33043164 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.333195636 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.318513679 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.319420386 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.32518774 seconds)
  done (took 27.69515699 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.314409497 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.166477237 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.662385421 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.569160102 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.313293931 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.312668848 seconds)
  done (took 27.590579504 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.396941531 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.537394087 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.3177863 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.724412425 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.799797883 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.317846516 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.318611407 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.578946817 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.931893573 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.952186576 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.381981392 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.394772481 seconds)
  done (took 19.908249039 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.315297032 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.314580882 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.326304386 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.333944127 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.385310289 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.327499843 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.331993151 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.317104746 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.3901055 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.388840366 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.327915968 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.388881207 seconds)
  done (took 37.405902246 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408127303 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261678763 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.260467493 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.085622321 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.657800942 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529989664 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.051954944 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.797331605 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.323916055 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593637253 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321455094 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411686269 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.575298148 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322535704 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320079874 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.363249657 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544755733 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857015009 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318633985 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.664542344 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344906884 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.318141622 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.935593717 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.352921178 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529875557 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.421432146 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.580319728 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320497274 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640125779 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.3318532 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329357473 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321137303 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594890934 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003656426 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410935184 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329544278 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.137367209 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.027033435 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.31742791 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.76797793 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327663556 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32419909 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330844026 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318174819 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.255696268 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324396146 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808033033 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.325698355 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.032401486 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.323115518 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332308999 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415487184 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.323924279 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.095276899 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28700787 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323000663 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.319941827 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328077266 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890358218 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.154202508 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324623922 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.258114014 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.751844713 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.777602072 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016191007 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.423590253 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.324565918 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.324844896 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257639722 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.752307524 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339169155 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392823136 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.343741491 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.935838519 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066459529 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.329626996 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.251431486 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919230093 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3197658 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.258399057 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546281642 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322960637 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258591099 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.259897523 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.257187343 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074514603 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329657899 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.713644165 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.328260275 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.800617366 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.334537292 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340435866 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34770557 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.546621989 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.20686682 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324305444 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.324032262 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391657471 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346224212 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.805834731 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257789691 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.328188275 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57717416 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.535016141 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326257476 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.375594875 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537430873 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340603909 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.338446256 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.337356958 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.33473614 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.974112392 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335944377 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15925871 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341015952 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.325753239 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116526485 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333683228 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.425974042 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.338021371 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593352179 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.132246453 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323937775 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40656386 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328820623 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.326552853 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.796482956 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.837803268 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.324819672 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.32594887 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338838486 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.335242521 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.326428152 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262865582 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.33044284 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329604258 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.328002081 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.548766064 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329140145 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602590656 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260146081 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39626743 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.353912526 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.548463506 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.669608256 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.325454321 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581291401 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338154447 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.336673276 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337538933 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345084592 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425199921 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349540505 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.337130759 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.579072184 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.330304861 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.32993333 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.791699606 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.328688386 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784250034 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.332148204 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.080518122 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966083955 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289150888 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337002968 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163937808 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.341076658 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393481482 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.332950464 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.337292392 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.38684733 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.226147388 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.331455068 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.325941616 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565606723 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339190848 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.676928801 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406613254 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.536767931 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.967886629 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340037604 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.262084239 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.038744529 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.019331175 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328813941 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263747435 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327465889 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33609035 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341043911 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.919895652 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.980783578 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329325154 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.677618421 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.33617912 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.340171505 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.334802675 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329228451 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.357550676 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.171311057 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346235935 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.339741538 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471768165 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.340958371 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.264269827 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.331156055 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335228763 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327057202 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.330096607 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362726723 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.703144347 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845227685 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58462316 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.107824259 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339980955 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.888361494 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.365687061 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.335210677 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328703111 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33177508 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.361701918 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337906549 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.340238674 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.767833159 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.872800388 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898367885 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120748378 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926969469 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33953726 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.343113259 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.329788731 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.820211971 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264330149 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.858069433 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545188978 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.815395298 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266225604 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542054198 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.596787269 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183536511 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340546044 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555898627 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330371978 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.330604713 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365506411 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.544436996 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365513716 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.349378472 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.2600494 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.854552782 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57063134 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337055985 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413025841 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817563465 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329891238 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.33400948 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.330597128 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.710059119 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52968129 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.035467662 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.494462532 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345385241 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337749151 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842620108 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.333271102 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.551407432 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029309439 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337700607 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.54154307 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267143118 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.345221705 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.343522368 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.333110369 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.863942328 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.332784753 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.583483805 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342650642 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269048663 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.340011712 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972071465 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.222891035 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.338120782 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331832901 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118538915 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334036637 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650715005 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.336924393 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.337213179 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339913903 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.274556367 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26974125 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.028442348 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341915176 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294206824 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867012322 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.688826055 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.292339833 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369393652 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161326065 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.586965498 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.347551865 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.975984006 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557997821 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.208538981 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356137127 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.435418432 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347558551 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.32275476 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334347653 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568569764 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.085945324 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558653803 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.288615476 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.236641011 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.3337336 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.545383987 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33374332 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.33528905 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601137661 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.043456591 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.350579555 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104537681 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359145793 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.351184779 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.170364153 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.768816675 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341821591 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413136303 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34604876 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.345978243 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.348342251 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533700429 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335558196 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337189195 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.348430623 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430235332 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.210292084 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.347890049 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.339743229 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983595038 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107299218 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.988007019 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348892562 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335628389 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344278187 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273293125 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484270284 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.55423392 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609069877 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406671875 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.812669835 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357525108 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346377243 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338660367 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546009447 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611757354 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.222858584 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343497486 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.325681821 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.336567405 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348221295 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.548243476 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876736984 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94001105 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343918375 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336044249 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.817623749 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61159896 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337629584 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337648055 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.889977751 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.359808425 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.748508701 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.340378306 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353106732 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486826363 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.346909584 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025107178 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.346646594 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.494399902 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.111297649 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.733400263 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.587719799 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.940695984 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.349322686 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986684622 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139289638 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599648069 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403193566 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347938817 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.431970711 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484361219 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.349065393 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.337541658 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337035371 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165469694 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.047792527 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.347467088 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002241874 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597028624 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.337445603 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.334001413 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378219527 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.348255244 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.562550563 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112386537 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55962544 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34655992 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346318863 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.117954617 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996769271 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350961741 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271954622 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.341752417 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603047517 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.573686685 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358418384 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.791484505 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.049607065 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942220294 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.241530232 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359536737 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337394289 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163842614 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991903638 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.361431153 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879673885 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.867317331 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349945643 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612063186 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.344434898 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356034585 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615307959 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.340800151 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.339664562 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350865464 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.98752129 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200024231 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.344748982 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.734027411 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.27491507 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634884107 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.905881664 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275256056 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346488564 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.54530931 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.340704012 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409482641 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350228419 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.339871173 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340975234 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.097453586 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634070048 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.345542758 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.348590526 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.340239432 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.346199354 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346256882 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585760406 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338725339 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.009535319 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.692982354 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.593927321 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.345909451 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.326585381 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.345536637 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341473456 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.286405727 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.504513243 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.940071498 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94575421 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.345514586 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.350599197 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345847787 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.558156087 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554981834 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.350795038 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.353665505 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355822661 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357808997 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.244190277 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.698066504 seconds)
  done (took 1604.391455605 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.369398372 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.380896381 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.356504728 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.405491873 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.351588019 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.43567245 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.351294805 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.412070301 seconds)
  done (took 52.348314751 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.35019429 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.567882099 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.374334031 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.344008233 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.349215612 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.355917512 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.832681603 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.349023351 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.351257737 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.35151445 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.360389176 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.350485283 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.039513072 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.350686499 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.344247303 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.341866432 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.349937864 seconds)
  done (took 65.654504641 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.341499936 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.925701508 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.367367685 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.345357685 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.801608882 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.350746503 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.757608677 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.37678577 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.341523737 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.365569803 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.999002373 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.391606187 seconds)
  done (took 80.654632572 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.351791249 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.350530712 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.349184737 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.350332895 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.350904942 seconds)
  done (took 8.04017332 seconds)
done (took 2026.367428956 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.799780078 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.157340207 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.082080607 seconds)
  done (took 5.531136208 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.491774429 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.553440638 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.678191001 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.738447245 seconds)
  done (took 7.749307532 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.618159149 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.735533978 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.530868783 seconds)
  done (took 6.171090442 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.003608992 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.350434111 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.491771601 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.342476139 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.345281525 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.347343425 seconds)
  done (took 20.32259408 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.349024692 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.354210908 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.349595891 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.350955611 seconds)
  done (took 6.693388611 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.32954979 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.121939584 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.332844905 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.350297454 seconds)
  done (took 18.423594901 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.095101788 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.107380897 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.094568286 seconds)
  done (took 7.584400838 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.355865527 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.187901204 seconds)
  done (took 9.830099627 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.661797137 seconds)
  done (took 2.950789539 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.482302649 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.619971993 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.609444832 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.403233815 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.630959873 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.745568755 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.23858559 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.749274082 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.384647742 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.850819211 seconds)
  done (took 30.003875415 seconds)
done (took 129.192121269 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.565135723 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.838411549 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.430448991 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.505928229 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.406709875 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.41385621 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.886591037 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.460229321 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.069458896 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.069618788 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.507010233 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.40755585 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.604448459 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.840745858 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.602078702 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.840719886 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.416396843 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.586590782 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.031481741 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.119162799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.889118173 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.196181674 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.335003339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.215703937 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.41762307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.36664524 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.684091124 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.840889251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.2124594 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.68994421 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.370067108 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.297426788 seconds)
  done (took 196.403939145 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.346530855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.360850244 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.346816515 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.361874317 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.347101087 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.349112326 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.345481217 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.346802612 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.346400216 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.359408353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.346048053 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.348351992 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.36880582 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.35444405 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.351141402 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.348180292 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.360085185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.355072581 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.347782985 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.348181854 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.362657492 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.354675746 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.34756308 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.348809012 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.370819224 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.345844379 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.351549512 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.365164078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.357757376 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.346571493 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.351187821 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.349949111 seconds)
  done (took 204.58169535 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.346031135 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.384703734 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.34678597 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.349202839 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.349141391 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.347450757 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.353498721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.359743441 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.359810318 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.357554377 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.366900488 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.348428541 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.352806794 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.345645362 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.363974367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.349667591 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.35527399 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.34896025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.352130956 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.347956277 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.349592348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.368499795 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.363421306 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.357475271 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.349843033 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.353823126 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.36649828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.366115951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.349480763 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.346753333 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.350324135 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.366035169 seconds)
  done (took 204.662184405 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.542070408 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.357813232 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.357095455 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.229055963 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.358433013 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.356652676 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.26020197 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.548362245 seconds)
  done (took 14.29707932 seconds)
done (took 621.232469617 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.821657751 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.631777859 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.564793306 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.376707946 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.350963597 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.378200598 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.377875654 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.564734038 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.337919076 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.57314687 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.686121007 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.376093221 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.854584198 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.374159421 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.643447306 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.480035986 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.307715317 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.461911713 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.716457134 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.09985241 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.652585179 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.92586661 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.577927799 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.358099121 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.859298167 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.913066737 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.226972061 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.30279831 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.37788913 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.710762939 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.135559978 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.41105658 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.445784398 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.425218844 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.481156413 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.463923981 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.40742042 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.424345009 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.568711668 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.669364857 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.09647639 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.163099366 seconds)
  done (took 94.871387874 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.348725641 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.348987389 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.344718691 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.352117296 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.348997341 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.347953782 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.345616566 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.34632242 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.349941842 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.348452125 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.349217821 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.348410563 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.346080138 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.349818852 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.349830826 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.348790284 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.351686054 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.351761733 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.348899364 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.34923979 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.346986658 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.347970722 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.349181873 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.346269246 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.348196765 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.350408361 seconds)
  done (took 36.36315981 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.360770903 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.610535774 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.811513273 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.367356517 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.360891614 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.366521405 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.456410507 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.362299828 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.365462065 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.364787702 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.53358313 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.366386164 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.40202634 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.814535412 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.363525895 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.361430595 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.362866598 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.361285001 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.616801652 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.37229826 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.455346137 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.363804961 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.453456449 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.373217604 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.367805291 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.363342884 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.36801276 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.877201794 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.367338832 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.536708661 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.296283317 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.451273763 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.835210746 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.81945799 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.296952563 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.365404185 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.364747716 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.532661995 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.364460447 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.362712312 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.45682013 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.367416598 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.823761409 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.030076673 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.386348595 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.363786109 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.894654127 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.52891541 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.661687575 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.372980277 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.841197987 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.366062361 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.364793892 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.367297548 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.663693465 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.373187077 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.363973042 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.921573471 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.366168099 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.449579739 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.361019617 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.364801757 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.622532985 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.364562735 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.610743199 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.362548744 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.370229539 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.363489824 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.812397707 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.364387319 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.026078212 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.380460698 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.361655377 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.527767221 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.613812151 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.927738683 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.367299706 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.631325361 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.834579484 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.455309622 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.365868077 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.868119648 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.454454789 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.365852631 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.367613324 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.364913906 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.367226991 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.424801927 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.45443288 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.95842718 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.022003733 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.939868427 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.454778887 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.377371914 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.364330342 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.927493692 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.364077408 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.365250504 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.80832499 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.028453293 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.381881719 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.373773967 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.016396 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.385742063 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.45533863 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.372794929 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.820335253 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.368490778 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.412091312 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.367684139 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.371049359 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.37141658 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.456844634 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.369687084 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.367763408 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.00668782 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.554440177 seconds)
  done (took 180.274749632 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.375623278 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.361381169 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.373894313 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.359517693 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.357470952 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.36657193 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.357591184 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.359544294 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.36590082 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.359031523 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.359194151 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.362460141 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.363138816 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.361870227 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.36763491 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.366878615 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.953895046 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.35984641 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.358372142 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.357598088 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.16767425 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.363620845 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.359624412 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.360086807 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.362637928 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.362461002 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.363480444 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.359722405 seconds)
  done (took 152.848594814 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.370266381 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.008634954 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.366166516 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.517860201 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.393072988 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.36876431 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.527931538 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.430741682 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.37082551 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.36430452 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.366931322 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.715802872 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.368557997 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.958720683 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.584338541 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.529104631 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.954635416 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.368560947 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.367404848 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.367732421 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.518618726 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.379318388 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.716387428 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.055277409 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.37208378 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.027078628 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.357847644 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.369571906 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.366386078 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.013716765 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.365307501 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.717808712 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.458520361 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.436200695 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.019375328 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.958212165 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.956355216 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.55010069 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.370009086 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.366002664 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.368857192 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.354534979 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.017097931 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.367085562 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.370887091 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.009991299 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.387152086 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.371556501 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.375687358 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.364949059 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.434890772 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.43529994 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.717607767 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.019608608 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.457580673 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.390121694 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.51627535 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.770481567 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.372373655 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.953405076 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.354073828 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.022614744 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.372196067 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.358597743 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.370584771 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.375524512 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.540875707 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.519289458 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.955345048 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.368744135 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.957389151 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.540116215 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.367769767 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.368013306 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.372434489 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.017045455 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.961685011 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.541134661 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.521053622 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.594989838 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.356764632 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.367206872 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.359910075 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.457392278 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.37072719 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.018816065 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.95820182 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.370854053 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.371923252 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.372464426 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.37070342 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.573650966 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.019912798 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.458479687 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.952233708 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.739742811 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.717724877 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.370553877 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.443630243 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.373052645 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.720183547 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.375146747 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.441644883 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.844011699 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.718703558 seconds)
  done (took 165.64046039 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.637341201 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.631691157 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.472639861 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.495136609 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.940499193 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.967883737 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.688359208 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.505456277 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.491311096 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.637753513 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.628240985 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.463365157 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.575074155 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.458171922 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.102408448 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.448172731 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.476767004 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.513335777 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.490766388 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.416534841 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.060284006 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.707445311 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.56105045 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.638820065 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.472775718 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.242881338 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.965962999 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.909226463 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.551586481 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.717438145 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.93670814 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.51460465 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.398557433 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.099963006 seconds)
  done (took 67.124147651 seconds)
done (took 698.416360612 seconds)
SAVING RESULT...
DONE!
