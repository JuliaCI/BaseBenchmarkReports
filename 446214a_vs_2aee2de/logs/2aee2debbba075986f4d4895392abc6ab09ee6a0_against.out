cset: moving following pidspec: 3416
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.406805746 seconds)
loading group "string"... done (took 0.597795947 seconds)
loading group "linalg"... done (took 7.643041386 seconds)
loading group "parallel"... done (took 0.174690483 seconds)
loading group "find"... done (took 1.19934915 seconds)
loading group "tuple"... done (took 2.124315416 seconds)
loading group "dates"... done (took 1.34572779 seconds)
loading group "micro"... done (took 0.249367305 seconds)
loading group "io"... done (took 0.982625861 seconds)
loading group "scalar"... done (took 42.340438833 seconds)
loading group "sparse"... done (took 14.079702245 seconds)
loading group "broadcast"... done (took 1.111061446 seconds)
loading group "union"... done (took 15.175487486 seconds)
loading group "simd"... done (took 5.193640695 seconds)
loading group "random"... done (took 10.486116835 seconds)
loading group "problem"... done (took 2.098702598 seconds)
loading group "array"... done (took 24.754979248 seconds)
loading group "misc"... done (took 2.172038693 seconds)
loading group "sort"... done (took 3.518097769 seconds)
loading group "collection"... done (took 19.930807737 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.574478269 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145662178 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.154126166 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134081566 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209744451 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159609399 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161830586 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101942525 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.979076796 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184023547 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.158256897 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.54072415 seconds)
done (took 5.24006271 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.259455598 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095613479 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104892322 seconds)
  done (took 0.886166897 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078210723 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146927376 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095777069 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079143152 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097799526 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080732088 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.101487146 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.095250977 seconds)
  done (took 1.383751488 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088040228 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.09946405 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084229097 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099695922 seconds)
  done (took 1.053347884 seconds)
done (took 4.355336679 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.74552801 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.289639806 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205131178 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.47360156 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.204568565 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.222321711 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.738983962 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.371526526 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255200796 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101085458 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147101931 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.401428651 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137921116 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.734938679 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09270194 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.129043594 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.188217953 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.495368114 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085180851 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111499227 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119931403 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145067111 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.136551643 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093056934 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185990834 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084694295 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.198891052 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109665277 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080930221 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.276108015 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202334485 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.748977403 seconds)
  done (took 11.235413174 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111488284 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136203901 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098703259 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138962022 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.1353542 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100420951 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085579543 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100174409 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127956992 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181202916 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131083778 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122371286 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098383493 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083736526 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118946061 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250015383 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124206967 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102332506 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103271078 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089754178 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142101888 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113388116 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110956121 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095512588 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170447472 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225188695 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114291389 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129879951 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100327299 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114963938 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145845581 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146720303 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095050732 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081167567 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177789203 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12565078 seconds)
  done (took 5.226432189 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.083693474 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193271586 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126473302 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.176502705 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.083321854 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149786614 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.097989181 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117405697 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.266273287 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.13109871 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176530128 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143944305 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.112004011 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.121025618 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101820114 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086052259 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.102107354 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.641956891 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161779496 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.138668205 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115656973 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104219194 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084707374 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.727246783 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.110737367 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082771192 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10178937 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068077538 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167294652 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102719871 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.197722364 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124088533 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082348587 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137584931 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.215818581 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126696702 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119411148 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098521096 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080614773 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.196133842 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089492926 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098583208 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104625427 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136108581 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136449778 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099368075 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082662046 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219417321 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081306923 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115182906 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.933796083 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.184086813 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093358558 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.099665422 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.336504382 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101758141 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101461403 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080622635 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.294341671 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.195474039 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101942056 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082185507 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100427593 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083496803 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.756256053 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083582323 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.1201691 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085514282 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.111074609 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085393371 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100123208 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10974643 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090158291 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119027579 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082690885 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1023869 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081628637 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099822009 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083729197 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112241087 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105815702 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083654687 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169663196 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082992875 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.126166079 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120588937 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129687918 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086988041 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.100105372 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117020974 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097879398 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10280619 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084353815 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137737363 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08324913 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11300361 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103710421 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146060906 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083290327 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.155224203 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082077961 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096360422 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111889093 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10543873 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134931215 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11677343 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101892772 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089017734 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09889906 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080517565 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167378428 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083359153 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.10096773 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083506047 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115269868 seconds)
  done (took 23.991486952 seconds)
done (took 42.221020824 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.321749057 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106822209 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104372774 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10503894 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104308244 seconds)
  done (took 1.503125239 seconds)
done (took 2.239376345 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.166403813 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117834413 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096762452 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.133155507 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079778787 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.138589278 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.135773929 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097707084 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.138390295 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096652708 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.131318942 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080740471 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096267276 seconds)
  done (took 2.270873547 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09610866 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117260881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085576554 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114856781 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080225402 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114793034 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095085834 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122126169 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115515924 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088051656 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096042323 seconds)
  done (took 1.854348584 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094745642 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114998026 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085936693 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113551371 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079549359 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114544702 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095727198 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119822973 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113387365 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088609431 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097042355 seconds)
  done (took 1.845488137 seconds)
done (took 6.696629638 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092127458 seconds)
  done (took 0.817183542 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.935191767 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.040893117 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114589135 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.152887293 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.319629525 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.195681084 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.496495894 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131380632 seconds)
  done (took 11.303837738 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.145944061 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084848068 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100067249 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084589934 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103324119 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08624176 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101300604 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102440612 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085152357 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104385517 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086871253 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101413528 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102728011 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088973268 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.105470108 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088867599 seconds)
  done (took 2.364921696 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119862834 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118702476 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106924363 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108575677 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087966315 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105084929 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107165274 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08924077 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101978134 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103046021 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091240653 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106344489 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.1043423 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080218164 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106291864 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108025394 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08617637 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106930272 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106913415 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09061719 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107323846 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09537765 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088197242 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106802228 seconds)
  done (took 3.272107419 seconds)
done (took 18.488973046 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160930787 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108863663 seconds)
  done (took 1.005188495 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096794189 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113126444 seconds)
  done (took 0.946783415 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098718973 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097098521 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12283161 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110365134 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081533449 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096662698 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121273998 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081151016 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097393783 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097161642 seconds)
  done (took 1.745061206 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084170447 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11049976 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101569697 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095472816 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105537132 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096048893 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088790269 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100261964 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11010152 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078387631 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102597442 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115023592 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086602641 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116216316 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105931444 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.099995137 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086784182 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099150644 seconds)
  done (took 2.52428608 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081189332 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097249671 seconds)
  done (took 0.919934027 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082203072 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095493017 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081866137 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098205143 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094828829 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077761432 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09482243 seconds)
  done (took 1.36693093 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.441397617 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136197479 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.268577769 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087469575 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123693528 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.311211116 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100938818 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.087345143 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108328454 seconds)
  done (took 2.468463088 seconds)
done (took 11.71756739 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094734286 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116165038 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115531065 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.464839285 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108531301 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.100020851 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.161926891 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.258202423 seconds)
done (took 2.170714239 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.14985366 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.599693674 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.427278785 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232635244 seconds)
  done (took 2.008114357 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.407680006 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099861973 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083310754 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082313058 seconds)
  done (took 1.424297184 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081091016 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10102251 seconds)
  done (took 0.932082359 seconds)
done (took 5.262904514 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081248472 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.133558771 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080819959 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097591219 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081162886 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097142668 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07845113 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099448824 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080451787 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.097648457 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.097605136 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081326328 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0941466 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078963894 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095897839 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082272892 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09756551 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080643979 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099737782 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080597171 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097056866 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083398802 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.098475073 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080508145 seconds)
  done (took 2.960370971 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101503894 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099982961 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103820515 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087670308 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103601849 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086102558 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103364488 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098234725 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08664487 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100909277 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101960542 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08550486 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10023276 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086780176 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100502124 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10308967 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087215455 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098838283 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083863313 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102421355 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10380935 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082286723 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103505163 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08659344 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102466417 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102103466 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083841657 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099056895 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10378863 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086322252 seconds)
  done (took 3.630168977 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086535501 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095482907 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078925357 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102904991 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078820076 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098241117 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078789997 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096484602 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080337065 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096389044 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080116206 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096261888 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079869727 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09743359 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096720531 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082948659 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112641608 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079641119 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096922128 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080645618 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099843447 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079016574 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097044618 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079122808 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096481002 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078718761 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096429299 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079091373 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096701711 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079132588 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100709955 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081919146 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096164005 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102436832 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08330955 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09575673 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082829629 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095342131 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080339478 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095050822 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078867527 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096281132 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079671693 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102823228 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079353516 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09874182 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078446145 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098504215 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079116811 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100379255 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095752833 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078923345 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098449387 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080963246 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100462866 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079012971 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098659947 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078809529 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097957408 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078652557 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09630688 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078288043 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099023501 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080166767 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111915602 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103159909 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08011374 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098250913 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081690047 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098984747 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.081793584 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110486632 seconds)
  done (took 7.248413588 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084403533 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107901128 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081568371 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098846223 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078202969 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097593309 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100181116 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080712705 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098633003 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086586032 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097683726 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080698318 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098632681 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109289627 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08062512 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098046117 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085615314 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095211609 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080253849 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100335899 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08023125 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100793842 seconds)
  done (took 2.781245891 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.21166763 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105366453 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143443462 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108111164 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084338058 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107367745 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103660373 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08671868 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104335843 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084517289 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102255903 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103620205 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084696092 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101834133 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101064542 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08442542 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104731015 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08517582 seconds)
  done (took 2.669763292 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094359231 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099962642 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.217709451 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099743097 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100173771 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085147674 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105911751 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108459675 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085061419 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099599482 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092246038 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101408899 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101887492 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082306404 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102463555 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082208007 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102138657 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082085218 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109215128 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106336942 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104978342 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092244006 seconds)
  done (took 3.019843913 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097704479 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102800807 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118303151 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086412311 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095967742 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080512736 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106556846 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082466889 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106100415 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101371121 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082698027 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098000049 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086969884 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099226643 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104790224 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083221522 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102089635 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082532478 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102408243 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078407789 seconds)
  done (took 2.66443311 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103560406 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101531535 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100223221 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092323525 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101748431 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084117646 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109813048 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101513034 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083907174 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12575049 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101608581 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083583979 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109904082 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106665123 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099991609 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09278828 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110190853 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11069127 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083383419 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100975512 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126420731 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08412222 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11014477 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102043245 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085670127 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104739479 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103605976 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092655969 seconds)
  done (took 3.581186232 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082371847 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099366039 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08459612 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099680215 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082063177 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099820835 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082058356 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099646981 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084654833 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099781883 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084384927 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102041673 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084563222 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.10272321 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084121691 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.103490607 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083707925 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.100139636 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082001713 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100331052 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084002427 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102957916 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084474988 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10092808 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082302691 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.103492125 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081754903 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100735988 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083885236 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100513375 seconds)
  done (took 3.535595435 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092543729 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108598371 seconds)
  done (took 0.971759002 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080698261 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116357832 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080313929 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104582508 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088056547 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101749897 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108614393 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087712485 seconds)
  done (took 1.537284598 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098535453 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111877623 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084601357 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114198916 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111659761 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099642025 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173201699 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103455017 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106877461 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081192413 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114984005 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081905324 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107616898 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08279055 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107170166 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089389127 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099039477 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105934115 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087029473 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099982622 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084979465 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109845833 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106914948 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.079873939 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102379434 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093128401 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113906944 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102159074 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086656887 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109923766 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090921452 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099054301 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.086554276 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104946285 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101975951 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095625089 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121990655 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088432255 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.114852685 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105437934 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097914139 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.100201446 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109413057 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092328434 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11554825 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086748936 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.105364222 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080766281 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102026873 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087376268 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099777944 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104016722 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080896626 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111673731 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089265473 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116264463 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084674818 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105303579 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107260321 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089820615 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.1118248 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087597192 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106870127 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085600251 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115281984 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.109534131 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095940048 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.100442074 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080329124 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.10284304 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096574467 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.129397151 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110838235 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086398798 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106462487 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082967308 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108872133 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106544164 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092595796 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111363695 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087160559 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111923614 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112317541 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086129455 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.1078018 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113957422 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084832141 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.107425357 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084270793 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123349384 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084972346 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102526739 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.101767392 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.097082287 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.108188113 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.086287457 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.102114443 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093650474 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.099709764 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106240555 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087594112 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106093243 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097427097 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111628859 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112390845 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096100307 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112596893 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086558149 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108638472 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101207032 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088319436 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104132394 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094199151 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09889221 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089389234 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.106046591 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087425242 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114020034 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.103381514 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087134888 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113465241 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091718586 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.104074115 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082212067 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107834931 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.105987939 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090344547 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114447863 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.085133626 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.100258124 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081589664 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.109024114 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104596788 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090283417 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111341643 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089308608 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100239217 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.103107168 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.091477686 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.116055775 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086216226 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106129477 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.11137948 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087557377 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104530455 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093513394 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.108447271 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085373556 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112266797 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106429481 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08125828 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109633449 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089863303 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.104273393 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089915228 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110072235 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.1076534 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.087529313 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104468806 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.092583944 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106961713 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085043083 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105365723 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084489056 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.117145729 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.108498653 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081286514 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.102649582 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093996898 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.10357739 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.105124324 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084814632 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107433134 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087810743 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.104533593 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087066207 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107835372 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119427025 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092172348 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10700582 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091639068 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.116862747 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102586839 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086662584 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102141168 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085037478 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103751008 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093467935 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108378309 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107681899 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086476823 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098652063 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089586532 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110548848 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10119962 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082138016 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100529256 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088564719 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108593943 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088085453 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104915649 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100786465 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085272925 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106557776 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086976588 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102917964 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082630243 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107414743 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101510559 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091409343 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103751288 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112896122 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088013719 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098300985 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087587046 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100490019 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090457457 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098350935 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080943084 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101778232 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104444313 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082594892 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105185888 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078228036 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110430295 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092272582 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103050225 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083302181 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103205655 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109367346 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085436731 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107004958 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087692539 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109547346 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113862822 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082947246 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10606483 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095942779 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104031899 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078108626 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108163998 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101767065 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083524304 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.1011502 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082126175 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105981048 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094143384 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110330523 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097044038 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086355146 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10162721 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083627406 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098701511 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089072296 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106097127 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084725704 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110557938 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104458583 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088346814 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106750268 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084086919 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104759972 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104331956 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087795698 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104764154 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086805277 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102605703 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087098935 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10207883 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081828391 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10485425 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103437645 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084931412 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108574263 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083483701 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103580299 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087104855 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105060388 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103539132 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084258542 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102391161 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088376308 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104056062 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085177847 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106489409 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079579743 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110713982 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102899588 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092395137 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102957299 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081555897 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109492979 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08680102 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108848466 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103641261 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085371632 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104238855 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084303269 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106268274 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09089898 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100758345 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114674798 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093227645 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10520467 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087446607 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103433903 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104678188 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083933561 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103494963 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085273243 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103492446 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084120443 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107813725 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087087064 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103282778 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104760431 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086008706 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103997021 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085565855 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0978804 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083428347 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103513825 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084112436 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114446469 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104607457 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084047647 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102453642 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086165526 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102419616 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.08057158 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112683965 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112445466 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085277315 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111016538 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102898439 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086735136 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114625529 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078370912 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102713793 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082533958 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101917924 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111180321 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086293521 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11429033 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084808792 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103479465 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08152323 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105444299 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.092567751 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098460835 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081967951 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107465255 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.102544611 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084081178 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104403938 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08758915 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105328734 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114544326 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084314295 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.104186993 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086038621 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101104335 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083549225 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.1032041 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087719311 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104853541 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082580661 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10109766 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104050676 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085892475 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104984134 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084579029 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105681234 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091544648 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104333898 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106335811 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088025207 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098305295 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087442156 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103621091 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084349755 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102878914 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088310327 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107939939 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104748218 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094712479 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104964697 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085191786 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104807629 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101355453 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084411384 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103495156 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084854067 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102868093 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085933662 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113382269 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082997497 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106827686 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10347548 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085711732 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111963955 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085876956 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107589714 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112015298 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084926458 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105478804 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09336327 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108388967 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107059117 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086487841 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104534066 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090858753 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103382666 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091281311 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104853675 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085911915 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105734781 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101854681 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084981375 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104166426 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083535755 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110944619 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085156606 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103621232 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083358266 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101996886 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104260893 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088668869 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111494909 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087190627 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108289487 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.07954576 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101722148 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106098395 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083565156 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105671775 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089144732 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110308556 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087581339 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104949472 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102595504 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094472141 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111223107 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089195653 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101987732 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089107533 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106496285 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107564262 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086052168 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104191271 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086728303 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108712504 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086659258 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103848742 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111525465 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088675437 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105725129 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086823956 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.105594865 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084765793 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100061613 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085598035 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106804442 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110232892 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088047991 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105252453 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096271453 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101971472 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084740961 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108689335 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103117897 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089677106 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.100421632 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08677964 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107158847 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086067935 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100887283 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103835943 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083290129 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106904869 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085060941 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099064097 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097020217 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115021757 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.108725043 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084270292 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10381014 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080634919 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099709212 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085219832 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106202013 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087420442 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116289 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104185844 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084472801 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099715119 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085497079 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108305918 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.088448386 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102262185 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.08038585 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.104200951 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108299058 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091494471 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103317157 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08481557 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10907943 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087517124 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103590501 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10934926 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08254261 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108644568 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098554987 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105881398 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085133997 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11166719 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114551156 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086389221 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100824419 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085716301 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107964891 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104207879 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086827553 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106503035 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101526537 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108107728 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103695097 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085115491 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107482021 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085137198 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113906045 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086737545 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105605077 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109198667 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087823718 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115054544 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087391736 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114080389 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107416722 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089221363 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104321352 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085504288 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102620279 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083687877 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106860621 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105468848 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090556619 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114067637 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084060257 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117461065 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114636006 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087317146 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102262955 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084373564 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105456183 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080495334 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110048106 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083022414 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10365142 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10408037 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08478096 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105196612 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091643464 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105871358 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086176764 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105191983 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079525676 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107602093 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.107442998 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087161226 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101144457 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085482036 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106451501 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090182042 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11037604 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.082700748 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108086689 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106338785 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086609738 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099499815 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092339546 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104617973 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088620492 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104341617 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086353559 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107344205 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108642515 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091006606 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107374182 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088418763 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115291992 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108800808 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084028211 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102209918 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091669124 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103089341 seconds)
  done (took 59.365351584 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149291091 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081691391 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100706302 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081290148 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115399344 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101705338 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080981732 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10204204 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082112198 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103465576 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080646258 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100695921 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110610205 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126774417 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094261043 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10500697 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100283864 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082277954 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100635235 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08165208 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110765072 seconds)
  done (took 2.911754936 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106287539 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119334569 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117687172 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120886409 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090956199 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116844191 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115924567 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11676722 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101534351 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113103441 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120633119 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117499889 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.0931713 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11319541 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113144456 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094843675 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120949644 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110575195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117738554 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097033213 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115204322 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117041716 seconds)
  done (took 3.270164682 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086323615 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104330114 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08672064 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099797483 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085318036 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100431968 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089322284 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102598513 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088072083 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103702076 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.103467456 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.084014701 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10618668 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080535983 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104556559 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082700975 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153611528 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10885157 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084935725 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106793969 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100602477 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087801333 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100350058 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081638764 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103797116 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090572613 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105997359 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082817176 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10621946 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08403988 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105563087 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.102699402 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.086938069 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105330277 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084464196 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103592758 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085309451 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105298606 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080279399 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10389448 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085395777 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.10134269 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085364002 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107797611 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.103097737 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083294692 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106800011 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086355348 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099884199 seconds)
  done (took 5.550919353 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106242538 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164637016 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087813877 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146125916 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122292026 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115191605 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089279317 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145268913 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105174949 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084636775 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124486614 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12266041 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105338255 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090805557 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10961672 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106451424 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087797419 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105549809 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089595751 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104950993 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110007713 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091659376 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121743943 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119757517 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110338545 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085169569 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104558355 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110342312 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099733385 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111345182 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111206297 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092279964 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124389667 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110807087 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084902991 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108927326 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124283514 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106421285 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089736709 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103194823 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088543231 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111261139 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11278007 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104841947 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107303698 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111668822 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085990117 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102414621 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120410459 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088820897 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116121624 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12209167 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090673781 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107150453 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110820252 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123069338 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086131215 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104378657 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088531064 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120022964 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103174289 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089822284 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122881899 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108120801 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114117312 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101912991 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111413937 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110101358 seconds)
  done (took 8.269663316 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09575298 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113195725 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123263475 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123206761 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09317037 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113585749 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112769616 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092024059 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113863412 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118014108 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112444388 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.136989579 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08678761 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116380905 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11271328 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093430531 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113463442 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113196748 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092503789 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114154777 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113578487 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12194463 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092583374 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122157745 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145297432 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107875947 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112651532 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092965346 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122928454 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11239025 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125441588 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092164951 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112908474 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121163321 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125649097 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092566494 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105892984 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112671101 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093012635 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114799182 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10724969 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122659165 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09282197 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108161128 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113444377 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093582801 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123269209 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125487759 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116469134 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118787321 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.093033376 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123122257 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112321203 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113298256 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102122254 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149566809 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12259155 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122417429 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113911412 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123017774 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122294173 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110482951 seconds)
  done (took 7.794324021 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109399654 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116791716 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119947837 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102315749 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084634707 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110807303 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083834359 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105358999 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116481804 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095890409 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119594396 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111680701 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092791292 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119881054 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111768802 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114876348 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091077097 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111159719 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116819714 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110657746 seconds)
  done (took 2.98406854 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094895952 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125480068 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086016304 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11421897 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108981679 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091814099 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108706203 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109688826 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087418866 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109873919 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097787796 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118856163 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107471127 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093152116 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118768838 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115815087 seconds)
  done (took 2.524374076 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098238241 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119941003 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.123044662 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085738215 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106473124 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104365981 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086724323 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102138382 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082266119 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123081048 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086362226 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111263722 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106278363 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084469675 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10410847 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089011397 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102988629 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083818933 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107453063 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.122282643 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098170656 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10656413 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107256712 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088443252 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108096316 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091968349 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107922368 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104572503 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08469441 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107724881 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086468138 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115208259 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104713182 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084946881 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104999026 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083704391 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107450449 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.106513872 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.089930001 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106622085 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08486658 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107302015 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086379377 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10811564 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103236128 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087551356 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102300604 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092796223 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105046232 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085792802 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107815879 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109006423 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089906226 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121862398 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11115931 seconds)
  done (took 6.369211034 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099968929 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111095858 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081661717 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105261021 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08962122 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111867762 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110935213 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087674092 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110137845 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084905509 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111041417 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091010333 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11211593 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112404318 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090185757 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11523642 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086288955 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114827695 seconds)
  done (took 2.668761982 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092306575 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106560564 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093477086 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107189611 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085942932 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11092139 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082407224 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106974766 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105254106 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08594516 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106822091 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089657418 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10560621 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088625948 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107124929 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086463319 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109732206 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104937522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086669204 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102889031 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088599906 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105638285 seconds)
  done (took 3.004114849 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.116434171 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.12359828 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092707503 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229995928 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103703855 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132891709 seconds)
  done (took 1.644999276 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111186341 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122953719 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108504548 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109333137 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117665509 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109003877 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08914741 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109797561 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119960197 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102455667 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110299244 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119997701 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119659929 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097739617 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116616667 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116557147 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10960245 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089528895 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108746611 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129956251 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088732463 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120262249 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110320294 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08846069 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109934943 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118969567 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120352766 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123739492 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089209885 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119669427 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116929031 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08825955 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121767443 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124508993 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111119039 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09858954 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110756624 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131087702 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116616863 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117761663 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090217624 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116083976 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120136331 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094786499 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12061434 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110482039 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11505926 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089081754 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1104546 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137506819 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117199351 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097988552 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117762387 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120627015 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119877759 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136884085 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125319378 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098900819 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117871533 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124709039 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120453909 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116154085 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09754935 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124370441 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116914966 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119967661 seconds)
  done (took 8.273105294 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103305278 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128039677 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110515595 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124845271 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098623054 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109978346 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110090979 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089035706 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110377921 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109504573 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154027945 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089542296 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120070742 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12072078 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110429402 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088861377 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110500381 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119042539 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088474866 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138568504 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110492996 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12045516 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119444447 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098075951 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125127396 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116435893 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110342678 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089260366 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110131648 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110630116 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096353866 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110641472 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119997925 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087650173 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120279324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110344299 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110244629 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095519127 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109976459 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117329956 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119741015 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109761738 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111072335 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109795039 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124820021 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0892427 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109398491 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109531286 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090349148 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109555173 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124592532 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104038912 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124054926 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120105774 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110300642 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110984534 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089505227 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111099655 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088652755 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11753892 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119275348 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10941628 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138576754 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089044215 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110758375 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120424322 seconds)
  done (took 8.149782044 seconds)
done (took 158.129634435 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.225329303 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.217253338 seconds)
  done (took 1.294460796 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099033169 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137987433 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097629553 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171817724 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108922388 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121657376 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139394019 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098259139 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109761774 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086962645 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10952605 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088673991 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173782608 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086586791 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108380738 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110313299 seconds)
  done (took 2.710662336 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118979234 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.257759781 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125921916 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107226459 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090871459 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111219385 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085001089 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113555773 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090522108 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108565372 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.089840127 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108418307 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.086762346 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108997553 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112095492 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089587915 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107414586 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089156388 seconds)
  done (took 2.861614361 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111312337 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.162707093 seconds)
  done (took 1.141310239 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.24832568 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163433713 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.231819449 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.473267617 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.275477686 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.359912666 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.201697421 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.213906725 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.170071548 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.212139156 seconds)
  done (took 3.411974832 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.1194713 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183183728 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.322382889 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.158561264 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108385064 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132550138 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15921391 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133293186 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.124768056 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102327525 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124250682 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120897704 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140400491 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096230117 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11765613 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119492392 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121436806 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116033138 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117171203 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098164524 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140146543 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10747344 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096383557 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116670297 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.120865828 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099562611 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108153332 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085594872 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118027912 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116463857 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.093452128 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127439242 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.121168183 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.157739994 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.125683971 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159560326 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.120698073 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092385344 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117280153 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092328796 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121008185 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.122153149 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126906565 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.0994014 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107569178 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098994442 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107768515 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08581897 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116494793 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.121961719 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095164986 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115790868 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15836208 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121640344 seconds)
  done (took 7.498852124 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.800686792 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.158160211 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091310816 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.892294082 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138960746 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104958355 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.787192775 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113259301 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258074974 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.76716398 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134890225 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121932976 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209023326 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.262353302 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.976669295 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29552769 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.695816349 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102625617 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153864316 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155592387 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120327718 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139064455 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110436179 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.456593331 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118919752 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113283169 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097336234 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121063404 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163058677 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127938278 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116925793 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179744954 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251502154 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206365366 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117081165 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091651213 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113629898 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171417312 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271568256 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196230212 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181418971 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11059243 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112369209 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101958996 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134783269 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110787339 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164993908 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177680534 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.17142929 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116372512 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121081033 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099358139 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122738332 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166593467 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123420684 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.320150456 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314240166 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090294694 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123312583 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127840107 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264418985 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10357481 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228401256 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141657874 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215314736 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091211938 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806750758 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.17221105 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113262712 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096608575 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122651005 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11811678 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09968548 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172756841 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39381787 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12584191 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116633948 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091767989 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228888929 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126807598 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091800825 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163262024 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119474934 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122253423 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103822331 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124503346 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171027045 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.254167092 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101803419 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122078247 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117137331 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103648451 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.119071158 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213255274 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221683593 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.187016559 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210048206 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100709645 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.188777412 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171124075 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120872473 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.175337301 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121959289 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102525516 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124145306 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221058252 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148888002 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126363364 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094755445 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120973385 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150744052 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.129289796 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097543946 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.196491451 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.486686416 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170528054 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111239536 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129808261 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098332624 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18690735 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096860158 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265720014 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123768535 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172216125 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121625578 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088800038 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122556844 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166844292 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124239094 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123214868 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101825852 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121574222 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.239250471 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219088263 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123669 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222137039 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185423034 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11994349 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173371215 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123403963 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169693241 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122284217 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124926262 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100332838 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785668542 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126318541 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098728627 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117692809 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.200041042 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113538444 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104213907 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127061699 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110505969 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75877033 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.130715199 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123058496 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104268922 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118820834 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122825532 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097162216 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118229818 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164884458 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232175149 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121499706 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121488655 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104432327 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18522238 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096182324 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127988026 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.127050184 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105215065 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12360479 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117723024 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104678261 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19363259 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165982753 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.224877859 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569140688 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114653733 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.127670152 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230014171 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090999727 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292156311 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121871965 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228214804 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16540826 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101006901 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311116901 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18842928 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.200769637 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10700346 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.197974606 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089171321 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11981063 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166891337 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115144375 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096922302 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.188338764 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104379586 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124435974 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.981338017 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09162512 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249874971 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08910999 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.195624018 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096043367 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122019609 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299582989 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090886495 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130427616 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.168072969 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117417503 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12718337 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.703444479 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127600209 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123756779 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098175965 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224006473 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166481738 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122485872 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122295746 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098210918 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.187178385 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210482173 seconds)
  done (took 44.548502547 seconds)
done (took 64.325723094 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284477486 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.221798687 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.27277884 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173885116 seconds)
  done (took 1.923995161 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174694284 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.152834501 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123659023 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109577424 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.154286307 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086086238 seconds)
  done (took 1.694066518 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.368081458 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.28037329 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.249824896 seconds)
  done (took 1.794783481 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.324134713 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.256788924 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.482436594 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.333442403 seconds)
  done (took 2.389457185 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.213087342 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.135137275 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113143644 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105346741 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.201619751 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252960504 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.145562933 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.206494345 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.100502941 seconds)
  done (took 2.412836188 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.201057151 seconds)
done (took 11.314427759 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.19034234 seconds)
    (2/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.328741034 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.253271609 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.225276161 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.198163433 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.151301834 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.152287853 seconds)
    (8/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.128976244 seconds)
    (9/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.255767163 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.233715332 seconds)
    (11/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.251057388 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.249387055 seconds)
    (13/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.122951803 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.140085966 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10001493 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.180421906 seconds)
    (17/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.224797132 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119427187 seconds)
    (19/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.160306823 seconds)
    (20/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103504998 seconds)
    (21/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.125878389 seconds)
    (22/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.269780173 seconds)
    (23/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122201564 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095551092 seconds)
    (25/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.138091988 seconds)
    (26/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098070914 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.229969219 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.167244851 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.113759627 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.172424113 seconds)
    (31/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.17338961 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.140307655 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.15258162 seconds)
    (34/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.240865122 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.112406691 seconds)
    (36/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069096228 seconds)
    (37/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.123054579 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093898208 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.151341157 seconds)
    (40/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.198564839 seconds)
    (41/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.184618319 seconds)
    (42/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093150087 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118586563 seconds)
    (44/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.079045037 seconds)
    (45/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117835266 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.20327286 seconds)
    (47/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.168141173 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.139997803 seconds)
    (49/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.187759608 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.192121636 seconds)
    (51/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095353554 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.186326163 seconds)
    (53/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.141006919 seconds)
    (54/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099439211 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.119363891 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088252523 seconds)
    (57/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.097702717 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.111792387 seconds)
    (59/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.182003204 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.141815866 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.167567049 seconds)
    (62/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.125393239 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.073330358 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113623241 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086571999 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.18096977 seconds)
    (67/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119737667 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.201581649 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.11830797 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.147898311 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.112225337 seconds)
    (72/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095801618 seconds)
    (73/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118445528 seconds)
    (74/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091333095 seconds)
    (75/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.091265998 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095628091 seconds)
    (77/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.121926524 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.117695804 seconds)
    (79/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.091345936 seconds)
    (80/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097062362 seconds)
    (81/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138786335 seconds)
    (82/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.119393593 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.088898077 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.138112378 seconds)
    (85/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104023057 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.167470512 seconds)
    (87/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.17713006 seconds)
    (88/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067052516 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.122369591 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.144593456 seconds)
    (91/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.118443192 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.218907821 seconds)
    (93/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.121755945 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099405095 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.113191226 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086972147 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111938618 seconds)
    (98/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085312914 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.193745109 seconds)
    (100/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.154289379 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06791056 seconds)
    (102/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.074039418 seconds)
    (103/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.165106564 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.112606451 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087939913 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119435948 seconds)
    (107/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.19379174 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170997925 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.092892557 seconds)
    (110/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.19186128 seconds)
    (111/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067756884 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087415838 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.121656421 seconds)
    (114/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.07783994 seconds)
    (115/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111411206 seconds)
    (116/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100944855 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145540231 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.092024436 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.217336878 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086971694 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.135576881 seconds)
    (122/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069679019 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.184305716 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.159012047 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096457176 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116768333 seconds)
    (127/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.129768376 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121191414 seconds)
    (129/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.389114739 seconds)
    (130/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098466321 seconds)
    (131/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.116373788 seconds)
    (132/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.147483009 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.09185529 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092882755 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.136485833 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095593117 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.112205214 seconds)
    (138/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068854935 seconds)
    (139/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.175338815 seconds)
    (140/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113186342 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093504702 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.112523198 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.164577183 seconds)
    (144/309) benchmarking ("sort", Int8, false)...
    done (took 0.191512499 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.134852529 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06754279 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.092373232 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096032443 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.112803945 seconds)
    (150/309) benchmarking ("sort", Float32, false)...
    done (took 0.176579408 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.112722914 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111338364 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096196608 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.092633884 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083489784 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.092513869 seconds)
    (157/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.126687677 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.130663947 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067906761 seconds)
    (160/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.125992433 seconds)
    (161/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068376125 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121148205 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109159912 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.110279328 seconds)
    (165/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096667919 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.15357848 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.122568206 seconds)
    (168/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153387553 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.228135952 seconds)
    (170/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.120930006 seconds)
    (171/309) benchmarking ("sort", Float64, false)...
    done (took 0.150302157 seconds)
    (172/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12032239 seconds)
    (173/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.122291137 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14573071 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.187982475 seconds)
    (176/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06887184 seconds)
    (177/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.093181502 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.116320829 seconds)
    (179/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119881071 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.221505982 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087869971 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.112831998 seconds)
    (183/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067921005 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.093597221 seconds)
    (185/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068103313 seconds)
    (186/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094134106 seconds)
    (187/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.093409184 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094486001 seconds)
    (189/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.093211261 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097416544 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.111303757 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11231609 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.156195041 seconds)
    (194/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.11907007 seconds)
    (195/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067922595 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116009666 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.226909874 seconds)
    (198/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115349037 seconds)
    (199/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.128724474 seconds)
    (200/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096236084 seconds)
    (201/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.189553794 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111742877 seconds)
    (203/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.090864348 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.113937259 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.117644288 seconds)
    (206/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.153929642 seconds)
    (207/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.178275807 seconds)
    (208/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091716197 seconds)
    (209/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.093568706 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069561342 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.185522083 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09439827 seconds)
    (213/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.092747182 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09692446 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120454033 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122994388 seconds)
    (217/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.114468525 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088569824 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.130035215 seconds)
    (220/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.151638685 seconds)
    (221/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069065399 seconds)
    (222/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129877516 seconds)
    (223/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069730133 seconds)
    (224/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.177822112 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086796708 seconds)
    (226/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112644402 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.094061567 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115302695 seconds)
    (229/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.09427773 seconds)
    (230/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120369282 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087485058 seconds)
    (232/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.220188022 seconds)
    (233/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.121018697 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086723994 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.12068192 seconds)
    (236/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06788615 seconds)
    (237/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.06856121 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.093860526 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.199065372 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190769553 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.167662681 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.18310872 seconds)
    (243/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.068569198 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.104597894 seconds)
    (245/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.175813675 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086834508 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069180004 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116270885 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068010378 seconds)
    (250/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.10263279 seconds)
    (251/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091308345 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112197572 seconds)
    (253/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106498904 seconds)
    (254/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115318388 seconds)
    (255/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.18787823 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.152239507 seconds)
    (257/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.114830429 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094963745 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.181799744 seconds)
    (260/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.092878373 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096645502 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.135859509 seconds)
    (263/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079037401 seconds)
    (264/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.140654406 seconds)
    (265/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09525612 seconds)
    (266/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.101816084 seconds)
    (267/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.124141975 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.112610897 seconds)
    (269/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.069018696 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137510578 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.073473039 seconds)
    (272/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.068686713 seconds)
    (273/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.094041276 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.127044408 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120943976 seconds)
    (276/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.127179749 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.112629528 seconds)
    (278/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.112131693 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088425208 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070722729 seconds)
    (281/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.117542168 seconds)
    (282/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08700682 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.115190928 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121161708 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.131526985 seconds)
    (286/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.115474506 seconds)
    (287/309) benchmarking ("sort", BigInt, false)...
    done (took 0.22429299 seconds)
    (288/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067970569 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.13718337 seconds)
    (290/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119736531 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069074774 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094285302 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.093732736 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115327408 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.092918426 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.114598448 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.139551575 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.136986165 seconds)
    (299/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093048573 seconds)
    (300/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.112215729 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090264717 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.118489438 seconds)
    (303/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.068668771 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.093269864 seconds)
    (305/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068639986 seconds)
    (306/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068136398 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.217083728 seconds)
    (308/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078387121 seconds)
    (309/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127370665 seconds)
  done (took 40.399877951 seconds)
done (took 41.301090972 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10189059 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138540856 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09775807 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138901272 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.126433638 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092551537 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.12166538 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099759254 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126865326 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.128211634 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09965322 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094830701 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098340203 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123265083 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098395168 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138356032 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126381988 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094419562 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121672705 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087514025 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121487649 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08764404 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11477568 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071083399 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124983202 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.096583877 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118816318 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122476515 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088616949 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112623737 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09151552 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120096795 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087671897 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127373012 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094513434 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.121960257 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099137423 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.124051262 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114878634 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088469523 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120722172 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088467736 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119692352 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095892588 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119211826 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093738145 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121682201 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101929678 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137790441 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11541041 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09700917 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123457173 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097830513 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120976957 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091590531 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122351682 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118484814 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113801457 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.125456708 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090407798 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.123506652 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096606552 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.120371122 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.121415304 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.097140157 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123979899 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099191397 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118243272 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.0982171 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118504622 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087901662 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121873275 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.117162293 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087879419 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.123088502 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099762304 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.112756285 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093822657 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.12103462 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09356726 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11221949 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089907648 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11571941 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094895299 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11537149 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070929712 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.116671098 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094758924 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112828531 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097146507 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.120245178 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095461484 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114862651 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124802935 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.08774445 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.118901254 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088522355 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.113090858 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089959611 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116819591 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087982918 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115222071 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.097750081 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115186514 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.094124437 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.126568498 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088815957 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119418761 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087747308 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.113046915 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.128230578 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098595609 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.11336406 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090396613 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.113352676 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.095889306 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112677208 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087616157 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.113665643 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088890139 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119486803 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088479002 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115983472 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096401397 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12804007 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088416358 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116876955 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115139807 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.088655223 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.118795968 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088461407 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.11340254 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.09040377 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.104197007 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091020883 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.11298931 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095980709 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115268796 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09733113 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114960654 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097532341 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.118698349 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094724937 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119453578 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.087970611 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.100923216 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090972108 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114998027 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.090365967 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.11347068 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.090056128 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.113049451 seconds)
done (took 17.250024142 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088160353 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187830544 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.155175341 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.145237724 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108702316 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114263231 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124593361 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121448755 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115334249 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145977076 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112124329 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134919095 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.15150908 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08730127 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114052348 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092401821 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11529785 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10439813 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148616485 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.136652097 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.168945544 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087807714 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.150605292 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139026598 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123749539 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116155268 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114197328 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092569632 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.118583261 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105234118 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134826299 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.117334051 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089442383 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137053955 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106623529 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.1229798 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113511751 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.096430682 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.1135707 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088476295 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143889824 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136776623 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094537991 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.12110809 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09243087 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.117466998 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089970618 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12359618 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.126121823 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093635694 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129160692 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159889358 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092359201 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124276232 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.113192852 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.100186682 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124387221 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091170346 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.114456892 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091441328 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.114779538 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092290263 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130028978 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145237203 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.118939202 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.098668295 seconds)
  done (took 8.77598336 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105770535 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141940549 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132873603 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10834956 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114530295 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089207631 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115428071 seconds)
  done (took 1.777759475 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090120853 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136956726 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.131354312 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138553061 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.135395481 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109947485 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126086214 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089265928 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.1335678 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090619739 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136710986 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156212231 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091073167 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.123007284 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140851688 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089183898 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139977969 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089772113 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120194507 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140523185 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092544167 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137307303 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092301095 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115953332 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104939025 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116402914 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165543814 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094572192 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118568514 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092991163 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114300818 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.171278101 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.130283774 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.101836534 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116064118 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104865784 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.131118283 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088141618 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132390045 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.120779771 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.104853226 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116375543 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091135716 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.114109386 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094828657 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.127079878 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091327752 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117603355 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093792121 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136878315 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090960364 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130524725 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116552432 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.093776783 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.117467821 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095875102 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126647691 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090979354 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136405391 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091425348 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133759274 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133924206 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106516093 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133810574 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092967289 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.130138492 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.130258171 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092730301 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118384729 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093570119 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133816128 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087612499 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.118398037 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101052494 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119137344 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.140292285 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.11425057 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118583783 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100627357 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.116902224 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090391816 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.116849431 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.140504258 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093968722 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117523421 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094274578 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119673693 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.088735403 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.115886087 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09350572 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114809956 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092391795 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119990523 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090693506 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119205478 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134065096 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091387484 seconds)
  done (took 12.050331235 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092150044 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117470222 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092517208 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117682467 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092470248 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117710198 seconds)
  done (took 1.612217599 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116282123 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119846239 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10528229 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123165897 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.160389436 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.132098549 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.106375292 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12640065 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10964512 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130376687 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.132057028 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107033627 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.139272452 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124461956 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105252695 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122950523 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.132453727 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101824518 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130409576 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098377859 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140229242 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123553052 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09824574 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.135490397 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120807153 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09729514 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12860611 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103439222 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130652968 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126354833 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096750868 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.12103978 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123692963 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.099949059 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132709912 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098011087 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123532812 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122308486 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102017371 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121612297 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.132675326 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098462635 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130005809 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095643261 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126088253 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124270191 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09537357 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12846665 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.132476742 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096386147 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122694126 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097044793 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121125943 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122287935 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.097150864 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125976798 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095811273 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.132192205 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124742912 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097347759 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120887279 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095381581 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12588908 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121675886 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105991906 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121331589 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.124219578 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098403188 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125038127 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09695601 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121529645 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120071958 seconds)
  done (took 9.423973117 seconds)
done (took 34.600887046 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.700236682 seconds)
  done (took 1.675045791 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.732156181 seconds)
  done (took 1.709610424 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.275448349 seconds)
  done (took 19.255385639 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.513398484 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.597539388 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.897760403 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.186226838 seconds)
  done (took 3.174088525 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.962429168 seconds)
  done (took 1.960750146 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248384403 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23582197 seconds)
  done (took 1.468377983 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.793018234 seconds)
  done (took 1.783949018 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.362069994 seconds)
  done (took 2.347910754 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.337305087 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187327614 seconds)
  done (took 1.515699194 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.566225861 seconds)
  done (took 1.557746345 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.92365586 seconds)
  done (took 7.920363938 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.272312363 seconds)
  done (took 1.275769828 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307201615 seconds)
  done (took 1.302274962 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.672506066 seconds)
  done (took 4.667370208 seconds)
done (took 52.597263711 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099436715 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129516477 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103191658 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126832256 seconds)
  done (took 1.447998367 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102104822 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123258771 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10124993 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123088563 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12852588 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097353654 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.1249117 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102703882 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123041317 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098859955 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124276238 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122851109 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.0999344 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125915669 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094588226 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12669759 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100640519 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123030383 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126688791 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098203528 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121752649 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099480697 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127067892 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094973296 seconds)
  done (took 3.709267753 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100911134 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121796014 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097519326 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.121173 seconds)
  done (took 1.445427051 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101904458 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144859136 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.141523823 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101230061 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145500753 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.138288658 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093955785 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.120162259 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095121618 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127619952 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091692869 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152074792 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.140321052 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.10182559 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.130146116 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089848387 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120002043 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142706965 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101238543 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128325896 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094267166 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126795316 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092210693 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142375237 seconds)
  done (took 3.863918736 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172932701 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130666649 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14186871 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097619243 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163739231 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143642235 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090167539 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.144652914 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089627853 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134374303 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.120847453 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135188783 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.132802829 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089046219 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116092268 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.089175837 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131778401 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132539909 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092217842 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.131115725 seconds)
  done (took 3.48507451 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098292019 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119906539 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088798006 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119137439 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10025713 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123937007 seconds)
  done (took 1.656664485 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091481275 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117377635 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091423064 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116933977 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09506555 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.117141584 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089487377 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116466967 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091473402 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117835965 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090037081 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115817876 seconds)
  done (took 2.255209984 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.470199661 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094944673 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122822549 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113963806 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.098327909 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117146123 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104201817 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.121154397 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143297909 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089910892 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11734027 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09337767 seconds)
  done (took 2.690779325 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243783434 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127481425 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299199849 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199534282 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163646595 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174538548 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157884987 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170208905 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.229981828 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161812397 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213166908 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226252456 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127855215 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224767195 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140568032 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120962772 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23311854 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225168565 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158252122 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238177062 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204804672 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169230627 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209689772 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127804997 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14216749 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173096991 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123807128 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132850434 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215610745 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211541109 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194982524 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1664687 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149978952 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249112123 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255506471 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202521886 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196273392 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138265746 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.17471224 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172404998 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271221881 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113729992 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242200424 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162574172 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133291141 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201721213 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17153414 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178985635 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15232035 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142999021 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228270504 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218978944 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.224529567 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113246009 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17008692 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16422731 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.171792143 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159385816 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257046923 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229982809 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185788732 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095574775 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150955298 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223069442 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187668914 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172434363 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.185233274 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15022138 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225199737 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190117122 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170661416 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194691303 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.213827656 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14095378 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175340734 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178888727 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176899692 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265829529 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184110099 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123598177 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171932009 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152660142 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106264103 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196589402 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126671036 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21914388 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152717261 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.136519899 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172255598 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164159857 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164486126 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203941146 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222424638 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123373463 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112799143 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159465869 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12992485 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219680012 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141737459 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162874607 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164455198 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104315678 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206717468 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098766582 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180331187 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.120230738 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182231161 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187491051 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130002365 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162511933 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155106807 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152638157 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183049093 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204763073 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14327656 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135062074 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213371641 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179972142 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.152074949 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182876575 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232228951 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117818006 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151363069 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230968068 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249681879 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115692277 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236388885 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158121196 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1092591 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136238365 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183414778 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160000072 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162869492 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136223479 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184735035 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243163841 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100152486 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141285302 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192907144 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13672027 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134774002 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165011858 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151703439 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112660496 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149037202 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155174193 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184023314 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210711293 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156816078 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170363737 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15384028 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255304601 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114300849 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152943326 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151936416 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122280507 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198116287 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201799861 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133618468 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207035827 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.204564095 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163523339 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174077064 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109234959 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179326924 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132682595 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122120688 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197686337 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171059074 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165126284 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200323037 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161812412 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.213642295 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186461039 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176037187 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17746398 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168966315 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160265206 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141014144 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163509692 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16790742 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09652104 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145871763 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.137269825 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159903001 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146360613 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108072647 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232986562 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173923873 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153638139 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162853246 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153184092 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184204334 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131173541 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18252631 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.182239311 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150819258 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201661824 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22758095 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191495252 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145411504 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209332304 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122839126 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09896094 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144854681 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174031317 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13656829 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137538621 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170068336 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185165192 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187788111 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207252157 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171043688 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181007226 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194222919 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096444874 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172396616 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187643814 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20746961 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.164963527 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140760566 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154554495 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181215567 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159235453 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263284948 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171522892 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180708285 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241977072 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153559751 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105764157 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155055692 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188569357 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156846044 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207328156 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12147098 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142554446 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163719689 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136053565 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164133232 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187978013 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165704179 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221459578 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152484825 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190645366 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128901544 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169131899 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163223867 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168698346 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082658857 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179940426 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235339893 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15072866 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173266313 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195665812 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134198472 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.183128323 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246483808 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200618701 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139880629 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161454286 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163105343 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165137611 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177095511 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181266479 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163232213 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195401921 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160954039 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138646485 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114261814 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154018261 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155685987 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136298869 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151562725 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179752867 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141340427 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193008973 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164345565 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16112355 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17679914 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152585698 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117430293 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153426302 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25102344 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179932445 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246940204 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153201589 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181906302 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208998496 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129234082 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133708604 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107497287 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180420515 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138871453 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193475577 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.152621987 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165014458 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185063156 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225105937 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113563268 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12335751 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160214569 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176826509 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173513121 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152855269 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.162543044 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212689373 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.145789362 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133405331 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175124064 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164065628 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120360467 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229745962 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081535339 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153420584 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100665728 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135420227 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166739455 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240233799 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138514906 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.159492733 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171368126 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171357249 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165696434 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152132756 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154151788 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172508378 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23391992 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189835834 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105199415 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160266174 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21033257 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200420413 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164922739 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142255963 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207733397 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196710165 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.23116022 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143624131 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172659309 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171313778 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160490578 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189059861 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136808025 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209801017 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137705241 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228299027 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155825066 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117113421 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206602013 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124038511 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144442452 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219305156 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177421728 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109113392 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136647934 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17070459 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180192417 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158610358 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129907184 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183242015 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127747005 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195733262 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266398773 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137585772 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157134302 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120774488 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138168736 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160499765 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160874504 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142851262 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165162852 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212117669 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137373493 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195886799 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234981803 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175388369 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178596354 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146628527 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.696446519 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133125119 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198991632 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156960237 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207851144 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155338251 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176180426 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160905478 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171660663 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228240192 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163602019 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234542095 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196814042 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.20908466 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106052705 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161627676 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164678064 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.148133518 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155787162 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172602881 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162964101 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.156112246 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181456184 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171931641 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.138109466 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141757575 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203206383 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15807801 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190913592 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182628388 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141098949 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177068797 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217021195 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107980195 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182717619 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242982506 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144665556 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153249929 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106493334 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157743305 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266980015 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125742681 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204820491 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208582164 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131972072 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197772135 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.121112251 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224487569 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161107066 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183117468 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149689604 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162206035 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159924468 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140036158 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104505187 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15908726 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168530695 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.153284578 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162799589 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167120308 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200290263 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096692974 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146925667 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163030738 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221940034 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220130743 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139362686 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108831132 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164369684 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154096225 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.206993038 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182146216 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109056001 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138388903 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13977152 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13413514 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138440149 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157189993 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163403413 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16760148 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211590356 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.139786945 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279454889 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142624013 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12940597 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11778197 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134237966 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123670864 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14906678 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159046233 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155240687 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267760959 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148899553 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106569243 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149805026 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128174003 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109160384 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168313348 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167511749 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209017245 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119639475 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.10994555 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161417913 seconds)
  done (took 82.704693111 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175905402 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153382537 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.161351672 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224458183 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192311493 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294331007 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.232858448 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270388023 seconds)
  done (took 2.793294877 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095265422 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148177212 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.160052312 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.1355798 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091958849 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122739272 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.349402116 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13459907 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.119405171 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122500606 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.177033455 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094985519 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.556351266 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091821207 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.12190849 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109373535 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093316278 seconds)
  done (took 3.812691907 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.484636845 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.746549765 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.509465715 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.09941817 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.323211387 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114275725 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.999622852 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.201236642 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116698984 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.500064699 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.783999758 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.168713622 seconds)
  done (took 19.144188667 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100919422 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.123986067 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109628083 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.138449284 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097315642 seconds)
  done (took 1.671607948 seconds)
done (took 131.672724293 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105600912 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.410469258 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073047327 seconds)
  done (took 1.614680062 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10964474 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.139643802 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110413319 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.139074843 seconds)
  done (took 1.600871029 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098989685 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132720203 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111003294 seconds)
  done (took 1.440220836 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.328386556 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.193411735 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.145993382 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108497794 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131966096 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105012183 seconds)
  done (took 1.441363803 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098574443 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130601034 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09945617 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131847626 seconds)
  done (took 1.561276776 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095550785 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072646798 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103484791 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075940091 seconds)
  done (took 1.44220581 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115175856 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134328425 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106513103 seconds)
  done (took 1.45888979 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.131040869 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.141117413 seconds)
  done (took 1.3742913 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106704182 seconds)
  done (took 1.207383728 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.120389284 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.17321566 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.193898712 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.16839009 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.231551225 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.168975115 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.144924111 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11603386 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.134176807 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.147474296 seconds)
  done (took 2.702962591 seconds)
done (took 17.718369079 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10481918 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.425242366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.415903686 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118493253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725195817 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382304708 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.07288061 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149253685 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.169375766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095154881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142258247 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674338049 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.02674882 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.380005918 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983154921 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377461017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.707902629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094529559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122715752 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095092581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.057672296 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093374601 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124573608 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093271878 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.7067461 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428437287 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096064598 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.377401992 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093643853 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129406375 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.414147172 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096153812 seconds)
  done (took 17.066971349 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096304851 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176887656 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.100213448 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139696601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125638017 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09608152 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12707033 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.0953258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183553398 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125148305 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143101003 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094313041 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128855987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097004239 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14418243 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0942647 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127891768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123517876 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094652603 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124877283 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113802754 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122765004 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095921621 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12413602 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095298527 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138184901 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125141775 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093829895 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123541708 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100042218 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130418792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096754041 seconds)
  done (took 4.906508623 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142424247 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186886149 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13034744 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12925564 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.17220054 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126022501 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20377272 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149053067 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15745331 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125413541 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142541425 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094446835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15941463 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126391814 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11564936 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124477199 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098013987 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124469872 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094337772 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12505391 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142845348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094710255 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125622502 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094916119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126412672 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138997725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097075112 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123445545 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095376645 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129296476 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102143643 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12677314 seconds)
  done (took 5.236441437 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098419261 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130596518 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111266543 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141051517 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096737539 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128177262 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.099562474 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127229668 seconds)
  done (took 2.044213807 seconds)
done (took 30.357352194 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.104068688 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124751068 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100268088 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137222472 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099127311 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.134659006 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09311158 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.131034123 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.100620331 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.129168093 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131480744 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094069919 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.127128733 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09326936 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131641449 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094066314 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.135213017 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097843073 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136208286 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.135240978 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096885697 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131631836 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100294388 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135194224 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105395855 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135211695 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136470316 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100081573 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12566339 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096613863 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126255143 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104436749 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124267931 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10456666 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124781048 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093823616 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123875321 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093540759 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135981771 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101444429 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.126873896 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131514089 seconds)
  done (took 5.985364324 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109410158 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.142496168 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106714784 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082397767 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118911652 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081796653 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140860354 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080331491 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112909271 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108915305 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075394531 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108705994 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079241409 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.104219801 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077740902 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076630746 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111297473 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076325772 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077418291 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.108525148 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08115806 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073402794 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.11054331 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079683047 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.106417176 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082883255 seconds)
  done (took 3.626534444 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102036347 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.138237221 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114328273 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187359529 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164592431 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101521332 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.135294931 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.143469064 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110940358 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123756406 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098225975 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151679353 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112355539 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131734905 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093112341 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.140075778 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.147130644 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095214693 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.131347879 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114386738 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.1440893 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134852685 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.115259571 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13612123 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09281869 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126849246 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098122706 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.138334465 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098475047 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133810357 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129300964 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097511122 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.126453054 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105466871 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128957238 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095434877 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.145681036 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134840591 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103566479 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.125546782 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097792602 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.1263139 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115717171 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170344486 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.123032749 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101571771 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.132116465 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103677799 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.124969761 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112798039 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133897708 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.12351871 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097394453 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.122966628 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09447539 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138465207 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.09508842 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.127612633 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103536605 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.128248911 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10684587 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128659893 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139844924 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.094629984 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131810016 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.092885106 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.125342832 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092959897 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.147860605 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094838491 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166393533 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.125714269 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095919979 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.134543775 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102039025 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131173826 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094627751 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140861024 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134296204 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097340659 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.134553173 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098807092 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.12793622 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.11273073 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.127597547 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095960193 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12551454 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131685953 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096787721 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125863607 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109130333 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.124947712 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097709485 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143343732 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093957718 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.127374374 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130521347 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100191684 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.123339408 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108833531 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.130479677 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094623027 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136273853 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093909912 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.127887597 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.135116851 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.099604172 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.123390986 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.099317944 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.131598987 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094935192 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.125909138 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096705868 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.126647755 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104884829 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132039265 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129599653 seconds)
  done (took 15.147374908 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232682475 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.222130351 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.127893966 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.21380739 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.107412673 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.137040297 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.217163005 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.159022952 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.094581368 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.125957734 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.095407222 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.165733683 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.159728707 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.17072319 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106277246 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125214377 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112831224 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.169693608 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.217189046 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.211322924 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146860962 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134219157 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.09693477 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.126741773 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.097333291 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13529857 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110905665 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136025082 seconds)
  done (took 5.282693744 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10953621 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.159372307 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.101088167 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147643645 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151815803 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094367768 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129935338 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.096563401 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.138476486 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138782381 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094957832 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.132427088 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101972907 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134847862 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.1261401 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104763067 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.135003914 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096743351 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129005283 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098689614 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132442698 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.135280615 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.098512523 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124252169 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103942045 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124728663 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087462753 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145234286 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12531365 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11722025 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.124233687 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10101101 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136215073 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094453511 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.126063358 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096826126 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12719189 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096504758 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.127149403 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124042818 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093861257 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078836779 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124498306 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.139856171 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10066718 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.11186166 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.101730982 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.131938484 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095807371 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123805181 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097270069 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.128586407 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098261491 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13324744 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099782919 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127297768 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.098052506 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11815698 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101177411 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.127773078 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086283216 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.124910141 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099890434 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.120953141 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103360128 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.131123722 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093650934 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12766808 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.130253897 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101702168 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.127391188 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.09860838 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.123525703 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.097039757 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128600677 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.099669741 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.129203835 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093343203 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12551658 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094745916 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.108446007 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.095292775 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.106223029 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098751625 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.12413129 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.094422264 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.127441062 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.101704172 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140848913 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126926991 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.104726983 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.126244181 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.094371531 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.128391055 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084807749 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.128083223 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11100253 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.144046468 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094330657 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.124306753 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.14024569 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.097805352 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125270735 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077487838 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.133357978 seconds)
  done (took 13.219234268 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.119172589 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152018272 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09667108 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14081067 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.153093871 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.118763099 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.134070995 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.101184072 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127492528 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113049341 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127055637 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103386548 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12975208 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134714692 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.1191209 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.133732843 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097111047 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.135260754 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.103271094 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.161889651 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139690437 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.110114606 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13768108 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095198003 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.131709983 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.108365144 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.153119491 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.13692973 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.104490748 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139602814 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.105259634 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.15322622 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.11031126 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.13111958 seconds)
  done (took 5.398975162 seconds)
done (took 49.773431496 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.212298403 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.435267508 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.208287046 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.155427202 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.243600635 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.211349644 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.237269169 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.206789547 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.259304398 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.206188128 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.46549291 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.904469003 seconds)
done (took 58.888293098 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.231440089 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.342366968 seconds)
    (2/2) benchmarking "String"...
    done (took 1.471791998 seconds)
  done (took 3.957584018 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.615417062 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.189609354 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.469268881 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.209092911 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.208892017 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.496993955 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.937238446 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.61948204 seconds)
  done (took 28.265164371 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.214621211 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.632433988 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.24907677 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.265557784 seconds)
  done (took 19.49746847 seconds)
done (took 61.705464234 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.202748477 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.288570177 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.224065368 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.188809232 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.346989486 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.244170861 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.271441144 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.322205644 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.227073498 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.195503699 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.232495284 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.209320507 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.220975688 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.300396726 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.222824498 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.215637051 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.249774406 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.829727543 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.6360625 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.229959607 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.226588088 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.273578205 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.250321424 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.227650493 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.256104005 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.21546501 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.213270875 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.225397742 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.01248413 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.215233189 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.244836531 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.474135261 seconds)
  done (took 190.830203639 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.20968452 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.338352748 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.407517939 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.257264845 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.845920894 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408516981 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.346643288 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.930332501 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.229431116 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.23834127 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.42863271 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.216916943 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.519940981 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.250183577 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.220997173 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.320369266 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.415326538 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.530983182 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.235619634 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.485609207 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.217307038 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.502384614 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.552742838 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.396409211 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.219499479 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.325758656 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.22302423 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.236952152 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.401059507 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.342435435 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.248966463 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.240172773 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.886277436 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.076348385 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.215690171 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.233762791 seconds)
  done (took 151.292980199 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.507537201 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.213152624 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.212387822 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214382233 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247091214 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.213585212 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.817530787 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.832058337 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.764507899 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.280468552 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.778095251 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.536445767 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214576536 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.213440662 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31175492 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.226691081 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.214531864 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.229871768 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.259168666 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213129158 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.21437701 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.833946283 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.23078901 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.213608601 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.40196825 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.232597773 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250657815 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.608599159 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21488255 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249724382 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.557448273 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.269053677 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215705777 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.67322606 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.019080888 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332397743 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.216977988 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249279427 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.215738529 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.502722445 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.21573539 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.215491187 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.220015526 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.961812494 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.220759397 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.821169892 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.215239609 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.216154827 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.215033894 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215815132 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.064484087 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.920512945 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.233191587 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.21592533 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.218169041 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.217672373 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215883358 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.251404917 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.049934702 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.316761256 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.235314612 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.219459554 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252260998 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.21675623 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.504100675 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217520842 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.712039397 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.294624828 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.324041741 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.83420348 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.22143397 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317477244 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.343865113 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.217121438 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.217646349 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.217691754 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.217298576 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.33068521 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.21840917 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.680204413 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.401289913 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.235735561 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.79967869 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.323620788 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.218582756 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.218478295 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.690293276 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.221992015 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.217890688 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.022592162 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.218770569 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318522621 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.218941578 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.218539243 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.218036396 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.681981283 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.848049517 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.538704265 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.22344561 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.194427764 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.22603825 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.218562887 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.697224337 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.817657598 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.904900116 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.220405216 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333866716 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.403680858 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.238884455 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.218914229 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.800273331 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.224573159 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.276618736 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.218741828 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.620118991 seconds)
  done (took 371.306213504 seconds)
done (took 716.07675915 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.875881 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.86328065 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.97869977 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.855422931 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.817696603 seconds)
  done (took 10.536515846 seconds)
done (took 11.683333957 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.415424624 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.414535723 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285734304 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.41764002 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250492179 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.437658453 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400537963 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.245934266 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.32601381 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.307562843 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.325375937 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.277323562 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.249859009 seconds)
  done (took 18.501835133 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.548720555 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.531524624 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285343377 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.56489315 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261363967 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.559795256 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.432788802 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.444066313 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441621434 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2544668 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234881175 seconds)
  done (took 16.707870566 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.563263586 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.557246888 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.288686773 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.567765078 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.262353654 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.550496472 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.430580639 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.446913356 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.440186504 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256562224 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235348856 seconds)
  done (took 16.747080108 seconds)
done (took 53.1055639 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.231336818 seconds)
  done (took 2.379645911 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.267001511 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.434770879 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.251314273 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.237548721 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.23354943 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.233062863 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.237210918 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.232332645 seconds)
  done (took 11.276716788 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.23028239 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.228683587 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.227620808 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.228332225 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.230607825 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.230518065 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.229797557 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.227762387 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.22734125 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.231126411 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.231131702 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.228280563 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.228544186 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.230899044 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.231387509 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.231353771 seconds)
  done (took 20.822215822 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.23233849 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.230043454 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.229393184 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.230304077 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.230497096 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.229318467 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.231144192 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.229389363 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.229962929 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.231183634 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.230706289 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.230079566 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.230620476 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.229867512 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.231163372 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.232229606 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.229486061 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.23017594 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.234563853 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.230983571 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.232279051 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.231393289 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.23038795 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.231657354 seconds)
  done (took 30.691849982 seconds)
done (took 66.321306239 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.573652649 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.144548237 seconds)
  done (took 9.869312361 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.233334035 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.233867455 seconds)
  done (took 3.61979669 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.233333818 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.233519765 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.232286232 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.233817266 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.23247473 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.23323937 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.233566495 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.233964914 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.233096512 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.233549584 seconds)
  done (took 13.483449088 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.233706424 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.233774252 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.231981354 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.235219525 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.23352031 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.231942961 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.234325301 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.234991965 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.23375976 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.231586352 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.235425306 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.232675007 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.234092279 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.232912118 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.234784244 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.232695987 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.232075355 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.233482861 seconds)
  done (took 23.354648515 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.235009522 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.234872974 seconds)
  done (took 3.621786981 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.232862999 seconds)
    (2/7) benchmarking "second"...
    done (took 1.232613586 seconds)
    (3/7) benchmarking "month"...
    done (took 1.232672179 seconds)
    (4/7) benchmarking "year"...
    done (took 1.233585135 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.232892456 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.232738644 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.233600002 seconds)
  done (took 9.784780107 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.235992871 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.412626157 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.493421393 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.840079607 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.23673263 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.239212233 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.097274944 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.238591263 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.242064525 seconds)
  done (took 14.19039128 seconds)
done (took 79.077337816 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.275890973 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.247004455 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.568637276 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.244117823 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.252384167 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.57449624 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.262302015 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.364273847 seconds)
done (took 37.94575609 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.244304973 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.012643023 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.013646616 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.235218939 seconds)
  done (took 11.417037267 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.222855564 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.241056367 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.21560821 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.33144199 seconds)
  done (took 18.16640338 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.363021817 seconds)
    (2/2) benchmarking "read"...
    done (took 1.571742999 seconds)
  done (took 5.088456352 seconds)
done (took 42.073539215 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237646111 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.238577048 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.237397829 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.235534608 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.237436313 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.234576969 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.235059787 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.2386814 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.23812462 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.238416547 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.238246032 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23872422 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236639792 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235911234 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.235800625 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238065608 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.236017953 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235867774 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.238089673 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.23591915 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237997062 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238939866 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.235884924 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.237050074 seconds)
  done (took 30.846430035 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.238952399 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.237256617 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.238302481 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.239745196 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.235647156 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.23901831 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.239774322 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.236410117 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.239462302 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.239943419 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236902004 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.236548939 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.24083004 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.236736839 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239788216 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.23772692 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.240832112 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236737741 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240453384 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.237531322 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.238909544 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237627288 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23752407 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239935088 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.237209495 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23717405 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.239365135 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.237488271 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240086164 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.238251778 seconds)
  done (took 38.3104891 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.246758771 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.249483508 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.241223874 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.240371903 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.240606747 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.241154611 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.24156757 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.241872182 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.242522494 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.241137195 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.241650595 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.241995874 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.239967767 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.242853048 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.242246063 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.241995125 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.243626764 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.24262501 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.241629494 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.243137014 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.242216952 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.24280935 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.242898246 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.242680972 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.241540335 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.243265372 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.241907862 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.241850762 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.242387744 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.243059125 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.242700415 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.242714822 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.242233704 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.242888468 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.241366378 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.242470932 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.249346324 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.250567377 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.242413022 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.242783154 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.243410188 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.243579958 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.242966639 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.242373851 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.244437035 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.242900258 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.24399936 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.244156452 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.243770618 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.243838407 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.244169513 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.245309527 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.245579635 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.243336496 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.244517593 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.244541186 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.244115249 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.245674799 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.24455556 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.244768306 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.244115993 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.245311893 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.245255696 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.243965249 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.245347352 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.244308244 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.244813863 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.245056671 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.245826465 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.246243346 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.244921291 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.244669149 seconds)
  done (took 90.695306479 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.244440961 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.242735305 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.242339965 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.24301883 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242678909 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.246619027 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243361573 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244563952 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242914076 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246106131 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24565403 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244069841 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242767791 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.245851118 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246787855 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.244685163 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.246110651 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243957206 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.245886311 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247004376 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247570481 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.243225224 seconds)
  done (took 28.545444422 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246165334 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248101625 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.244748072 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247768902 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245576473 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.246940956 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.255851024 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247487814 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246597634 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245055183 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244864953 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247086124 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244971233 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243800413 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244429571 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245649736 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247689385 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245289141 seconds)
  done (took 23.602510503 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.245145522 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.245796668 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.247957983 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244931303 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.246662056 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.247092793 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246216714 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249028554 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.24904156 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.246630206 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.248181641 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248736518 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.248991856 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245608 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248763267 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.246112349 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.24859909 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245796827 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24958248 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247005683 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.247016735 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250574716 seconds)
  done (took 28.609605092 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249833596 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249707823 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.246660824 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.24600036 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.24677101 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.248383613 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.249472505 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.245853427 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.249000864 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.248795094 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247261504 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.249913753 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.246872344 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.248385409 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.247306271 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248092108 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250249227 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.248945957 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24904208 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.246438247 seconds)
  done (took 26.130737729 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.250888197 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251533293 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251361483 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251286647 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251497991 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.250633481 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251292654 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.25117803 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25242164 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252118749 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250820343 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251769563 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252681913 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252151603 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249949402 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251474626 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252513116 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252211154 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.252663956 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251312989 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.253379916 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.252130519 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252307542 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252725784 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.251261017 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251760557 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251725732 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.252625972 seconds)
  done (took 36.21729713 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251348775 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251875867 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.250705829 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.250164748 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.250892834 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.249090378 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.248464771 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.249880678 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.252722656 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.251676437 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.254275407 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.252420002 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253276035 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.252430921 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253230465 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.252819397 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254233695 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.251432525 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252197805 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25034068 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.254498498 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253009688 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.254043749 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.251957681 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251126512 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.255151493 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25137906 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.250968196 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25424153 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252065741 seconds)
  done (took 38.732194254 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.273638226 seconds)
    (2/2) benchmarking "in"...
    done (took 1.273073745 seconds)
  done (took 3.717821183 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.251353147 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256223739 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.254593977 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.252458505 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.252343419 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.254454008 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.254707191 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252582893 seconds)
  done (took 11.20031836 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.253624405 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.25459854 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.255833125 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.255724469 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.255488296 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.25555489 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261667599 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.277584472 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.255905083 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.256961538 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.263378485 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.265705098 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.257403793 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256578216 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.255806841 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256807007 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.255958954 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256287032 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.257524685 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.257139018 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255677317 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258118441 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258380655 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.253994872 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.25738079 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.267384007 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.282360411 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.257182224 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257273375 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.258743796 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.257432997 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.254035265 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.256243355 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.257482102 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.256592349 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.257104355 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266362425 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277240247 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.262692913 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279384411 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258834892 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.255730481 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.258783699 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.259087056 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259207677 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.257616435 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.259383681 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.255942252 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.258792238 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.262127426 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.264767656 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257668808 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.257872739 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261150563 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.25925097 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265593074 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.279184304 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.261285009 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.269055121 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.270612024 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.294032554 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.285757331 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261745093 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.260567473 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270175435 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.285643735 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265936922 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.277287586 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.258096444 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.26005096 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.266176064 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292983639 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.287023299 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.260334205 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259113727 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.25990749 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260483702 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261183433 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268871467 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.283087248 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.259980708 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261328268 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272184353 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284345581 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.260505234 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.261454206 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.260614315 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.261254853 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.261562885 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271218598 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.283377707 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.262121648 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.261814419 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.261309215 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.262462551 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.261744645 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.260306403 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262454707 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.259756776 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.262091556 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261539709 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265621946 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.271333225 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262190131 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262404857 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.268401198 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.28234599 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262739153 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.267815479 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.26414511 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262781692 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.26444007 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.269583605 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.259946489 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266119307 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.271972626 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.263052601 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.263278412 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.263012691 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.262635465 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274658689 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.292482937 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.264176543 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.264095653 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.268228969 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.276827067 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264773528 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.266223068 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.263598949 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.261651904 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.261199029 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.264761907 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.264658496 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.264652471 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264167781 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264610313 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.261728282 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.264359029 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.264220367 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.265245732 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.265561593 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.264992664 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.265790744 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.266485472 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.265226668 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.265308543 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.271488973 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.28464542 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.266286473 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.266000132 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.264185794 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264995752 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.265796049 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.266204747 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.266143713 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265626768 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.265076242 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.265156534 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265447208 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.265719434 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264513379 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.265267791 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269567106 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.265965955 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.270137001 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.265183738 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.263658177 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.266312355 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.266451916 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.265696685 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267323186 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.265179053 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.271061672 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.275510135 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.267160251 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.268015432 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.268905628 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.265116576 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26678092 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267475193 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.271224857 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.276299263 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.267678498 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.273377644 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.288418858 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267787388 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.268469605 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.267013837 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.26664949 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267914017 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.271610665 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.277785063 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280426268 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.296055075 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.269302401 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.27333577 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.270573413 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.272776653 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.272579299 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.268157211 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.268746579 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268716659 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269774207 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267901129 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.269612282 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.268877924 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.267772853 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.269043197 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.26932403 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.268336381 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270273088 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.271090495 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270188213 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.267320369 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269785442 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268518195 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.268896627 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.268026291 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.268614812 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.270767022 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.270661272 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.269526459 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.275294665 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267681631 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270747666 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271926871 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.270754976 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.270442946 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.270894903 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272018162 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.269050017 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277202745 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.292151637 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.271377668 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27728873 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.291278729 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.269437623 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.273410469 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.272378497 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.268712239 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.273790725 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.280305639 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.271497664 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.271856158 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.271715924 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271560335 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27323129 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.277447635 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.290421727 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.272118027 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.272209056 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.274102113 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.270386589 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.271235692 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.272798858 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.271516468 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273420858 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272483224 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.271657744 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27189935 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.272561277 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.271804611 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.272189177 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27640985 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.281585115 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.278417788 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.271834363 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.274432715 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.273121345 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.27803966 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.272782103 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.272417222 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.273427505 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285884589 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.299626076 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279117429 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.294393274 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.272942877 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277818348 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.296224581 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.278716923 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273898901 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275896462 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.274044694 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.273315481 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.271507079 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274655192 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.274595618 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275135232 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.275652091 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.280988326 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.274177096 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.274736596 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.275414475 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.275006277 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.274636521 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.274766293 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.275794483 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.277463713 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277249462 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.273684957 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.274456206 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281114618 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295610936 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.275783164 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.2757058 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.275715407 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.274662189 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.277494051 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.275788125 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.279328166 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.285416944 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.279079062 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.285559908 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.277363167 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.285318057 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.275611915 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.279645977 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.285124527 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.273173879 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.27608759 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.276805465 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.276242087 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283139259 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.297641261 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.277173354 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281362652 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277373389 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276369744 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.277037574 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.276636017 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.277143287 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.277611138 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284331929 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.299631366 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.281002853 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279157879 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.274140274 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.277164578 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.278000705 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.275628142 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280347245 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.277349363 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.278521865 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.278732108 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.277799448 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.276888673 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.277323504 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.27789883 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.275494052 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.278450771 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286825217 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.300612773 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282891809 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.279141706 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.284406439 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.299856401 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285337887 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.301160267 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.279584484 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.279034389 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.279685414 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.28108939 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.277837944 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.279336743 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.27983442 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.280797217 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.284275705 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.27963555 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.281307587 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.28082957 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.280586404 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.278937811 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290709847 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306540867 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.282308317 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.286018695 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.279352944 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.282078332 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.285307682 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.280602175 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.279222355 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.284722533 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293416759 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289053931 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.281011618 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.282560432 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281948387 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282631448 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.280978403 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.28349568 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.282966368 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.281937566 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.281440382 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.281339499 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283631889 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.28209926 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.28279853 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282167659 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.283624047 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.294440436 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.30332508 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.282958473 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281834283 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.282569976 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.281340457 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.282179679 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.281917302 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282245281 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282673894 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.283865009 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291386281 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.289958647 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.283997218 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.280064846 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.283235464 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.282295725 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.283276155 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282229116 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.282679456 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282241965 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.283391907 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.281937261 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.282689317 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.282330007 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.283279628 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.28318114 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28357276 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286543207 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.291162433 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283385867 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.28106983 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.283316976 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284331535 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.282139183 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.283677842 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.289939773 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.308587406 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.29548027 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.292360612 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.288037949 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.283795673 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288087657 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.292746837 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.284605406 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.284691192 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.285824906 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.284492494 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.286353644 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.28799337 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284788215 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.291987413 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.305671489 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.284984527 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.292875749 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.306323496 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.286873987 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.287629162 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.289593452 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.284843282 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.283786161 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.286432843 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.284914921 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292597747 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.306423652 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.287007934 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286049494 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.283070435 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.287818428 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290237209 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286888707 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.28560011 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.283190759 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.287906101 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28603364 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285710596 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.28449836 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.286046328 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.286902326 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.290821475 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.294918419 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.284424649 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28911988 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.287107721 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.288194192 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287910642 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287271734 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.284936666 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.285125763 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.28657356 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287882486 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.286786818 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.290529529 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.287098077 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.289787915 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.289856636 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.288256563 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291505171 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.300314698 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.295966398 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.284682537 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.288264171 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.287766525 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.291826499 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289844595 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.289046146 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288542559 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.289697753 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.2896026 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.289560595 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.289137679 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.293358201 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306240893 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.310433972 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288375961 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.290188987 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292479778 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.28996948 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.286917014 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.29054296 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.291958106 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.292802607 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.297373189 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.28988985 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295515609 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.310017122 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.292594426 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.294883118 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.293698394 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.298042431 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.291917456 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291563378 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.290275339 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.29458431 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.30796374 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291361667 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.301841072 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.324165357 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.310259646 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.293066296 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.290966717 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.290300605 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.29097918 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.29210934 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.291240658 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.291721873 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292397411 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.292116342 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.29221372 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296340291 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.291467096 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.2910201 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.291681382 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.290819523 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.291440051 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.290573102 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.29216124 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.293454677 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.292680266 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.292462275 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.292284976 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.292325824 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306427259 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.321427981 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.292312809 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.292214988 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.290616139 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.295292123 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.297070465 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.305577148 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.301001826 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.292545889 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.292460153 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.294169936 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293865458 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.290311353 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.292836406 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.293700286 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.293973637 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.290740592 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.307293176 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.321190678 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.296963269 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293709971 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293474234 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.294412326 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294612051 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295105742 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.293591953 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.294648762 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.295567219 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299310121 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.29457192 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.29487583 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.298845571 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.304145434 seconds)
  done (took 762.962514615 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293837177 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293424248 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292654046 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293603143 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293120171 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293373544 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294238104 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294549376 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.293317439 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293765772 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.291477719 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293430149 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29286752 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.294002284 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293751596 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.294005165 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293834451 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293967736 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29222266 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293915675 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29440639 seconds)
  done (took 28.372942147 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.297456112 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.293427043 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294417742 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296762038 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293190614 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.297200307 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.294942714 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297802949 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297883755 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294417727 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.297480443 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298250907 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.294029428 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.295127811 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294656508 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295946007 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.297950127 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293100763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.297763639 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294992459 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296922032 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.293608339 seconds)
  done (took 29.716797404 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.298314951 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.298704921 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.297143219 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.295395308 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.298070753 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.29635074 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.29733127 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.297217003 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.297803499 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.300536704 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.296778693 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.299108203 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.304904104 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.304997761 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.299486552 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.299130634 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.443112908 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.299122306 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.300214068 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.29949766 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.296556446 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.304205481 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.318446324 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.296475945 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.298123581 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.299066607 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.300053921 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.299214912 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.299618025 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.301183258 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.303574294 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.299265835 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.298395849 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.301311094 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.299322027 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.301648036 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.303398569 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.299605217 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.297999409 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.30059405 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.311577502 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.324081341 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.300263822 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.305640437 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.323996741 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.300122784 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.3057287 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.308336379 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.29848752 seconds)
  done (took 65.131458343 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.301277881 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.302110773 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.299873334 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300351636 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.300698351 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.30021103 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.30198015 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300474017 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.299526632 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.30039813 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.301914297 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.298723391 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.298951197 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.301617885 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.300325913 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299168258 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299179463 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.300319352 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.300446062 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.298837325 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.299848158 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.301391174 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.302624039 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.300335647 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301917037 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.29905053 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299499619 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.30205931 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.300200769 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.300476708 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.302487536 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302953579 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.303888034 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.299945473 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.300642619 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.302737532 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.303993496 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.300302717 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.30254758 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.30112373 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.302373352 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.303842356 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.303523898 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.303721461 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.302861743 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.300551223 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299844371 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.300152422 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.302150723 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.303318095 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.304712775 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.302830812 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.304693717 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.301940105 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.304215594 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.304920217 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.301067287 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.302475203 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.304553315 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.301737284 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.302679191 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.305099158 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.30222625 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.304719789 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.30446493 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.3038857 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.3020606 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.305404989 seconds)
  done (took 89.735435738 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304722458 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.304162595 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304332204 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305681987 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30563287 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.305776163 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.306748278 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.306400414 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305182139 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.307302458 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306848655 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305348891 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.30579263 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.305331379 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.306463056 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.306226482 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306680316 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306021767 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305753482 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306738269 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.305812886 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305229676 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.305254281 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.307546043 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.307013882 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305802796 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.30623651 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306453183 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307496517 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306044577 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.308058502 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.306443286 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.304277986 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305945962 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.30711698 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.306713137 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307482017 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30539136 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.307302918 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.305750285 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.308024815 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306271893 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.306513456 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.306979178 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30658105 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306582047 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306566759 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.307529483 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30819102 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.306678191 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.306006186 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308156797 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306931326 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.309386138 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308168036 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.306731782 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309466712 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307998994 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308514091 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308279349 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.308546946 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.308456595 seconds)
  done (took 82.231148712 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308998409 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.308841468 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.306853927 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.305513515 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308649582 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.306457371 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.307816959 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.30757021 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.310598051 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.309796582 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308652383 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307614028 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306708719 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310505322 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.307719113 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3067379 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.307920766 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.306807532 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310545328 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.308687164 seconds)
  done (took 27.383547198 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.307656796 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310898738 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.3070737 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308919565 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.310475435 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.308230624 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.311046836 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311776794 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30832858 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310443896 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310574345 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.312404609 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309459666 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309154014 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310694722 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308570553 seconds)
  done (took 22.178212972 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.307988922 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.31085296 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.310903617 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.311227418 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.308619033 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.30865098 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.311947462 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.308421477 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.308771479 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.311058937 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.312286801 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.312764188 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.312133852 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.311634459 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.308180021 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.311080367 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.309192367 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.309823426 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.311972407 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.311589921 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.310084155 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.310510662 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.311225963 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.312906221 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.310126283 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.311102184 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.311051597 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.310511347 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.310674421 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.312373799 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.3108254 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.310820561 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.310850874 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.31026633 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.312844681 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.311143851 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.313361015 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.314114669 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.312699425 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.313317446 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.312989904 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.311630777 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.314301099 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.312990102 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.312196138 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.315074017 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.312353677 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.311184888 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.311873222 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.312326738 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.315130931 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.313506229 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.314336914 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.314740974 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.315834185 seconds)
  done (took 73.36569155 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314227916 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315737907 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.312674691 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.314724741 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314087334 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.313668759 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.314609132 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.31060083 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311815296 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.314513666 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.312230732 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.314767003 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311354942 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314516688 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314051319 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314911299 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.311862291 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.311629432 seconds)
  done (took 24.868265284 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.313695648 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.313005822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.315043151 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312162053 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.313494545 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31541513 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313274277 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.31525348 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316693615 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.313794901 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31185305 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.315877905 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316364604 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.317829401 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.313307755 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312950751 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.317338991 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316433979 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.315145654 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.313744513 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.31702997 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315588442 seconds)
  done (took 30.153028474 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.315116754 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.315706826 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.316368385 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.335861255 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.33787087 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.341556016 seconds)
  done (took 9.190155685 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325677004 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317846795 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314840546 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31899313 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317677376 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315055982 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315266639 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314744347 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317436772 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316529529 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315251303 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318576275 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317704095 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315365009 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319474767 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318829167 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317001699 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315663887 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316470367 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31711186 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316465824 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318698118 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315492664 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316945843 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317279274 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316322723 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318657368 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317632123 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317126612 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319322296 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319991488 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316423541 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319735378 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317006867 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32020781 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320068438 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318724787 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320917892 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32035982 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319251279 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320306218 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319290372 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320452001 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318332225 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321037411 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316434907 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318068531 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316990125 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317955051 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321376803 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320827502 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319035143 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321688856 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321103278 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32215483 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322016446 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31816513 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319823625 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321595612 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319816138 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318945174 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321560875 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318421175 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31879959 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322063023 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31910801 seconds)
  done (took 88.283281281 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319488601 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.320422211 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319226428 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320886329 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318612933 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319633739 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319772317 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319337543 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320168947 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319955626 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323122804 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320363306 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321669588 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320213235 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319954701 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319674216 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320773104 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319362561 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320869709 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32376586 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319839504 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322055151 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320672426 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32034192 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320895391 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323330565 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321213041 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320260063 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321700495 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321405126 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320663668 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321369829 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322761055 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.322617733 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320991527 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322322182 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320799642 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322367436 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321425623 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32413307 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322138787 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324659269 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322411586 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322052179 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321413299 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321931226 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321081378 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323181508 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323349743 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322534061 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322594562 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323241662 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323176326 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3223561 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32239632 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32238339 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32344461 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323004491 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323684721 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324895068 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323569007 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321619344 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326371008 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323777867 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324294563 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323263969 seconds)
  done (took 88.472636705 seconds)
done (took 1779.81137458 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.380349793 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.413193796 seconds)
  done (took 14.029303733 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.489108101 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.440758974 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.324291629 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.368530949 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.325618239 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.323360253 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.336437727 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.32529544 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.323634497 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.323576618 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.324142859 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.517742614 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.338150447 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.326310637 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.325081643 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.418946572 seconds)
  done (took 43.078102266 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.356967868 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.333300388 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.461263402 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.352023729 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.357650703 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.543785584 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.396159735 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.331449022 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.528294755 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.377267328 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.123512321 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.358083717 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.331141387 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.602480222 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.353720222 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.543870142 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.613089962 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.130849345 seconds)
  done (took 31.334624078 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.861218595 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.362766401 seconds)
  done (took 9.464513417 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.325796864 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.350895365 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.362542611 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.323730963 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.358144472 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.363820381 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.368933463 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.367257153 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.338795145 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.339311916 seconds)
  done (took 64.749241364 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.354905156 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.331300421 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.33250632 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.330560779 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.322821943 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.323491586 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.330391473 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.329252086 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.626234244 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.474775304 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.332636826 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.342218675 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.353495064 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.333964954 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.330525861 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.371888015 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.512626668 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.330244973 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.329043337 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.337149207 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.331829601 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.422728268 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.379560782 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.330995246 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.477596302 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.63470599 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.33514179 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.339695603 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.490249599 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.332066873 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.331810024 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.332648265 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.334830241 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.9714351 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.838559828 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.342954641 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.379573943 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.340981462 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.330705802 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.479551794 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.334435795 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.340350431 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.327628818 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.834682244 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.48181441 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.461953138 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.76732492 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.354791412 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.336297137 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.400977248 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.334524734 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.335823766 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.367291544 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.14482483 seconds)
  done (took 113.153668697 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.370857672 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.718197142 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498558992 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.348997971 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.132136269 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.038375899 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.346303735 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.663385403 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.375769233 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32828962 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.677034277 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.887104841 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.354072392 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.342598895 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.838555191 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.384447273 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.328103743 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.239412351 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.349587795 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.333204875 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854586258 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331851301 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.327967628 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.359692181 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.369638106 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.831772599 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.005152481 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.929601158 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.351983657 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.328112992 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.84621556 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.354707908 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.370526927 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.32835928 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.614737165 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.736188931 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.727901451 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.350435272 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.334088424 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.331567428 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.340815895 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827849602 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.741189557 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.348838123 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.330578116 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.852928914 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.349520927 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.334136515 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.330781579 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.545103985 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.176107995 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.330855144 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.966665864 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.33255502 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.63194149 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.39664938 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.400036387 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.862462566 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.350847956 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.569607794 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.361334595 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.333494067 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.339691748 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.33518985 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.335851829 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.72530459 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.734032896 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.337559314 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.723647171 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.862464076 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.350909882 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.93285022 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.275333877 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.339086927 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.390941912 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.33153196 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.066593913 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.873128716 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.357387556 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.330835291 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.712025597 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.355026585 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.678276219 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.350588009 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.33228882 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865426667 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.334503491 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.389345384 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.333535494 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.352203353 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.10637438 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.341807102 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.625461285 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.369939478 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.33283141 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.33257611 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.35499054 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334054242 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.353333182 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.33518478 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913106656 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.362257523 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.325595773 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.354690264 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.349031432 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.333754289 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.33450958 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.334962931 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.564815433 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.799232834 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.354476651 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334026198 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.333661738 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.359201024 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.376154528 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.340899287 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.689397125 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.357192444 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.334694921 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.337899754 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.084362536 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.35835744 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332738082 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.335122567 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.281985396 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.544524235 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.368797715 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.335548792 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.335590002 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.356677024 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.768187578 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.357783342 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.368431198 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.334941794 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.092054787 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.395605497 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.365755708 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.834900428 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.346067841 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.343260527 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.340491962 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.335678365 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.633198855 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.628586298 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.62631255 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.338684712 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.35525145 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.069984939 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.373636409 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486165336 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.358124896 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.320767533 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.537502631 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.533220897 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.33560952 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.963235909 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.337743461 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.564100475 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.34084165 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.645513947 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.878534739 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.356438133 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.33911325 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.093516854 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.060027474 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.96243685 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.337966086 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.686852958 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.315123881 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.820273743 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.338458162 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.33946463 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.916433135 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.339290621 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.340354843 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.337563549 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.33695091 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.401431159 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.514374003 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.713127044 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.339336853 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837847722 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.430695897 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.347474212 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.348700655 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.341062832 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.685008577 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368773266 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.340831414 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.358324997 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.341564172 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.340771118 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.859871797 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.250990493 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.341139886 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.496166345 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030050028 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.359598833 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.340224213 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.990375403 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.588059921 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.898915529 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.401025635 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.697977726 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.36159077 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.380987153 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.090025032 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.360084311 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.861004136 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.363488099 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.34083541 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.98930248 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.361119378 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.396776077 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.340631197 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.349471138 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925511588 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.361049449 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.345162693 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.760650335 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.362945813 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.623125101 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.341914596 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.347800226 seconds)
  done (took 1115.222499934 seconds)
done (took 1392.270007329 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.342497465 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.348524209 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.327343699 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.347251467 seconds)
  done (took 26.624001238 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.349942496 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.346897848 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.347410187 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.346693891 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.348876146 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.347635169 seconds)
  done (took 9.345272316 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.616120587 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.346305541 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.34629762 seconds)
  done (took 19.565294598 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.578877744 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.809406115 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.759588059 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.932388799 seconds)
  done (took 11.339925802 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.348389674 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.348756409 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.349274492 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.349919444 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.352184867 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.353909319 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.351479116 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.350067412 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.353469566 seconds)
  done (took 13.413426655 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.84350746 seconds)
done (took 87.391986485 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.411468275 seconds)
    (2/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.360405353 seconds)
    (3/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.326595809 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.363664583 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.009835084 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.324014879 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.62131072 seconds)
    (8/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.376732834 seconds)
    (9/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.144500123 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.322962745 seconds)
    (11/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.229447111 seconds)
    (12/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.351193733 seconds)
    (13/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.34316651 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.743143345 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.402858224 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.323402429 seconds)
    (17/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.600743584 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.390600757 seconds)
    (19/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.940099545 seconds)
    (20/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.645197291 seconds)
    (21/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.446509206 seconds)
    (22/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.14112103 seconds)
    (23/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.400696446 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.378612235 seconds)
    (25/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.354251064 seconds)
    (26/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.370086818 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.356197016 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.667951485 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.436117172 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.855443568 seconds)
    (31/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.393373406 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.38060927 seconds)
    (33/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.324332134 seconds)
    (34/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.005882917 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.796303563 seconds)
    (36/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.343952499 seconds)
    (37/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.35524085 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.287664978 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.844537379 seconds)
    (40/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.538491131 seconds)
    (41/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.34486542 seconds)
    (42/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.448432817 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.449292525 seconds)
    (44/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.34228488 seconds)
    (45/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.977241915 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.344586304 seconds)
    (47/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.740118293 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.172735676 seconds)
    (49/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.824033599 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.018441687 seconds)
    (51/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.484328998 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.919592909 seconds)
    (53/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.361077447 seconds)
    (54/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.457450904 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.458136116 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.060941462 seconds)
    (57/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.328609398 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.608285147 seconds)
    (59/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.296437849 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.412684808 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.328713078 seconds)
    (62/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.374116259 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.328663098 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.427944198 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.398007936 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.349971692 seconds)
    (67/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.393595203 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.364794843 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.348404363 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.260047331 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.238976362 seconds)
    (72/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.374942319 seconds)
    (73/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.364445179 seconds)
    (74/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.413944075 seconds)
    (75/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.329677833 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.394778117 seconds)
    (77/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.451062732 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.231328981 seconds)
    (79/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.09769378 seconds)
    (80/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.354277099 seconds)
    (81/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.434319766 seconds)
    (82/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.431488447 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.655744429 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.367386552 seconds)
    (85/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.098994648 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.440037637 seconds)
    (87/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.725045967 seconds)
    (88/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.330470326 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.805438101 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.386592569 seconds)
    (91/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.272270944 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.351532641 seconds)
    (93/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.455793498 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.368762196 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.437664251 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.391219855 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.352624223 seconds)
    (98/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.511566681 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.982250518 seconds)
    (100/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.081115189 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.3369446 seconds)
    (102/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.342967033 seconds)
    (103/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.350679872 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.35186978 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.790436242 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.586212773 seconds)
    (107/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.968044914 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.352303154 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.351921581 seconds)
    (110/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.331969562 seconds)
    (111/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.725002292 seconds)
    (112/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.605005869 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.478466522 seconds)
    (114/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.859865415 seconds)
    (115/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.351306202 seconds)
    (116/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.946324453 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.170781948 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.332877075 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.48183846 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.374173826 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.191661756 seconds)
    (122/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.353718062 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 1.886491348 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.466705159 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.375197446 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.235506577 seconds)
    (127/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.333453459 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.654506034 seconds)
    (129/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.233682606 seconds)
    (130/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.471049204 seconds)
    (131/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.371587911 seconds)
    (132/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.135883124 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.374204563 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.250649559 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.397290736 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.63317673 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.395615443 seconds)
    (138/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.17170345 seconds)
    (139/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.131663482 seconds)
    (140/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.373867013 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.941199517 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.353057564 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.350595908 seconds)
    (144/309) benchmarking ("sort", Int8, false)...
    done (took 4.417882338 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.209208652 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.62056481 seconds)
    (147/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.333652495 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.458525645 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.362124089 seconds)
    (150/309) benchmarking ("sort", Float32, false)...
    done (took 5.397414975 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.752237857 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.2400082 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.38070836 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.335759771 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.334449336 seconds)
    (156/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.543029594 seconds)
    (157/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.227844724 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.900934503 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.342685789 seconds)
    (160/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.439704642 seconds)
    (161/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.353688041 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.37664497 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.394463807 seconds)
    (164/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.631221178 seconds)
    (165/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.373587184 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.350275876 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.711282226 seconds)
    (168/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.280289911 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.353826092 seconds)
    (170/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.377167172 seconds)
    (171/309) benchmarking ("sort", Float64, false)...
    done (took 5.749201728 seconds)
    (172/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.481711094 seconds)
    (173/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.45276008 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.375408326 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.174421039 seconds)
    (176/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.958840067 seconds)
    (177/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.550538604 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.227321145 seconds)
    (179/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.366660654 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.355347725 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.753838251 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.231751187 seconds)
    (183/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.335297163 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.375691448 seconds)
    (185/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.339761676 seconds)
    (186/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.40214098 seconds)
    (187/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.158749928 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.382539347 seconds)
    (189/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.657510987 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.419744077 seconds)
    (191/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.239382756 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.369712015 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.356452944 seconds)
    (194/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.386418647 seconds)
    (195/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.336833896 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.441534421 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.355633867 seconds)
    (198/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.433797708 seconds)
    (199/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.507649569 seconds)
    (200/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.480752291 seconds)
    (201/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.337666314 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.433372489 seconds)
    (203/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.481787967 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.357246849 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.101069597 seconds)
    (206/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.913141728 seconds)
    (207/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.854338854 seconds)
    (208/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.374363368 seconds)
    (209/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.628632522 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.356770689 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.466925453 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.383602293 seconds)
    (213/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.338743747 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.02179295 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.561456348 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.42510238 seconds)
    (217/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.462714364 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.372066819 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.142776747 seconds)
    (220/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.896668494 seconds)
    (221/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.930482063 seconds)
    (222/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.121195542 seconds)
    (223/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.366607075 seconds)
    (224/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.691597227 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.796410975 seconds)
    (226/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.395356664 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.382280806 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.423119787 seconds)
    (229/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.443558705 seconds)
    (230/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.369728136 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.899842835 seconds)
    (232/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.358383269 seconds)
    (233/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.384600195 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.401342322 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.235973258 seconds)
    (236/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.339870892 seconds)
    (237/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.343027874 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.339966072 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.377193922 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.379153413 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.360084585 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.375816568 seconds)
    (243/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.339788392 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.340465137 seconds)
    (245/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.363369526 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.505517505 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.34046653 seconds)
    (248/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.461421345 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.889054219 seconds)
    (250/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.76615892 seconds)
    (251/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.425206679 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.597323754 seconds)
    (253/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.139213556 seconds)
    (254/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.486187443 seconds)
    (255/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.177805469 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.486166662 seconds)
    (257/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.419003022 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.386732876 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.458109122 seconds)
    (260/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.102874408 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.746091748 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.86025512 seconds)
    (263/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.417290345 seconds)
    (264/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.558010364 seconds)
    (265/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.409521482 seconds)
    (266/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.761604995 seconds)
    (267/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.789007187 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.316978842 seconds)
    (269/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.115440059 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.384275867 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.346222927 seconds)
    (272/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.796944182 seconds)
    (273/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.345747667 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.374803202 seconds)
    (275/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.44532899 seconds)
    (276/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.021273793 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.223080543 seconds)
    (278/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.443332978 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.067664793 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.361713127 seconds)
    (281/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.40353188 seconds)
    (282/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.008860611 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.475913079 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.182766018 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.356836877 seconds)
    (286/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.468639636 seconds)
    (287/309) benchmarking ("sort", BigInt, false)...
    done (took 6.362075059 seconds)
    (288/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.701424007 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.76136841 seconds)
    (290/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.390491832 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.306756223 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.40459672 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.344416777 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.060643433 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.343567647 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.255126201 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.122129124 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.781905124 seconds)
    (299/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.476556602 seconds)
    (300/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.446116264 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.424368556 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.387530897 seconds)
    (303/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.344387198 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.684959244 seconds)
    (305/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.803202485 seconds)
    (306/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.594248847 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.385329453 seconds)
    (308/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.041233499 seconds)
    (309/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.14338951 seconds)
  done (took 1061.836884624 seconds)
done (took 1063.099588132 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.398637351 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391593265 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.377296952 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.397639821 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.486384567 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.398191398 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.387752502 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.379538012 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.423799504 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.424506054 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.374325149 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.398270053 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.376924614 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.376068322 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.376207068 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390299087 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.57297421 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.375974314 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.393292563 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.387151482 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.393713624 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.376192743 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.426691954 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.3979487 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.38212888 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.381598494 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.379708289 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.396920006 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.489913245 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.379090996 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.381177154 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.388042172 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.575158757 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.376278331 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.372718143 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.396507424 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.388024246 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.387824047 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.381841736 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.409725316 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.051159827 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.397115713 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.378739827 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.378126336 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.379104456 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.383089944 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.379064109 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.38647835 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390729191 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390937317 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.038393949 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.413438679 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.379939287 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.379192161 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.390660165 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.378204716 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.38226528 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394811701 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.398180909 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.395080578 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.561916696 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.384859678 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.38302956 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.395671134 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.386314375 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.080822148 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.395684584 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.384187048 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.050889228 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.405582177 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.078448944 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.40885422 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.381905339 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.393773203 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.412083014 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.575737696 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.376049429 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.380598236 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.388292352 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.378982245 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.391201052 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393104177 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.385469632 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.381409715 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394088775 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.404399894 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.393474989 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.382384862 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.391058508 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.400183547 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.388608686 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.392140877 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.385303695 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.377028983 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.391932158 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.386350886 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.384395427 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.384616963 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.387765188 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.394034387 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.05281455 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.418757152 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.379580252 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.381353525 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.38283878 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.397463684 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.0539804 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.402901458 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.404928277 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.429430853 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.383571885 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.566500242 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.385980374 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398242986 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.391998323 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.387855695 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.379201915 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.570611779 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.047201857 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.41963071 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.384120791 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.381010637 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398554241 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.386002864 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.380267973 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.586097139 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.386053971 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396883737 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.5051013 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.394730683 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.414807114 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.382442191 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.387349645 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.40638004 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.399460214 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.415368302 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.387462807 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.398655829 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.400577794 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.382362396 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.394721035 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.39479315 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.386497124 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.392029022 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.380538514 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.411424081 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397507399 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397913883 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.405900492 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.506686778 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.383648002 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.576491904 seconds)
done (took 235.931419131 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.443462228 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.381672487 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.473083933 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.382378565 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.492349477 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.485366809 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.380411908 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.380781873 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.379171381 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.75762832 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.379956277 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.380807695 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.378810314 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.380199719 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.463465947 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.381617793 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.379805014 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.728984047 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.383522539 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.453188988 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.373960035 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.379988595 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.383479008 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.769678372 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.382773853 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.379517257 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.453412492 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.382549921 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.725519525 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.379441061 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.377537846 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.73276859 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.473646502 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.399877782 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.393526155 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.391069638 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.496826045 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.405892353 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.464277897 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.463548725 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.475009224 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.422863466 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.378849737 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.385004002 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.38488464 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.384283318 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.382375166 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.411054358 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.384281506 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.382180756 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.724502911 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.393174594 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.383272317 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.384094359 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.384360167 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.413840887 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.382883355 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.38458502 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.474982999 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.386135143 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.448834572 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.762630589 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.768860471 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.384682364 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.38656579 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.38136675 seconds)
  done (took 151.803044741 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.451243765 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.459543686 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.505792579 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.406224298 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.436116463 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.511573264 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.40587215 seconds)
  done (took 11.467840724 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.390595715 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.386689419 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.434852389 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.435328927 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.385757776 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.532008244 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385775535 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.396500897 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.384235527 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.438507664 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.38791872 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.387392094 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.394172941 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.388107842 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.433549842 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.398093591 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.501141183 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.388941391 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.387132781 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.543348437 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.385538825 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.39482988 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.440839063 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.397602059 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.387545112 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.392975601 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.951925242 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387790478 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.384302454 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.388205918 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.386198441 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.425645414 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.387541461 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.388240277 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.385026739 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.503557728 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.388240897 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.384473641 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.388390815 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.389235177 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.388608394 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.38923423 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.389990628 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.386732411 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.387894958 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.410921334 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.38996034 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.390021162 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.388232108 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.38956646 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.43944629 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.38939604 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.386745622 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.387104878 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.444969966 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.396828623 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.390453626 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.387316218 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.389971625 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.387162697 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.546862534 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.436998449 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.388125285 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.436593295 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38995784 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.390838616 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.389814255 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.392108657 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443557115 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.391037692 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.44753153 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.38791567 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.543351494 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.412178503 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.392665935 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.393692406 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.392386981 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.390027714 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.386863672 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.396411387 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.389594524 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.392544507 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.396967804 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.38954502 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.389027082 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.493933433 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.500272976 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.38938112 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.403255487 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.397467933 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.390111376 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.443284094 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.392186512 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.390060323 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.442282365 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.506734516 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.447707704 seconds)
  done (took 158.628554538 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.397003397 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.398536629 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.393038894 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.408012315 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.391469459 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.391874167 seconds)
  done (took 9.679274397 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.394955337 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.394024586 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.392413118 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.393971724 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.393079115 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.393197312 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.393487737 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393781545 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.397473905 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.3932985 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.393426365 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.393931667 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.393260196 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.39322003 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.392911576 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.394078956 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.392846725 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.391269542 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.393398431 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393825904 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.4875598 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.394738353 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.394587558 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.395481692 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.398739414 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.394676208 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.402306005 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.394492788 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.393661826 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.399002761 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.418439007 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.395197446 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.396289333 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.402382483 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.400155568 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.396737399 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.400186954 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.396513988 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.392650193 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.396263604 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.397356488 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.395740288 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.395893441 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.397438488 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.398548012 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.402778252 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.403462595 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.402846946 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.397642262 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.397667617 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.397346599 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.397035715 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.396047954 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.399063521 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.397138226 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.421394575 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.403432837 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.397955309 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.397210776 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.398305672 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.399618753 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.397697099 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.39927819 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.402262458 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.405388844 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.399139113 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.399538292 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.403024426 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399303622 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.397237023 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.397668928 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.395499212 seconds)
  done (took 103.013916188 seconds)
done (took 435.882539206 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.59140517 seconds)
  done (took 7.895919033 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.856153094 seconds)
  done (took 8.161487015 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.290728997 seconds)
  done (took 25.603455857 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.402408377 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.456512389 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.395950098 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.397586889 seconds)
  done (took 26.958739972 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.728509425 seconds)
  done (took 8.033637328 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.391615834 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.424105905 seconds)
  done (took 14.122349685 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.777039825 seconds)
  done (took 8.082451882 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.549003507 seconds)
  done (took 7.859843369 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.416122602 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.415107995 seconds)
  done (took 14.150755413 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.371202277 seconds)
  done (took 7.67524511 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.779890682 seconds)
  done (took 9.085803766 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.390443476 seconds)
  done (took 7.69625853 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.474534501 seconds)
  done (took 7.778259774 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.671094518 seconds)
  done (took 10.975806284 seconds)
done (took 165.387731335 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.889977474 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.399697369 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.400355252 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.397699014 seconds)
  done (took 27.392954978 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.434259259 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.431576499 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.435890448 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.443057984 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.437270069 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.433354216 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.425443298 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.424908387 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.443451523 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.43681528 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.435473628 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.435477337 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.432936413 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.425212201 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.436318797 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.434329882 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.445679523 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.434820179 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.425990127 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.437019011 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.401621929 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.44459577 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.436683481 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.40016587 seconds)
  done (took 35.680748035 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.921107223 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.47277541 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.557814277 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.452263678 seconds)
  done (took 7.709733979 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.451501951 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.454796179 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.465744136 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.504019397 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.530887511 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.463713612 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.426163936 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.421641624 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.41011301 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.45455806 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.529799646 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.470074273 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.540096556 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.401828931 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.589933065 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.401472706 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.402030671 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.452880491 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.506091256 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.539437165 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.403826499 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.45411388 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.459339736 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.473065392 seconds)
  done (took 36.515524968 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.404300471 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.42083101 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.402572947 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.401968816 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.410968349 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.402336391 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.402565604 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.402230119 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.402171691 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.40795993 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.401547287 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.415175386 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.402486599 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.402356457 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.408695921 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.404865612 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.409284104 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.402229591 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.402571423 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.40834883 seconds)
  done (took 29.424513983 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.397548434 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.250333103 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.746437754 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.651435989 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.39771282 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.403043864 seconds)
  done (took 28.155747209 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.48872525 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.666988842 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.404273849 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.838806064 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.932587327 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.42430041 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.404066082 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.685377114 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.077044019 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.093230401 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.479667178 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.485199326 seconds)
  done (took 21.29235019 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.406198269 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.404827941 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.404356277 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.440945085 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.470770257 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.427990365 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.411157817 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.397065427 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.478124672 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.494469934 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.429446794 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.471551097 seconds)
  done (took 38.549796319 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48645492 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.448313229 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.669199831 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31090779 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164279956 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611588465 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.320616976 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.870738827 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.412525185 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674240979 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402573828 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497400913 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.658130554 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40298272 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.407385781 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.548874598 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648719609 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969404736 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403178716 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.001705985 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433865462 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409560986 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.145445859 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.442710749 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612382788 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.385022922 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.661365053 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.177495457 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750058404 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416922563 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412793594 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402765448 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675397773 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160825318 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526980287 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412191446 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.294974568 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.960065488 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.381249115 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.115119763 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423417016 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411981196 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41428702 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403150472 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.337239486 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419651961 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878910954 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.416960126 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.114173495 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405013383 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414415069 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498279744 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.406219266 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.394469722 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.571803485 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.411248848 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.399784902 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409206952 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972055984 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.670087209 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412909253 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.365555423 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.904312243 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.020563004 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187665827 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.534953545 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.407609358 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406934273 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349270239 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.118986771 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428740646 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5490774 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.42927821 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.097745894 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32135774 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.441834746 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.35464846 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039242684 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406445366 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.368912574 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633325473 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.180505985 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344994551 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.351521665 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.339331929 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.297402848 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421636985 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.97961635 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420269746 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.870970238 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.424989747 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423407502 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428895391 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.62996607 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.286164612 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404979257 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.428856579 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537056194 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435187923 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.866750117 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361149515 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.411682917 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664516061 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.617766297 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406322867 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.567478437 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662192317 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415312045 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.453231139 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.4192213 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.424609819 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.102893874 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.447594795 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412558201 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426115681 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.183174817 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279800104 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415458936 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.51617758 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.421901531 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688202122 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.301084868 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294257958 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478118686 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412246224 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409438958 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.002995432 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.26081339 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.291180265 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.404582486 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425008298 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.426296257 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.408373535 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403552958 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.407210763 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422659929 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.187822596 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.633877941 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407873633 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716555552 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344160443 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557999617 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.455270862 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.634188271 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.798701842 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.431062787 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670707349 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423263875 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.425121627 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427672354 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428784012 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505491204 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431251272 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.42397892 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.675096761 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.413251347 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.413997725 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.025095773 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.192130002 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409596459 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.416745685 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.36729649 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099625281 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417439225 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.414763997 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303659651 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.423795534 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4770516 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.416678599 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.421392929 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.657811423 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.432823951 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.422220825 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.412966773 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636450714 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421212419 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.946345694 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490699538 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.639675311 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140536225 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45379581 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.344813409 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.123964366 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.105045428 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412321482 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.608851934 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.412748428 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421802872 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422731289 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.088947821 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.113560575 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441294543 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.95184605 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.418088829 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.42363657 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.418649764 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412128784 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.575500897 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.46655522 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414029471 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.432072721 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55699781 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.426772522 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.347023162 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.928064206 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.418986259 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413292996 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.198911275 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447058506 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.952210333 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929963413 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674405298 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.272247813 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432998144 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.1216026 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.450055515 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.4172576 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413821539 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42917554 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.434257013 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424132135 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.425042688 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.036488202 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.8979523 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981009837 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274221706 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085296499 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506741503 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.426415066 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.309419538 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.884793452 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358839441 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.0749806 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638814196 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.906123645 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41983352 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647487668 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.805825852 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.338468179 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42557531 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645356822 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479544681 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.425341136 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428987197 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628889537 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451138175 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.432737265 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.36353156 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.695182102 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676614583 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426518098 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495352086 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889018609 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436802569 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.195630305 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.416071489 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.934102684 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.642382902 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.974192923 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.84779532 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418012942 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426700737 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926879957 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42323282 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.947031799 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133067468 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.442770774 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.656651315 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365882422 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.428183467 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.430309586 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.41430726 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.072555752 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.420880391 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.676179214 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429649751 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353684005 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418661108 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073859192 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.305907468 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.42345986 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418068852 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.354329876 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433185506 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.774265791 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.431852597 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.572452453 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443575688 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.354154995 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354643203 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.113688266 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.428583996 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402944951 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047418296 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.871709967 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.573331775 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45059907 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274044735 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.67687966 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.432133869 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149249903 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674416744 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.387962128 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44881322 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.520882204 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427699028 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.408690396 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.301229027 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656917044 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372831456 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.647626566 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.714778387 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.329376139 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.418835339 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640975342 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.303038065 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.437710647 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723929556 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.163051523 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.439779943 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348882551 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476390288 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.43506611 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.473709336 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.92331675 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435421218 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49268992 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.431877978 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.433022529 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.433744043 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629999814 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428964325 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453793335 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.435279113 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516282742 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.76106972 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.584873012 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.195019441 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164554065 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398623213 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157672628 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465610393 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.422621856 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422928185 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368050825 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572316878 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.954336479 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69708126 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550480032 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.046287162 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453864728 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422780403 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451703845 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642309291 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697844854 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.299346471 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431948596 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.086480281 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.321018208 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.434741055 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.635730763 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022793945 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084821852 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556223326 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428270414 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.886336296 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706267881 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.515894498 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424509994 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021239771 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.430343325 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.996351396 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.462304 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438538646 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579906806 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.433933548 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183440372 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.467023451 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.585827433 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.199002947 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.197299386 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.691172918 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.020883162 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.438141686 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152973347 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326511488 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699030895 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496595377 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437099408 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.545812315 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572599567 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.423301256 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.326020977 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427869273 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274553565 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.136162272 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.437387753 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141612484 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720479887 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.42331183 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.422746415 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470116419 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.437084974 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.651242771 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.305761172 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.660115213 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.438001763 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.436898374 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.003827715 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138952501 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469979824 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370887941 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.431057506 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71966047 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.694243169 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452288463 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.881590546 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.139027133 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071151679 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.404210533 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450997645 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427614613 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307292185 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148012499 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.61845852 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027175926 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.090596032 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439376749 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703019975 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.43611346 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.441154397 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705596904 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.433473678 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.429373579 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440129847 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.164061762 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.369833132 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.434724527 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.126860573 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.376124259 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.660059071 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.150024019 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38581987 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429859505 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.644636101 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439053349 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.557802897 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442001917 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.442005562 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444244625 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.17534339 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.743567583 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.436461747 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.41752846 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.41918197 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44474328 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444943119 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693000411 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437178601 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.106779711 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.781038209 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.688968323 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.43672072 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.41704357 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.434875983 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432807671 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.185971643 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.440591818 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.128808194 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09764133 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.434366519 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.441394825 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435021205 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.648144546 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643686889 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.44818449 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.451602399 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447321543 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447248889 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.332238993 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.233343718 seconds)
  done (took 1651.115701479 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.458588524 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.484406793 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.454975842 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.500213111 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.501499275 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.531576208 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.490735314 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.508729427 seconds)
  done (took 53.274410574 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.430842787 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.597393633 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.468036125 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.447382195 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.448266603 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.446536027 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.971856236 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.463735438 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.449206311 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.443828357 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.435984667 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.439619072 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.1793863 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.443780296 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.436553275 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.419246192 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.450403002 seconds)
  done (took 67.324474259 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.448535298 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.608867452 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.486471591 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.436660478 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.767377407 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.462627199 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.617220795 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.444283017 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.435536225 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.779372019 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.097393959 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.456954908 seconds)
  done (took 83.387018526 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.441755619 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.441988392 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.441875833 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.442087277 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.443596895 seconds)
  done (took 8.55633253 seconds)
done (took 2089.688159703 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.681153272 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.286545837 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.218976844 seconds)
  done (took 5.851740103 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.584008884 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.631253693 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.78425319 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.788065869 seconds)
  done (took 8.135889772 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.718507147 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.802800854 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.621657618 seconds)
  done (took 6.489179132 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.1495514 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.442247988 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.570037271 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.439224913 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.443732222 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.444821192 seconds)
  done (took 20.675614894 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.440864454 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.444643583 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.43962102 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.444376669 seconds)
  done (took 7.117389476 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.416630143 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.162097471 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.421437935 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.440373742 seconds)
  done (took 18.786555073 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.187755686 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.202237553 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.18500277 seconds)
  done (took 7.922845957 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.448540238 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.280120761 seconds)
  done (took 10.075399959 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.74458756 seconds)
  done (took 3.091696964 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.573193314 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.773345645 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.678631784 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.586779123 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.684712509 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.146223637 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.453742667 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.941945469 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.561454678 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.118731553 seconds)
  done (took 31.866694311 seconds)
done (took 134.203025805 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.952375875 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.463197119 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.651115366 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.922097194 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.671955026 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.650549338 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.914098768 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.884970792 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.428689915 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.416226426 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.925091071 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.673944318 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.642785156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.460990642 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.643180616 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.460735894 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.673700706 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.99225046 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.439221261 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.458170259 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.940446222 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.558603485 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.751443348 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.581915908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.670615477 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.604528893 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.137536132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.462060753 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.444146918 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.16138836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.604233406 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.444537937 seconds)
  done (took 203.036454438 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.450557549 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.439436011 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.463459856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.4604465 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.440256216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.462562017 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.461657868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.442314682 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.439739729 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.451812216 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.445234623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.441486196 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.461429781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.466841577 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.441627519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.444984518 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.458335226 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.44197989 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.440461992 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.455965785 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.440981731 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.443913748 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.441575833 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.465952786 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.481909668 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.441811301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.440490803 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.441586705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.4427368 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.455037928 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.441856825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.443103622 seconds)
  done (took 207.743542743 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.444521951 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.455818296 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.442163128 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.449585696 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.442499919 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.442933448 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.445666087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.442284999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.452203659 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.441852272 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.450741238 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.44273317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.443366835 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.442817535 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.456605308 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.444398914 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.471280518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.443195452 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.443045273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.442613539 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.467918943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.445974258 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.443244203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.460471029 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.4439404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.459866945 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.443533354 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.476368016 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.463044507 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.444507405 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.444933531 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.467920195 seconds)
  done (took 207.756157956 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.642091823 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.451676292 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.452728192 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.387563444 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.453799729 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.452133318 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.444998243 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.650460967 seconds)
  done (took 15.290833418 seconds)
done (took 635.177683838 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.933904887 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.631572324 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.664715771 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.4733625 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.366539254 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.494549675 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.472234742 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.665882795 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.426810588 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.676398524 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.878313064 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.490461473 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.036696512 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.471139218 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.754176592 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.578901579 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.410779658 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.535326058 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.827243163 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.128190457 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.759018622 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.068134066 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.687441615 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.428093577 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.059282565 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.071930508 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.314277459 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.39176426 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.494117837 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.831882825 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.307419721 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.584251255 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.546951465 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.546495958 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.601184568 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.582791746 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.556414113 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.543826353 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.689096314 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.82296338 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.11667354 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.237845074 seconds)
  done (took 99.514894893 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.436160778 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.436015052 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.434840589 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.43577179 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.438024715 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.436543774 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.436098238 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.436883644 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.436921535 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.436422002 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.437034536 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.438403626 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.436835659 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.438796391 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.437657303 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.437140894 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.439191818 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.439997202 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.436850713 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.436346647 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.439124612 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.43678098 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.438917321 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.437338663 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.439928431 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.438739053 seconds)
  done (took 38.731946814 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.456560162 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.731862302 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.917629435 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.462637909 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.456906896 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.462257168 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.554636672 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.461090891 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.460677184 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.460964557 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.6435861 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.460734049 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.498752407 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.960884786 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.46239448 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.459809735 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.466701564 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.457924206 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.744057108 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.473371875 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.581244244 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.466523304 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.554008755 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.474789568 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.48680761 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.458129948 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.462941233 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.998919456 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.483584074 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.64324345 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.447160426 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.557530822 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.94431817 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.950850236 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.459707022 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.467294812 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.458846484 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.648348425 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.459948502 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.459090526 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.554774678 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.468010416 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.928186587 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.117303057 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.48263417 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.460028396 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.022783302 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.671764985 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.776204947 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.478118819 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.977230301 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.472218783 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.462645104 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.461275414 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.760172324 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.467590171 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.4612792 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.043443511 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.495341205 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.559250552 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.469564323 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.462119209 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.758806504 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.469628483 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.744256008 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.470436503 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.470350166 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.485968531 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.93131312 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.464141139 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.153005338 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.49231594 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.463793864 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.645843129 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.747361968 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.077929641 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.496283177 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.760955403 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.983617686 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.588050562 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.474403125 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.993594085 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.589859536 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.474807909 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.466591354 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.46598516 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.46393095 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.514471463 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.558029048 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.092404725 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.175325734 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.061604424 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.585301101 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.48590493 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.465027758 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.033079112 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.486517288 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.463800832 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.926661622 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.148773294 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.494415113 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.472613257 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.147865002 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.487250378 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.559864166 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.471592827 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.941277344 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.468019068 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.516441054 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.464086678 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.470577955 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.490811072 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.55994412 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.466286217 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.466307305 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.126136907 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.685168789 seconds)
  done (took 193.351894205 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.469056383 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.458115056 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.470105852 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.458932188 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.457527651 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.464145535 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.458142137 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.457862404 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.465564782 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.459278707 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.457599545 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.458290547 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.460600953 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.474791605 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.469251304 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.465882265 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.069032773 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.460096082 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.460413072 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.458422832 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.2993075 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.461264706 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.458685728 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.458492913 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.461264414 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.459890421 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.46731745 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.460461958 seconds)
  done (took 155.747169593 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.468008805 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.148160762 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.490755862 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.626803403 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.493545482 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.46481444 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.625320754 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.536591045 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.489273936 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.465025327 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.466408736 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.833600762 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.468502788 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.092667433 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.711167744 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.657104187 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.092184104 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.4907592 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.465707369 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.465839059 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.629048232 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.475217205 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.832951061 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.15296092 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.491846382 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.151785517 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.453094456 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.469892918 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.467234301 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.156488519 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.49056219 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.836894795 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.563390987 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.54429137 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.176364667 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.114700169 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.114938518 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.648368149 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.468957215 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.467233385 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.468251499 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.452831571 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.153725078 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.49244242 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.4699311 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.143640143 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.492898525 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.471291325 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.475131491 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.467962556 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.541512954 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.562777287 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.861955442 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.162306607 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.586076384 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.48466201 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.635243088 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.902132551 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.472054142 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.096085815 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.453493688 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.161946368 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.492863717 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.452204691 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.469591939 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.475395332 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.659169243 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.645405769 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.105891504 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.491620203 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.09767686 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.673006021 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.470849231 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.470341677 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.470828547 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.159708353 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.120320316 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.682164514 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.648907332 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.718565249 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.455701509 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.470011406 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.45420705 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.564420001 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.469017209 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.163781877 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.118797227 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.49432919 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.472786592 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.474078792 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.473504168 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.689583191 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.18402149 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.586987048 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.086752203 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.863639175 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.841812453 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.475506123 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.543990732 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.492611701 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.845348814 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.475593898 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.541927062 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.966699495 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.845169584 seconds)
  done (took 177.994717828 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.770114647 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.875425571 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.576907732 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.625875513 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.128533617 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.094674497 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.851381077 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.626173424 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.600673751 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.770923589 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.806145464 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.564718362 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.683066756 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.567406533 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.281803872 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.577378703 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.597979398 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.632724933 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.608934377 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.64035343 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.19019553 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.786522257 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.673750636 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.695162983 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.58574815 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.388496459 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.089419402 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.055461977 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.667546704 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.946097478 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.059384594 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.742798547 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.574381187 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.247095319 seconds)
  done (took 71.958821237 seconds)
done (took 738.65602295 seconds)
SAVING RESULT...
DONE!
