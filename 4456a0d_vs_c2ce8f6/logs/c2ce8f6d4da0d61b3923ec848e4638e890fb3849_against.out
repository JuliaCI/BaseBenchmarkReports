cset: moving following pidspec: 24960
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.370937352 seconds)
loading group "string"... done (took 0.666612877 seconds)
loading group "linalg"... done (took 7.97276432 seconds)
loading group "parallel"... done (took 0.179280048 seconds)
loading group "find"... done (took 1.2003727 seconds)
loading group "tuple"... done (took 1.884535824 seconds)
loading group "dates"... done (took 1.31970347 seconds)
loading group "micro"... done (took 0.22811672 seconds)
loading group "io"... done (took 0.964495874 seconds)
loading group "scalar"... done (took 39.325087595 seconds)
loading group "sparse"... done (took 12.373626685 seconds)
loading group "broadcast"... done (took 0.993633271 seconds)
loading group "union"... done (took 12.572931509 seconds)
loading group "simd"... done (took 4.675388414 seconds)
loading group "random"... done (took 9.657760043 seconds)
loading group "problem"... done (took 1.861941123 seconds)
loading group "array"... done (took 21.929521248 seconds)
loading group "misc"... done (took 1.786169658 seconds)
loading group "sort"... done (took 3.576907722 seconds)
loading group "collection"... done (took 18.008730085 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.568273192 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134828634 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13738765 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.129427468 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156481607 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124535116 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.136774608 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096079012 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.906034289 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160507929 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.126079872 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434956894 seconds)
done (took 5.66734817 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.184789062 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091623242 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092087653 seconds)
  done (took 1.375976433 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.074405151 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.135070582 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.075226959 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075823753 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.075351396 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07493585 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07865391 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074997293 seconds)
  done (took 1.782856977 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.082351625 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.077429851 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.074079505 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075835122 seconds)
  done (took 1.509033017 seconds)
done (took 6.135842751 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.81578326 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.220183823 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.198125592 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.421847464 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137753979 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183281566 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.654711771 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343664505 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.201714328 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084487676 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11777049 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.353965988 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13250029 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.655099419 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.082703526 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099640673 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.147329505 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.426380524 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07593777 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090909093 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.097293081 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.136112969 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093020358 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08221059 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152186846 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075624213 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144061512 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.088129141 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074232504 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.22789838 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.18068177 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668658547 seconds)
  done (took 10.701172123 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.108215692 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.109647646 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076888894 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.133569033 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.108463423 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078048209 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084018918 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075486889 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.099091767 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.14161186 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.100757752 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.11142065 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073702794 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076622186 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.093022477 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213400545 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.089025192 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.089650927 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078702658 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086332681 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116560656 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086103911 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088716614 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.088439874 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.137657573 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.188044609 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104069275 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.105823299 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07482974 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.090971652 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122653646 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.136197157 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074252148 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074182537 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.136003075 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102801382 seconds)
  done (took 4.978113032 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.031936924 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.154158823 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099954767 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142738469 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.073102033 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.116082881 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.07393286 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.091525734 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.219655841 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.368822797 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.635686912 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119542502 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114290355 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07634887 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076463989 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075456111 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.563229225 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.105761261 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116723445 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090547055 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078765474 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.077293716 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.375870467 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079007015 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.074824611 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078391199 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065058724 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094283494 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131513042 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076710478 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.981275467 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169203284 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073914441 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108031696 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.307285167 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.073961443 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09760768 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150077117 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076542026 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072996216 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163743565 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100624866 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07833946 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074915208 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.093684427 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11221462 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.1247694 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073960345 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074288256 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.072998856 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17321362 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073675026 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087292369 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.106258201 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160553153 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088787527 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073844369 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285860983 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097649822 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078051211 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073629808 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182272584 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13160963 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075712341 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075307625 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076490099 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077317493 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368656448 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073909608 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.900077809 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078588137 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084389292 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077499827 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077222566 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080570877 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08155274 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097223447 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07454969 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083121475 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074770038 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074096515 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.077463417 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090146767 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.403623956 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074719954 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.075736838 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.073112326 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.20399518 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103616453 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075495981 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073303205 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106823198 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076237691 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074346987 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120037347 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074404904 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.089944674 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.077787597 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.121577402 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074544485 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.092844406 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07508555 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103781483 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076958149 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1107585 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.088196081 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075962324 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.452275151 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074119229 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.072886771 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075878143 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073839321 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076254625 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.074970943 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.087167325 seconds)
  done (took 22.71418983 seconds)
done (took 40.620462645 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.263135464 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08330751 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081078312 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081278593 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081045672 seconds)
  done (took 1.875269357 seconds)
done (took 3.147152997 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.131843744 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109464567 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072868724 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106164819 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072962319 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110223001 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109581908 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085836345 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109155076 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072305126 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105956658 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072185377 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072684823 seconds)
  done (took 2.51646617 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092908631 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092628292 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078172826 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.092296708 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072185601 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091454505 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091287454 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09823421 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091095193 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081356541 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071476444 seconds)
  done (took 2.215054428 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094519832 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092762536 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078971996 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091623136 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072646588 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091116362 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093171222 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095431914 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091253996 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08243194 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07186432 seconds)
  done (took 2.211362001 seconds)
done (took 8.197290758 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089069671 seconds)
  done (took 1.331651908 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.581663225 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.952357422 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.089744382 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.117407884 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.202629857 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.124197726 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.268896893 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.095068841 seconds)
  done (took 8.867499077 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097280681 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091679713 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07924716 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079832664 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078211595 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076129333 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.078185557 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07906664 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077855697 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077055229 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076616953 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.080755865 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078756786 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.081116745 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079373608 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.077170276 seconds)
  done (took 2.607443672 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100531145 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099524519 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.081024454 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083172286 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079868892 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079264395 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.082139095 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081737979 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.079121684 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07997883 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082110146 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.08110143 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.078856847 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.072172973 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081176832 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.08285074 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078594579 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081480452 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082291827 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083518368 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082587468 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.072450484 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.079107752 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.08197215 seconds)
  done (took 3.325016133 seconds)
done (took 17.385010354 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115170466 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075315785 seconds)
  done (took 1.443401511 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.091664942 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.090348476 seconds)
  done (took 1.443886722 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.091585827 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.073918771 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.096365133 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.08567879 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.074471401 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.073698255 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.094224392 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.074307056 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.073486818 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.073973503 seconds)
  done (took 2.073171946 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.076773814 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.085691951 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.077054124 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.089495598 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.081280675 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.071818079 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.079506991 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.075391271 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084006504 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.070927082 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078546377 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090442701 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.078871938 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092485441 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.079893603 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07596934 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.077664736 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.074787577 seconds)
  done (took 2.70467986 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.074886932 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.075582159 seconds)
  done (took 1.415986299 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.077699995 seconds)
    (2/7) benchmarking "second"...
    done (took 0.072875198 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07541775 seconds)
    (4/7) benchmarking "year"...
    done (took 0.07375454 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.070965077 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.070646347 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.071196633 seconds)
  done (took 1.772145294 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397323136 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.127565444 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330646261 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.080100184 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089875153 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.274204744 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.074413436 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.078676752 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07847175 seconds)
  done (took 2.833292049 seconds)
done (took 14.95387819 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092269595 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.095047939 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.10547079 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.388158688 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.099248463 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074548911 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121059759 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194524122 seconds)
done (took 2.448790626 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.222221333 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.707997138 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.449458529 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220696549 seconds)
  done (took 2.643818773 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.361212336 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097269003 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067001289 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074944135 seconds)
  done (took 1.8813474 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075929639 seconds)
    (2/2) benchmarking "read"...
    done (took 0.078005303 seconds)
  done (took 1.433270254 seconds)
done (took 7.454794005 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076684467 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075172691 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09517625 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.07108242 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074142265 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071629434 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071973382 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074316219 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074069447 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071976086 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.074044304 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.073996064 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.074506879 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074010293 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071395604 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071395061 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07402812 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.185506225 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070949571 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071617328 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.072718762 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074182606 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071036641 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071619972 seconds)
  done (took 3.200628943 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.095426461 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.075333993 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079201834 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.078974989 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077747611 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.079032069 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.078798319 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073966501 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08002643 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.075656069 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077099574 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.077507024 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075835793 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.077607547 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076204479 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.077751485 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.079089321 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07392777 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076580748 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.077289872 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.078894998 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073966466 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.077658746 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078581517 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.076867539 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076997311 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.075818258 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073744395 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078532331 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.077009589 seconds)
  done (took 3.617654368 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081537199 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071537098 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07162046 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078214547 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.071685966 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.072342443 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.071009265 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.071699932 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072207479 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.070886125 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.073117068 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071146796 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071487464 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.072515407 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.071811809 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.075116052 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0875018 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071603747 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070927683 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.072388711 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.075076601 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073617007 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.070872151 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.070409038 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071261914 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.070745614 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07174354 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07081965 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071945073 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.071049602 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074771215 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.075452126 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071594979 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078202228 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.075604569 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.071157554 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.07519217 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.071493884 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.072292237 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.071711599 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071921259 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071073616 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.072215844 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078455853 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.071398744 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073281668 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071642013 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.072500961 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.071416511 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.073956216 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070904474 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071084343 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.073501598 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.072155473 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.075808142 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.070699791 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.071904024 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.070441479 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.072281138 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07238005 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070986509 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.070980011 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074561142 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.072367493 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087680095 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078911182 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.071749293 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.072972869 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.072190022 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07422571 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.07327647 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.086111553 seconds)
  done (took 6.567047367 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099595953 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094740734 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073095047 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073099033 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069647156 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071564295 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077951834 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072072346 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07328323 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089331914 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071748928 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072753316 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073777611 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075143231 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071952536 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073058474 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080497223 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069228083 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071949364 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074883387 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072960797 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077601763 seconds)
  done (took 2.97989992 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.163446266 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077622855 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112322244 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082717642 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077905522 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082928584 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077162465 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077679219 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077262609 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075565681 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075346054 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078370263 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077389271 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075250389 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074698438 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075594576 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077090498 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075129657 seconds)
  done (took 2.80388326 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08656417 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.074418558 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.094956143 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074141834 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.074331232 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076551228 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077767409 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080955176 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076044353 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.07333976 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08118751 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076525713 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.076539752 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07370864 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075895894 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073758796 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.076411638 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073137751 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08098669 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077532451 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077554925 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081645233 seconds)
  done (took 3.005037384 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090676628 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078025371 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090609104 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.076669453 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.070091633 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.072082781 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077406113 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073659505 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077478158 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07546278 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073325911 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.072193829 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.076659123 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073536483 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.076495395 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073494594 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076108301 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073680627 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07570944 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069398101 seconds)
  done (took 2.816423898 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096608534 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077731664 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07551456 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082849765 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075811732 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0758933 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082808362 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076036973 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076688226 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096454333 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076372446 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075797575 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082934608 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080077967 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079197456 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082031216 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082003975 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081715752 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075834349 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075050938 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096468554 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075632158 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082050244 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075676216 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075223931 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075584122 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076013772 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0797554 seconds)
  done (took 3.538422946 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076922378 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076125009 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.072424078 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072416781 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071234875 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071406039 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071684097 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071208663 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07455786 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071562863 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.074157721 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074553813 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07362364 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074674501 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073675424 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.074185386 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073727622 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.0716272 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071263324 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0713782 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073824134 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073294775 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.07391106 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070932831 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071273679 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.074107351 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071243149 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071861722 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073601811 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071628031 seconds)
  done (took 3.486710781 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08562094 seconds)
    (2/2) benchmarking "in"...
    done (took 0.081555096 seconds)
  done (took 1.466122022 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073592907 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088223553 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.070635434 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077889033 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07726437 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07432544 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080459311 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077129119 seconds)
  done (took 1.914005906 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.092903364 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.085675607 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.074833886 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.086418689 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.084838783 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.091602302 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145434255 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.074402291 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080363291 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.072661593 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.088344086 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073739616 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080114303 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074500656 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079929635 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080609748 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.07183535 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.079401929 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.076083561 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.072502072 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07497493 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082721167 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077340256 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.069190127 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07515779 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097129703 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.085637004 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.074064141 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076878958 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081687886 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080325354 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.068158979 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.073948956 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073875681 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07246044 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.084369225 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089214729 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077454839 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.083148519 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075369865 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083346291 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.069214503 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.078748457 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081081459 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085242828 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.074154518 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.074552256 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.069130104 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.07246841 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.079548725 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.069480883 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074704606 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.069027661 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081595218 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.078354018 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086116366 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.07358001 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.076492232 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.077586322 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.077922395 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08168562 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.077432565 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077603702 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.074167144 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084630351 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079798316 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082456258 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.069352491 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.068233024 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.072146783 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084054585 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097785037 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.080839753 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.074829056 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074940282 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.072819779 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077816866 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07504159 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080285726 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.081040339 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.074718758 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079518596 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081868421 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075439221 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076876202 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.082138678 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.072698136 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.077405607 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.072540914 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090588536 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.073720654 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.072193727 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.072938 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087857118 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.077340861 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.073867942 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.072227277 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080822567 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.067917563 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.074778657 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07452825 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074926162 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.083312147 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077745725 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077672904 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.081554223 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.080412448 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073670012 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075402129 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.069775918 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.202324531 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.074473043 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082082934 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070633514 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077859785 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.075731978 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.075276324 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.082987299 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.073185912 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.073774372 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082852456 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.080275167 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.073191517 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.071378358 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.078571985 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.074436468 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076897079 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.082661621 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.072849359 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.069427964 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.069379515 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.078454167 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.073760814 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.078208751 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078828834 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078075685 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.068970042 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.072110597 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.079442799 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.08345145 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.075029558 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07578642 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080877884 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.075608796 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.074380586 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.082181512 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.077226656 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.0736074 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08033242 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.074992166 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.069440162 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077361522 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.077041168 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.073702696 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.079409922 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076744191 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.076197478 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.074270352 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073487904 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080762553 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074962204 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.074129353 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074860882 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.072943257 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084238923 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.076344117 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.069650922 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07121086 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.081163291 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.072795332 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.073334836 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.07386184 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076565608 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.074906557 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.072533994 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.073855742 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0765292 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082534172 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.077090772 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074679788 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.079390059 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085905368 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.07360218 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076283662 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.073697209 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074925553 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.074357705 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.084563732 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080711511 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078544457 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.077450819 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.071335114 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080053199 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082635143 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073602466 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.071973884 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.074278215 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.078649067 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.081029948 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.078118208 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.075103143 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072664278 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076438617 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.077494328 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076739493 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.074197751 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.07348483 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.080050049 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.072531363 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.079710723 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074173905 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.084044923 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077194061 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.069007403 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076114622 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072533169 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079533459 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06856938 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.071610974 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072765698 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.073095986 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.072527844 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075914269 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.066977919 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.211628169 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082289193 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.075325406 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.075038882 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074122131 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081835805 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.076820147 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078331092 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.077809112 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.081162362 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084983218 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.073040994 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07827075 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.085696824 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.07469301 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.069848345 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082764127 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.072718543 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.072865584 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.07354393 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.073163622 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078178475 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081954744 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081448348 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.068636781 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.076355993 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.07251265 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.074893932 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.069955875 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.078810406 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.077297031 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.075954194 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08168279 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075311765 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.074889877 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077488402 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.073588374 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.075568593 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.075884774 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07792366 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.075122428 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.077283606 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073805792 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.077523551 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073541626 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.072253408 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.076362646 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.074616635 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074645683 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079077229 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.073847934 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074100134 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076812 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07446821 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075164662 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074718386 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.073782419 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077227822 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075827214 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.075596924 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.077599396 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06958743 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081391098 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.07370672 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081524901 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.075644527 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.071407743 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.080048271 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076849499 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.078793205 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.074486243 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.074538533 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075969377 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.073309726 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07706823 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082254181 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.072797468 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.085098501 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081915565 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074808183 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.076844315 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.074664068 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.075911706 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073591999 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075157316 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.0748513 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074755629 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.074554014 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07914842 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.077798284 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074435411 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076690563 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.074896893 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074971712 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.075177119 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.069364475 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.074050961 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073685477 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.073913038 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084734107 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.074571988 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.074551214 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.073263234 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074554217 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.073316606 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.07096494 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080976623 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08164667 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.074047351 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080210299 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.072589149 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.075250636 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084462636 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067400303 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.07151958 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.070784781 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.207279099 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083332728 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07528647 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085227688 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.074687886 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074509453 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.071699419 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.074862865 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.072985666 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.069580349 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.07214481 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078818298 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.074002749 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073452872 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.073485787 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.076827725 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074620028 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084070763 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.074986764 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075467822 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074761858 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.071622558 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.074083404 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.074763601 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.077570377 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07474112 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.072463859 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.071366975 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.07493192 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.075646811 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.076943796 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.074092618 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.076745423 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081622774 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073957144 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.078193118 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076463288 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.069266377 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.077809927 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0738727 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.073740971 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.073448546 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.078630983 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07783613 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074929511 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.083639637 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.073560955 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077663848 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074221934 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.071623696 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.073145584 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.073234173 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.073685006 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.074202572 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.075842622 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082825123 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.071629713 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.077316077 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074486692 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.075414179 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080859198 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.074207964 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.078211216 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080456877 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.074697212 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.076239769 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.083070645 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.077664027 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077567694 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074961538 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075445725 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080468419 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.073523268 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080307613 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.074838121 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.074414947 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075797897 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.07236089 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074797482 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.074155722 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073644648 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.080012659 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.075163118 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.074615546 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.074195443 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.072929011 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.075326557 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076814587 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082651973 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.077367017 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07756859 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.069191317 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.071760496 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074714077 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.072770716 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07623804 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.077029569 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080435011 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076697255 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074631656 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.073457558 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.083504358 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080516881 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.0773186 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.07191949 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.077371552 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.075005054 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.076359291 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.075460343 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.074631436 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074978484 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.077505449 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074963113 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.073006068 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080444043 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076349367 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074220198 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.208658519 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077088995 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.074817111 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.070106144 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.074789453 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.076607587 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080306601 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.077121751 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075091809 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08585434 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072282397 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.075726431 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077365116 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07360755 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.079606333 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.069161742 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.075768356 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075307262 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075616722 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.069903687 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073650353 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.073416285 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.076625445 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07420944 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.069543906 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085470758 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083642642 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077959755 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073437345 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073532399 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.069486116 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.069383412 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.074070923 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075376284 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076494579 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.084971538 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073567987 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.07425553 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06974959 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074067677 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077489934 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077706788 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.071208374 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.069823621 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073360577 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077333278 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.080059502 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073457122 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.073924217 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077140745 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076241527 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.071489684 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077035829 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.071318877 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077398018 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086873286 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.074214 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075441022 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.081050793 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081440974 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.07479 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.069051009 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073813478 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07853289 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.075104784 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.075252902 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074925539 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089234761 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077454033 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.074154629 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072724726 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07731135 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.074054883 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.082645021 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07560892 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.074952412 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.079028768 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.078967393 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082126606 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077137929 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081831605 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07816754 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077945522 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.07321645 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075272263 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.072323957 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073443559 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.075143631 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.075245348 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07979449 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.081633873 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.074153075 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084951202 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.083613122 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.076383973 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.071075929 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073888831 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073873187 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.069413257 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.075056939 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.072233979 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.072523401 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.072679868 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.072834062 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.075679861 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079825899 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.07531709 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.074165205 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.073670783 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.068471097 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07707113 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.076741097 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074590645 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.070460824 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072778323 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.073964995 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077241363 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.212167253 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.073819509 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.077329469 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076691429 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075592969 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.070043412 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.081616683 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074615028 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.077657729 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.074366348 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074515448 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.075245788 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0781808 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.079368844 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.075663355 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.077213329 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078264759 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0765385 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.071749706 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.071730927 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079324703 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.07277629 seconds)
  done (took 47.518884277 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110409418 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070440541 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069688994 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069890611 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079385343 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070355098 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069419985 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070590224 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070685628 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072806746 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068989244 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069246678 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077578923 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085180607 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080253055 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074396362 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069219038 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070611732 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069962017 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07045318 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077461996 seconds)
  done (took 2.950249845 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.084116711 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.086287717 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083689402 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088828404 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078584306 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077230967 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082214687 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07771464 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085036903 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079501486 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085057164 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077620964 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079946106 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07995156 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079684392 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077659331 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084957666 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078073553 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077167907 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082907209 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077961279 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082579177 seconds)
  done (took 3.161325529 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.0768793 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.075475459 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075465988 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.068519994 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072885403 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068172622 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.076538832 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.072119245 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.077061146 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072886031 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.073054551 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073178743 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07593784 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.069063315 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.074432294 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.071913696 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.115447017 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.077055899 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.073780109 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.074719754 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068614488 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075479983 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.068916075 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.069717353 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.07268786 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.077046064 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.074004026 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.071788185 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.073258268 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.072743375 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.074416261 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.071456943 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075183894 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.074262956 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072807127 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072827026 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072747082 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.073818738 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.069178409 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.071242776 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.074259152 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.072117331 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.074072864 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.074564236 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.071480753 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.07107799 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.076237914 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073087339 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068719916 seconds)
  done (took 4.997830635 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088509941 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.119844857 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.07512025 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096940011 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.087388017 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078940282 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.077945592 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097972049 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.071036182 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071635076 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088592078 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.086283388 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072420413 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.077293499 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.080008659 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072712947 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.074017026 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.07199305 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075977438 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07236873 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075990161 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.079503978 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086414047 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08598063 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076866349 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.072180042 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072436162 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.077063881 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084971792 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076753858 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.077446647 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.078011562 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.088472785 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075663865 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.07283348 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.07531701 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08857398 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.073266419 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.075740533 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070564694 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.075211597 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07683695 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079903406 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.089559825 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.073208838 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.078989442 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072795928 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.070607054 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.085743478 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07545689 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.080323792 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.087328628 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076639057 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.07360979 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.077168168 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.086861253 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.07301349 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.0713143 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075213438 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.085409627 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.07059856 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076532786 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.086191325 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.075214918 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.079606219 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.086858391 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.078941814 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076517488 seconds)
  done (took 6.915998629 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086692381 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103408138 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089648794 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089507164 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082817212 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.083267234 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08350138 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.082926854 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091220244 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087162513 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082810794 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123046419 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.078531095 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085064375 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083013403 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083621574 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.082828909 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083008528 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083039723 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083691359 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.083035429 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08930372 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082814278 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090044529 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086573656 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078894624 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083206104 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084011753 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089798208 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083561819 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087316994 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.082728951 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083570009 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.090179481 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086935996 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.083365573 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073303031 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082899123 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.082733169 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083362132 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079234599 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089496076 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083108614 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078715944 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083119968 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082812326 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089457978 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086456825 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085405334 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087671023 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.083488424 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090377231 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082852243 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083189415 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090170553 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.092034328 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089611393 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090069224 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082543471 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089975694 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089791757 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.092109573 seconds)
  done (took 6.736166405 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092741595 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082620029 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.090186452 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068941742 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071514001 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07890243 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071685333 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.072702939 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080400486 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.08357198 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082849228 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07897052 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081832281 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083458106 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079603565 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081858423 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079102035 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079322817 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080641132 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079187405 seconds)
  done (took 2.998871256 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.085463409 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091517372 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.074807832 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078562559 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.077106952 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078993589 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.076414363 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077059785 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074911881 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07666809 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082993149 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084187772 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074424417 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07848437 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082440797 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078707733 seconds)
  done (took 2.662548571 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095585854 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.083248536 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.088435397 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.073343301 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.074441302 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.069872014 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.073143702 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06882949 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069815853 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085701417 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.073899175 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.084481282 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.073558669 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.072742175 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.070118078 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07911421 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.070356149 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.07044836 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.073506471 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08579901 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078133961 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071772991 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076716563 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.073274379 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075843735 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.078493511 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071958735 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.07362527 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.070268812 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.073298165 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.077123859 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07713775 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.070747482 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.071260961 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.072143523 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.070759203 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.073537762 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.074043869 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078862057 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.074036673 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071670413 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075396884 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.07351773 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.074382599 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.069942135 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.073669173 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069525378 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075231833 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070913709 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.075850571 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.073572103 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075915521 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.074190237 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.080383888 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.076662127 seconds)
  done (took 5.521126411 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089891157 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079727334 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068814417 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.072065333 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076630721 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.075156677 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07710347 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075454135 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075037072 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071373396 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074972043 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076488674 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07510543 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077694172 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074837741 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077323546 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069940695 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074656034 seconds)
  done (took 2.767339222 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082240262 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074982437 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.08138301 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073618361 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.074042352 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076280069 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069840267 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.072655477 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072521432 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.074342119 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073624641 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07613704 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071699578 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.075534797 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073314741 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073550489 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075834579 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072197736 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073570933 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069349037 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076132719 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072145238 seconds)
  done (took 3.032912644 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.106066138 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.093447789 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.149914588 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086227114 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.093528899 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.080120332 seconds)
  done (took 2.009185895 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102894983 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111576877 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074217773 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076791979 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082419976 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077526207 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077649404 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078050564 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085341528 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08285739 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07779057 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085540767 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084911289 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084012217 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082956221 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082780246 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077379461 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080084997 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074530261 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089987398 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077993147 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086067738 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077747605 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077335235 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077953665 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084094394 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084667312 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082425782 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076971977 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084870774 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082954028 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077402524 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085982211 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082769423 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07664208 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084955468 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077831207 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091262246 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083327497 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084379664 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.077292091 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082982101 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085556271 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082000811 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085846355 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078213985 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081257323 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077628121 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077926147 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0921828 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082940227 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084137543 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082998837 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086118217 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085620037 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091699448 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082617357 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084396537 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08307139 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083090843 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084458843 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082692937 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084481441 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083019584 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083319027 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084622427 seconds)
  done (took 6.875608981 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115719219 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075032748 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078043891 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082934327 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084870777 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077661818 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077807673 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078073968 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077553506 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075205533 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115313921 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0781432 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084538381 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084335759 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078773525 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077542434 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077813635 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084867705 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074405316 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092651563 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077479858 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084134113 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084546528 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08429477 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082791038 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08308455 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078291084 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077667749 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077398463 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077536774 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081506062 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07768308 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084705222 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.075187381 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084133544 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078276477 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077819524 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082341558 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077557524 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083392144 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085211504 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090380178 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077479004 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077849257 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083607749 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077756212 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077657474 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075314381 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07781958 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074563254 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083347069 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083055518 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082931766 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084989555 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077489187 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078173833 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077630455 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077503907 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077712163 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082599183 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08444433 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077591528 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092045974 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07765412 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077811462 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084378236 seconds)
  done (took 6.794761879 seconds)
done (took 141.619562081 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198981082 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.176915739 seconds)
  done (took 1.767470363 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07886505 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.107651303 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084799914 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136415727 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.074824028 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.108626789 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.106981808 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.086960361 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.074368543 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073871178 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073910659 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076555035 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139153878 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.074315096 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073785464 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.077135867 seconds)
  done (took 2.854235887 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.110210638 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170957548 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110414181 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072380704 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107533061 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080936725 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072901124 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083565195 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078693046 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073367933 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080242564 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077676187 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073865032 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078663712 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.080534872 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079641793 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072570819 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079868992 seconds)
  done (took 2.994301279 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107783826 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.100037242 seconds)
  done (took 1.62415552 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163997121 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.143354034 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.21413103 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.356065132 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165221069 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.154894132 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149621149 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.149823564 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.123562911 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.14394114 seconds)
  done (took 3.174819289 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.111750859 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.164491855 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279030896 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.126669015 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080413413 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100370855 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.128311993 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086089483 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.088137018 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.088001321 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087736178 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.085006671 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.108106354 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080760002 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.08218063 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.084107027 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.112778232 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.081197569 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.082864878 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.083989218 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108968794 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.073661495 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080656857 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.081313173 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084826467 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.085329327 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073997985 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073790434 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083813677 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.083013903 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.084235896 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100247323 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084618876 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.113451986 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.078843712 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.113379665 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084533167 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.081049525 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.083132656 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.081431774 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.085355022 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08534945 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.081537506 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.084245219 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073537196 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.084858759 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073867449 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073725084 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085589518 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.074687688 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.085101575 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.08404906 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.112762316 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07545259 seconds)
  done (took 6.474056896 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.116349463 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11437744 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078067159 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.120130693 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111003812 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076850886 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111752454 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10516458 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111500748 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077829772 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076110111 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077987915 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087031047 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.088492062 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.122128868 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.114861404 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080352764 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077188843 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.115098721 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.114089149 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07616487 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106896588 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100520641 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111679517 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075091067 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077917442 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07635552 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077776841 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084009464 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085178369 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077063382 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086846013 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.091536172 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084907148 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074779529 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076186782 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075570686 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.086360888 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086616401 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086694161 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.084153548 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074862533 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07588106 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076654887 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076366392 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074903605 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084979506 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.087224647 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08555263 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076242391 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077362057 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.076392363 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076958579 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086621817 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083818639 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086587788 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086691276 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076046967 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075495161 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078906872 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086766099 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085950399 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086180539 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077346853 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08639316 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076203999 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086875644 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091253203 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076250453 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077016457 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.076749956 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076109566 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.079643873 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084075409 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084654295 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077222221 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07576054 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076170204 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086940911 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08542868 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07612785 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.084310247 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075057008 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076045304 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077410786 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077679722 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.084920986 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.086486735 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077469072 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076054052 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076161558 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075738491 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074978532 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.083585202 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084874947 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.084464593 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.083359218 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075750556 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.083902245 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.217745905 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078806295 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.086098702 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076623191 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078928947 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076651988 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085761448 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.085449353 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087063606 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076666701 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.077324194 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.09144985 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087865585 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076930323 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.085204716 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087413722 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.085199836 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.075057689 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088524136 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077080429 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086465221 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076937188 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086564257 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076783189 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085786962 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076432171 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.076076545 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076712593 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.086248761 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077402686 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076323124 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.078185878 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076366857 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.087217516 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088882227 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077967286 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085313966 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.084949156 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076961599 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086223441 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076813003 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085808774 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076795392 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077665662 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075825298 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087442858 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.077102959 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076005126 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075893895 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086722601 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0769413 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087751588 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084504321 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075151078 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088244895 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086583446 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083717227 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08751395 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077169683 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.076649852 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076007298 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076131491 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08474993 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.086042996 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077220062 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075366351 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084077342 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.086122401 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075675218 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085194437 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084420322 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085068837 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076258222 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075911725 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087372987 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086813583 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.084915212 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.084966268 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085090551 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.076858584 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084119013 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085035957 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075707666 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091617007 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076015014 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.089683942 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.085701573 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083943199 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085973228 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.086372898 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.086244457 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086317278 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.089148662 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07511064 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076085217 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.084102615 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074741494 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07509704 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082939654 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076693649 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076451751 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.088152528 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.211736919 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.088505309 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.076273774 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.086766009 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076614687 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077306243 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090598774 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07775009 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078530555 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086732692 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076356022 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084771269 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087140562 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08548483 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076745026 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077265013 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.086264957 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.086951286 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078906563 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076592268 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078091122 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.085834463 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084801838 seconds)
  done (took 20.354671112 seconds)
done (took 40.664479487 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.218243406 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157933628 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178236782 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.124433241 seconds)
  done (took 2.187601649 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.127417 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107832806 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.099107107 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.072831813 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105535542 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.073069883 seconds)
  done (took 2.034906399 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308117475 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208525796 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188260059 seconds)
  done (took 2.148853271 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212249898 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197674941 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.455382391 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281337547 seconds)
  done (took 2.703061576 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.153757829 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.094823683 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.075359246 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.092449322 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137659105 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164998107 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10499335 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.13043229 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.087251755 seconds)
  done (took 2.542748555 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152281276 seconds)
done (took 13.219460067 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.225135681 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.207035009 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.114268629 seconds)
    (4/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.106604292 seconds)
    (5/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.195639574 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091784907 seconds)
    (7/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.168649546 seconds)
    (8/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.250969184 seconds)
    (9/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.090373827 seconds)
    (10/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.162385422 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.200969552 seconds)
    (12/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.111116988 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.09132311 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.086501859 seconds)
    (15/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.239252574 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.250660054 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.082031305 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.143097438 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.208045928 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.160917278 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.238516991 seconds)
    (22/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.121347436 seconds)
    (23/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143155514 seconds)
    (24/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.084392334 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.079542437 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.081170274 seconds)
    (27/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.072286704 seconds)
    (28/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.121131195 seconds)
    (29/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.218542447 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168943729 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.06025673 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159212134 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.099266001 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.301683371 seconds)
    (35/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083744893 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.081979484 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.134663461 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.098653543 seconds)
    (39/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.229451063 seconds)
    (40/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.099824096 seconds)
    (41/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.18268746 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.192520292 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.104331415 seconds)
    (44/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098056726 seconds)
    (45/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.203284053 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.101930791 seconds)
    (47/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.084568247 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.212612145 seconds)
    (49/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.165230022 seconds)
    (50/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.090882378 seconds)
    (51/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.190325746 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.081564287 seconds)
    (53/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.083955464 seconds)
    (54/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.085919332 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.081163813 seconds)
    (56/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.172639082 seconds)
    (57/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.123283384 seconds)
    (58/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.162986104 seconds)
    (59/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.16173093 seconds)
    (60/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.084961334 seconds)
    (61/309) benchmarking ("sort", Float64, false)...
    done (took 0.141271357 seconds)
    (62/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.204552081 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123422838 seconds)
    (64/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.1520067 seconds)
    (65/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.057715877 seconds)
    (66/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.059276937 seconds)
    (67/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.082542988 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075491991 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.196503536 seconds)
    (70/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076933436 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.088524647 seconds)
    (72/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.175188789 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.098105376 seconds)
    (74/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079586964 seconds)
    (75/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.070253996 seconds)
    (76/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.083139267 seconds)
    (77/309) benchmarking ("sort", BigInt, false)...
    done (took 0.204437058 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.225947527 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.074267215 seconds)
    (80/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.102587597 seconds)
    (81/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05969049 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.102667908 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.101913183 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076386325 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.150727117 seconds)
    (86/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.115300511 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.191282768 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.139133543 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.074897083 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.099725129 seconds)
    (91/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.190534525 seconds)
    (92/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.072186521 seconds)
    (93/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.124244093 seconds)
    (94/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.110442641 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.186249411 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.099370212 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.077321557 seconds)
    (98/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.083629916 seconds)
    (99/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.071543878 seconds)
    (100/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.088517367 seconds)
    (101/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.180795888 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.058548271 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.073680761 seconds)
    (104/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.080468999 seconds)
    (105/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05857908 seconds)
    (106/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.086146116 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.097664177 seconds)
    (108/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.059805593 seconds)
    (109/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.079385455 seconds)
    (110/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.109440524 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.081463943 seconds)
    (112/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.059543451 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.074538814 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.096483504 seconds)
    (115/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.149657617 seconds)
    (116/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079808294 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.083250089 seconds)
    (118/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.059588946 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.215531671 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.070939149 seconds)
    (121/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.058099783 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073863483 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.080801695 seconds)
    (124/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.082794505 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.097342393 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.155424342 seconds)
    (127/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.0815817 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.096904976 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.097622807 seconds)
    (130/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.076821834 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103638877 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098887634 seconds)
    (133/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.059181125 seconds)
    (134/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.163052237 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.157971912 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.073479796 seconds)
    (137/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075659792 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074788545 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.170164689 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 0.148408324 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.08219816 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.073363918 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.081465148 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.074325598 seconds)
    (145/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07629092 seconds)
    (146/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.165748003 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.080248767 seconds)
    (148/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192875744 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.080982738 seconds)
    (150/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.090411684 seconds)
    (151/309) benchmarking ("sort", Int8, false)...
    done (took 0.152425084 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.080564743 seconds)
    (153/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.175284973 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145472661 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.059577762 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073749723 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081843182 seconds)
    (158/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.170363892 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.148737226 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.058759643 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11794627 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.085769458 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.082464693 seconds)
    (164/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.081533742 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.058605872 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.152603871 seconds)
    (167/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.059812163 seconds)
    (168/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.059367406 seconds)
    (169/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.091086836 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059651407 seconds)
    (171/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081403611 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122287562 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.080208168 seconds)
    (174/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.079474256 seconds)
    (175/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.111003277 seconds)
    (176/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.203818721 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.058279383 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.096836981 seconds)
    (179/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.123515049 seconds)
    (180/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.088024941 seconds)
    (181/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.060424608 seconds)
    (182/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.059998266 seconds)
    (183/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.081400801 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.192759541 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.080209734 seconds)
    (186/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.109225956 seconds)
    (187/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.069668633 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.070721666 seconds)
    (189/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.083336294 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074483362 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.083001497 seconds)
    (192/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077873156 seconds)
    (193/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.057405102 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.080883655 seconds)
    (195/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080523376 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07797147 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.072195969 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.058686241 seconds)
    (199/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.074212201 seconds)
    (200/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079350535 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.09754572 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.072045761 seconds)
    (203/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.057525472 seconds)
    (204/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05910036 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09629584 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.058507022 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070257242 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.073099944 seconds)
    (209/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.057212993 seconds)
    (210/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079892282 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.079469829 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.079266175 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098977456 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05773627 seconds)
    (215/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.069056042 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.094886985 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086997214 seconds)
    (218/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072681622 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.071795618 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.081215653 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07975404 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058178506 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.071911271 seconds)
    (224/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.059090089 seconds)
    (225/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07107948 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.072818663 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057963262 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.077725933 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.060104273 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.070421624 seconds)
    (231/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.078970505 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.072140646 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.072191837 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.105171924 seconds)
    (235/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.058254077 seconds)
    (236/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081119213 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145438601 seconds)
    (238/309) benchmarking ("sort", Float32, false)...
    done (took 0.137138484 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095754682 seconds)
    (240/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075919818 seconds)
    (241/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078656688 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.071599963 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.058377071 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071295034 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084388197 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073015843 seconds)
    (247/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078433652 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.059571537 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.056700137 seconds)
    (250/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.157905815 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070440028 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099615372 seconds)
    (253/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072563984 seconds)
    (254/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.116945366 seconds)
    (255/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056538769 seconds)
    (256/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.073093 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078123042 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093325702 seconds)
    (259/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073488131 seconds)
    (260/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059281037 seconds)
    (261/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.058580218 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.080522216 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.071673416 seconds)
    (264/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095123101 seconds)
    (265/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07512211 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.056661838 seconds)
    (267/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070929361 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.1074107 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120343877 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.069741322 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.057465965 seconds)
    (272/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.056508052 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131823541 seconds)
    (274/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.056636279 seconds)
    (275/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.059181563 seconds)
    (276/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.057434306 seconds)
    (277/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057727909 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091356774 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071732674 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.177586154 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.079571131 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069548756 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135953769 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069391262 seconds)
    (285/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05725143 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056991314 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.181541308 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071136278 seconds)
    (289/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.079335196 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071574636 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078356755 seconds)
    (292/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071935939 seconds)
    (293/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.058032036 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.115775652 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.057558742 seconds)
    (296/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.058387098 seconds)
    (297/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094119543 seconds)
    (298/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.058684631 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070629002 seconds)
    (300/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.070089495 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078004163 seconds)
    (302/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072357044 seconds)
    (303/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071972321 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.058202956 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077068268 seconds)
    (306/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.070422534 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092150734 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095364898 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.439504815 seconds)
  done (took 33.572812492 seconds)
done (took 35.029978321 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.0961606 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107378665 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.086538772 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.105041699 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.092431994 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.08731634 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.084873509 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.090825384 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.091601432 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.093583871 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.089468275 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.065336115 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.085870739 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.08654687 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.087064326 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103373406 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.09091291 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.084368323 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.084651902 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.075661453 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.084612649 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.076389653 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.078050504 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.064295749 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.091041194 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.082879739 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.083273503 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.0853004 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.076404875 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.076700528 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.080369196 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.084668093 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.075696609 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.089811764 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.083233237 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.083636811 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.086739597 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.087589473 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.078099014 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.076349077 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.085843027 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.075941646 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.083756159 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.084878809 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.083224841 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.081856759 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.084127758 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.087469597 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101743531 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.077979629 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.085509781 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.086545942 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.085764155 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.083525137 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.080076579 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.083712219 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.081092203 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102799176 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.084080543 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.077713072 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.084554815 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.084109601 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.082437595 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.084201274 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.082964293 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.085226515 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.085756137 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.081637222 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.085024162 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.081052622 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.074748816 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.082725314 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.079467226 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.075334346 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.085001423 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.087547364 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.073967343 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.080547301 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.082431576 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.080569075 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.073593553 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076136379 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.077636579 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.081519916 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076988501 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.065028027 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.079394842 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.0822871 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.073838482 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.083276172 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.081301353 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08202286 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.075959144 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.085040552 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.073886743 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.080175871 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.075376123 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.07489155 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.076196718 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.079091563 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.074514716 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076699039 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.084169443 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.07609467 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.08160091 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.087612961 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.074516041 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.081286328 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.073008978 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.073598545 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.088452234 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.083677697 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.073754765 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075882167 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.073232534 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.081390596 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072954842 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.073692267 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.074439607 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.074617887 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.081100893 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.074330788 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075693801 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.081079623 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.223809995 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.075267456 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.079117693 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076650666 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.074339213 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.080280155 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.074939824 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.074398734 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.077592495 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.071606953 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076683692 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.074955951 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.08233825 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.077118439 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.081704673 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.076892707 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.083414274 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.0794588 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.081177249 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.0803497 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.073417989 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.068362137 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076581201 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07691276 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.076143441 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.074159509 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.076252126 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.073990807 seconds)
done (took 14.065174533 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.0787799 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.150994467 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.106392786 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.103915529 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.093035114 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.075664558 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.083831135 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106908885 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.076061485 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.108772831 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.096618709 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.094923098 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.122586274 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.073019248 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.074458981 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.079047282 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075718403 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089470885 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108644511 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.096367774 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121944224 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.073879245 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.100567888 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.098762773 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095676539 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101992137 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.075457289 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.078941729 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.078511185 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.109139108 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.097124742 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.079408279 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.075146 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.10574321 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101231376 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.091369079 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.075396122 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090929548 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074989976 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.073963599 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.077175389 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10682675 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.088023946 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088654113 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07847689 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085550748 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.07597933 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.091084241 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097809257 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086841771 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.093770153 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.108538629 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.077380742 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092681971 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.07360831 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093790331 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084906489 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.077713162 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.075155309 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.083565828 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.074846321 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.078476696 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08881669 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088116592 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.078920042 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.092904449 seconds)
  done (took 7.501059117 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.096905286 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.104787308 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.095599036 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.09500213 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.074094102 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.075148716 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.075462893 seconds)
  done (took 2.220392447 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.077896559 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.100335543 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.101534045 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.101966956 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.091070183 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.097639463 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086692484 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.074798886 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096719114 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07654346 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.096696078 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109220436 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.078619407 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.083100518 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100080017 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074962127 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.099909902 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.075975453 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.079376352 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.099768899 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077453781 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.105860275 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078598645 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.075827917 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089870001 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.075552794 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124443249 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07998127 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.077594071 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.078576385 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072952079 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.116690318 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.088991719 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083139686 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075888032 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090125629 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.09005849 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074040195 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.092553425 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0846167 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.090110688 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075481927 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075720382 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073667417 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.078817624 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.085629713 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.075864253 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075422117 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07835219 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.095568656 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.076039973 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089178491 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077843879 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.081095885 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076608132 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.082126917 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086424976 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075985371 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.095129111 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076880833 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092116973 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.092412929 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.090227797 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09200194 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077375983 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089242609 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.089735041 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077733123 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077254345 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.079767254 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092139023 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.074016483 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.077034022 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.086327785 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.077414865 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.098894568 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.099303091 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07680462 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088908496 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.076443027 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.075637609 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.075157545 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.098704257 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080355513 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075290799 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.080433176 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078447851 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073672305 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.074402199 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079441449 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.073896434 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076915467 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.078450142 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.078410174 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077897545 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.092238556 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.078164015 seconds)
  done (took 9.803838343 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.081158918 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.078384717 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.078068649 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.075861549 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.075817946 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.076618503 seconds)
  done (took 2.091159828 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.10565189 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.080273738 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.090576507 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.08060056 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112777015 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.095475613 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.095677356 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086531998 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.092165036 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.087432919 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.095243317 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.097016307 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.100708078 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.081248252 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.096370843 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.080422854 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.096687028 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08281947 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08712448 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080634345 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.094370139 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.080995006 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08064395 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.090602291 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.084282162 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.0805871 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.086773716 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.088315294 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.086925523 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.086286116 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.080177173 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.085104797 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079582467 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085658577 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.095745732 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079796766 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079116169 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.085491249 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080745065 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.084243568 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.096566412 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08073424 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.082752089 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.085753904 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.086330471 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078694612 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.086087945 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.087932135 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.095673327 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.086087701 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.087775668 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.080156376 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.083727339 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.085984289 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078831071 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086091448 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.085395599 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.09629845 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.080679942 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078869387 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07663574 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.083728497 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086394343 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.084048527 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.086232213 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.085313278 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.079082054 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080242379 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08091712 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.079311654 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.085808902 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.077754845 seconds)
  done (took 7.815846837 seconds)
done (took 31.020283856 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.548745829 seconds)
  done (took 2.135639954 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.650599625 seconds)
  done (took 2.266410719 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.616642947 seconds)
  done (took 8.230885434 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405373468 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.502176016 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.749376464 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.143249307 seconds)
  done (took 3.455861836 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.737399409 seconds)
  done (took 2.364948179 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.242655464 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225326728 seconds)
  done (took 2.101638729 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.395585661 seconds)
  done (took 2.013083254 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.174589936 seconds)
  done (took 2.794757164 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265850821 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186602975 seconds)
  done (took 2.080015682 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.505650473 seconds)
  done (took 2.134389428 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.955013584 seconds)
  done (took 6.58649155 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234609763 seconds)
  done (took 1.896936023 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.251589803 seconds)
  done (took 1.874503452 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.786878326 seconds)
  done (took 3.412633467 seconds)
done (took 44.970555428 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.095783095 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098175949 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.093104282 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.089597465 seconds)
  done (took 1.985815822 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08938521 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.084502846 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.088628508 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.084804331 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.085360798 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.08074643 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.082490065 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083638392 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.080584419 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.081165171 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.081183886 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.080677974 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.083482528 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.083060806 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.079855637 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.083574342 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.085210157 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.081321995 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.084153037 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.081084864 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.079719693 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.083235086 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.083071427 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.080782479 seconds)
  done (took 3.61850462 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.089889928 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.085205073 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.086683355 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.08415781 seconds)
  done (took 1.982744055 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.089855611 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.104698152 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.101477547 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.088133099 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.101140975 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.094715797 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.078106113 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.078133258 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.078728269 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.086316472 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.077112823 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10440695 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.097275427 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086674791 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.088434669 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.074716094 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.078370195 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.096516121 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.087384027 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.086988501 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.078354897 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.086551085 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.076615547 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.096992319 seconds)
  done (took 3.748338175 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.098789014 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.115020112 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.093432398 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.098312114 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.100251959 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073786124 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.096737798 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.100139522 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136042498 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.073706388 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.079087823 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.074241304 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.081383508 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073192744 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089489552 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.117807972 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.121394955 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07755208 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.106278415 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.073904829 seconds)
  done (took 3.52287997 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084707011 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.080614521 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076416881 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07466332 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.085622844 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.080606287 seconds)
  done (took 2.124674616 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.080028202 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.081124672 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.075659134 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.075612317 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.080450315 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.075450238 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.074035403 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075752067 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.076011946 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075159231 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.075655419 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.07437348 seconds)
  done (took 2.553439373 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.217240009 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.078658015 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.077612224 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.073672373 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.078235297 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.074760228 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.089522888 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.075997861 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.101605886 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.075182261 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.075319433 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.077621639 seconds)
  done (took 2.737032549 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222199564 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084986174 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246871735 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160696566 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120615975 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125592618 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121984075 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122054267 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.151170009 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109587499 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175378843 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176834004 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116829651 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151223598 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098160845 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.107968414 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166158583 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173704889 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114938308 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174445635 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155163456 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135600147 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155705012 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110648332 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114010569 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131757097 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.080819743 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089081173 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178022042 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141622927 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153662775 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12033546 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102037271 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185167477 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180434297 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150297932 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158189809 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093861768 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.111077005 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142020047 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207540158 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097484274 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171713488 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259862204 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09055335 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142844848 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125839008 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.127300805 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.114440744 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098025074 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15467032 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194662128 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.145818397 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096765995 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13326456 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123500433 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122950461 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121655259 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189237136 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168024909 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136471024 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.079978701 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117348152 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161453248 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142265948 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.118133547 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.133533315 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09977872 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144134329 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162086503 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132593522 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152825853 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126824447 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097971055 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126864828 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149849833 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136613187 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169526761 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131992885 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.081191819 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132579467 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111484426 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089058064 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.158313139 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084251001 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184289264 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108551927 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.113768993 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135492949 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118248439 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117669038 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168980951 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.296908841 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11391805 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.074721533 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115791619 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128588256 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155182044 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095604891 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11711533 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123960044 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.086702472 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148177895 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.083756748 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131435759 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.084257059 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134813751 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137976747 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.087066753 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130909246 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112666354 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.109394729 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140868795 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167585432 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095821044 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091593257 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175944124 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129052504 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.111647537 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153436456 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164115416 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.107106794 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11019675 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159686569 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179820196 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098100532 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170871786 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116171801 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093036577 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.096536494 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131299251 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121199618 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134278846 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090472982 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.126479615 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175419745 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.083291784 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10381127 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142540528 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086895279 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089023988 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114486501 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113171441 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.104071503 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.107831654 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.110116413 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145137006 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131669483 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.259617493 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134434794 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108502162 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178996103 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096284404 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.111246986 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112328434 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.078814156 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.144572156 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165929674 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088619506 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170562809 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.130866241 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125059429 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126157596 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092407526 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148209883 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087099252 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.078839703 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153500274 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117550301 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119566236 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.158103476 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124369855 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.134924623 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126721651 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143239902 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139080267 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.137577181 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113872603 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.096180828 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11957807 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135227673 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.081142862 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098853007 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087809546 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113102177 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104274998 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091420467 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149731978 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132209856 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118481229 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120633783 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104320251 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154630037 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.08431488 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136613295 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.128141958 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103183029 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.159075373 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158377144 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139093996 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106045444 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144039698 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.078113657 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082535841 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.097283592 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129099727 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090285035 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091266636 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124144818 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153487764 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135664635 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143555745 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130542679 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12507254 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159335339 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076696112 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.125554484 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14896969 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125691998 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.111325223 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097643539 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.105457605 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1459479 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113137237 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183933592 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118188073 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128406106 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158213092 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106807981 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086114913 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108240965 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138249043 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109650966 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145267918 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105023799 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094171823 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113103507 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081817402 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103431927 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131044749 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124012694 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138100663 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120107325 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136484638 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083989027 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120864338 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128624563 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126328514 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070835433 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123313551 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162564396 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101055035 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122099669 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153011154 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084706706 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.40865593 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185249544 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15592945 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096552772 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119252069 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131186787 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137750113 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130384863 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149453951 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118615361 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148219629 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120106981 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.095848673 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097934812 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107154479 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113633393 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.105327062 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.113784241 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122924649 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.10450821 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141594871 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113674963 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118865739 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126330587 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.109245024 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.100165468 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106493524 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186286938 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128355183 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18013814 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.108940421 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.152360284 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170998933 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084145432 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087772034 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.086862879 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148147797 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093080862 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139706076 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.116315154 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126613745 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13138058 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149925062 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103427873 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076861755 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117110507 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142600349 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133704465 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107191948 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.112154928 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169439412 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108708983 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088228662 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121797872 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125218965 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260667896 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177662525 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.070200776 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115756342 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085870563 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089841125 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135638315 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159906687 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.089858423 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.108624767 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128377572 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120694781 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135119356 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112340404 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116613517 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135413582 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158388744 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135903901 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09742358 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119526452 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135398471 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161758169 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109988624 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105023232 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180858009 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15842301 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.165908751 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.096905864 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121564081 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120854027 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118531347 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145058612 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092546506 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170221167 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090288178 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144195975 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111968369 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0975214 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137693784 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116726549 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096232392 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15495547 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124995374 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091771132 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085437951 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126764385 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12588073 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1140474 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.083531172 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14672442 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.081899566 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.289943358 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169165955 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089398473 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112992924 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103947336 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087147197 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115932246 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109838086 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096601554 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.106976529 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18027127 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.09423373 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156058108 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142797833 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120815433 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141428335 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11037123 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64903459 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.085823221 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15835548 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124466035 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179410706 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107743921 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124810587 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116661579 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130852515 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153315141 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111235569 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.192590256 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14031854 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.123405201 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087755093 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110654182 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112202512 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.096509366 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116219471 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120205316 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122888389 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.100970362 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.124039502 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131324375 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.090204267 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104513412 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162818383 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125680208 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15269842 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148098528 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094445154 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124916955 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144561629 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088277457 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.128505905 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308139813 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115127393 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1094068 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.089306172 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10989608 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166596613 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.08225783 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171178827 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129569741 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117965869 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121029585 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119763715 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141989844 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115831316 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128733315 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100778935 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.115479598 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121036763 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089774526 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.085193499 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11262953 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118176825 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104814785 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105045896 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.106470681 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157593821 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.080169816 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107246249 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123559822 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152874557 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180807793 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.096532212 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091625332 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127471314 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124231807 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120487869 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12882554 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.087063235 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090056697 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.088472646 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086886709 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11636317 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120793424 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123212656 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118110475 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169791823 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.092191137 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.244169443 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104039645 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114371624 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.078545401 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08652484 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104003112 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106530579 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115290493 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117483488 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312989676 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.104668529 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.098209412 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100791376 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.082362457 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092176602 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135339115 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118659013 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127028182 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111144012 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.07147093 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117245376 seconds)
  done (took 63.080375475 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.118834519 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.090476673 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.103927367 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.152041352 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131605247 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209424762 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.162108728 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198311566 seconds)
  done (took 2.938874231 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.079415672 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.103378118 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.111443545 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.091352786 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.074991082 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.077251905 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23913664 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.089120252 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.074113429 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104973334 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.085928719 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.077452596 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.446614912 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.073702704 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.075567133 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070472922 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.075652468 seconds)
  done (took 3.713444956 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.421771964 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.633634234 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.361453596 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.084669481 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.957260644 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.101888452 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.1708364 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.14192308 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.086596106 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53491511 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.416192837 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.138494965 seconds)
  done (took 18.819971948 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.091532552 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.083076216 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.097902253 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.097378313 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.085964254 seconds)
  done (took 2.232228742 seconds)
done (took 114.720097565 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.09255261 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.636219768 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.061004608 seconds)
  done (took 2.50537231 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09522591 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092931267 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.094554695 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.091358749 seconds)
  done (took 2.157964541 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.084337242 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.08425981 seconds)
  done (took 1.948050207 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.245361296 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176975385 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.104322009 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.092552353 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.088203853 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.089189523 seconds)
  done (took 2.047900177 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.081592463 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.08323258 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.079730988 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.084284715 seconds)
  done (took 2.100946231 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08757244 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05967188 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.061935978 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.066079389 seconds)
  done (took 2.048204579 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.097372657 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087390305 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.087167088 seconds)
  done (took 2.043727689 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112103087 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094748952 seconds)
  done (took 1.97943512 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.092186156 seconds)
  done (took 1.864850709 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.106948345 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.109419244 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.140439602 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119824111 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14914349 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.1173961 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.092867398 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092997621 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084688709 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094073631 seconds)
  done (took 2.881055873 seconds)
done (took 23.971360547 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.090277451 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.379793906 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.368288926 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099336036 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.676643199 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.364689175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.978875229 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101369727 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123982917 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076954298 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093829708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.657532282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969827412 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329951468 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.953752676 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331888533 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656875223 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076417123 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076122277 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076766718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96411974 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075683357 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076735442 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076690862 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.656449499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.38072214 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076561391 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.350249805 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076298865 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07923832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.363306083 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0767827 seconds)
  done (took 16.491748127 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082343393 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129125267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081131907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092651361 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.078439304 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077356796 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.079777546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.076893268 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1304118 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075738803 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093747219 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075631145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.079604229 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.077058093 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096216491 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076686698 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076860547 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076845594 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076702133 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076444538 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.096097638 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075547912 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07732135 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077208068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.076083112 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089918233 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076458934 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076506082 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076644998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078195825 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079389235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077833567 seconds)
  done (took 4.460577698 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.127445686 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.136233299 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082711475 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112346394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1204446 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078556582 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153205152 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102417195 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.135542454 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07585093 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094460834 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075995976 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112214272 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.077137308 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096546367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077375484 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077047696 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077153135 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076343756 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076898811 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.096075404 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076527936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076540064 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077488467 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.077264708 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.0906378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077232439 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076715498 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076449127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078870558 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.08062019 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077146664 seconds)
  done (took 4.718682618 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.082925542 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.082614507 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.091665576 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.093143015 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.077945041 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.080884475 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.081173926 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.077369828 seconds)
  done (took 2.462066277 seconds)
done (took 29.914402982 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.090503448 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.076852267 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.079838086 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089860307 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.081383957 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.085997777 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.074322461 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.08403339 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080362591 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.081118433 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.082883382 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.075107602 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.079724124 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.075039325 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.083016215 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.075947724 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.087785374 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.080125962 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.088427623 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.088997454 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.078402965 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.081995303 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.083764817 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.087567091 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.087820768 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.088291573 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085459838 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.081043599 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.077419729 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.078730734 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.085448855 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.092405587 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.077269102 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.088479585 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.075657468 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.076078076 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.079983254 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07605513 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.087940687 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.085186393 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07790829 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.08476222 seconds)
  done (took 5.225643571 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.098048372 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.101660968 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.093149501 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.069659578 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.075129629 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.073877044 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.097505798 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.068417934 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067574733 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.097521211 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063891245 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.067783062 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.071409188 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061749781 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06823166 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064967847 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.069973125 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.063375018 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.068536889 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06774899 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.098304112 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061637532 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086331582 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.071588486 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063961346 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069768643 seconds)
  done (took 3.764394676 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.085277052 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.093481095 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.098800368 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139622737 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113768222 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087932666 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.087694394 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104495462 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097742325 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075249022 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079082244 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.101178156 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098158116 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.082880587 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.075421839 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.094325327 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092081292 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.077925965 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.081258733 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102847243 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.095521656 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.093966432 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.10483759 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.091842611 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.075806827 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078022924 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.080037925 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.090029956 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.079133288 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.085090017 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07894417 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.079942965 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.077889837 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.087721297 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.078171634 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.077064508 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.103874848 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086389756 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.090062234 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076777096 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.084002496 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.076569814 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.102316509 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135507584 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.075766583 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081868821 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.079618154 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.085845153 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.085980368 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096432592 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087807832 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.075634049 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.078781094 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.074676003 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.074913375 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07961294 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.077647546 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.077972954 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.085428914 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.082085883 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.101792369 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.080536517 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.092216056 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07534155 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.083540622 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.075060119 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.078602298 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.074816506 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.104728152 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077558727 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.120470757 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.077208166 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.077535611 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.085779061 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.084145282 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.083333928 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.076224021 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.092580661 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086555181 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.079979111 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.084365801 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.079654252 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.078951447 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099363012 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.077954549 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.078103966 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.076213629 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.081518974 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.078615792 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.076981127 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088858918 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.075604964 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.078725807 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.092970531 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.075941042 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.077200191 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.081357251 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.080238765 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.075229519 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087069632 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.080047312 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.077141364 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.087243492 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.075626051 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.078848585 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.088961115 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082859114 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.074945551 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.081264457 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.082002469 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.077047067 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.077871383 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.078960977 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.077762759 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.084510739 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.083007067 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.080719399 seconds)
  done (took 11.785413479 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.17751058 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.167047889 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.078835788 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.158245894 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084819129 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08766632 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.160813668 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.103985857 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.076104859 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.076884426 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.077733998 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.119670301 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.115170671 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.125095077 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.087756802 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.076348436 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093050149 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.123678371 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.161537427 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.156320689 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093689277 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.085690177 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.077850956 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07713823 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.078558885 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.0872088 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.093819468 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.08545841 seconds)
  done (took 4.825518668 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.089965238 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.114254305 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.083194472 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.10023688 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09908509 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07599469 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.077850502 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.077844371 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.091075125 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.086248737 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07606297 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.081318376 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.082822881 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079386869 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.076941795 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.083464724 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.083030048 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.077794709 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.079451091 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.081459081 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08738431 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101084249 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.08013452 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075825517 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.08119446 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.075542224 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071325881 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091912026 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07668814 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103393567 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.074165606 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.081377985 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.09102004 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.077163254 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.075490251 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075562114 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.075935684 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.075621541 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.077414954 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.076921507 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.074144582 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.065943799 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075004557 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.087376956 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083738017 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064103897 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.081339904 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.081583173 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.081354201 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.073646146 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.079044023 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.078951116 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.079095465 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.083931492 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.080416933 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.081463238 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077153397 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.082221929 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.085988175 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075943061 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.073629986 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.074569633 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.080763488 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072782606 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08557592 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.081268375 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07430478 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075756813 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.077944644 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083328991 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.075540724 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.08069885 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.073569364 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.077953435 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.080655703 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.078309116 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07711823 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.074193091 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.076163203 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.076511604 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.062738082 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.075931203 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.061126685 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.079915909 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.074160023 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074365677 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076237129 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.08114063 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.088352114 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.076855959 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.081809812 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07746905 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.074801307 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07907692 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068091679 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.079405114 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087405791 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.090194539 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.075725926 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.073589421 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08978885 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.080584089 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.074649775 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.06417887 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.081254028 seconds)
  done (took 10.204182367 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.102664009 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.078458599 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.092346154 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.099483278 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096098548 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.083963294 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.086298507 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.077496296 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.092746589 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.082294167 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.085671003 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076347729 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.086587295 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.086294562 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.078020884 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.086329733 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.080522329 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.093995101 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.091599162 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.076526423 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.084696505 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.089307336 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099356595 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.090843114 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.088989299 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.090133351 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.100220961 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.085759138 seconds)
  done (took 4.312100068 seconds)
done (took 41.904873252 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.909530438 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.13831472 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.890092564 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.250408469 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.974802977 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.066612243 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.960676099 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.882606055 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.083211234 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.914302623 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.121079687 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.103439426 seconds)
done (took 67.246256424 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.93330691 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.024927812 seconds)
    (2/2) benchmarking "String"...
    done (took 2.117989576 seconds)
  done (took 5.951411573 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.198488559 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.452931187 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.123959019 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.877343006 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.881445814 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.193878913 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.682675689 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.388200534 seconds)
  done (took 31.412486675 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.119366191 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.100952622 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.61608719 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.644915915 seconds)
  done (took 16.34673898 seconds)
done (took 65.737091235 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.895917236 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.915139945 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.883903706 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.858044443 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.93714735 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.892829875 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.986931211 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.891536053 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.874763268 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.86162408 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.877187236 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.363046325 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.889471957 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.986421291 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.874550645 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.882937794 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.93571353 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.348218459 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.038010306 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.894068866 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.887603684 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.893888535 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.877699883 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.890199407 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.90216133 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.87945311 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.28555794 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.89042633 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.725345121 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.882209948 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.928556798 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.26093457 seconds)
  done (took 207.199792015 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.878521634 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.905514485 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.987121653 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.888878594 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.341273387 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.060667796 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.985237769 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.393757591 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.884212614 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.887029705 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.061464483 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.879076971 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.091397073 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.856857977 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.909897516 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.887653402 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.006047347 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.111957854 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.915053951 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.050233509 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.895718327 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.925592241 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.88675911 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.057930913 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.893546149 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.964196508 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.907027228 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.908006889 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.070818401 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.991398746 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.88670138 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.905932919 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.083873763 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.754300558 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.895064779 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.907864527 seconds)
  done (took 173.729211401 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.041849067 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.882063617 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.87940855 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.879907072 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.887823032 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.88013035 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.009274716 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.00476628 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.507550773 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.277657427 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.933041819 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.678862059 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.878527149 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.948298624 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.890869108 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.879621988 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.89706095 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.906737364 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.88232138 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.881553632 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.013599308 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.892821583 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.029626472 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.884987356 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.881711562 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.887079606 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.250432935 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.878930567 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.882458263 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.886195592 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.123307573 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.879815112 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.882350651 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.732208463 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.035467216 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.882412109 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.965727654 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.880723447 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.88675182 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.881864081 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.099840249 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.879340966 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.88360773 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.882926677 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.886748749 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.016977531 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.879952906 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.005798314 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.883805201 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.881801594 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.359030908 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.879082555 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.882352927 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.77074844 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.464145222 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.880346753 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.881779224 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.884362314 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.882794687 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.881964931 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.88889769 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.806925262 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.958913294 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.883799296 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.887557091 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.887051008 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.8815718 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.098468331 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.880768106 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.504855149 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.938760758 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.003008336 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.012295345 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.881256879 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.949102229 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.97434933 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.881225646 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.883818125 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.884091747 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.884192329 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.965060526 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.881372364 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.010404995 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.890013179 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.884351849 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.934558174 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.952675348 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.882190126 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.733353723 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.881257979 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.885118843 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.148325952 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.946507951 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.881549301 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.882945635 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.883466987 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 4.011957516 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.004344684 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.592492068 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.883192839 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.94003714 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.906810006 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.022998395 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.882129978 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.023032588 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.883519337 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.965194568 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.887614537 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.886637825 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.885114679 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.917284632 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.886058417 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.945530442 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.882186163 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.257426606 seconds)
  done (took 414.795688571 seconds)
done (took 799.633055839 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.553660443 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.518042922 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.617816001 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.538543618 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.510894936 seconds)
  done (took 14.555663969 seconds)
done (took 16.372393996 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.974438461 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.982203965 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.910376632 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.979049186 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.907647063 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.981668683 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.960356573 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.911077493 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.945573294 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.910433456 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.949467716 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.910157929 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.899007419 seconds)
  done (took 27.03777849 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.111969505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.124303367 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.958358811 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.120189974 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.932880612 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.113510628 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.050603329 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.036520983 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.038338732 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.901334286 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.896922081 seconds)
  done (took 24.104648822 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.112483139 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.121724385 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.96173294 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.120566717 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.935532318 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.11950852 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.052836508 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.039448365 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.040596479 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.903075532 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.899366859 seconds)
  done (took 24.123709042 seconds)
done (took 77.084915061 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.895996754 seconds)
  done (took 3.712098514 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.922453579 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.095328315 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.902986732 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.898959605 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.894027174 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.895707334 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.898928546 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.894069706 seconds)
  done (took 17.222816212 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.890296784 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.895334992 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.894406752 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.894254955 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.890917052 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.890315552 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.89167135 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.895256995 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.891390384 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.890064711 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.891249239 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.894675335 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.892794938 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.892186478 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.892873624 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.889390695 seconds)
  done (took 32.095601304 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.892016852 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.891595208 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.890176656 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.890756232 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.891712888 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.894825597 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.88561324 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.883571543 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.884992307 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.885579359 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.888545918 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.888259429 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.880848812 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.884580433 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.883664898 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.884698302 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.885665193 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.883733516 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.888483813 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.884169608 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.884478343 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.884421419 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.88265247 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.883327706 seconds)
  done (took 47.098214315 seconds)
done (took 101.946358412 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.668984875 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.515339922 seconds)
  done (took 9.994228443 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.8895811 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.890923227 seconds)
  done (took 5.647020969 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.888379958 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.889559831 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.888467089 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.886805589 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.887258174 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.889619778 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.889336097 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.88729267 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.887259046 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.891256743 seconds)
  done (took 20.694678771 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.886256503 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.888663801 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.886103643 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.889335097 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.887320173 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.884400471 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.887983824 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.886432125 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.891320452 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.883351604 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.88849936 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.885391536 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.886339741 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.886144419 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.888350032 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.884788933 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.887053393 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.885386113 seconds)
  done (took 35.774447193 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.889281119 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.887644036 seconds)
  done (took 5.588020391 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.886361018 seconds)
    (2/7) benchmarking "second"...
    done (took 1.888405415 seconds)
    (3/7) benchmarking "month"...
    done (took 1.886443211 seconds)
    (4/7) benchmarking "year"...
    done (took 1.885946414 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.887623501 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.884679966 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.88658584 seconds)
  done (took 15.015750768 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.887517341 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.044387282 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.141953479 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.57416018 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.89254308 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.892343132 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.832891654 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.895227165 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.891907349 seconds)
  done (took 20.864868151 seconds)
done (took 115.389272823 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.67774809 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.884506801 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.121801815 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.933964244 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.939268418 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.177755938 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.902331281 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.185390723 seconds)
done (took 43.637799008 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.886682238 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.237785073 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.212287053 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.902790833 seconds)
  done (took 17.158098733 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.867065943 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.403807984 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.913849143 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.462876173 seconds)
  done (took 20.485587704 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.251695775 seconds)
    (2/2) benchmarking "read"...
    done (took 2.227277704 seconds)
  done (took 6.289960429 seconds)
done (took 52.629355365 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.884799854 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.887375666 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.885390463 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.883185545 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.885766491 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.882975712 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.881727995 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.88516103 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.884849219 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.881948603 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.884354045 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.884172065 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.884845977 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.885089033 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.881236834 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.881065588 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.885308989 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.881873535 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.883551796 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.882231537 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.882344963 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.884779659 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.881776015 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.882722104 seconds)
  done (took 47.015117063 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.885309879 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.883014253 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.884577 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.885427446 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.883775421 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.885171866 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.885073144 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.881834916 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.88538831 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.8853597 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.882266297 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.882131426 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.885145892 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.882982884 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.884856601 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.883087239 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.885862183 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.884056273 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.886333442 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.884148803 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.885546795 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.883748308 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.883723958 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.887951186 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.885514487 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.885702043 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.887066816 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.884781822 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.886790905 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.885209683 seconds)
  done (took 58.350511562 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.893301314 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.897820237 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.888232824 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.889138287 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.889340472 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.888291388 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.888174578 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.889949741 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.889006624 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.889492105 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.888254788 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.88765901 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.890107397 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.888852956 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.888271435 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.888732905 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.888140494 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.88856579 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.889295061 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.888598401 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.888745998 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.889799506 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.889812639 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.889070881 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.888714344 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.887803867 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.889852952 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.890494866 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.889347992 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.889110255 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.887984415 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.889505826 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.887866176 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.889423973 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.888061578 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.887593392 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.89322455 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.89698955 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.887330663 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.890012113 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.887526839 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.889020403 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.891978217 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.888814748 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.890149305 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.889385006 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.890941612 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.889729863 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.890503516 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.891611085 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.890037472 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.891125065 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.890062385 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.891301239 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.892410475 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.889643552 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.89179151 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.890144895 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.888410832 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.891980477 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.889895606 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.888961635 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.891076472 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.889309059 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.891749572 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.889716368 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.890334097 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.891039134 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.890310397 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.892000217 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.89103855 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.89093741 seconds)
  done (took 137.886000224 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.890784507 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.888428446 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.890936491 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.890110488 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.888461935 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.893735732 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.890621187 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.891308358 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.89058743 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.891029009 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.890229155 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.889347203 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889187438 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.891449446 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.892439866 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.890998318 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.894298765 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.890434403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.892938757 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.892017832 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.893609011 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.892758965 seconds)
  done (took 43.419429747 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.891370885 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.89364089 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.890727822 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.892585507 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.891359568 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.89508666 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.893787045 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.894140015 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893758848 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.890357445 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.891508363 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.894958418 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.892138738 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.89279141 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.892004314 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.891523941 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.895518688 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.892038667 seconds)
  done (took 35.88463187 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.891942937 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.892280762 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.896249106 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.890989796 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.891456883 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.895005452 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.892227905 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.894407569 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.894734228 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.892579117 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.896423226 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893645846 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.895149271 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.89091699 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.897408438 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.890822441 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.894313932 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.891504408 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.895053813 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.891921295 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.892481928 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.89681921 seconds)
  done (took 43.474644866 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.895642182 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.896449044 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.891004405 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.891798945 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.892608959 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.894306851 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.894341741 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.89331333 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.895529854 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.896482289 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.894283766 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.895844706 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.893602004 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.89405067 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.894216045 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.895240833 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.897489471 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.894778857 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.896027047 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.893751351 seconds)
  done (took 39.709449335 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.897267467 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.897947858 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.898797773 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.898172998 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.898101527 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.898542856 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.897897137 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.897629503 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.900243787 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.897827704 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.895825323 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.896435952 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.899275476 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.897512508 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.89820355 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.898041253 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.899766475 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.89736692 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.898750064 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.89847087 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.89920599 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.89868404 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.899263721 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.900279548 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.901074316 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.901076985 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.89995674 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.900134988 seconds)
  done (took 54.980485262 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.897819932 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.898133715 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.894734634 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.896417049 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.895545185 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.895406399 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.894773755 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.896086398 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.898503596 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.895334847 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.898505912 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.898013103 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.899162159 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.898740276 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.899189239 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.899472494 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.898158027 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.896911942 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.895824005 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.897571558 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.898469505 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.897898746 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.897326488 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.896945468 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.897875856 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.897850144 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.897379647 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.897626867 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.897564762 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.896743245 seconds)
  done (took 58.740374576 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.919149604 seconds)
    (2/2) benchmarking "in"...
    done (took 1.916461604 seconds)
  done (took 5.655859622 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.894997926 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.90131788 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.898961368 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.898113939 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.896983291 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.899873696 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.900270916 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.899062016 seconds)
  done (took 17.011074722 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.899650279 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.899713044 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.901690568 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.901909872 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.902529689 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.901115846 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.907797916 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.899171569 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.899885936 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.901281211 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.907664201 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.912113553 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.901867994 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.902057201 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.900466122 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.901910399 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.899213959 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.902486962 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.901880551 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.902006022 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.903656268 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.905228756 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.901589011 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.899072524 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.903121179 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.909659688 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.903712269 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.899814064 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.902236957 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.903761035 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.901137465 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.89716223 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.901193339 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.903123774 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.902055299 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.900816739 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.909939095 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.901050704 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.908585795 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.900698223 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.90567346 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.900976283 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.903059007 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.905025349 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.90297839 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.903143394 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.903411942 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.89982716 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.901329667 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.905979881 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.908426903 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.900397562 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.898172324 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.90470999 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.902532628 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.907834648 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.903077682 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.907228055 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.914074776 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.912256021 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.916746889 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.911384716 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.904631209 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.903228505 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.91404512 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.928048084 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.908214555 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.899609155 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.90067385 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.903725276 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.911355322 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.916135794 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.912323038 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.904991192 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.905419296 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.906590923 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.905093344 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.905368414 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.910961127 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.906182485 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.90395278 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.906714968 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.916295956 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.929555675 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.904370762 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.906794265 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.904982973 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.907092081 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.908487917 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.916064698 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.90577122 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.906703108 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.90564188 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.905264509 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.905896538 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.907370933 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.904864524 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.907164354 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.904468807 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.906283294 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.907672108 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.909446134 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.916940582 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.906371304 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.906875713 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.912786006 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.906686248 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.906315712 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.913313381 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.905017824 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.908112008 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.90738902 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.912052767 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.9051527 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.90953955 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.917403716 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.908303994 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.907678264 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.908131038 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.907937003 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.916844151 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.934727674 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.904523487 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.908465326 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.912255087 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.918257962 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.907783169 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.908868743 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.907368069 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.90389167 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.902412526 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.908309847 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.907056239 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.909404731 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.909827511 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.909256961 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.90611933 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.908580104 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.908630234 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.908970006 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.908999502 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.909940734 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.908276487 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.908342158 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.908611867 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.908887378 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.91498137 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.906431184 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.909061065 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.908154783 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.907631831 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.909039022 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.908381455 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.911461341 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.909976283 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.909316619 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.909229745 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.909504003 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.908134542 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.909576733 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.908400296 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.909636647 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.913479027 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.911758672 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.914184946 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.905191557 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.905991492 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.909650522 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.908562098 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.908582753 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.908489925 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.908513405 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.912715046 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.917614053 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.911082418 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.910561816 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.911053062 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.9108691 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.909871684 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.909078187 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.914370165 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.917116724 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.909290156 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.917031734 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.908500833 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.911537339 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.910760677 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.911801995 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.908472097 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.911381292 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.913450889 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.919000229 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.922930637 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.918987572 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.91388505 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.916323695 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.913823817 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.918270775 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.916494637 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.91178243 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.911959359 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.911597239 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.910079752 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.911189682 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.913227664 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.911587503 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.910908918 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.911585827 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.912800077 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.911882404 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.911849514 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.911843763 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.911930681 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.909944677 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.913251685 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.913274466 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.911311952 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.909555778 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.911822512 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.913057629 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.913302224 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.912715162 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.919560904 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.909062109 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.914409096 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.913769216 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.912101585 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.912728445 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.913746826 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.915587119 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.912881541 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.919575122 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.912542336 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.91435816 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.919358688 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.91344732 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.912612338 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.91687434 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.913476947 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.91039841 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.916226743 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.923514482 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.913346064 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.914963627 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.914909053 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.914989518 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.914738369 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.920566957 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.910758247 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.914723163 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.914826857 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.91591838 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.91145059 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.915884804 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.916046637 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.916926164 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.916731409 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.913688333 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.91474603 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.914764993 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.915845544 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.916168279 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.91478398 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.91847308 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.92399566 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.919766741 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.912839005 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.9170326 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.915582136 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.919692591 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.91636507 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.916235482 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.915270969 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.928681756 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.923965353 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.921888907 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.916181409 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.916728913 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.921294868 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.915601214 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.921783111 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.915681449 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.914791527 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.91667377 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.915200512 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.91350599 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.915654903 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.915442816 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.915723834 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.917988621 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.919118814 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.915353627 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.915545536 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.915269612 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.917940991 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.916579597 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.914720245 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.917327432 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.918695868 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.918559909 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.917552309 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.916966589 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.923729501 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.918071745 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.919282019 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.917570909 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.918220722 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.918414606 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.919548022 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.918445658 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.919625592 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.92609636 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.920265502 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.926152362 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.92007332 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.926898381 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.918530562 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.921826849 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.928921194 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.915123892 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.916628142 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.919690591 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.919196048 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.925367215 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.91795604 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.918254714 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.923949359 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.917827055 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.919832229 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.918999905 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.919358852 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.918645016 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.919410706 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.927665158 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.919899005 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.9235395 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.922838419 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.916593692 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.919800752 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.917972629 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.917056186 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.922859869 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.919762278 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.91928113 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.92075213 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.920145558 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.920835981 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.921699862 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.91994468 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.917822444 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.91976857 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.925874676 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.920351593 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.926123925 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.918878347 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.927400864 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.920832155 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.927663552 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.921311794 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.91991495 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.921486703 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.920262302 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.921431718 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.919953741 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.921153889 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.9214613 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.922904112 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.923877033 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.920690325 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.922522845 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.921741748 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.920475543 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.919611692 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.931394871 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.946461227 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.922289215 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.925868383 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.917065223 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.922253152 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.92724666 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.922342382 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.92091993 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.926009025 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.934483234 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.931444906 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.922266012 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.922590223 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.921453449 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.923760897 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.921561241 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.922125868 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.924499605 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.922028726 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.921707268 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.923832002 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.926971248 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.921140492 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.923837639 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.924125515 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.924689052 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.933577582 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.920224494 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.923886617 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.923515528 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.924095832 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.92347525 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.924405115 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.924565762 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.925120233 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.923579415 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.925477416 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.929849451 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.933480693 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.92517068 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.921838915 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.924090846 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.923336637 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.922465857 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.924830532 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.924057717 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.924035712 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.925405131 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.924280771 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.922539068 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.922570134 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.923694854 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.925403345 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.923220244 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.927223479 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.933427739 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.924857028 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.920889998 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.925489888 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.924057917 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.923730632 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.925309294 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.932256788 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.925485556 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.937011658 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.93493704 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.928274736 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.924365556 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.928165105 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.933825624 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.923781497 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.924683458 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.927104362 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.926315032 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.927247004 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.927460659 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.926289499 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.933131438 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.92252054 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.926388255 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.934119944 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.925284147 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.926720765 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.927556347 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.929996787 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.925244024 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.922373163 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.925398007 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.925533264 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.934288836 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.926093857 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.925036671 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.927908642 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.924105002 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.928687255 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.930074646 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.927606686 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.927794015 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.922563142 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.926644829 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.926312525 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.926994273 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.921789001 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.926055929 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.92519846 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.92892335 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.933093661 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.924303825 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.92981218 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.926276382 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.927854773 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.927811372 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.926400193 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.9245499 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.924498539 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.926629088 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.92845715 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.928092092 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.929846563 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.927827923 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.929226607 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.930189179 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.928908677 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.930204559 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.94005004 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.935575011 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.92540235 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.928729388 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.928896052 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.931566388 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.928816843 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.929484096 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.928204236 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.930366901 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.929553733 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.930089326 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.929445543 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.933299463 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.94484975 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.928394801 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.929452464 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.926983308 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.935931771 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.930558366 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.926427678 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.928945282 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.932199028 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.932583903 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.939764793 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.931033643 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.93724742 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.930337341 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.930342187 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.934268422 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.931833853 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.93704605 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.932249113 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.929850229 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.931280019 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.938240237 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.946457923 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.928040439 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.940318569 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.961308965 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.930270404 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.931523889 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.932006443 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.928691258 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.931301193 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.932387629 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.931405708 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.930789106 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.930444657 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.931130287 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.930136686 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.938491357 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.931338192 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.92890315 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.929877828 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.930223116 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.932446891 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.927752485 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.930156583 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.931603502 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.931595849 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.932353879 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.933823395 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.932970702 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.946384912 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.941511787 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.93213543 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.932618668 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.92931746 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.935172152 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.934722862 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.944768542 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.938894449 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.931341719 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.93097545 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.934725194 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.931401432 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.929881185 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.932982237 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.93128111 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.931438411 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.930061999 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.945207239 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.941040552 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.937771308 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.931248227 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.933950111 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.932937825 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.933190863 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.933372324 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.933372403 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.934386819 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.933669905 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.936350006 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.933296802 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.933965386 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.937333591 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.942249025 seconds)
  done (took 1145.43539045 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.931542262 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.9303234 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.930548697 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.930820505 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.930478647 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.930927848 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.932468792 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.931825694 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.929678398 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.931128618 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.93124964 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.929184569 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.929540268 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.930536719 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.932831462 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.932056173 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.930347002 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.930952621 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.930187105 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.929076646 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.930852368 seconds)
  done (took 42.401072465 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.935633503 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.931049852 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.930250828 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.935353275 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.930696571 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.934635189 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.931696883 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.934239941 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.935373966 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.930160102 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.934156389 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.934162695 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.929718645 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.930590412 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.931515167 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.936016439 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.934915986 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.931742869 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.934571157 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.932314057 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.934286022 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.931282473 seconds)
  done (took 44.378809768 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.935177843 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.935862224 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.935264359 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.932306855 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.933795105 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.931106862 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.935164236 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.935580115 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.935321928 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.935669849 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.934164487 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.937435805 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.941130129 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.940248059 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.937024889 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.936016756 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.078539649 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.936753844 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.936500183 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.936216061 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.932386507 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.94070764 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.931706106 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.933474534 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.936832897 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.939741068 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.937005471 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.937808716 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.939698671 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.939499851 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.940752772 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.936644324 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.938467655 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.939564718 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.935410086 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.938308808 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.941094739 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.938177656 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.933721991 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.935001674 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.946999073 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.959749229 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.936363622 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.941965047 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.934211436 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.935723681 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.938795667 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.946493464 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.935235327 seconds)
  done (took 96.939059186 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.936354208 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.936125311 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.935873549 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.93776761 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.938086652 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.938584802 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.939690413 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.938099162 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.937518253 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.93512728 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.938076785 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.93558655 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.934888755 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.93634876 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.937403234 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.934178751 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.93418157 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.934561224 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.937133527 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.934692897 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.936887141 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.937639581 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.939507178 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.934756302 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.937896528 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.936023542 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.935301702 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.937017782 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.93750756 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.938357857 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.938291065 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.941175861 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.936344052 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.937208837 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.936838037 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.938756415 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.940980704 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.937008609 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.939039 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.936926717 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.940693323 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.940265983 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.939427403 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.940437853 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.938414077 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.938160723 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.937359333 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.93717414 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.937018037 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.940824462 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.939942515 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.936104609 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.940352974 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.936309992 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.940104249 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.941472149 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.937201018 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.935767042 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.93816926 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.936066834 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.935441814 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.939093804 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.937267607 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.939309027 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.939426393 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.94009709 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.938709907 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.940590164 seconds)
  done (took 133.625220513 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.94064344 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.941239456 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.940534803 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.941202981 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.941183632 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.940198665 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.944920744 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.941435758 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.944462309 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.94244868 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.941576752 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.944069268 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.941319693 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.941941151 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.943235503 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.945179423 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.944015315 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.942512826 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.943375427 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.943401611 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.942935901 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.942119821 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.943078915 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.943500366 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.944185504 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.943451795 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.944672499 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.944464912 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.943289471 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.944833991 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.945284989 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.944550704 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.944375885 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.944305052 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.944802588 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.943944 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.943497361 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.943924343 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.943733925 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.945134392 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.943230705 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.944965624 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.945529407 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.944300675 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.945348994 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.94385634 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.944514237 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.945917273 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.942697605 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.942902478 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.945679135 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.945152839 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.94615002 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.945729869 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.946686701 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.945160271 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.945784389 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.946380503 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.945822542 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.945705495 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.946661082 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.943660875 seconds)
  done (took 122.382553822 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.942727016 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.942827622 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.941505772 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.941805622 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.944095554 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.9407004 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.943115243 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.945171387 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.942094078 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.94261454 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.945049923 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.941614745 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.942253155 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.942164213 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.940738905 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.943383692 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.942310124 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.942081513 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.94468883 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.942399099 seconds)
  done (took 40.718404413 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.941100756 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.944004601 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.942399895 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.941357825 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.945596132 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.941660182 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.944083898 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.94561524 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.943378844 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.945187875 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.946210391 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.945627073 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.942534881 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.943630226 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.94517836 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.944138572 seconds)
  done (took 32.967630403 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.94310938 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.945619364 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.94486351 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.946470397 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.943011163 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.944216059 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.945938071 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.943658518 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.94561179 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.944528095 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.946627797 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.94521212 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.947768307 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.947064433 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.944852335 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.947274165 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.944617214 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.944053435 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.948843997 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.949194387 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.944899591 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.945346317 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.947328081 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.947517264 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.945247275 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.946167605 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.944810565 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.945127052 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.944159189 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.947218006 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.944867753 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.944417787 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.945651008 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.945365892 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.950030487 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.947645675 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.948671162 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.948628872 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.947079628 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.948684315 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.949283174 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.946903893 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.949513214 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.949636453 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.945749895 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.947880864 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.946239207 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.947977668 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.946763776 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.94513203 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.948678205 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.948885454 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.947279797 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.949056902 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.948762755 seconds)
  done (took 108.927286302 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.948102603 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.949469523 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.947150422 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.950480958 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.951045267 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.947743344 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.94924173 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.947505519 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.947292817 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.951226168 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.948533802 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.951025066 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.946641279 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.950789773 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.949666936 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.949685208 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.948370524 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.948294901 seconds)
  done (took 36.952476859 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.948036479 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.949104129 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.950880782 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.948152585 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.948841682 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.950418579 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.94798333 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.951452741 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.951369747 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.94725455 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.946853286 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.951051593 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.949985775 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.948868598 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.948060879 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.949543932 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.949289158 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.94923155 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.948432623 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.948973102 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.951680932 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.950644628 seconds)
  done (took 44.757318992 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.948475526 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.950222423 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.968150217 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.973310734 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.972855948 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.98895853 seconds)
  done (took 13.671691281 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.947924739 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.949149772 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.948367022 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.951325135 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.951945381 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.948078933 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.949988458 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.949479408 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.950466915 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.947321727 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.948525545 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.951845483 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.951118228 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.949208384 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.954266942 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.951300278 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.951032429 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.949943349 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.949802483 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.953407839 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.951746643 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.952217511 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.95172802 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.951525507 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.949516958 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.948078201 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.953325621 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.95009915 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.949887006 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.954151119 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.951804913 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.951867047 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.954629658 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.950587217 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.952943458 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.953883834 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.952350542 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.953939946 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.95223201 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.951344365 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.951971532 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.95263223 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.956394101 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.950418116 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.954980117 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.95227737 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.952345577 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.953567142 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.952448154 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.95478509 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.953582619 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.949310573 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.95364947 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.955742855 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.95698458 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.955896515 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.953642788 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.953471684 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.95627949 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.953884799 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.95310507 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.956101173 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.953076616 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.952334487 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.955087026 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.95344547 seconds)
  done (took 130.713845399 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.952359614 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.952893861 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.951889201 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.954751537 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.954064813 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.953724966 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.953914583 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.953409406 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.953959598 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.953840707 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.956960194 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.953556535 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.952407317 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.953847809 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.953888899 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.954131926 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.954541684 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.953723664 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.953128007 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.955116666 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.951582957 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.954723373 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.954609229 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.954157772 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.952526682 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.95538741 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.95483567 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.954833487 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.953737502 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.954931168 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.954931845 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.95519239 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.954122268 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.95180965 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.9542525 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.954659426 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.953911671 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.953863385 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.952845154 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.9566015 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.953498375 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.95682018 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.954939852 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.954827236 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.955129096 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.955762006 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.954560614 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.95590491 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.953175634 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.95515579 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.956127336 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.956593597 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.954784353 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.955301323 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.956900014 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.956100929 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.95504152 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.954551498 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.954233469 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.95811413 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.954555937 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.956905247 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.958318752 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.957269466 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.956476952 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.955480331 seconds)
  done (took 130.885066733 seconds)
done (took 2668.697324275 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.945775305 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.177283796 seconds)
  done (took 15.999853546 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.120329458 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.07192201 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.957619546 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.954500881 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.952203129 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.952674635 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.962212917 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.949590392 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.952005218 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.951963931 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.95422365 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.136514714 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.005422787 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.950818055 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.953067065 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.04648168 seconds)
  done (took 53.75432549 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.957659833 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.957962467 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.967207801 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.959976201 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.957053972 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.975325156 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.989145664 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.959451607 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.014596222 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.966222024 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.079781537 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.964674028 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.955188073 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.015188458 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.966147276 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.968663323 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.053038797 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.029114376 seconds)
  done (took 37.613159969 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.034734066 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.954580333 seconds)
  done (took 10.870112611 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.946130639 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.985271245 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.944964591 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.976897888 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.950496685 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.954109231 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.959257778 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.964593743 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.98017143 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.978144608 seconds)
  done (took 71.519396447 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.95659396 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.954542469 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.954923553 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.952280056 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.946607366 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.947885822 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.952812297 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.950187136 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.631886495 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.986991655 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.959433656 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.962354347 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.953805134 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.956977454 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.951410188 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.976050055 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.048528151 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.952857484 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.951240046 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.960780965 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.954825671 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.012246507 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.968091515 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.954772475 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.985991189 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.633474059 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.959830665 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.960613723 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.048511187 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.953357596 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.955255509 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.956755076 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.95827535 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.320944296 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.260470047 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.951957627 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.966543121 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.963270159 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.953200485 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.050214363 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.956745672 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.96056726 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.609538549 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.236214543 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.049930384 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.995956051 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.272539093 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.971664312 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.95882225 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.983574894 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.957708497 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.957112084 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.967440142 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.43057233 seconds)
  done (took 136.865352734 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.951843297 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.313855937 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.122156517 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.952063407 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.238220255 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.159965919 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.949110256 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.002675107 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.94951043 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.183507894 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.207607463 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.062562963 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.950418269 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.94820712 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.946224046 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.944853442 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.114413768 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.026490567 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.947770193 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.947322517 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.983803729 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.198079832 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.079167588 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.95256707 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.98114052 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.167663209 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.077915387 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.060250113 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.753516781 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.949353551 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.017846024 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.94977453 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.951875868 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.94823589 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.111903359 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.050195545 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.037219651 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.950226035 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.950859195 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.951028194 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.626799077 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.157125766 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.05070909 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.095867904 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.151446441 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.163864073 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.733391496 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.952419904 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.697311202 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.120776273 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.188034955 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.185768082 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.076885367 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.951704668 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.28923867 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.951149488 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.952146005 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.20359848 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.098302465 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.057246085 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.952277368 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.953257433 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.95106386 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.203022365 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.949958007 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.050834933 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.952318785 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.949855071 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.054043875 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.058258433 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.095686879 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.169237328 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.985625992 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.864958449 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.482923845 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.206310763 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.023184946 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.207937514 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.95374701 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.950013769 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.037541145 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.802752017 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.215383757 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.20515922 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.211123382 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.990784561 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.682255004 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.95454572 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.183393297 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.178042792 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.208550065 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.163642275 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.190885591 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.282179648 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.95421546 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.954730892 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.197707638 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.091565105 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.954813982 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.309993636 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.193013847 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.523956075 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.978652146 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.266416169 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089263442 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.955538369 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.600641029 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.956516276 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.182670209 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.998686974 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.961040862 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.955448601 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.177438195 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.930399057 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.957053904 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.820715727 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.021257572 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.957739916 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.191708964 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.95603351 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.222233148 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.954637522 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.199607811 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.052538001 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.991022388 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.13655642 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.163272327 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.956617679 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.209697708 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.202556746 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.076203074 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.231652154 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.862583507 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.958477513 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.249982134 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.956148951 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.957249898 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.130946746 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.957772336 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.109012989 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.956030383 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.245962799 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.981480172 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.191477236 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.956135371 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.214275113 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.993980044 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.012420596 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.958621657 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.092182909 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.959084294 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.794005175 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.120024114 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.958208606 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.954025769 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.519215516 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.958534594 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.110731962 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.196006366 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.980786209 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.035929072 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.621857821 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.958109096 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.051975319 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.984613471 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.348748822 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.958948471 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.21920732 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.958589947 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.959762608 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.96028126 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.207307112 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.197892376 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.95943489 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.955692162 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.858460353 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.96040906 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.95875796 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.146734159 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.315086587 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.95759115 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.168001573 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.958251715 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090987296 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.959388679 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.045768032 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.29875356 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.960269776 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.960289895 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.959511226 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.959684146 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.959217002 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.174385755 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.988217654 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.510777327 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.102638109 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.234538135 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.275064 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.214077514 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.006823965 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.96367045 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.221725298 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.961332216 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.026268818 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.961430495 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.984284641 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.197307339 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.963733282 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.175758228 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.245086984 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.006640435 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.013100393 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.964080041 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.962800608 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.95935851 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.113690355 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.05499416 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.959826543 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.960722903 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.080547019 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.088643582 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.176353337 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.961718698 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.001274361 seconds)
  done (took 923.229952149 seconds)
done (took 1251.73316557 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.962384921 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.961929847 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.948160021 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.961038027 seconds)
  done (took 29.720976455 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.971152868 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.966964135 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.968073155 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.966247173 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.968899748 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.968837738 seconds)
  done (took 13.696424922 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.000506555 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.420139643 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.961514639 seconds)
  done (took 22.268579702 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.035147928 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.350958345 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.082580713 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.396307565 seconds)
  done (took 10.752829769 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.96910482 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.968599697 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.965612161 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.967542469 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.96973465 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.970415726 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.967073463 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.967674114 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.968533226 seconds)
  done (took 19.603376973 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.387650628 seconds)
done (took 102.318827576 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.154078966 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.310367409 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.350040969 seconds)
    (4/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.062300625 seconds)
    (5/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.136443826 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.112983151 seconds)
    (7/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.060088749 seconds)
    (8/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.944875856 seconds)
    (9/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.173012212 seconds)
    (10/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.870988446 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.144456547 seconds)
    (12/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.059159771 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.093308563 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.00397589 seconds)
    (15/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.525342419 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.932552631 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.985781809 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.946341756 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 8.236243462 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.139783415 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.245655092 seconds)
    (22/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.484875387 seconds)
    (23/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.968484162 seconds)
    (24/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.044147716 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.043674134 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.211779113 seconds)
    (27/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.180526803 seconds)
    (28/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.401549699 seconds)
    (29/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.370734507 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.967231869 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.93876282 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.015366189 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.258321002 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.058290197 seconds)
    (35/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.050799734 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.963419274 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 4.167381082 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.291318488 seconds)
    (39/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.470281005 seconds)
    (40/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.982019465 seconds)
    (41/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.065551899 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.264258284 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.974721099 seconds)
    (44/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.974963247 seconds)
    (45/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.948447805 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.830381135 seconds)
    (47/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.085595576 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.131013799 seconds)
    (49/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.197080542 seconds)
    (50/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.968247072 seconds)
    (51/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.015093086 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.128463465 seconds)
    (53/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.96198512 seconds)
    (54/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.563602329 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.226778222 seconds)
    (56/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.092224442 seconds)
    (57/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.145893248 seconds)
    (58/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.201603848 seconds)
    (59/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.209456534 seconds)
    (60/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.966457757 seconds)
    (61/309) benchmarking ("sort", Float64, false)...
    done (took 5.80511146 seconds)
    (62/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.535773318 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.950019091 seconds)
    (64/309) benchmarking ("map", abs, Bool, false)...
    done (took 3.453635889 seconds)
    (65/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.058429559 seconds)
    (66/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.428763804 seconds)
    (67/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.96782184 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.405926801 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.981904576 seconds)
    (70/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.026788682 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.528911163 seconds)
    (72/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.432795713 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.241609296 seconds)
    (74/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.103615423 seconds)
    (75/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.093522843 seconds)
    (76/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.968240013 seconds)
    (77/309) benchmarking ("sort", BigInt, false)...
    done (took 7.075971211 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.968489943 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.36826044 seconds)
    (80/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.96590917 seconds)
    (81/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.17255686 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.348325157 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.968788967 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.171765405 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.305750679 seconds)
    (86/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.14380614 seconds)
    (87/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.314220222 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.062439758 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.627750238 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.966114536 seconds)
    (91/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 8.196030447 seconds)
    (92/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.197991993 seconds)
    (93/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.224944715 seconds)
    (94/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.066211922 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.967717164 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.127055401 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.034101949 seconds)
    (98/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.014751594 seconds)
    (99/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.198712171 seconds)
    (100/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.67207799 seconds)
    (101/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.398199476 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.890294674 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.297294675 seconds)
    (104/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.357308235 seconds)
    (105/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.061485676 seconds)
    (106/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.057850502 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.250281993 seconds)
    (108/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.368222723 seconds)
    (109/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.986371499 seconds)
    (110/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.031593929 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.993162169 seconds)
    (112/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.286037039 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.966145921 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.068331888 seconds)
    (115/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.037729271 seconds)
    (116/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.125785533 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.987738501 seconds)
    (118/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.391845566 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.953609302 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.793126021 seconds)
    (121/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.598398723 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.971553068 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.213151463 seconds)
    (124/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.975988142 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.91871019 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.974240642 seconds)
    (127/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.095363136 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.90633107 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.023411783 seconds)
    (130/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.047863253 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.970314306 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.707634944 seconds)
    (133/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.088124979 seconds)
    (134/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.063424462 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.970367718 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.349376095 seconds)
    (137/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.06729254 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.096207709 seconds)
    (139/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.108217264 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 2.196230364 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.989560126 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.308772281 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.222291195 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.96986465 seconds)
    (145/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.241883358 seconds)
    (146/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.953072366 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.276310946 seconds)
    (148/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.973998274 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.219465657 seconds)
    (150/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.884143399 seconds)
    (151/309) benchmarking ("sort", Int8, false)...
    done (took 4.90559005 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.072574572 seconds)
    (153/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.436131474 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.990248453 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.952705342 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.287459568 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.997776399 seconds)
    (158/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.097618804 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.971081392 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.264145812 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.959608971 seconds)
    (162/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.083271968 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.989342973 seconds)
    (164/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.996262529 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.314264771 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.101805582 seconds)
    (167/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.260857809 seconds)
    (168/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.259953583 seconds)
    (169/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.827516547 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.956635795 seconds)
    (171/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.105163486 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.046828608 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.198546592 seconds)
    (174/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.246940962 seconds)
    (175/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.053463222 seconds)
    (176/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.95567123 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.135264494 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.145718486 seconds)
    (179/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.957242985 seconds)
    (180/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.715420562 seconds)
    (181/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.961261971 seconds)
    (182/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.087062829 seconds)
    (183/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.09715992 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.972506275 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.999896826 seconds)
    (186/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.062575324 seconds)
    (187/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.106322277 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.507337366 seconds)
    (189/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.975085922 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.169727822 seconds)
    (191/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.97902256 seconds)
    (192/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.99228003 seconds)
    (193/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.202662654 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.006947382 seconds)
    (195/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.167067783 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.115535778 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.305243121 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.283670064 seconds)
    (199/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.140930083 seconds)
    (200/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.996869676 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.603083453 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.210654258 seconds)
    (203/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.043355472 seconds)
    (204/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.038189116 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.110521585 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.295499342 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.038750954 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.972984729 seconds)
    (209/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.303215329 seconds)
    (210/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.998705526 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.974740579 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.386799209 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.805352115 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.159254398 seconds)
    (215/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.109687272 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.938466127 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.846924074 seconds)
    (218/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.973770393 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.822785435 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.616192238 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.173357033 seconds)
    (222/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.959517061 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.745651694 seconds)
    (224/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.41957516 seconds)
    (225/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.066062923 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.97501268 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.368339361 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.997823877 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.959640759 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.10276907 seconds)
    (231/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.071742562 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.35771962 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.363528354 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.048997094 seconds)
    (235/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.958829827 seconds)
    (236/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.09143631 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.838652296 seconds)
    (238/309) benchmarking ("sort", Float32, false)...
    done (took 5.673256552 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.082601195 seconds)
    (240/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.060205583 seconds)
    (241/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.999994313 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.271522557 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.959342171 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.870807406 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.683882934 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.979229436 seconds)
    (247/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 3.587787323 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.423393511 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.412752415 seconds)
    (250/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.126844547 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.074054472 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.097328528 seconds)
    (253/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.078433214 seconds)
    (254/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.435976192 seconds)
    (255/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.337819555 seconds)
    (256/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.082942239 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.001029833 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.995026463 seconds)
    (259/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.061000121 seconds)
    (260/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.959955089 seconds)
    (261/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.358283384 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.329627537 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.661982616 seconds)
    (264/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.002756409 seconds)
    (265/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.962443198 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.700256866 seconds)
    (267/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.372338663 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.047947998 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.0489508 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.136985438 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.276195161 seconds)
    (272/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.084912174 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.009513288 seconds)
    (274/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.173206652 seconds)
    (275/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.962360371 seconds)
    (276/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.504512028 seconds)
    (277/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.165629474 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.999280199 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.071599914 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.897257201 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.085257966 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.069222754 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.071719898 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.113863546 seconds)
    (285/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.293283035 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.348602644 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.979172519 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.153447659 seconds)
    (289/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.113092983 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.980103969 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.777038666 seconds)
    (292/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.310439607 seconds)
    (293/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.317864229 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.964866464 seconds)
    (295/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.071131196 seconds)
    (296/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.057012379 seconds)
    (297/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.071823222 seconds)
    (298/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.394529173 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.206380439 seconds)
    (300/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.166994012 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.023025039 seconds)
    (302/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.977843557 seconds)
    (303/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 8.306846564 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.523256456 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.003175878 seconds)
    (306/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.062133164 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.948280746 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.835229111 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.979718983 seconds)
  done (took 1039.442123644 seconds)
done (took 1041.385860767 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.015434253 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.00825762 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.989182488 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.011978317 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.101144402 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.019508041 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.001444938 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.993727307 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.037524914 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.039856428 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.990580019 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.019149114 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.991974895 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.991574137 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.991190544 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.00635463 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.310388785 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.021245533 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.007556019 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.000370526 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.00776423 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.992940004 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.040524157 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.019170062 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.993577155 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.99486305 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.996169027 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.013142536 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.105517035 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.997621018 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.996614762 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.002970738 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.310486102 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.021347335 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.987318805 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.010913221 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.002903922 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.001872403 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.997180605 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.025484137 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.402904476 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.032644025 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.993773299 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.994902902 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.992024075 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.997794595 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.995203809 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.999733222 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.005215793 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.005525215 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.399895576 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.048283996 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.996599907 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.995491444 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.005221632 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.994272145 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.997707175 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.009170303 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.012422805 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.010443743 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.301231173 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.02663599 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.994793458 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.010912721 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.999871677 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.43816776 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.028677057 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.996135113 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.404536666 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.03832703 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.437823304 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.041629444 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.994415161 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.009255245 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.026091531 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.312343034 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.016460011 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.993116327 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.002784814 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.992847016 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.006725565 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.008892709 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.999197733 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.996794381 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.007835386 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.022894535 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.006596089 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.997094014 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.003055467 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.016391123 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.002362958 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.005702921 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.999839933 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.99032231 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.006525266 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.000675363 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.999017833 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.9990172 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.0018383 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.005480076 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.405096193 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.051087096 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.994296835 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.992618111 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.994311653 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.010132686 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.404965219 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.037513633 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.018224792 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.044709107 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.998052081 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.30210838 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.029141127 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.017536845 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.007813873 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.000540575 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.992795112 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.303816701 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.433006215 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.052113584 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.998339792 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.995296475 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.013230783 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.997652012 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.996191604 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.315498097 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.02861959 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.012817371 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.121030611 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.00704305 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.027616751 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.996686836 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.999895412 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.026700439 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.014953597 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.03041739 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.000462872 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.013096948 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.015333583 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.994169391 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.007905648 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.010143075 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.999107957 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.004006074 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.993353259 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.027491924 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.012796398 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.011066866 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.019801457 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.119881157 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.996945675 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.306763182 seconds)
done (took 313.216973237 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.068505318 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.991013411 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.095240203 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.993034124 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.081547442 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.08010061 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.992025163 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.992467305 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.992765603 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.385042083 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.99214349 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.993438912 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.989773843 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.991049738 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.083369435 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.995685598 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.992708852 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.330785671 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.995315522 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.067247621 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.993038862 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.993193686 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.994863179 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.369171089 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.990632877 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.99565981 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.069182695 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.994504617 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.35233283 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.99680312 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.998178317 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.333889278 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.088735365 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.013982541 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.005945498 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.002768279 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.080008647 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.997955284 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.077971004 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.079674044 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.096343717 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.037680903 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.988715555 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.990328848 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.000858604 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.00042005 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.994547258 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.026919712 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.988482369 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.003958744 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.347018743 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.997313073 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.004822443 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.996333303 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.994072233 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.028905156 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.99395492 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.000533602 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.089667963 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.999047415 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.065406735 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.393395334 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.367845411 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.995109328 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.994934861 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.995665256 seconds)
  done (took 192.838073339 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.066237449 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.070595826 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.062928775 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.999178222 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.046335993 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.06556598 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.000081147 seconds)
  done (took 16.225396699 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.006256841 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.997527518 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.050272193 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.048837774 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.998958093 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.148841528 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.997833142 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.009636975 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.995890168 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.050977397 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.000356336 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.998378005 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.007039976 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.995637238 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.050955059 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.011284448 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.116339457 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.000185095 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.002297819 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.150611693 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.995450149 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.007409509 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.055958482 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.011387309 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.000633636 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.005402124 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.582542324 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 2.000806927 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.996187958 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.001803928 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.997085102 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.04142955 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.000036696 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.992806027 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.997176965 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.116334572 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.00119785 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.997565953 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.001947103 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.997429732 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.001290477 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.000491348 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.00080598 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.998549334 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.0016697 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.025186349 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.001887091 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.001847085 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.001213543 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.002614228 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.053128845 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.003707579 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.000859349 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.000946181 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.056891356 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.009220638 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.005145911 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.999836413 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.003475518 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.000315174 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.154237926 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.051734307 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.003028941 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.052965067 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 2.003642886 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.004261378 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.004054174 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.002736645 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.099524615 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.001344106 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.053315004 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.001973128 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.163360995 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.026096706 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 2.003539352 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.006741129 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.004938251 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 2.003515923 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.997565408 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.009834369 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.999402023 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.003405625 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.010404409 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.000068519 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.001248362 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.116076756 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.112222771 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.001987298 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.015698197 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.01105711 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.000156479 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.056505945 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.001740068 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.001837538 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.062819117 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.121524203 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.060872611 seconds)
  done (took 218.753158489 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.008633108 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.012623169 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.007487946 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.020444175 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.001820904 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.00494343 seconds)
  done (took 13.976674297 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.007864883 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.00435697 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.00373278 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.004405129 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.004576257 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.005601298 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.006815493 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.00627095 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.008568212 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.005905107 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.006865808 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.003420955 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.004416089 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.004038315 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.005116747 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.003032772 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.006569129 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.0010221 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.0062967 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.005321597 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.16807438 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.003800477 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.006372371 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.004992718 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.010205495 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.003356584 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.01209305 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.004155775 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.003835478 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.011252021 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.009774789 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.005864985 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.004382577 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.012024232 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.010091738 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.008265782 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.007710909 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.006032282 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.002604117 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.006017496 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.006294756 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.006206427 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.004570316 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.007546287 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.006047368 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.010342391 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.011755785 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.012385423 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.007062249 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.007651746 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.006064498 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.00588791 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.007744049 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.006428736 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.007919649 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.011032829 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.011617157 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.007489119 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.00800845 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.007117436 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.007281754 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.008752344 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.008170902 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.012534115 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.003647421 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.008734028 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.008868053 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.012079924 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.007342354 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.007775855 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.009566603 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.005223614 seconds)
  done (took 147.588074187 seconds)
done (took 591.313413177 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.137942044 seconds)
  done (took 9.0606076 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.151859691 seconds)
  done (took 9.118796625 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.563693878 seconds)
  done (took 10.509722892 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.025267009 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.030948351 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.015258226 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.004801624 seconds)
  done (took 30.030372526 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.15114053 seconds)
  done (took 9.077810222 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.029485661 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.000659503 seconds)
  done (took 15.99173129 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.071804517 seconds)
  done (took 8.998935482 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.280742438 seconds)
  done (took 9.255403257 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.013095166 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.033639783 seconds)
  done (took 15.988728634 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.987888314 seconds)
  done (took 8.914644024 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.715822046 seconds)
  done (took 11.732568527 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.024036541 seconds)
  done (took 9.055529106 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.050948835 seconds)
  done (took 8.976738991 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.120805254 seconds)
  done (took 9.049799048 seconds)
done (took 167.686923392 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.004494339 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.006624927 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.00043058 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.00105746 seconds)
  done (took 29.937805223 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.045296167 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.041836407 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.043446147 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.049569561 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.043195478 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.040437565 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.033627921 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.03481914 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.053285846 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.048057481 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.043649013 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.04589296 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.043477058 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.049604969 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.044449451 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.044754298 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.053781774 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.044588159 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.033967594 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.045158602 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 2.006902666 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.054086735 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.047226584 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.008246976 seconds)
  done (took 50.930134433 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.213502414 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.085611367 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.167772827 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.066687748 seconds)
  done (took 10.461661202 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.060540708 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.064053705 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.077125662 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.11582835 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.138840495 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.072392367 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.036114374 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 2.032620658 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 2.018149466 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.065189461 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.14023749 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.060725987 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.171322407 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 2.006594685 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.198922658 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.011755866 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.012949161 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.063316598 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.112493567 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.133736836 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.008576459 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.061689645 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.068587844 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.066239353 seconds)
  done (took 51.728148899 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.008633093 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.017552683 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.018391374 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.009556243 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.009538429 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.012052873 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.016209239 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.009155535 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.032542241 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.012965038 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.011301715 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.009684403 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.008947546 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.010561781 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.011092874 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.023569427 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.023830238 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.010603674 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.014190354 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.017449357 seconds)
  done (took 42.217043815 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.006628279 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.860106218 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.353543465 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.260884408 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.007497066 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.005090415 seconds)
  done (took 32.423459052 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.027065751 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.018392183 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.012612538 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.069298771 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.153348578 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.017418978 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.013668378 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.027763229 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.059784034 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.076415073 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.0306974 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.042335531 seconds)
  done (took 26.478201931 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.010130149 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.027417319 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.007007024 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.042424902 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.025199233 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.019053675 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.020730497 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.007646582 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.026385628 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.031642038 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.01690096 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.027211199 seconds)
  done (took 46.195380932 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099124135 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.905616838 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.062552001 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810070098 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.549786725 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.217504338 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.65778219 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.355505982 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.014520529 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282286637 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.00849367 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252485598 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.265272928 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.010278641 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.077465571 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.459719681 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313433402 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.233216971 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.031679799 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.658101909 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129548475 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.602634753 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.773367777 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.134805232 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.225343802 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.140911551 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.269127984 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.96787112 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150086575 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048244362 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0214895 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.010663957 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.285891166 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390883569 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123033948 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023162793 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.675388703 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.72855971 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 7.000053243 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.803492745 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.831247589 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.142619418 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021226587 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.014370888 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.948164885 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.630291927 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364521487 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.016518779 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.71607257 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.012776056 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023942275 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104521593 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.016642078 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.830363043 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.000552374 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.291523349 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.009686059 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021525278 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.582248755 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.105237545 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.738168996 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.956884642 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.106108054 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.667501169 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.485536792 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.160786759 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.015815175 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.015507503 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.94786245 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.734781035 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136253708 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.149761368 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.031284529 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.67717257 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3493686 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.138273306 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.092785732 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298263126 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.984465979 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.957676071 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24327301 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.970903413 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.947903399 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.863168838 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.949430266 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.274327529 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045807746 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.633168665 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049594659 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360968906 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.027563196 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035095586 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022770404 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.238852486 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.899500203 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.01490083 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.74455869 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288742331 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036082514 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356277683 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.951164638 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.016694262 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272016183 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.224281196 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320590844 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.471588071 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186383774 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.016787652 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.104788423 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.01651487 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034370136 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.297789619 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074022753 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.094020081 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148609847 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.975359835 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312120197 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.038896962 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.189729303 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.99272296 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278685126 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.322911661 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.266041274 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101246322 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.019337853 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.018042748 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.74641179 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.640241367 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.241591809 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.017387695 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.577305021 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035616983 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 7.020052967 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.954629012 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.688325987 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.984179876 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.134385994 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.242227244 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.035537508 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289675084 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9541688 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.17386319 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.118175493 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.241974344 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.672699824 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.094622205 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278891311 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.581024352 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328629935 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036656037 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039454744 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111847571 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04076068 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.532839968 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.283153129 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.025068744 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.022971098 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.70319377 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.08613696 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.023212279 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.025195533 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854012197 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307960474 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.037491786 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.026044985 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.915269107 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.033095702 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087617157 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.025944988 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030648953 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.52834323 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.894157913 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.026968216 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.716791599 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260548448 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02983806 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.680202927 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212781383 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.10790772 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308594697 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079089731 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.954574253 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.722560397 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.725000809 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.019834506 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.956576221 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.021615766 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030852381 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031015149 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.308741713 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.305946576 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.062806235 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.684225315 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.136251187 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030034636 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.025874305 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.022185303 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.519501528 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.116031295 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.752344204 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.0380294 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159235391 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.036345753 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.957258275 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.027157615 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028298229 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.022282014 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.987851149 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07473248 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.692774585 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4909628 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282525935 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.679819015 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040877091 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.705208445 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.149629388 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.048430879 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.761972656 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.153990629 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.029637953 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102528367 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.033834612 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.704219779 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803470301 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.594393909 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358640527 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.337561451 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46294145 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.592203231 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.250092733 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366371462 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258618049 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.554100939 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.086881426 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371133749 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.983186015 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115729876 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.677142024 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.380334579 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042787992 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252053592 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417831817 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.812618142 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185128424 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236777798 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05599492 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.010865333 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.956656192 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.227412247 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18613525 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.735557586 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250351697 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372347534 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.784245861 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.136441067 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 7.024752211 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.7142065 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1037334 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.737489624 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.397347709 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.62673866 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.025356886 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54135255 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.033841503 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.469251042 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381195131 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.423931124 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.126680523 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.960214822 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.037557128 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.037510738 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.024810782 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.012540185 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.945936481 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.312964067 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036396897 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261757751 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375420905 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.291951064 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.928196814 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.029338566 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.026911865 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.315926504 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.907004838 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16431969 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.559799696 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.508924987 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.034839858 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.959945363 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.958653581 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.728643349 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.026664369 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009894456 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250083786 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.130203504 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.018711551 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.582262763 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239918266 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.281217442 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.03928621 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.307119378 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302687538 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.763527017 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051892213 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.126592964 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.766114117 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.735193859 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.251143334 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.262207324 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888036404 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.2568429 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.082098602 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.98595728 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.024897955 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.243375981 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.251804271 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.006028933 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274730176 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.7487062 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.030669766 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433341585 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085762841 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.007678402 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.242524396 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.122376531 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038890507 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108301371 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040535114 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.039934635 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.040813418 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078224617 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.991455297 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.160064109 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.0429377 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120611642 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.10755366 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.624674962 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.038068531 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314618538 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423590926 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355756256 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087281002 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.02950378 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.034623134 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.965713696 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163778458 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.475028819 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.30366105 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.146904317 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.224462002 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053321658 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.76762373 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.510206309 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240615789 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.303672314 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.925286256 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.028521655 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.121603404 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.254505253 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04118232 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.241153022 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.25663911 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345949105 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502119221 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.231691973 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.494837676 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.303195565 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.402261263 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.03214861 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.621537818 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.041848872 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.789428804 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.066545937 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.032756058 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31431499 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039339014 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412054264 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.053453706 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.225404106 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.54806515 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.709001924 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393521763 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.020518465 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088200374 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312059002 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432606464 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344460285 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095120585 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042554409 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.733769035 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169951011 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.984362504 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.297291855 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.032306225 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244307823 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.74180997 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.040241214 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319942979 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340337078 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.028299192 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.014815668 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078751631 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.040585996 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257823354 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.288505313 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28301105 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04052824 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.033806538 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.848474841 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316931947 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088109338 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.966281605 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.033074494 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129028975 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.278150183 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052033865 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.551008909 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.735166015 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324615232 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.95264156 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052844879 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.48824731 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480759991 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36681719 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.562012871 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.26028274 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.589219641 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.987771233 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.415013499 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.035089284 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.497447009 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.418159938 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.035021541 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.609936614 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151953489 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.308426614 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.353563116 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.049295528 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.895251831 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.07229271 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254768095 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.641875413 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.974707848 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.037576272 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.093163309 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.032826067 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.152028836 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042330984 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.016535268 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951791952 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.87620114 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.538429406 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.038100046 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.023253761 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.792181353 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.620601346 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15022479 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194542392 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.040173471 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.76017923 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.327874277 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.290318204 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.587673789 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.112311327 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.041268651 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.03451775 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.964954811 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.240347351 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.319244438 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331515787 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.439427974 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.153454107 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038326257 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.252868809 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245711228 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.988637363 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185856476 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480519922 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156084203 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.954792945 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.756174638 seconds)
  done (took 1762.896280596 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.061337226 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.057023494 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.062385121 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.07894434 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.081527606 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.068160658 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.164350516 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.082434562 seconds)
  done (took 58.618160281 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.035846821 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.267959592 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.046098948 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.035086899 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.075321912 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.033487752 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.683270463 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.051818177 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.140567709 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.053141522 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.041211069 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.087961091 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.474263844 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.068815252 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.039686089 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.091997944 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.093651668 seconds)
  done (took 78.346510224 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.042139786 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.450296576 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.066000306 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.057910246 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.114985503 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.044709039 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.254286412 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.086371456 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.045165268 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.235745155 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.376026847 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.054307663 seconds)
  done (took 92.794868721 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.059222917 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.049381254 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.050558471 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.050420579 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.048598579 seconds)
  done (took 12.234521336 seconds)
done (took 2297.217434011 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.447475868 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.268106491 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.27568446 seconds)
  done (took 6.510248133 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.19618851 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.25163652 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.40131328 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.388135957 seconds)
  done (took 11.210985168 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.338899178 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.433814088 seconds)
  done (took 6.743677542 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.382196567 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.065309442 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.429962503 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.045883229 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.045839576 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.044628773 seconds)
  done (took 23.112807518 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.050608951 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.05644836 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.049301637 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.053717638 seconds)
  done (took 10.180706848 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.028525794 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.778232067 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.028747363 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.04392924 seconds)
  done (took 21.849961677 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.799931086 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.448738067 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.80194039 seconds)
  done (took 10.021484197 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.51977486 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.968435969 seconds)
  done (took 9.457948883 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.292899807 seconds)
  done (took 4.262876953 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.077103542 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.322091258 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.565294219 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.561199456 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.655633162 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.874363751 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.379893659 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.287640524 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.499914476 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.508242875 seconds)
  done (took 26.70258484 seconds)
done (took 146.34680209 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.480798303 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.073642464 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.248680957 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.418447504 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.290041 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.248049683 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.264654613 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.415344625 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.948506067 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.934577263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.423137611 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.285317842 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.217057803 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.06829454 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.224936622 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.06934714 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.283470884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.505438714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.138874831 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.323826658 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.281369924 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.065719898 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.262886106 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.083372357 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.293768128 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.203521006 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.613727524 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.077141287 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.277872896 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.627797646 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.207874669 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.466731984 seconds)
  done (took 174.296272534 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.050348982 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.050508895 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.050441095 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.048106595 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.372217177 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.051780668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.048705948 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.048016088 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.094207068 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.076833542 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.050866498 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.354549085 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.04898671 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.051383123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.049201495 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.047656663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.250810618 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.050179087 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.051860928 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.047960518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.049987655 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.211690166 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.052682886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.219140679 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.211847889 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.053640906 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.050661692 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.050789948 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.049818716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.047909084 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.052766093 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.051385205 seconds)
  done (took 212.972574644 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.052667783 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.053132713 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.054394122 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.052803538 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.05276815 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.054739752 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.05336773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.051776876 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.564383302 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.555322896 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.054619612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.059775316 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.062452742 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.052347741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.061959317 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.053744448 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.062715923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.060970422 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.062249759 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.066970912 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.07064718 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.716550971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.067556783 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.712796088 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.063146939 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.063972955 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.053202943 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.063556596 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.066609411 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.067536787 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.069777446 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.053898815 seconds)
  done (took 226.193320283 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.244744713 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.062201885 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.06230287 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.982152277 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.06198108 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.059846597 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.056036991 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.245651563 seconds)
  done (took 20.775314591 seconds)
done (took 636.219732436 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.539257903 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.384089132 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.239288464 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.085580355 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.337632531 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.121095117 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.084646523 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.154063649 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.813481416 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.152531831 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.735715214 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.105229368 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.824382639 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.108626331 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.205344899 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.143992578 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.629694563 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.721746794 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.26235885 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.16682978 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.251313567 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.053383225 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.166840256 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.846180919 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.844348423 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.093686156 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.270514664 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.638746146 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.092328819 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.245400844 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.872457194 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.473247924 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.096088335 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.08068733 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.140090968 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.119851861 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.433089548 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.092758306 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.204075179 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.85160552 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.15598166 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.689031379 seconds)
  done (took 111.505863686 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.051322262 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.051522274 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.049344232 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.049611416 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.052445054 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.051638903 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.050862824 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.049853536 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.051121285 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.048833256 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.048777336 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.05148656 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.050563118 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.050955159 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.050910216 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.051215263 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.050857543 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.054583952 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.050393581 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.050140551 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.051756398 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.052151344 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.065014491 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.052038815 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.053583739 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.053782485 seconds)
  done (took 55.334123165 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.065503597 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.218452458 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.309509705 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.084490438 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.065384808 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.06977062 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.086034418 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.069489607 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.068975362 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.069181824 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.161405435 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.070422491 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.08703802 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.305380604 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.0810119 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.065252784 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.067820015 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.066151028 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.227089592 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.084006199 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.087048205 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.071563433 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.085375239 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.079692396 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.065241462 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.066893101 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.070378487 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.529123826 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.075742196 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.160736178 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.112101891 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.091839755 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.477020912 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.316406798 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.12256243 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.072497948 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.067228172 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.164431358 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.072087444 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.068502913 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.087613086 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.072020636 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.308205096 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.569286412 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.081587823 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.06533174 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.538266208 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.17442427 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.12106283 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.07812772 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.309251998 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.083299897 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.068923516 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.07133854 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.105722881 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.072049136 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.068251606 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.425024539 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.080492773 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.086301191 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.073261516 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.068131085 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.234920887 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.079156182 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.220353091 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.079237795 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.075996397 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.068384808 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.309746901 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.0865048 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.572868174 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.084691873 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.070543369 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.162533056 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.227983726 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.569904538 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.084022177 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.232220024 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.505362069 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.09414244 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.077172331 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.519192408 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.09838748 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.077477109 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.073431437 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.075322124 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.070813155 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.114450774 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.086848831 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.506195493 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.580694293 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.444255543 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.096017056 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.087856787 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.072290976 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.423421775 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.078043214 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.072532704 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.305007199 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.585692299 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.085296277 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.079407097 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.561078484 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.086723911 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.089863468 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.080355328 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.316469257 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.087051969 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.11778435 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.073271282 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.081185363 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.075753467 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.09153144 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.079660057 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.071541385 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.553840465 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.18666163 seconds)
  done (took 255.696063605 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.068697709 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.067863567 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.065413216 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.06979033 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.066636005 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.072742542 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.064613123 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.065802816 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.073773361 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.066848084 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.066190403 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.06875201 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.068900075 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.068577833 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.173592668 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.075076103 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.679491666 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.068927855 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.066098244 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.064093515 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.834355 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.073746595 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.067869557 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.065534491 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.067240357 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.069625709 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.067755574 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.164298845 seconds)
  done (took 173.487135566 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.075314526 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.190231075 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.095972262 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.10119764 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.080123622 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.072651581 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.097035953 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.087821744 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.07775528 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.072784375 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.071389255 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.13952526 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.081194268 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.175733645 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.104413915 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.103968845 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.17796143 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.079941405 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.071919132 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.072700801 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.103247444 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.068521749 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.137661371 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.203450442 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.092398882 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.194587535 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.077528316 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.077527612 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.075527833 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.195612516 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.087427132 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.137350733 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.102610976 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.094428391 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.199406187 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.191452645 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.180549558 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.102435918 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.078280828 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.074368859 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.074732276 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.063925816 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.195056407 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.091145437 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.077922748 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.186185664 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.094467669 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.077906767 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.086144245 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.073672479 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.090325988 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.09485612 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.145884455 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.210734954 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.109822557 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.10164614 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.100704685 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.358028661 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.084583638 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.177422893 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.066797844 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.196412224 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.096704192 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.065043163 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.078632105 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.084475014 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.105366472 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.10673755 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.181097276 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.08307548 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.178826473 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.110292476 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.083115859 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.077277288 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.079574451 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.197676621 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.198353302 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.11207477 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.113129253 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.107330796 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.072567068 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.080198896 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.065845232 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.094652499 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.082864446 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.19879818 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.19482915 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.086363055 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.078637243 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.080309894 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.080304504 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.105549996 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.202261712 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.113625448 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.178165636 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.146426212 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.15388929 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.093740791 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.092513455 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.082303841 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.145164641 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.094329362 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.090234803 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.410509757 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.151438527 seconds)
  done (took 224.491985907 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.541731082 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.12958816 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.139012103 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.409718439 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.514938643 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.980184754 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.126286425 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.129696965 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.154108172 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.317774907 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.195885878 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.151966083 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.11511145 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.103104644 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.130849303 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.149023003 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.137514887 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.456626277 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.249822547 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.26890036 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.109713704 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.41809951 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.449910843 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.524562664 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.166115215 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.465950348 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.808018396 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.266317257 seconds)
  done (took 67.613909979 seconds)
done (took 890.108474811 seconds)
SAVING RESULT...
DONE!
