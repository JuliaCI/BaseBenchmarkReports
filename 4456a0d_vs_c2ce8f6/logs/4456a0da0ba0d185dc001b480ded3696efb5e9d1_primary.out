cset: moving following pidspec: 394
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.323380267 seconds)
loading group "string"... done (took 0.648310205 seconds)
loading group "linalg"... done (took 7.839903512 seconds)
loading group "parallel"... done (took 0.173197307 seconds)
loading group "find"... done (took 1.147892225 seconds)
loading group "tuple"... done (took 1.819258162 seconds)
loading group "dates"... done (took 1.262911289 seconds)
loading group "micro"... done (took 0.222746993 seconds)
loading group "io"... done (took 0.914277672 seconds)
loading group "scalar"... done (took 37.934678571 seconds)
loading group "sparse"... done (took 11.905886826 seconds)
loading group "broadcast"... done (took 0.948233222 seconds)
loading group "union"... done (took 12.243188064 seconds)
loading group "simd"... done (took 4.497389857 seconds)
loading group "random"... done (took 8.756701435 seconds)
loading group "problem"... done (took 1.862826823 seconds)
loading group "array"... done (took 21.120401888 seconds)
loading group "misc"... done (took 1.727327235 seconds)
loading group "sort"... done (took 3.316034252 seconds)
loading group "collection"... done (took 17.376936858 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533566922 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127725556 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135267755 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121914902 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148603174 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118380083 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127256289 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087846712 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.879793931 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152485168 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11811826 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419257525 seconds)
done (took 5.482347831 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.181272123 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088959686 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086929351 seconds)
  done (took 1.361647695 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069540679 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130120955 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070742176 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070299627 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070978892 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07095325 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070922747 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069996732 seconds)
  done (took 1.740086284 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078902417 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.075116687 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071691725 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071589896 seconds)
  done (took 1.484605149 seconds)
done (took 6.034888337 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.783419054 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.21297337 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18875521 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.401097156 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133101637 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.175434467 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640034523 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320898166 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192222327 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080628751 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11195347 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.347789861 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124687283 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644266316 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080359752 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.093836943 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141671742 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.45540836 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070855205 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085803082 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092530243 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131283919 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088463567 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077165589 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147054278 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070919201 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136736041 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083174871 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069642106 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.219776429 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176335533 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.670418794 seconds)
  done (took 10.472993321 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.106074636 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103114254 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07171649 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129948607 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102337492 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072747768 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078247459 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070780288 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094014078 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.13633239 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094634327 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110230624 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069313309 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071942015 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08786483 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213520829 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.087125995 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085289736 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073793654 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081506409 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111842603 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080842868 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085025305 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084115079 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131562393 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185216273 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101863302 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100833574 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.0705473 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08646005 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118845102 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135180016 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071718102 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069423013 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130402095 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098351707 seconds)
  done (took 4.829011715 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.995208188 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.148594027 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093118919 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135911779 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067881816 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110776644 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069348002 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087187247 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210152125 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.416922939 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.604058141 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115459686 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109178689 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071475803 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072434922 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070593916 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.492644722 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102902666 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109143391 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084333251 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073998629 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072747195 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366183508 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073805022 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.070482058 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072609893 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062077005 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124010796 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071423815 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.963737578 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.16920567 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069804313 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103508385 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.171566701 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.249397064 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069498973 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093853477 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1447054 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072286197 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068987756 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161138365 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068927343 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073450419 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069847668 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089664536 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107573897 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12373561 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06998894 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069483264 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168418041 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069164331 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082592909 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.174181154 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156073819 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080546593 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068727211 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.27629475 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092061391 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073769695 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068565106 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174553704 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127280554 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071561594 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070285842 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071773967 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072603255 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.392200372 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069711628 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.863234535 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074138918 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079928904 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073072806 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072236769 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076876561 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0757655 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091397446 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06943768 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078029666 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070242402 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06976273 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070427562 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08918455 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.36916615 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069828009 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07069878 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068369203 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.201374855 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099750835 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070443539 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069562287 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102904978 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072355528 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070536555 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113486831 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07052218 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08740542 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067840112 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116548308 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073144376 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070261386 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.085790711 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07237723 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101394288 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072451667 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106502589 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.086812233 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071678979 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.41310526 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069003937 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069243149 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071445877 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069402074 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072024005 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069949328 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082390249 seconds)
  done (took 22.125898112 seconds)
done (took 39.60888282 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.258957081 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079490705 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078315502 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077752527 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078038489 seconds)
  done (took 1.851213492 seconds)
done (took 3.111861596 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127429654 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103031807 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068076273 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099363928 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067897132 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104200329 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102818738 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080660443 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103070765 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068025353 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099520279 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067884123 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068511738 seconds)
  done (took 2.440026972 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09022376 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088768404 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074112943 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08702917 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067094643 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086401918 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085391974 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092728711 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085533669 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075814334 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068237731 seconds)
  done (took 2.155280672 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088863236 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089174598 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073874268 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085964597 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06761229 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085420013 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087728438 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089393234 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08596925 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077238252 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067506503 seconds)
  done (took 2.146523609 seconds)
done (took 7.98944255 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.083340702 seconds)
  done (took 1.321771833 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.576479826 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.945635038 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084706336 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11251877 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193471747 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119654554 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.264472807 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08958849 seconds)
  done (took 8.808914785 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.110148806 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074354401 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075755981 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072430343 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074227499 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0724413 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074595546 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073066298 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076823176 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075090771 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074708364 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07214284 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075089761 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072840741 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074002953 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074119338 seconds)
  done (took 2.539020711 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097933836 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094032402 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076716787 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078302323 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075821673 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075063147 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07726427 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076637685 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074127243 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075477002 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07857378 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077121022 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07509701 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068303306 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076832247 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079313102 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073880695 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077013819 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07765298 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079255194 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078212266 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068463583 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074744334 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07770083 seconds)
  done (took 3.212766571 seconds)
done (took 17.130660983 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111744136 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072748607 seconds)
  done (took 1.431668601 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.088106397 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087055831 seconds)
  done (took 1.431859992 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.088767883 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.070363284 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093129556 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081006739 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070359289 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069758003 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089767655 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069971659 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070457109 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06908214 seconds)
  done (took 2.02906251 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.075533425 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.085684802 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.075895235 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083900728 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076717186 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068106933 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075389269 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071496676 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080849005 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066176486 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074580096 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085480104 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074661387 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08742466 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075745738 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071852348 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0742054 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071126817 seconds)
  done (took 2.633953213 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.072932887 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.073204401 seconds)
  done (took 1.410773188 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.073263778 seconds)
    (2/7) benchmarking "second"...
    done (took 0.069131907 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070613916 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06956718 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067143632 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066167321 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066806072 seconds)
  done (took 1.741803338 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384999375 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119225223 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.311985073 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074497442 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084586119 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.253903767 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069768536 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074304509 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074592843 seconds)
  done (took 2.750076507 seconds)
done (took 14.693095069 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085978397 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.090372983 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099366195 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.38450392 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095296301 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070314283 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116734336 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189237096 seconds)
done (took 2.407212749 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217875322 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.679824508 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.427172489 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209530216 seconds)
  done (took 2.580961517 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343663579 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09283835 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063422826 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070321589 seconds)
  done (took 1.842854609 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073807339 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073041538 seconds)
  done (took 1.415902073 seconds)
done (took 7.329670466 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072835281 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087287929 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069495306 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069189362 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.0698447 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.068228362 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069632292 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.180611294 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067773852 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069954146 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069587225 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069982611 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.069295172 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069935442 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067514516 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0676927 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069172545 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067654014 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067185091 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066660839 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067038753 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069804118 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067112704 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067277923 seconds)
  done (took 3.083894629 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.091284804 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069905252 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075524451 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074735968 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073592214 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075242258 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074328661 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069523352 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074859401 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071663656 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072840413 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073440195 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072119996 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073889075 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07187634 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07311702 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074684041 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069769336 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071430383 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073141761 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075537581 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070030118 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073401129 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074234649 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073265554 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072774665 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071461546 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070035618 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074230986 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072822436 seconds)
  done (took 3.485532119 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075445463 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06934373 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069477674 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073150212 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066774748 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067466885 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066755376 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067342854 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067743182 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066555332 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068258801 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066404142 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066786235 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067667957 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067506169 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071289399 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082296349 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066748392 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066374279 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067969951 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069664943 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069041399 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066822064 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067227354 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066720186 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066513712 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06749193 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.0671342 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067290017 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06644699 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069792736 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070571822 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066336152 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073782485 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070433083 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066919594 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072984117 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066335372 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067407698 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066234472 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066892985 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066926649 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066966124 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073794831 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067540182 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068598306 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067368757 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067674713 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067376998 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06901587 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066852658 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066982083 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068889277 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068070557 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071364808 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066842749 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067813727 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066553362 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067923967 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066880684 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067473574 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067750764 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069659162 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067805991 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081478657 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073784677 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067066181 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068507695 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067662907 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06938428 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068505506 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08110961 seconds)
  done (took 6.238774297 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.096525702 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090495414 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068837442 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068958963 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065574804 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067837578 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074094505 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067412625 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069783701 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084444479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067739919 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068476592 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068937852 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070841026 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067421775 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069379379 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075059575 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065461886 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067165958 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070970956 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067933825 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073303083 seconds)
  done (took 2.881522412 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154462931 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073391253 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107459149 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078453255 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07375488 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078280009 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072894455 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073604988 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073171591 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07099487 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071205928 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073179195 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072825339 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070821557 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071172819 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071783313 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072963088 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070934031 seconds)
  done (took 2.720202417 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082233697 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069570569 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08992923 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069709662 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069605291 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071350989 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073621578 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076937314 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072292138 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06934641 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077315035 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071583921 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071735035 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069037924 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071588259 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070021291 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071504659 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069086686 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076782202 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073644343 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073286289 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076666084 seconds)
  done (took 2.905977255 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0853055 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07437645 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086914391 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072057099 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065112984 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067371152 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073197744 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069359445 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072959617 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071053367 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069645081 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067334804 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071925569 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070223938 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072100832 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069309376 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07142561 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069316289 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070985566 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064896739 seconds)
  done (took 2.726180446 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09254573 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072444621 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071216366 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077959722 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071327196 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070899939 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077364796 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070649697 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071076216 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09135073 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070938446 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071131385 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077268446 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075056374 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073491175 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078041664 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077340544 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077161609 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070844182 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07075922 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091056427 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071710438 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077973407 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071411054 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0708299 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071396742 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071045726 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075100864 seconds)
  done (took 3.403780148 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072031556 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070906013 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067078145 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067770342 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067389389 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068217877 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067278077 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067285859 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069181437 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066812717 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069365214 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069245576 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069629994 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069783817 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06925274 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069522018 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069779982 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066840858 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066529694 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067069509 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069724284 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069743114 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068999082 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067047622 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066898529 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069812245 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066985995 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066822178 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069028112 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066958053 seconds)
  done (took 3.351511319 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080822851 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076837583 seconds)
  done (took 1.456858684 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.069207758 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085835912 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067059847 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074651928 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072895166 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070771904 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076320975 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072686573 seconds)
  done (took 1.882829398 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087893253 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.082699225 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070484249 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08182733 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079865983 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086989659 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13705596 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070082951 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075248723 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067852325 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08387585 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069262865 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076127755 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070781602 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076165458 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07633589 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067359151 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074730174 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071355659 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068117691 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070157727 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078099945 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072181992 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064774655 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071544329 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091353965 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08022217 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069228888 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072435979 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077241706 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075946225 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063835044 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069970286 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070256937 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067977294 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079279601 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084526414 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072989862 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079065271 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070176874 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078710648 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065091005 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074195603 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076538143 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080388155 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069384267 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069645425 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06507897 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068109497 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075486702 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06524193 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070196937 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065024603 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07665445 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073234632 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081060909 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068731661 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072090705 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073174193 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073661981 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077142355 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071432062 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072719922 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069185403 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079817264 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075286543 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078159069 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064911113 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063972653 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067668961 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079784108 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092268642 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07554584 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070080025 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069923053 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067145584 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073190208 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070900911 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076074636 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076566755 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069350785 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074424956 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076739891 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070612493 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072643681 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077157896 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068447889 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072222105 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068461699 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085327722 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068773293 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067452001 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067584021 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081986004 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072861677 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06877454 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068086167 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076272873 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06356102 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06873283 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069204817 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069799869 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079430141 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072422783 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073085823 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077498503 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076273292 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069683142 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070948581 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065517655 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.197002042 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069712514 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.078014341 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065513647 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0731151 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071950042 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.070479532 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07903189 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069375269 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.0692621 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078842715 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075642632 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068474593 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067193819 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073245848 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.069793382 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071795501 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078622206 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068560084 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065546882 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065319919 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074044531 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069334033 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073941397 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073534959 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073333966 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065458086 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068409808 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074292241 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078292353 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069879521 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071700079 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075469365 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072326878 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069705989 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077227863 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072337357 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069578031 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076065081 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071716896 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065183773 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072204278 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072782781 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068082338 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073740048 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071932396 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072555209 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070042052 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068325699 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.0760614 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070475919 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069507605 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070317226 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068868925 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080468227 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072321936 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065194932 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067434187 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077244345 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068116962 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069192427 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069422554 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07224577 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070199735 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068188201 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069719971 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071920543 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078066002 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072719773 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070516247 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074407781 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081358837 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069639724 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072454128 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069274332 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071253606 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069821095 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079097545 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075917281 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073950229 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072501497 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066411531 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074982859 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077681223 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069073148 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067973002 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069088216 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073102538 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075838829 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073269075 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070028043 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068368751 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070872762 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071832655 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072434163 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068673532 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068920125 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075512763 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06744795 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075151921 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069681556 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079379696 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072573699 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063947747 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07120958 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066399465 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075207621 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064436162 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067028802 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068812823 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06848822 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067829662 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070710342 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063030409 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.206326712 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078401161 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070934491 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.070527319 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070205094 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078321647 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071546753 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074770506 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.074765412 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076738004 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081329936 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070237399 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073763447 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080907324 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070237239 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064285663 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.078236687 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068513674 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069481149 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06886377 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067670429 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073715932 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077616195 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076886135 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06497868 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073686176 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068961266 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069551578 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065341431 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074269428 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073269581 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071440779 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076994967 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069882378 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070619267 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073562192 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06990825 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070206174 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07053355 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072769814 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070097616 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071456097 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069156091 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073567469 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070226355 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067598721 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072353983 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069821568 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071324919 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075601867 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070105531 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070823224 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072637222 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069588807 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070540278 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069933518 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069325125 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073791502 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071402735 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071065183 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071727285 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06468475 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077055318 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069723536 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077411032 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070400964 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067254651 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075456981 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072430409 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074688428 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069994585 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06976703 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071123536 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069280502 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072862469 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07608942 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068441163 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080609708 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077445045 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071537872 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073569034 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07057135 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071758157 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06964369 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.07076444 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070732584 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071420256 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069275927 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074799472 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072016174 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070989959 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071617591 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070279856 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070722847 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071092662 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064345036 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06907834 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068930692 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069009882 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078600108 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069193873 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069754303 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068523518 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069912926 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068518275 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067069554 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076088211 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076204136 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068757022 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075217831 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068253122 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070146325 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078912938 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063641006 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066894495 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066727124 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.202060127 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078400637 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07033981 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080297585 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071003345 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.070876272 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067736553 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069910565 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069031697 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065830833 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067728988 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074047987 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.07040507 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070165779 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070095597 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072873668 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070709704 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079492546 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069343705 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070982051 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070868992 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.0682071 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070076423 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069072905 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072583514 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070731816 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068999495 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067949744 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069398332 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072632948 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071653867 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069507145 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072024013 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077111212 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069758318 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073154317 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072494357 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065172658 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073399976 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069609981 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068912225 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069015087 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073778196 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072762728 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070875573 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079330301 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069330052 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073226491 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069885694 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068109458 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069425131 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069429261 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070412851 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069182289 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.0709604 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078783803 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069283727 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072989656 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070644428 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071811484 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076730866 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071306999 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073313081 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075269329 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070389891 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071474121 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077467924 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073544192 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073163924 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070376707 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072759681 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076118595 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069614832 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075683156 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070580646 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070086963 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071496327 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068609784 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069543605 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069334006 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069146145 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075988276 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070319481 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069289359 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070101711 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068099234 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071144066 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072431162 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07774666 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072060067 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073475857 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065716712 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067384542 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070673856 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068193938 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072066527 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07297808 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075810702 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071429052 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070548129 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068311563 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078674842 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075225687 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073252109 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06789882 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073245967 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069685518 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072008458 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071087424 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069493783 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069236818 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072404228 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070469053 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068685775 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075509981 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072008415 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068980894 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.204117375 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071589831 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072292804 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066035816 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071114297 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07329374 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075903311 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072722002 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069691351 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081154597 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068541158 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070560909 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072460057 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069631778 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074832489 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06617322 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072263396 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07109001 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070735954 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065653879 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070106663 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06817262 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073353617 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070604819 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065744503 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081722674 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079540309 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073942645 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069328054 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068832726 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065476835 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065304923 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069237887 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070659204 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071978475 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07988647 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069135074 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069113364 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065617609 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070441355 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0728812 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072969754 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067065948 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065399952 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06937155 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073069603 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075245994 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068186564 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069124696 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073583508 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072051283 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067727949 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07244318 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066576417 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073736264 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083622933 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070893553 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0713572 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076256191 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076925441 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070366217 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064518675 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069967037 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.0737951 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071398347 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070054763 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069687849 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084692247 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072739172 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069743845 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06865537 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07242969 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069722175 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078353495 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071228944 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070152341 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074444123 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074626714 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077134413 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073067869 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077428919 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073072279 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073089314 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069085977 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07038175 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068043514 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069916823 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07028643 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070474624 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074224016 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076892431 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069251283 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080964297 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079533154 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07154454 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066359714 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069117561 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069584026 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064457742 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069857744 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067467057 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067617409 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067439187 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067910251 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070856419 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075494406 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070731133 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069369598 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069062743 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063802692 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071850612 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071627903 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069929975 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065857538 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068388492 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068577786 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.206308571 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07289191 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068887754 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073634979 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072250093 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071404558 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065783582 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077739598 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069908902 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07298296 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06976576 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070313571 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070890164 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073072706 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074179874 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070772517 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072547255 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074830778 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072205683 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067912176 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067336424 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075983039 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068173366 seconds)
  done (took 44.839930644 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106059629 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069888703 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06603062 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065126328 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075345925 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066801206 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065200776 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066275104 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065792352 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068078707 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065391905 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065231933 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073011471 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080377401 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076444352 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069464034 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065025755 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066265764 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064798029 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066580076 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073387895 seconds)
  done (took 2.861442062 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079565336 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.083645694 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078284262 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085397601 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073860151 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073130769 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078223 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073117206 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080790816 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075582287 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080325085 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073178181 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075393362 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076027147 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075311022 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07314807 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080332248 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074518319 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073256714 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078280222 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073191625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078188061 seconds)
  done (took 3.064295385 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.073013076 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068973893 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07181644 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064621905 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068869513 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06453604 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072327705 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067284218 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071869837 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068394478 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068443534 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06871759 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071760356 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064715697 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069647865 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066923204 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110090044 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071706904 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068917274 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069566415 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064508872 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071557939 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064918963 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065570847 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068432011 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072564882 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06979569 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067628398 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068783002 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068972714 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068819956 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06810628 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070986175 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070318411 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06853329 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068339766 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.070115725 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068445234 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065344942 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067039982 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070163824 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067584153 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069209423 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070616213 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067657048 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067747027 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070723965 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068795784 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06429136 seconds)
  done (took 4.782618849 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083711183 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111312959 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071342486 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091044732 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082155547 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07495891 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072657204 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091731615 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066459277 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067409838 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083764762 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082209804 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068491417 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073073971 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07619327 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069093365 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069416342 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067550179 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072206543 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067982843 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072046929 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075429371 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082000517 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081718478 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072162771 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067675493 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06785956 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072669233 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081215805 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072916635 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072916828 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073653788 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083426389 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074657199 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067912709 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070637019 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083712989 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069349873 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071171745 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066500506 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070567218 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072633974 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075595142 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084113143 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069932199 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074668961 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068694573 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066189295 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080700294 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071396225 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07627334 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082428418 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072559276 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068912812 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072647936 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083017345 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068549528 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067103115 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071950646 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08105131 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066674448 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071862202 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081826306 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070342058 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07506249 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082114659 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074101367 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072110685 seconds)
  done (took 6.604080519 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08099566 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097651475 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085328106 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08523337 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078103921 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.078302219 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077997577 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.078044985 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086522409 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082653549 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077990505 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117293212 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073974956 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080416615 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078074362 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078135572 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07796626 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078385793 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077939707 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077968951 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.078647694 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08520618 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.078280365 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084808026 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081461524 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073492561 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078319433 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078358942 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084955514 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078371506 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08171707 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.078037948 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078205047 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084796713 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081850437 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077842338 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068248898 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077946701 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.078513023 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077453571 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073651719 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084727852 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078547316 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073729744 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077892717 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078127444 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.085066099 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081440758 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080406526 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08160211 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077903319 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085101362 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078020742 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078085228 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084618136 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087262521 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084557599 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085072403 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078149847 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084674288 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085192434 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087334885 seconds)
  done (took 6.425411245 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088252141 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077117224 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085061448 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06487855 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067326995 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075303482 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067977682 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06729385 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07634007 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078844735 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078550376 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074478536 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077541047 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078311524 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074603845 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077341605 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074781702 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074275776 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076250387 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074899558 seconds)
  done (took 2.907680975 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080262458 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085036086 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070240994 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075122947 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072369564 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074749741 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071906143 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073352648 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070725127 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072417671 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078214303 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078639019 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070260814 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074383713 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078296138 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07470479 seconds)
  done (took 2.590918815 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.090440968 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076671818 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083563291 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06978838 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070183555 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065521595 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069496609 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064884012 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065525654 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080497562 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068822192 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079010076 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069355886 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06797409 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06580259 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073967331 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06585074 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066692374 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069008403 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081277274 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073123726 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068002719 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071901095 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068838112 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071652768 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074112479 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067865167 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069779803 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066474591 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069715195 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072334098 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072168046 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066896206 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067133391 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068003537 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066518707 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06861235 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068957485 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075082863 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068756664 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067564242 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071033822 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068977696 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069909019 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065479397 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069901892 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065634981 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071130637 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066775212 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072300161 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068842997 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071328746 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069640354 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075627007 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071703084 seconds)
  done (took 5.27705902 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084574195 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072480274 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06525288 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067473181 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072194574 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07070894 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072475818 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070418755 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070402362 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067494304 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070593899 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071805765 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070433318 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072484632 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070837407 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072441593 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065156909 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070750405 seconds)
  done (took 2.680431747 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076535854 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06958685 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076328951 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070174438 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069413959 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071501362 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06543562 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067939979 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067771399 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06901696 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068868927 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071445167 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068443098 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071566676 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069556454 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069217017 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071418914 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067693729 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068774003 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066130475 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071543741 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06784078 seconds)
  done (took 2.931513872 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098049242 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085038963 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142722491 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082215269 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087823747 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074460062 seconds)
  done (took 1.967430265 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09647191 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103043409 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069581632 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072648986 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07883273 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073148044 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073298064 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07269105 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080373428 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078199155 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073188546 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081468017 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08015721 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079981974 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078214861 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07835611 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073516842 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075857583 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069852206 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086268148 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07355484 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08078688 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073127984 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072769448 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073045964 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080188403 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080507129 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078214452 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07299078 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080677873 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078619387 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073547427 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081237809 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079427861 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072959118 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081178286 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073642638 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085586956 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078731335 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080410761 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073062242 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078710411 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081210602 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077648831 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081826696 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073694949 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077234557 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07359698 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073497285 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087449767 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078483026 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079798491 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078094637 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081403995 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081443807 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088058642 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078224667 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079921978 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078696686 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079179195 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08000582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078287401 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080012434 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07841702 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07832186 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079928415 seconds)
  done (took 6.584364121 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108415142 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073743449 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074710995 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078309119 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079702579 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073759099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07323748 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073740364 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073304299 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070480151 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109077873 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073984941 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080340314 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080078412 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073474665 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073001142 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073403922 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079476402 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070626055 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087521142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073476802 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080071983 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080069555 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080142139 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078220581 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07897509 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0734406 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073401781 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073201037 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073482122 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078362027 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073096007 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080143268 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07042932 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080405804 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074107868 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073002216 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077479137 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073353342 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078512885 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080122338 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08549966 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073799878 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073081744 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07851644 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073737237 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073175078 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07078418 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073451014 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070538198 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078809518 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078112514 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078476768 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079870832 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073624089 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073838414 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07287343 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073145692 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073551085 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078701551 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079639271 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073201056 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087208454 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073061904 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072982486 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079896425 seconds)
  done (took 6.502095938 seconds)
done (took 135.427267286 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198528707 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17308488 seconds)
  done (took 1.763824887 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074617345 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102917201 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080084247 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132023251 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069848019 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10318758 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102417186 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081611339 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069338669 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069600005 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069921033 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071396809 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135071965 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070506173 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.0694266 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07164421 seconds)
  done (took 2.781267489 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103287432 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161460593 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103402125 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068912452 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100549091 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075339609 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068921405 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078095605 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074379558 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068246182 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076279528 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073505245 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068506714 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07335152 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076868909 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075368552 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068573915 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075710303 seconds)
  done (took 2.898548243 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105199493 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.096802207 seconds)
  done (took 1.612736789 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158002911 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136898644 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202761559 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341667398 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.161420233 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149882607 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145462636 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145151258 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120951743 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140335389 seconds)
  done (took 3.107692081 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104363236 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.158533845 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27211341 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118031332 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076077457 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096022835 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120302036 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081373159 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083942588 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083023101 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083616966 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079778073 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102266565 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076654486 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076981477 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079507284 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104948749 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076431721 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077921744 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078974303 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102014404 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069612613 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076381805 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075712721 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080038175 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080660161 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06957109 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069137616 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078773909 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077318658 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079483961 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095274592 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079843223 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108198799 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074501414 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10927353 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079945675 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076368847 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077715832 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076314213 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081336598 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0809457 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07614694 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079914562 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069673834 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080687006 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069385661 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070110074 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080388577 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070110884 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081276783 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079455162 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10813446 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07035075 seconds)
  done (took 6.200153016 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.113509468 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109134794 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07382593 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116047946 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105689058 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072788657 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.107880281 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100594462 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110905573 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073278145 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071151124 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073375093 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083166929 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084412199 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117933893 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.1102553 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075754352 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072182783 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110029915 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109659388 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071588582 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103121439 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099191976 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109238214 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070754124 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07329211 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071318202 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073354122 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079730937 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080903079 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071658713 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082866198 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087151421 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080179076 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069888988 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071318798 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071604012 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081503574 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08139975 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082078675 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079693096 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070821832 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071579706 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072262022 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072321997 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071030283 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081089039 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082212528 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08081535 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071629751 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072867316 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071676205 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072314486 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082294267 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080384773 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08242726 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082164075 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071701841 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071290347 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075169503 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082577438 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08156004 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081424898 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072286799 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08178607 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071863154 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083145317 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086205246 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07182893 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073168037 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071942018 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071377718 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075174864 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079904734 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079755184 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073075406 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073540996 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072079906 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081533979 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081084411 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071369112 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079464676 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069876514 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071224967 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072872123 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072269029 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079057178 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080902581 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072375127 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071077391 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070993798 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070934978 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069438252 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078520274 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079839156 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079882697 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078472771 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071549156 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079124815 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.210328514 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074038456 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081837806 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071710826 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073015735 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073373443 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082113773 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080100877 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082345033 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071939503 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072454031 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08105375 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083573632 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072119933 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080159076 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082621198 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080811442 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070948594 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084092023 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072580709 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08263453 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0724594 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083017752 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072087778 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081655842 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072462609 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071202454 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071597826 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082162993 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072816854 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072515073 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072512588 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071107838 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081305138 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084701573 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073067738 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080526376 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080856069 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072777117 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081646258 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071558849 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082067859 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071310833 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073628259 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070831858 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08389224 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071958264 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071332435 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0709357 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082842406 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072116232 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082665193 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081366304 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06985803 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084499497 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082130314 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079898828 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082105561 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073635703 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071804423 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071758762 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071781502 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080731185 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081327743 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072877464 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071666778 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080206552 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082014558 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070592052 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080486421 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080104028 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080268513 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071783324 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071632035 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082294984 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082612822 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079837803 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080583744 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080581034 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071427714 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079738349 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081013736 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071622161 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085742993 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071667503 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084684623 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081042456 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079262122 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080225887 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081956193 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081755601 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082089716 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084288369 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070437592 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070266303 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079562972 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07064105 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070141138 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078314203 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071819301 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071464726 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08309424 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.206033174 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.083526892 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071151648 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081617088 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071871205 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074183495 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086487741 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072774455 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073996179 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081923473 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071182842 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080595543 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08346439 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081074591 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071584591 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07323091 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08250924 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081910615 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075187544 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071434942 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072844779 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081523694 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.08003587 seconds)
  done (took 19.332451406 seconds)
done (took 39.117229485 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212776019 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152632684 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.171946053 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117629875 seconds)
  done (took 2.163638664 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123809523 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102035514 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095047359 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068185906 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10059856 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068228819 seconds)
  done (took 2.009755982 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.304369797 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203676907 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182454347 seconds)
  done (took 2.13748235 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210537389 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193684453 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.424896449 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264370846 seconds)
  done (took 2.654263437 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147789907 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.0925109 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072245363 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08750894 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132374 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159206568 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100803653 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125782886 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08219732 seconds)
  done (took 2.504288434 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147610956 seconds)
done (took 13.068161073 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.101065205 seconds)
    (2/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.079750768 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.152852034 seconds)
    (4/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.11478418 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077499819 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10268607 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146618074 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.128390942 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.100397037 seconds)
    (10/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.233009757 seconds)
    (11/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.182633442 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086559604 seconds)
    (13/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07696101 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106302883 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.12298924 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.210311969 seconds)
    (17/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.174413973 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.228143917 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076862101 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07773916 seconds)
    (21/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.211319333 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.167425985 seconds)
    (23/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.114989559 seconds)
    (24/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.191839307 seconds)
    (25/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117237473 seconds)
    (26/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068070805 seconds)
    (27/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08275121 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.207971083 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091715485 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069278046 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159725613 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09393113 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181913636 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.242281257 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.202910304 seconds)
    (36/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.161326139 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075462033 seconds)
    (38/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.076439788 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.159161166 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.163459424 seconds)
    (41/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078876477 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080729436 seconds)
    (43/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.098905331 seconds)
    (44/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079280609 seconds)
    (45/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.189766685 seconds)
    (46/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.180786044 seconds)
    (47/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072934928 seconds)
    (48/309) benchmarking ("sort", Float32, false)...
    done (took 0.131439651 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.115400378 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092335371 seconds)
    (51/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.111182065 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075744498 seconds)
    (53/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.164991 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072840278 seconds)
    (55/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077437946 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075659268 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09765419 seconds)
    (58/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068320832 seconds)
    (59/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080624702 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13548215 seconds)
    (61/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.0770104 seconds)
    (62/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.162280325 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.210627063 seconds)
    (64/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.161706695 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070425277 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.092286383 seconds)
    (67/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075670285 seconds)
    (68/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090297977 seconds)
    (69/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055611837 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068555421 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055097746 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066412698 seconds)
    (73/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075825606 seconds)
    (74/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.189682269 seconds)
    (75/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.203987616 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074691084 seconds)
    (77/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08463345 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075084776 seconds)
    (79/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078019584 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.200246232 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.229855119 seconds)
    (82/309) benchmarking ("sort", Int8, false)...
    done (took 0.151027277 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.071831549 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130171469 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116796971 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072647392 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075886171 seconds)
    (88/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.158625509 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173118356 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099021597 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168894599 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09335627 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.092270642 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071562123 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056915356 seconds)
    (96/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068952265 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.18204089 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090010504 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069348342 seconds)
    (100/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.11545096 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057453808 seconds)
    (102/309) benchmarking ("sort", Float64, false)...
    done (took 0.131298837 seconds)
    (103/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.202789314 seconds)
    (104/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079315573 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.092708763 seconds)
    (106/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.075688155 seconds)
    (107/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150353595 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075773753 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091532661 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069383873 seconds)
    (111/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055746816 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.094520716 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176605495 seconds)
    (114/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055066198 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145194181 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068775005 seconds)
    (117/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070923733 seconds)
    (118/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078325815 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.076983723 seconds)
    (120/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094688702 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056472027 seconds)
    (122/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.055210476 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.147433421 seconds)
    (124/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.159871694 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077053526 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075754157 seconds)
    (127/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077327713 seconds)
    (128/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069600187 seconds)
    (129/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.156939293 seconds)
    (130/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082134451 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056752872 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075720766 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074823178 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056861011 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056671764 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075377166 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.057065869 seconds)
    (138/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.162196549 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06896033 seconds)
    (140/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082459968 seconds)
    (141/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076220493 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068638253 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075135244 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068770265 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070863101 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080860293 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.070997884 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05861915 seconds)
    (149/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.117134228 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070694961 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077892566 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146909212 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147162339 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055243946 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11633825 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.057276705 seconds)
    (157/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.058296684 seconds)
    (158/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.110192867 seconds)
    (159/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.103531006 seconds)
    (160/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.155794844 seconds)
    (161/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.055652354 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077689952 seconds)
    (163/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054775193 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.055125807 seconds)
    (165/309) benchmarking ("sort", BigInt, false)...
    done (took 0.197664321 seconds)
    (166/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112709694 seconds)
    (167/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156427326 seconds)
    (168/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06633116 seconds)
    (169/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070647807 seconds)
    (170/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055566628 seconds)
    (171/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085388401 seconds)
    (172/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079972707 seconds)
    (173/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120404068 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171173491 seconds)
    (175/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055879654 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093075039 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.190845956 seconds)
    (178/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055424079 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088886939 seconds)
    (180/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.150949751 seconds)
    (181/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.152790576 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091471776 seconds)
    (183/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065508217 seconds)
    (184/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.262667794 seconds)
    (185/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.057489642 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095013638 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073408769 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139239955 seconds)
    (189/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079718434 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077439485 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068784517 seconds)
    (192/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081159819 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139807729 seconds)
    (194/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078061786 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07835328 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090217855 seconds)
    (197/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.056225163 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069159339 seconds)
    (199/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.056277359 seconds)
    (200/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.104158085 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097238779 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090583907 seconds)
    (203/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.0575257 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112815068 seconds)
    (205/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077115866 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067455955 seconds)
    (207/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.05684488 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179083504 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055144705 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056432257 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.055858268 seconds)
    (212/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082978658 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092265126 seconds)
    (214/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.056568348 seconds)
    (215/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075567319 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077509682 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076242089 seconds)
    (218/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076911202 seconds)
    (219/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077596084 seconds)
    (220/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080806619 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.097493462 seconds)
    (222/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055875526 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.114066735 seconds)
    (224/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05633969 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055216386 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074335309 seconds)
    (227/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075120365 seconds)
    (228/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.056031842 seconds)
    (229/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05500911 seconds)
    (230/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.118117955 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067704491 seconds)
    (232/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068107966 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05508354 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054917147 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140308207 seconds)
    (236/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055066104 seconds)
    (237/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08260847 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071085469 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173315331 seconds)
    (240/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068999622 seconds)
    (241/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.156921553 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074935005 seconds)
    (243/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070354628 seconds)
    (244/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054671271 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074284661 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068725757 seconds)
    (247/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056990176 seconds)
    (248/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073277935 seconds)
    (249/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079956405 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068928069 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055319023 seconds)
    (252/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075897827 seconds)
    (253/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06675366 seconds)
    (254/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.055149516 seconds)
    (255/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055702373 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068777115 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054875294 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102738067 seconds)
    (259/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065208091 seconds)
    (260/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054805364 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093794719 seconds)
    (262/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.055066867 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058534703 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.055077923 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075985331 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068694827 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069080399 seconds)
    (268/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069685078 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07726157 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093711985 seconds)
    (271/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.056415696 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05510433 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094170989 seconds)
    (274/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071432446 seconds)
    (275/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071069011 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.057274574 seconds)
    (277/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077815461 seconds)
    (278/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070864774 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090355529 seconds)
    (280/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.0560713 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07484656 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090769993 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177794589 seconds)
    (284/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065734736 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075849191 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067361536 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069663405 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067871777 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068731318 seconds)
    (290/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065954372 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076339431 seconds)
    (292/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.05701545 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068494318 seconds)
    (294/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069566103 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138647338 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06845075 seconds)
    (297/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075509958 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074155563 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118741869 seconds)
    (300/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065886067 seconds)
    (301/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075362342 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07103926 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074161495 seconds)
    (304/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070588066 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070788073 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069477188 seconds)
    (307/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081383614 seconds)
    (308/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069160121 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.257029917 seconds)
  done (took 31.979791159 seconds)
done (took 33.439539035 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089127195 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100307074 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079226217 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097053564 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083957876 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080270725 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076534856 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081903629 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083815098 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085424055 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082791773 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.059512029 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07825269 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078981344 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077785127 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094406443 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082239232 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076587763 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076989294 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067712873 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076746542 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068509051 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070429753 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058020965 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081592697 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075295258 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077469708 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077579378 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069204945 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.0694466 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073616846 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077685315 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068758846 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082659066 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077215867 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07677042 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078403939 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.0798511 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070443331 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068946126 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078106153 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069091634 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077181956 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077046252 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075134788 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074171768 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077443017 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080518177 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094956884 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071056285 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07978269 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079154361 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080771539 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075681425 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073175761 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076628511 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073874247 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094299034 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07697762 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071369143 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078392104 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078085512 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074522153 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076194802 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076475635 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079246006 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080203092 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074127911 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078603402 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07453576 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068709388 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077773493 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073041813 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068610913 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079959023 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080887964 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06827101 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075027235 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077015969 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077513705 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067756945 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071317686 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070058007 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075136648 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070271325 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.06059895 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073685695 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075929047 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067967978 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076706096 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075345504 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07687153 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070093708 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080050973 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068692163 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076510286 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070020135 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070648537 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072911132 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075673752 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070837643 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073711 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.081857448 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.073221108 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077963151 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084875307 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069061802 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076610968 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067995652 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068195037 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082318709 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077669766 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068760906 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070366179 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06765326 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075403466 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066952623 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067396989 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067297808 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067779946 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074051256 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067947525 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069999352 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075535773 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.220378562 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.07051869 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073932465 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071484879 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070360402 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07591531 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068927862 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069883888 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.07016927 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065484086 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072591937 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069581533 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077698689 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075044007 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.080511376 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.074144115 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080287243 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077489401 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077329306 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077281431 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.071093062 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.065888104 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075042307 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07407551 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07352289 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071584288 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073240093 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.07135683 seconds)
done (took 13.10214583 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072511871 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143405372 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.103016227 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101042571 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089860674 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070923237 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078693309 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101723204 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.0709728 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102160425 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089781706 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087895025 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115297228 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067753526 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069334079 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074668266 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07292412 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087401951 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103673983 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088384468 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114767277 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068346363 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094028389 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091346576 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090129259 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096294375 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069822009 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072826054 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072532348 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103506074 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089863757 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072762341 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070069517 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100229837 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094688776 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085875512 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070130827 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085051181 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069862279 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069791022 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071359213 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099630865 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08296293 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082827906 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073530386 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.079169026 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070496319 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085959345 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091674476 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081492235 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08771225 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102083921 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072117198 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086110445 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067390827 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087548074 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079980412 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.0714001 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070181056 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076140301 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069138481 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07282846 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083696498 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082954546 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074138933 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086680393 seconds)
  done (took 7.07576616 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089934123 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095861122 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085780533 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086212625 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069099102 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070573126 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070250952 seconds)
  done (took 2.120561635 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07308976 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093891354 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.096380708 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095894841 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087476803 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092678852 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081096897 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069862398 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090409328 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070833013 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089735647 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101983832 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072741148 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077452538 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092834565 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070303875 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092736971 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069346805 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07279506 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092552899 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071816353 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097729508 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073061711 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070180592 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083276268 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069859856 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114749737 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073978004 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071571231 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072607631 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067648981 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10864978 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083658845 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077366093 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070335716 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084361735 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084499689 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068685517 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086268353 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078504989 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084242055 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07111709 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070589849 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067867553 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073713811 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080227245 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07070432 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070950509 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072814145 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090045907 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07127928 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083992966 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073256845 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075430584 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072059954 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076293135 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079352185 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07107637 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088939522 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071613035 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087027472 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085932661 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083249997 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086242534 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071735126 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.0832999 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083530819 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072161507 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072318308 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074202869 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086267608 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068457986 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071780655 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080600042 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072045061 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093156282 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09260956 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071467167 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083537353 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070724236 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069839976 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07050131 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092819033 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07530399 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069788071 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07389908 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073366364 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068888874 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069165283 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074106057 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067853118 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071285628 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072667294 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07273166 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072884802 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086729932 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072714928 seconds)
  done (took 9.193024163 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.076091066 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.075007807 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.075173321 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071856073 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070801035 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072724905 seconds)
  done (took 2.015179022 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098961319 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.074929402 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086409632 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075224604 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105145387 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.089626465 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.089975665 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081373777 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085481074 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081244108 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089289963 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091042676 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094685628 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075053971 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.089766674 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074485534 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.09044786 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077567745 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081449831 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074995887 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.0886474 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075370938 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075381737 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084271131 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078709487 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074428704 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08092905 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082047458 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080608107 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.0806624 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074903914 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.078170677 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073577814 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081144257 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.089596946 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073492733 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075061347 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079782822 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075093765 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.078094149 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089832916 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075306766 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076618163 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079527618 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081187068 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073769134 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079994101 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081793158 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.089337214 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079743827 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082627964 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074165195 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077895265 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080185835 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07392331 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0809279 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080037765 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08985356 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074906854 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073767733 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071589638 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.078353449 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080535675 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078508341 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081073944 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079276324 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074231204 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07489236 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075886165 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075391531 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079985816 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.0717881 seconds)
  done (took 7.353553508 seconds)
done (took 29.299173471 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542961157 seconds)
  done (took 2.079177 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.630698704 seconds)
  done (took 2.195954264 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.550859387 seconds)
  done (took 8.108805784 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.411975238 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.502696558 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.733059093 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138250226 seconds)
  done (took 3.38905875 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708591317 seconds)
  done (took 2.280295177 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.244981451 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228176752 seconds)
  done (took 2.05452768 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.390277127 seconds)
  done (took 1.952103071 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.111807132 seconds)
  done (took 2.674296863 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26039416 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178978148 seconds)
  done (took 2.009297359 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.472742091 seconds)
  done (took 2.037240862 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.871033885 seconds)
  done (took 6.438617613 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223145769 seconds)
  done (took 1.83991761 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.246234079 seconds)
  done (took 1.81406829 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.766224463 seconds)
  done (took 3.333713626 seconds)
done (took 43.776565017 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09028757 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.088718314 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088568237 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085282013 seconds)
  done (took 1.905741032 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083795677 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077048996 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079131639 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077294903 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080501714 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076021022 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077742448 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078869371 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076264751 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076769172 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076179786 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075535185 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078610414 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.077620829 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074371298 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077965019 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.079347779 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076075696 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.078470112 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076070286 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073864419 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078368029 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077751062 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075028216 seconds)
  done (took 3.429035392 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084552909 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.080070253 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079875811 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075424526 seconds)
  done (took 1.898054354 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08387324 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.101143643 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09555144 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082379085 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095847308 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.09052929 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072442011 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072424423 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073747945 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081100495 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071827668 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098231551 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092991082 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080708669 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08323077 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069452039 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071974771 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091099478 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082280542 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082315763 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07374115 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081230967 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072098261 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091950208 seconds)
  done (took 3.563875676 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094380888 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105666049 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085923847 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093437714 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095929232 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068976571 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.09068138 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095302083 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127212255 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069511371 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074891184 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069210965 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077293784 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068838669 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085347277 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109528238 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113368082 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072145211 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101894939 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069137405 seconds)
  done (took 3.352055177 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078091441 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073676793 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073713153 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070379673 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080045514 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076267054 seconds)
  done (took 2.03743458 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074107624 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073909965 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071546541 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070593042 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07509954 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070281955 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069660711 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070871018 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071461773 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071096922 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070629309 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069220185 seconds)
  done (took 2.436578526 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.211975316 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072640394 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072960336 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069348909 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074476882 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.07058174 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085690389 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071654812 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096396297 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06992044 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071057923 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072064321 seconds)
  done (took 2.619550562 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214061212 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080685523 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23716386 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154922155 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116062607 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118884842 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115404559 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115717859 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145849914 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104820917 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168454938 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167721786 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112161522 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144699398 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093067268 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102465804 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160750986 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167355221 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1092594 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16723695 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149481208 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129707687 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148364948 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105131615 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109411741 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12433301 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074751322 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084175966 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171017479 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137232326 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147531567 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114474299 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09706411 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177197621 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168098762 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143576307 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151167464 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087551042 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107551853 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133430241 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197798108 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091891925 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164727256 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255794295 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085438771 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136670234 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122664586 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122559281 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108760252 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093622115 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149879138 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185112429 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141901274 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090783972 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12627423 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118214131 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119353888 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11616817 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180924142 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160668069 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130232115 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075013711 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11500497 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153998707 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133224446 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111806622 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127192302 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095249894 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140156033 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155153043 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127444162 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148479956 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.120481275 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091650319 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121140727 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143762271 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132160586 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160934751 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12602189 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075634788 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128228677 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106441135 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083470753 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144845757 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077888638 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174195999 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102544151 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108101746 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125324602 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110967582 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111392675 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163373053 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.294848387 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108995828 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069745743 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108991431 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122699756 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152452628 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091228058 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110293325 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120721222 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080483747 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144760623 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078903232 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125177214 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079194143 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126606453 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132700976 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081748735 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125552987 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107613604 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103040668 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135639401 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160284064 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089996471 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085273378 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165055781 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123858638 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106349242 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144901836 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156943557 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101414238 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105276545 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149364796 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172475664 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091851373 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162254928 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109439564 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0868765 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09123152 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125321973 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114624273 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127479288 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084697886 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120394712 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169037279 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078103634 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098425647 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135194849 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081573701 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083484766 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107851441 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108393998 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099143766 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102426022 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105392256 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140990369 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123744353 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.254276372 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128951067 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10166493 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167801953 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091013497 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104124126 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107889746 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073191256 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139626339 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159147744 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0823189 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164588798 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12513037 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118588428 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120554803 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086797874 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141499549 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082415649 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073548062 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143948905 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112259337 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112729203 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15097741 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118808341 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129974486 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121708976 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13843019 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134414312 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129932742 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109248938 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090713624 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114055974 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130899224 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076445321 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093650872 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082917119 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107783895 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098927681 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086735138 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145200132 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128007912 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117967626 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113311051 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099384181 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148067707 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079443656 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130429802 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120629696 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097814178 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151579254 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150637822 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132996669 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100737054 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13574218 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.220739396 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078269376 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.094491141 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126832695 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086913763 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087366695 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120112926 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148437561 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13043212 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140710119 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126057411 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124898468 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156067381 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073654658 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120380154 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146986404 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125751198 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107700395 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093782599 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10231498 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14168803 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109599639 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179455293 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115260585 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124919479 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156181828 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.103274093 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082467955 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105101368 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137417279 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106895624 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144397694 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101408591 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090208373 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110682355 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078085949 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101799899 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130161035 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122811762 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139500462 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118496831 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135986251 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080596471 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118963658 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125240953 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125825516 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066954087 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119961009 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159588919 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096685134 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118900962 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151498105 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08212373 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.285014203 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177197314 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147220993 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088817723 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112924926 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122858591 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129068088 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123572593 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143040081 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111491647 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135768879 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112190044 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087734315 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090000732 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100631182 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107076387 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09833874 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.1085942 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116124658 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099638549 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135542747 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108041174 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112757548 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119611197 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101592379 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095553307 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100112272 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174108563 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12129804 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172776101 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101655889 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14356793 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16334217 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077640408 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081933203 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081038563 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140667888 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088171349 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132777475 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112512537 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119088544 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125789823 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145265468 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099703845 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.0719087 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109966835 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136893812 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125405827 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100087604 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105962844 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163111632 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101697751 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08191712 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115809128 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115402654 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104505619 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166457525 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064786352 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106245616 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078779968 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082313817 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124959514 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146406557 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081936139 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1010373 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117448692 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11227316 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125160722 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100630268 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111324334 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123505348 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143895537 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126372561 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090558221 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112048276 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124964867 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15083174 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102335114 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09789576 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166138893 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146487995 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155336556 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089103946 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111989371 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111669584 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108742875 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130639951 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083802801 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15237876 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080784477 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128006952 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100906772 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087048384 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126713136 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108441662 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086611236 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137976776 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113189076 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082277797 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077095519 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113539457 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114525699 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102326972 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076337964 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133706813 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07498936 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127219207 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.419792502 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085698483 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110517139 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100675169 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084737245 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112569251 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107750263 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092155713 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103117519 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174631194 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091163243 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152357939 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135200301 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117083618 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137608822 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106413832 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646829572 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.084167712 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15273087 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120790495 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173262698 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103576016 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120217374 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112283626 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126990622 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144325854 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107135352 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178721663 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132543039 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119248981 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083009761 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106144682 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107379092 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091811224 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110887564 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115301836 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120079481 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096893494 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.119066541 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127102151 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084898816 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10008195 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156208661 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121018959 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146200613 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140866872 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088159911 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119022344 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139378269 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08292473 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122655765 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.303950119 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110416373 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102585898 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084625834 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.106830089 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159076168 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076663228 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164372476 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122164064 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111529619 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114331741 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113946246 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134794416 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109717762 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122671352 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095585808 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111408836 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115762292 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084316665 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080166501 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107877948 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11338579 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099601586 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100046495 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102478425 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15153199 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075382249 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102901991 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118119115 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149854469 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17452953 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091194689 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086718676 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123787653 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119166713 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115494839 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122584702 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082221012 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084650811 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084000972 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082676367 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109592194 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115126847 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11646092 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112225661 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163504999 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086142062 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225762852 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099589664 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106698435 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072807206 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080932109 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097915524 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101336384 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109167441 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115458623 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311601785 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098777597 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094689084 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096367308 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077514536 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0862101 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130046549 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113958048 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120328997 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104819525 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066082423 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111243753 seconds)
  done (took 60.097343367 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115530004 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086429322 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100246987 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147438241 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125709717 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20420502 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.159134838 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19278715 seconds)
  done (took 2.848406263 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074334793 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097923568 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108709298 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087116872 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069986255 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071849067 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231207934 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083813132 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070865421 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098114047 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082335453 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072713027 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.436686762 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069691512 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071204663 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066688777 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070754269 seconds)
  done (took 3.571338004 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.407003285 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.619459524 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.348868735 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079686034 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.993401234 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095627037 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.138983184 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140312359 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080826759 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54083212 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.406021968 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133839678 seconds)
  done (took 18.703753893 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086867916 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077984286 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092396808 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09246484 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081199789 seconds)
  done (took 2.145624438 seconds)
done (took 110.215912134 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.0865825 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.620539985 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058182648 seconds)
  done (took 2.421193435 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09334304 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089181136 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08869493 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086499936 seconds)
  done (took 2.08073566 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079470915 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080169497 seconds)
  done (took 1.875159168 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236291596 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169652736 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099436874 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088022714 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081819819 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081914261 seconds)
  done (took 1.972173755 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077659097 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078426505 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076095871 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079842663 seconds)
  done (took 2.026343545 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082674964 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0569431 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059173426 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062892739 seconds)
  done (took 1.976728943 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092983797 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084923105 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081216734 seconds)
  done (took 1.974999187 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108450267 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089533167 seconds)
  done (took 1.913920017 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087039684 seconds)
  done (took 1.804007097 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10260439 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104742344 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13356378 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113627899 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141513005 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11210324 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087700444 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088932803 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080077382 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090155285 seconds)
  done (took 2.771536856 seconds)
done (took 23.119571612 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.085833877 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375326356 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362777387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093735568 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673423784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.36021751 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.971904317 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09577257 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118587341 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071321506 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087634548 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652143505 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.962641679 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325680544 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.950360243 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324141095 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653711423 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071874278 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070918944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071807758 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.954475071 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070907475 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07069413 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071591113 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652127087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374428871 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071669282 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.344408962 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071470836 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073686949 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359682017 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071717887 seconds)
  done (took 16.267799729 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07715603 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122828061 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077637149 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087354183 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074180679 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072735502 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075380825 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072449065 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124291179 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072137383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088239 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071162565 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075005816 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072300198 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090734108 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071833112 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072398674 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071938714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071805775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072065123 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09023434 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071933016 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0715037 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072381759 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071576714 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083626249 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072614704 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07244782 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07218761 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073968305 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074510842 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073270389 seconds)
  done (took 4.246131337 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121401849 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13004802 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07723338 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10659975 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114995037 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074047445 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144095266 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097435077 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.13008675 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071512861 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088582946 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071857899 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104599987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073179312 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091718824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072134585 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072264692 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07244379 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072002868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07260348 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090936622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071781097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072401873 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07306027 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072072611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084926414 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072649045 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072047821 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072318752 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07409142 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075510911 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072417489 seconds)
  done (took 4.497492775 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078911236 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079918192 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086510501 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088420018 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07357799 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075751057 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077118645 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073479433 seconds)
  done (took 2.368812969 seconds)
done (took 29.103150803 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085390726 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074479386 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077404767 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090313607 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076147247 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083020045 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.0706974 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079341277 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077202931 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076102227 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077518035 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071181616 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074650682 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070163028 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076896972 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071167424 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083160928 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075085495 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082859034 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083759304 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073907611 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076574076 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078256928 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083197119 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082977642 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083425092 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080356791 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076568525 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072125804 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074038454 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081065026 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088635829 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072495243 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08324223 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071646362 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071238538 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074684217 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071233499 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083640727 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080276434 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073571558 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079975755 seconds)
  done (took 4.982067027 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.095387803 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095614573 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087865639 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065665846 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.07008074 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069449055 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093121821 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063698809 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063758898 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092197984 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059882006 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06330409 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066728922 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057928364 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063135626 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061211755 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065188277 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059557208 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06294992 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063247436 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092417268 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057679676 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081071042 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066021686 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059884871 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065482978 seconds)
  done (took 3.587096116 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080553565 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08878932 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092330221 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144518253 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115552924 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081106467 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081742405 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095507332 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095980745 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070949543 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074545919 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095013056 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091316457 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077452607 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071121448 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087879044 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088087024 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073073886 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077103549 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093719286 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088249365 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088638991 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09364675 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083930695 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070215158 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073768007 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074493793 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085197968 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074402704 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080436526 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074578999 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07527175 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073395255 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082274481 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074024533 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073000165 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096156707 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08111328 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083596794 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072352363 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079159737 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072148048 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094504744 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126097142 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07037798 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077097336 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075133918 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08083702 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070425153 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096432314 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082793829 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071791029 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073880048 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070408724 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071039999 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074587639 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072782012 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073940481 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079797805 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076727365 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093708163 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075683256 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087316249 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070560186 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079290685 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070772986 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072346746 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070539403 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096480851 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072776359 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111343541 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071907882 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071277638 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079959633 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080744897 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077390728 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071614984 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086520206 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082226324 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074476297 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079342876 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074592431 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073974877 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097913684 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07325372 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072264796 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071833684 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077425554 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073842764 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072655248 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083935067 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071298346 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073797959 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087863063 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070726078 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072476806 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076795713 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075323315 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070513872 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082183994 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075144642 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07235457 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081028462 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071420674 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073873521 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081936275 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077149238 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070589633 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07458296 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076782542 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072187357 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07284205 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073799692 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073025613 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079260108 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077722656 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075414258 seconds)
  done (took 11.119352647 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170378526 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156407715 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074955077 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14658421 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081016789 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082918248 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.161230918 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098735171 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071265151 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072750447 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072374845 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114142735 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108808692 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119350351 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082348878 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07198787 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093391094 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118775565 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15128395 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145602069 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094298124 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081697175 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073650568 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073504773 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074191551 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083023672 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089186849 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080877412 seconds)
  done (took 4.622371478 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086869946 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106771581 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077746977 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094101064 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093056074 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072013504 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074004998 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073410508 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.092289884 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081974663 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071269459 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076944236 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077904903 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074478009 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072050328 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079054187 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078575809 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072757094 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07462288 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076312843 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08093412 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095024204 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075648403 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071275384 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075681745 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070793737 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067541212 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08654947 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071829089 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096004107 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069004306 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076028706 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08527705 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072362763 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071209092 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071830118 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071528284 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071107373 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073541531 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072181825 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070275309 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061590807 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071009956 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082287093 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083595883 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.06062879 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075397209 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076380084 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076436615 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068743251 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074474099 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07393487 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074273949 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079332261 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075404441 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075962054 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073164926 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.077374573 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079196033 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070838793 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068678373 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069620326 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0761645 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069301211 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085502553 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07620273 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070224444 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07105025 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073216077 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084131723 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07110623 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076357723 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069697195 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073441824 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075591974 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073122815 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072543841 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070159752 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071910175 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071886035 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059284042 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071168384 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057852956 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074083056 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069462332 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06981782 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071084239 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075873396 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082539965 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072497505 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078122859 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072651206 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071050439 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.0745036 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064500122 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073938104 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081724971 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086013148 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071909256 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069502938 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084713927 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075480697 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070803799 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060630437 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075204927 seconds)
  done (took 9.664639724 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09589474 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073974674 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086160039 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092226965 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.090499033 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078691723 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081138161 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073631863 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086863757 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077247538 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07959984 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071295262 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08128932 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080309265 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073274384 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081197596 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075391768 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086525273 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086064454 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07125962 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079473463 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083427469 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092533725 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082685031 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081842128 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083965719 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092804836 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081423433 seconds)
  done (took 4.082571742 seconds)
done (took 39.787646717 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.844979548 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.996558797 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.819720872 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.154093442 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.046388536 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.943857586 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.906375222 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.817712297 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.022131452 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.854733985 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.089722525 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.938921024 seconds)
done (took 66.309453066 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.906529728 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.959613108 seconds)
    (2/2) benchmarking "String"...
    done (took 2.06356907 seconds)
  done (took 5.774433672 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.086377605 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.481839005 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.056975445 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.814120859 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.818497475 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.113169027 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.621240585 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.328644549 seconds)
  done (took 30.986381581 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.019879513 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.037540655 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.530036425 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.559201266 seconds)
  done (took 15.954315992 seconds)
done (took 64.54526442 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.820329326 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.833128241 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.856257288 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.797495216 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.87288176 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.821549333 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.25337106 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.909704307 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.815540063 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.798864896 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.815388635 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.253404724 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.815627352 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.183468748 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.812396172 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.814888362 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.823688549 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.364575097 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.972608705 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.833775017 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.836438757 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 7.024410391 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.819987932 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.826550896 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.840443278 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.817651928 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.238304963 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.816964664 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.445710645 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.817236077 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.846974021 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.877993594 seconds)
  done (took 205.427191553 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.818095264 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.910370623 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.992803784 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.845961327 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.332750103 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.998966954 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.927615221 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.391076484 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.821684995 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.820794303 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.090054204 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.818789756 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.098683482 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.797515365 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.847708859 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.822876008 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.094804931 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.11243745 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.849897068 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.970428555 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.828904194 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.961761995 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.925319643 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.063342442 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.848288469 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.850812532 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.826311359 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.822285392 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.005504269 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.069654706 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.828889457 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.859228927 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.018421958 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.690753454 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.837910458 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.840600183 seconds)
  done (took 172.39717857 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.001178774 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.819209637 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.817849466 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.819643771 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.823020452 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.815057682 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.940595525 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.943938913 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.447092123 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.335845279 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.868738446 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.632726991 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.813931905 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.887976343 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.82872959 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.814803878 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.831286954 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.846357795 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.814127294 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.818952565 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.94603496 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.827612184 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.011376645 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.822321989 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.818012442 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.824183485 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.188846576 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.816923795 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.824302682 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.057697903 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.816692131 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.818266165 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.66952114 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.009837621 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.823223775 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.818188547 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.902340326 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.817580496 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.825829302 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.815514929 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.036362464 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.81562475 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.820562018 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.818956473 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.822864188 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.965998297 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.815843955 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.94548907 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.81707246 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.306308544 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.81616333 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.820857134 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.470914997 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.410050415 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.816660917 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.820208514 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.822202888 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.819923169 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.820926629 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.825720156 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.47158607 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.898035921 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.819541265 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.824785039 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.826216326 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.817027194 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.872124286 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.821641688 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.148888183 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.878067368 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.949286241 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.943541006 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.822841748 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.8897661 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.912729775 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.81924213 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.822533547 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.822518024 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.822162189 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.903346572 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.818679257 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.949644805 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.825871661 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.822231334 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.871785563 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.89022488 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.81774771 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.679343418 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.821462809 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.82133218 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.098436708 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.883848916 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.818768152 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.820972474 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.821201706 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.949848164 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.81858849 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.542988588 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.942711597 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.821879079 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.558305727 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 2.011071749 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.026401083 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.820998078 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.06623623 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.819658344 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.915285957 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.824976402 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.82393879 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.822478049 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.856648917 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.82512964 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.884033528 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.820942226 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.197311861 seconds)
  done (took 407.949858963 seconds)
done (took 789.582155385 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.473366078 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.433860737 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.548487627 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.459071593 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.433396995 seconds)
  done (took 14.104964397 seconds)
done (took 15.861273059 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.919357871 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.920400949 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.850146223 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.918396169 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.847746843 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.917964266 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.898517435 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.850204705 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.884270436 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.85030231 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.885127508 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.85237639 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.839116714 seconds)
  done (took 26.191867473 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.071020097 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.065227433 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.895563992 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.094434424 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.87224472 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.064388321 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.000004045 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.985542013 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.978999139 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.840283871 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.837945234 seconds)
  done (took 23.466371346 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.066365145 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.077323341 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.90295857 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.072963425 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.875276875 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.071294854 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.992785087 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.99390985 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.984070608 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.844234426 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.838706912 seconds)
  done (took 23.480315916 seconds)
done (took 74.897164475 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.833262741 seconds)
  done (took 3.592044555 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.863190643 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.032919929 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.841730748 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.837604823 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.833772156 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.835201186 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.840610073 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.834708315 seconds)
  done (took 16.680990227 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.834177367 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.830549278 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.83322955 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.831025965 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.833605363 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.831535417 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.834145307 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.832242665 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.834971402 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.83461971 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.834144217 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.833566598 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.835486676 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.83205602 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.832635887 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.83197271 seconds)
  done (took 31.091937467 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.833344516 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.832431693 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.831245027 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.832016915 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.83220797 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.833129246 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.834855535 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.832674922 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.831798985 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.832976743 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.833673145 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.831153554 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.833053288 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.831925626 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.831891944 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.832808151 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.833465968 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.832687742 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.837109486 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.832755774 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.834379384 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.832539537 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.83320594 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.833275514 seconds)
  done (took 45.755172427 seconds)
done (took 98.878944116 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.618570526 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.508379016 seconds)
  done (took 9.88865105 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.839509532 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.836281046 seconds)
  done (took 5.497669355 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.835014534 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.835666212 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.836393999 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.834792332 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.835556744 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.835265712 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.835490917 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.836300837 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.835681732 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.836696943 seconds)
  done (took 20.120215704 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.838398424 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.835920554 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.83420222 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.837384329 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.83698719 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.833522643 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.836671837 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.836728821 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.835823792 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.832726746 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.836834275 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.833841246 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.836534838 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.833471004 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.837759456 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.834236262 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.835345653 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.83465693 seconds)
  done (took 34.80506964 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.837315479 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.837700429 seconds)
  done (took 5.438777841 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.833904117 seconds)
    (2/7) benchmarking "second"...
    done (took 1.834787274 seconds)
    (3/7) benchmarking "month"...
    done (took 1.834928401 seconds)
    (4/7) benchmarking "year"...
    done (took 1.834762345 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.833132176 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.833881623 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.833500404 seconds)
  done (took 14.603580843 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.838913375 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.002066077 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.074521587 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.499682241 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.838967525 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.840271123 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.793728912 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.840715335 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.841369017 seconds)
  done (took 20.335849959 seconds)
done (took 112.452341862 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.709960677 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.835855019 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.151256519 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.89747614 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.886368877 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.136292739 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.852233515 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.140806515 seconds)
done (took 43.374647095 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.880127512 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.129075938 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.163887787 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.857436091 seconds)
  done (took 16.915308501 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.820201979 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.357439494 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.87370169 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.413591154 seconds)
  done (took 20.263069393 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.212735665 seconds)
    (2/2) benchmarking "read"...
    done (took 2.183588232 seconds)
  done (took 6.168418855 seconds)
done (took 51.994625598 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83913852 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.835028349 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.839197676 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.838896425 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.838470604 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.836127163 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.839473776 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.835519225 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.83621516 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.839276841 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.83870311 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.84053723 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.838863096 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83827602 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83586017 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836622282 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838988613 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.837164538 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838146344 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.837015133 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838167848 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.840963053 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.837275176 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.836528059 seconds)
  done (took 45.877597401 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.840922216 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.83850046 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.839398344 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.839541411 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.837176175 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.840725967 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.840207522 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.837564795 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.840835323 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.841306266 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836911994 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.83952582 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.839708297 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.838443801 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840515568 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.837984228 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.841245697 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836644814 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840518306 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.838272038 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.84111822 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83809672 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.838184653 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84040532 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.837873279 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.837503662 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.840351501 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.838802406 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.840943488 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.838909614 seconds)
  done (took 56.946762874 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.847431633 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.848454886 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.842457982 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.840877088 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.841360053 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.842299166 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.841360789 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.8408761 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.840953839 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.840821939 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.841552566 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.840053936 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.841807021 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.840885618 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.840480023 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.841300836 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.840626629 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.842714512 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.84300774 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.842009697 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.842544667 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.843171818 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.841882124 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.843718759 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.843831537 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.842159869 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.841743045 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.842578901 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.842693706 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.841823314 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.843113104 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.841948214 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.842898646 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.843304137 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.843749896 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.84210235 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.847983461 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.852534527 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.842735962 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.843141876 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.843477083 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.843357993 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.842692211 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.844936978 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.843380623 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.843872408 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.843897099 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.843013442 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.844932854 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.843952192 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.842773783 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.842725222 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.843871265 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.843613494 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.843975331 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.843824523 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.844345834 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.843074127 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.844112908 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.84432458 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.844559186 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.844363167 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.843550544 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.844348467 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.845077186 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.844609292 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.843696253 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.843702017 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.845467032 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.845591093 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.845142125 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.844103593 seconds)
  done (took 134.4908856 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.846814397 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.84235539 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.842487626 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.842905419 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842313802 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.84663626 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.844078122 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845483036 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843664741 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.846344091 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845420833 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.843593592 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84412207 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.847735238 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846593722 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.843550245 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.84609332 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.843797487 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.847119734 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.847581065 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.847570358 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.845399629 seconds)
  done (took 42.366311882 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.849132791 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.846669741 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.843644746 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.848080445 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.84525404 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.845834666 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.846961654 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.846908875 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847112035 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843275267 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844323065 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847335499 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.844501222 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845327808 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.844532055 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.844822055 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847209644 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.843560789 seconds)
  done (took 34.999182493 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.845999615 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.845531653 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.846637034 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.845013917 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.844761232 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.846614432 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.845398217 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.847260485 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.847995631 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.84586512 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.84709306 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846351865 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.848667985 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846192819 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848097478 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.847022122 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.847180401 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847019637 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848281383 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.847125374 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.846035933 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.848417098 seconds)
  done (took 42.404355409 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848586759 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.848769318 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.846065884 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.845029761 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.845158382 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.848101878 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.847808257 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.846022247 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.847988981 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.846881166 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.844959459 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.848215941 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.84672346 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.847367376 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.846913642 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84616346 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.849955258 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.84708398 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849778448 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.846915612 seconds)
  done (took 38.721778604 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.851624282 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.851395105 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.851596162 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.851170429 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.852733446 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.851790762 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852205913 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.851501264 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.852783915 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.851867785 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.852070245 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.851245301 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.852320055 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.852116976 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.852321083 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.851724888 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.850151568 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852357586 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.852689004 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.852220044 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.852295999 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852271736 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.852985469 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.851809381 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.854187932 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852630317 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852423378 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.852336317 seconds)
  done (took 53.637572517 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.851473107 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.851227683 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.847900489 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.848908732 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.848699463 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.849428548 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.849459127 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.849650019 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.852084832 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.849866757 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.851656859 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.850799062 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.852204701 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.851016107 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.852408437 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.850824575 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851457504 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.84978188 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848238323 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849532684 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.852547107 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851814748 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.852538476 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.849278679 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849703604 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.851142385 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849389398 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.850036483 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852735056 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.848931534 seconds)
  done (took 57.294722495 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.870342736 seconds)
    (2/2) benchmarking "in"...
    done (took 1.869485223 seconds)
  done (took 5.519381869 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.850188831 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.851519223 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.852349895 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.848268612 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.849421582 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.852914335 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.851670565 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.848943043 seconds)
  done (took 16.585916244 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.854995171 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.855318137 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.853055371 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.852948938 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.854981829 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.853543196 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.85950708 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.855320483 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.854787272 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.854605122 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.861849622 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.863324338 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.856711944 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.854166298 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.854643263 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.854973095 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.853251167 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.85586796 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.855812865 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.854440621 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.856369596 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.85787662 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.857495863 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.851512272 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.856406852 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.867412105 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.858679007 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.854819248 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.855188613 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.858691684 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.855582812 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.853150375 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.857239751 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.85805552 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.85683569 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.857036165 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.865018583 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.856023902 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.860542876 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.854829285 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.856602338 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.851709687 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.858481682 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.858359593 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.857777805 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.856904472 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.857810266 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.853803223 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.85635012 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.86199557 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.86370637 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.85528311 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.85526713 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.86052643 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.857906552 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.86509073 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.858393643 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.861481791 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.869349742 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.869745076 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.870833316 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.866691462 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.861077731 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.859499515 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.869242342 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.885477657 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.865873101 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.855083832 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.856448179 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.858041558 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.865505 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.873474878 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.869820887 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.860606491 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.859390077 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.860879444 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.860602027 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.859801955 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.866169227 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.862825542 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.860475821 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.86116671 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.870891734 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.886094467 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.860130584 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.861125269 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.860452625 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.861242959 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.862667444 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.87113147 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.8616621 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.859907165 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.859431943 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.860769942 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.86181868 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.861574937 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.8602946 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.861491395 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.858466809 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.861326614 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.861611528 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.864751095 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.871564449 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.863028728 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.861778835 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.867668379 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.861205877 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.861526067 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.867592023 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.859907612 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.862006193 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.862903378 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.868042143 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.858558587 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.863858663 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.871460694 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.862575323 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.863762281 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.86252409 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.861590128 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.87217301 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.891935738 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.861665874 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.862443074 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.868844887 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.875315145 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.86377773 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.866215652 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.862224606 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.859905241 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.860755741 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.864993478 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.863051686 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.863799815 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.863844773 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.864578948 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.860063509 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.863281187 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.863866161 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.864579257 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.8645821 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.863386005 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.865362939 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.867199567 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.864088891 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.866052013 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.869307882 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.862718263 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.865455689 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.864184892 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.860087606 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.863867426 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.864500037 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.864582806 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.863367957 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.865345188 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.863327499 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.864325391 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.863889046 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.863728243 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.864148678 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.864087692 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.869488625 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.864261662 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.868607282 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.864750489 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.861722109 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.862813652 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.863764985 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.865255436 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.865237916 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.864506897 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.867361803 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.873482914 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.865492752 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.865598992 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.868206914 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.865592335 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.865867665 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.865514273 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.871911546 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.874603167 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.865384369 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.872474614 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.865629392 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.866380724 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.86561938 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.8661293 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.865771624 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.866970617 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.869759748 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.874763274 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.880750301 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.87564355 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.868013007 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.870090295 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.868176831 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.871738667 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.870842336 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.866529147 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.865671698 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.86685519 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.864758112 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.866786345 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.868754938 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.866718987 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.866525707 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.866580761 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.86784131 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.866632956 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.866485061 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.867931879 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.867662865 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.8643671 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.866235276 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.867540579 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.866120815 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.864901586 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.864858235 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.867211197 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.866971933 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.867742501 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.87391785 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.863858852 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.867820408 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.867391379 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.868254441 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.866114692 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.866773565 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.86764604 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.86775085 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.874216544 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.869661487 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.868216563 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.873977769 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.867550919 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.868482821 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.872087157 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.867426224 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.864952231 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.871448234 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.877694316 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.867931552 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.869734735 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.869147625 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.868877374 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.868939095 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.877176595 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.866068808 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.869050768 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.870298047 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.871288141 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.866607479 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.869694343 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.87161659 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.870550723 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.871450308 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.868075284 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.869559244 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.87063778 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.870408805 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.871234802 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.869592385 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.872691826 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.880396202 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.875218415 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.869157925 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.873551115 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.87046919 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.874997606 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.871003156 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.871799567 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.869726395 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.883884791 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.878823872 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.877175874 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.870479276 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.870408133 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.875730272 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.871995593 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.875004132 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.87044362 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.870202153 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.871103677 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.870700041 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.868590119 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.872788142 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.869952843 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.873825316 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.872770252 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.875585426 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.871178712 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.869862585 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.872496121 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.872143549 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.871782076 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.869273797 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.870681195 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.873733268 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.873443811 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.870772709 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.872030705 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.87680442 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.871963455 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.873217993 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.869875848 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.872129543 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.872087267 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.872982018 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.871213251 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.875417897 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.880400691 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.875035291 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.882725343 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.872723209 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.881067769 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.872520249 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.876460506 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.88092761 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.869582756 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.87152871 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.871534916 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.872617918 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.87961864 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.872783858 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.87333083 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.878606013 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.872561098 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.87342022 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.872203288 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.872793002 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.874101643 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.873438108 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.881905966 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.874246308 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.878704702 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.874129842 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.867621074 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.873639841 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.874349259 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.872229712 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.87790675 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.876008372 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.875194756 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.873166508 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.874707422 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.87416255 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.873458848 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.874735261 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.871907059 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.873231494 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.880563298 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.876182532 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.879183052 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.874330006 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.882165271 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.875166573 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.882592677 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.876512141 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.875717247 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.875015448 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.875017894 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.876998102 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.874668911 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.877057259 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.874133303 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.876815388 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.879402767 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.875177967 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.877397821 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.876211059 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.876418472 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.874997967 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.886918712 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.901784877 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.877991551 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.880678314 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.875024815 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.877719258 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.880612971 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.876916275 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.875051491 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.879321346 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.88790537 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.885046662 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.875165157 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.878171738 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.876693309 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87700071 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.875453852 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.876046554 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.875803033 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.876792585 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.876933004 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.877665598 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.881222351 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.876456821 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.877567943 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.87706584 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.878128483 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.887599297 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.876533103 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.88005856 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.877774999 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.877837629 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.877074219 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.877402123 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.876557064 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.878010233 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.876105303 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.878309125 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.885612049 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.886907985 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.879762536 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.877305349 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.878225529 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.878405306 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.878870778 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.87842396 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.878958728 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.879353908 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.879689378 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.877846202 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.879734432 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.877801409 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.877385126 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.878420858 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.878436789 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.880956273 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.88711267 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.877998992 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.874916027 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.878996732 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.877534883 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.877403036 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.878190401 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.886593261 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.882419998 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.890202212 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.889422999 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.883212238 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.879903702 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.881645071 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.888467366 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.877851619 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.879149805 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.879241927 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.880382833 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.879876669 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.883882538 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87951405 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.888123817 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.878885558 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.878816758 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.887182877 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.880766663 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.880378753 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.883884926 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.886217571 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.879916113 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.878167735 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.880101592 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.880440691 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.88734402 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.882997246 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.880461328 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.882210789 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.878277199 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.880609513 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.886580174 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.880969996 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.881772172 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.877696251 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.881242395 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.880974268 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.881352548 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.877691608 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.880853674 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.880302905 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.884179209 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.888965131 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.877983 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.883082001 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.881529185 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.881909266 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.88225114 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.882124608 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.878377329 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.877918036 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.879606644 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.881723342 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.881374837 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.883135481 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.879722272 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.881752676 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.882561144 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.880683785 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.883895202 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.893863979 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.890789053 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.878628851 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.882093283 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.882143391 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.885042215 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.881557007 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.882973141 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.88273414 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.881135598 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.8812203 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.881964029 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.881367154 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.886058783 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.900363547 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.88171772 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.882921347 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.881566015 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.884702096 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.882420384 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.879712898 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.882531403 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.885516268 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.885993718 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.891271616 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.883476798 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.88905036 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.882464923 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.883934249 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.888128315 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.887006248 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.892960584 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.88713238 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.883371765 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.882847999 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.891289981 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.902252491 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.884421488 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.8926675 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.915937175 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.883799802 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.884649127 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.883170849 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.882868352 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.884236629 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.885685212 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.882935047 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.884748307 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.884448034 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.884337638 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.885697985 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.889797795 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.885288562 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.883057868 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.883847261 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.881696375 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.886890056 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.881579685 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.886350539 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.883723096 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.884237479 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.88730175 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.887541218 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.885696437 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.897136282 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.896385124 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.885945387 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.88564046 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.883293115 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.889924445 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.887974213 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.898342111 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.894983926 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.885269245 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.886567844 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.886804944 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.885925994 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.883764467 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.886371526 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.886639775 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.887388543 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.883578599 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.900750146 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.896936407 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.891418494 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.887219964 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.887735168 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.886760755 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.888019275 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.886671829 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.88764821 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.888518661 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.887190137 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.892311894 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.886891192 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.88710275 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.889457096 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.896273863 seconds)
  done (took 1118.285823381 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.885798692 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.883980806 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.88429963 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.883688489 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.884105043 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.884564375 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.883556854 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.884659331 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.884029122 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.884503441 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.885081501 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.885171962 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.885447105 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.885342029 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.885628865 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.885382995 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.885039132 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.885656309 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.885847064 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.886324185 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.88421747 seconds)
  done (took 41.394605778 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.88804948 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.885058119 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.884845814 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.8872279 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.885220705 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.887606995 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.88454447 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.888039762 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.886917106 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.885961132 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.888200702 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.890068367 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.886538962 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.887505011 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.88650001 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.887852354 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.88853014 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.885948754 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.888158125 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.886466982 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.88775259 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.886071588 seconds)
  done (took 43.325767135 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.889412814 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.889965333 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.889372073 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.886369809 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.889245525 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.885072016 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.889629636 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.888387107 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.889271838 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.889292954 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.889994228 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.891897384 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.897976951 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.895528788 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.89109867 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.889712876 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.035802466 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.889399842 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.891509133 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.890458336 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.886165486 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.895806424 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.888252053 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.887143956 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.891804573 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.89106279 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.890797987 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.889727675 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.891872664 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.892955554 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.895031074 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.891462633 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.892307752 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.893444865 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.891828586 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.894620319 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.896062457 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.892979615 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.889462035 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.891883321 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.902102898 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.914242712 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.891879109 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.897724506 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.892618803 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.890874927 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.893622694 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.900933735 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.88961892 seconds)
  done (took 94.672512863 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.891020906 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.891535823 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.888554189 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.890169397 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.892082137 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.89117027 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.892116525 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.8914107 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.888351841 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.888693373 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.891655234 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.886312385 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.888754727 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.889890113 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.890442094 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.888683169 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.888335473 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.888590673 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.888324214 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.887976291 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.888401778 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.890916648 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.891830182 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.890415653 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.89062678 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.88841991 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.889968261 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.893035759 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.889553642 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.890701248 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.891660146 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.892559013 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.892307439 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.890293881 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.889975098 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.891778158 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.892645377 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.890295978 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.891205099 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.890109187 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.892620128 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.891315339 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.89335719 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.892453609 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.889024583 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.889906235 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.890801395 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.890463144 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.889598522 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.892724279 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.892865795 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.891446414 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.892751092 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.889447969 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.891861285 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.891878256 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.890165689 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.889774706 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.893046389 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.890220421 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.890397054 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.891498109 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.890576273 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.893075408 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.892927713 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.890942115 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.890943662 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.892197384 seconds)
  done (took 130.388593397 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.894550029 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.894126857 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.894644743 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.895389514 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.895130208 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.896508031 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.895618006 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.897007895 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.897146831 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.897541556 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.896469246 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.896315593 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.894836035 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.897154321 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.896020404 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.896066274 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.896995096 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.896652974 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.896650368 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.898092118 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.898283488 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.897258747 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.897283461 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.897289328 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.899125524 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.89776068 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.8958358 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.897567839 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.895761238 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.895300645 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.895981845 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.897839369 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.89576141 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.900545561 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.896049583 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.895492325 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.896167824 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.895472151 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.900127175 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.896421062 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.895292314 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.896301194 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.896217194 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.896463241 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.897548809 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.895194505 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.895070549 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.894233203 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.894326546 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.895373323 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.896217413 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.895812768 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.896417904 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.895230322 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.898018247 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.896439187 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.895310955 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.895505501 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.896681549 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.898430144 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.895184061 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.8951565 seconds)
  done (took 119.397318771 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.895253159 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.89354711 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.892007995 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.890975829 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.893986397 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.892239123 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.894589664 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.895695435 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.894985086 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.895781855 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.894879839 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.893335818 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.895918912 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.894493714 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.891798099 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.894027898 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.892382498 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.89404874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.893693241 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.892306965 seconds)
  done (took 39.696195471 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.892798361 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.894705881 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.892681771 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.887114005 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.888210845 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.886136396 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.888696083 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.892122812 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.884679224 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.886784928 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.888666622 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.888009058 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.887738349 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.883288365 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.886404388 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.882986585 seconds)
  done (took 32.031366618 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.884632563 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.888024132 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.8872351 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.888391177 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.884668712 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.882963115 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.886519343 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.885050011 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.884237164 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.887376225 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.887915166 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.888704364 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.889415967 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.888189211 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.884863382 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.887649803 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.886074753 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.885388572 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.888149181 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.888915834 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.887579713 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.885186414 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.888567389 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.887762805 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.886299337 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.886141274 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.886184108 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.886217205 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.886051456 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.887600649 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.885102816 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.887558792 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.890951796 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.885170105 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.889742059 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.885777268 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.888063829 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.887191878 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.89047719 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.887977297 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.886463692 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.884347573 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.887134099 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.889172054 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.884872678 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.88772718 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.885076273 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.886457963 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.890146688 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.886727599 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.888625873 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.88910682 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.890070957 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.889939036 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.892836632 seconds)
  done (took 105.613146698 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.889837425 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.889285251 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.886746113 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.891909701 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.888845087 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.886511197 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.890140052 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.887676148 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.88795289 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.88842787 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.888987438 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.889930063 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.88846958 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.890398363 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.889052482 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.889584943 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.887689546 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.88842944 seconds)
  done (took 35.814321702 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.88843486 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.887503605 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.889728027 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.886716753 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.886665535 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.894469974 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.886307841 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.887093393 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.887621123 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.886154534 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888395948 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.882577733 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.881497083 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.884212356 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.881691249 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880989726 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.881810722 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.880036811 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.876883884 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.87797469 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.878823069 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.882432364 seconds)
  done (took 43.272823303 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.879287537 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.879395594 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.895414421 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.906259351 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.900391421 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.918478036 seconds)
  done (took 13.183866075 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877247074 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877564603 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.876250174 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878109688 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877967312 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877367748 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875279285 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88059554 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879071647 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878047481 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875636571 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878849229 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880010746 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877322477 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877544205 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878174584 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877887516 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87441157 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87725685 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878499782 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876749733 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877768266 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879631405 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878071032 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876433823 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876406269 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879330608 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876768143 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877934816 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878374944 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879506214 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877576387 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880415877 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876881784 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879720147 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880451308 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875296024 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879848169 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878607484 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877304856 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.87875349 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879789097 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880020336 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877632648 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.884336249 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87426303 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.875236066 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874928915 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874429444 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88088191 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882445062 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875237758 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876876567 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876070106 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875071281 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876731776 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871981858 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87262107 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874699599 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872075218 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877333191 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873839103 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871896468 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874084034 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874721402 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872604288 seconds)
  done (took 125.702003191 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872411612 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.873101292 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873995567 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872135499 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877547272 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871965246 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871520946 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872697473 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872852321 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876126946 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874118539 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870863977 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872912205 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871906555 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871579421 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872658799 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870693669 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870535543 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870964222 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873028746 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875586565 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87096052 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870569568 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870604175 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871664562 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874563426 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869671785 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869885477 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870235609 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871929741 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87080101 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871525069 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87004985 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.871000559 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869547856 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870551861 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87225822 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870591959 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869689708 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872029716 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869778391 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871031582 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871229625 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87032216 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871081156 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869466578 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868877504 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870928621 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868760102 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869533538 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869949816 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87052771 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870046227 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870548881 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869435907 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870801397 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87068528 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870453959 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870888329 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872835303 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868988741 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870565286 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872854598 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876425085 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871371535 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869562531 seconds)
  done (took 125.320682799 seconds)
done (took 2598.713525426 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.955587176 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.967608144 seconds)
  done (took 15.720182859 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.033167756 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.987430363 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.871091139 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.871952264 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.865895232 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.89440384 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.884713963 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.86606485 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.869853484 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.869737703 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.870843806 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.052928785 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.921600969 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.868477052 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.868078182 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.961077264 seconds)
  done (took 52.359485764 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.871365417 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.876984274 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.882864234 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.873207483 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.871799179 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.88274771 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.904041735 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.87825893 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.906023874 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.886022012 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.940012843 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.880052696 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.875301997 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.920744004 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.88248274 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.884408028 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.963980467 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.948322643 seconds)
  done (took 35.92491099 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.951622682 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.869957481 seconds)
  done (took 10.623744592 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.899937382 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.924262499 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.951925145 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.869891901 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.864153947 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.859428202 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.861115824 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.863088791 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.901926633 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.885597765 seconds)
  done (took 70.682607046 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.873692162 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.867892642 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.867842589 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.867764811 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.860908904 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.860041407 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.865784473 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.862752486 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.527530232 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.898082369 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.874400444 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.871924435 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.865967076 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.867059332 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.864222948 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.888600389 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.957573955 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.863975665 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.862666737 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.872474968 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.865855806 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.922451567 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.878582677 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.868042994 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.896259224 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.530673257 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.873738615 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.872823216 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.955145111 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.861992426 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.865708588 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.870806212 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.868519274 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.262015437 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.142734928 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.865327318 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.877957661 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.874988069 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.862967192 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.961339371 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.867491102 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.870835952 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.512054584 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.120577175 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.983067364 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.908244563 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.17521244 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.881044721 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.868955423 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.893960565 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.868433432 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.868464054 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.884516506 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.350116133 seconds)
  done (took 131.973663232 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.862085828 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.223052393 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.033134389 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.862356107 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.151397942 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070037159 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.86232515 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911801707 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.860101645 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.097448158 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.113863388 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.978515148 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.861388383 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.861754968 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.857406229 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.857743918 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.02756804 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.941202797 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.863873987 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.860502156 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893124611 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111549041 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.988571908 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.865445692 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.89431008 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079410017 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.985999632 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.972710061 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.635391674 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.859180558 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.931690497 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.862300848 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.861735372 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.858501171 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.023316947 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.962233878 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.951939588 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.860999521 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860963143 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.860935032 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.627635876 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.069691164 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.961456902 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.006304104 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.017600207 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.073990204 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.648481705 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.863381264 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.609299438 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.032364221 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.094823234 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.102659313 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.98975414 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.864679615 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.212368992 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.863302126 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.863805642 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.115130402 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.013880687 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.965964575 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.866142329 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.863155437 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.860432501 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.16622129 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.863438689 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.960692454 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864365548 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.863347512 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.967255104 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96492453 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.002280467 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080071954 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.896188727 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.597736277 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.077604042 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.118009738 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.935119204 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117444675 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.864239012 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.864138323 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94850147 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.711992157 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.12299773 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.158704937 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.120565999 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899531176 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.591620791 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.865068705 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.098771633 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.090799809 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.125455361 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.01432991 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.101276579 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.200058355 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.864183023 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.866204433 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.086239459 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.003191524 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.8645235 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.218379253 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.103947293 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.413835363 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.890851552 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.176348272 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.001415867 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.867134778 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.509169787 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.866237461 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.098399546 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.909131495 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.867844118 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.865276752 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.087646524 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.877672875 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.869237329 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.742655543 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.929050998 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.870700591 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099967031 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.866239396 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.141836844 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.867727923 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110365583 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.341755667 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900034059 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.043732904 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.011974805 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.869843194 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114137699 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.113027875 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.988108748 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139092782 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.755064741 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.864377752 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.160137698 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.872648844 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.867565359 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.041939383 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.866011232 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.016801181 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.870303466 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.16403442 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892764142 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102187602 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.868056917 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.131462233 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.906419618 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.920899034 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.872410142 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.995615275 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.871531422 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.790696782 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.035104296 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869574675 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.870346802 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.419390391 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.874361123 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.018684217 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.10733295 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892653445 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.946163382 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.541872617 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.872481898 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.951680172 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.895014195 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.265293942 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.869614673 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.124576884 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.870067881 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.869442313 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.868339934 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.171272192 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.105698739 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.869667204 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.868463407 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.785680784 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.875241041 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.871774001 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.05255858 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.190359703 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87089322 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082402678 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868816581 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0003899 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.870471757 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.951400486 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.209936901 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.868382648 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.871339355 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.869586793 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.872839664 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.874562904 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.084478787 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.897149579 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.391064421 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.012929535 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.146762308 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.187000357 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.124319976 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.914949531 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.868023028 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134079432 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.87130344 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.940102912 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.869410572 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.89688255 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108083768 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.869598505 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.13535976 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.154432415 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.718686388 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927408844 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.873309625 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872476852 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.872114859 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.020952174 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.369392684 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.871128458 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.870798891 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.994379922 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.99425396 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.083087102 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.871944139 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.916282553 seconds)
  done (took 902.438235807 seconds)
done (took 1221.52079979 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.873616358 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.876366252 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.858700002 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.878189505 seconds)
  done (took 29.290382455 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.891935687 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.884127544 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.885129111 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.884804391 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.886545323 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.887820969 seconds)
  done (took 13.130105362 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.885915365 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.883304681 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.878287973 seconds)
  done (took 21.458095635 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.952512432 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.265643469 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.001445454 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.317298813 seconds)
  done (took 10.347751383 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.887506486 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.886730487 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.885269464 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.890402093 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.89077831 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.889213206 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.887575025 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.886439163 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.887916278 seconds)
  done (took 18.804801981 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.985524822 seconds)
done (took 98.820341557 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.03433026 seconds)
    (2/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.972373943 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.875327072 seconds)
    (4/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.461734198 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.982950039 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.961681567 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.008221543 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.369495361 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.879779779 seconds)
    (10/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.360515637 seconds)
    (11/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.051593113 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.037620203 seconds)
    (13/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.972299585 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.038301787 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.928065476 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.185765422 seconds)
    (17/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.147688817 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.877537841 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.0725328 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.916184752 seconds)
    (21/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.311970848 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.142005899 seconds)
    (23/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.990884249 seconds)
    (24/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.075213378 seconds)
    (25/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.936440712 seconds)
    (26/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.972463848 seconds)
    (27/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.892009135 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.318077375 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.018928786 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.272618134 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.892831134 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.88968546 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.009050171 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.861495867 seconds)
    (35/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.252231216 seconds)
    (36/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.077245495 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.996448934 seconds)
    (38/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.275263946 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.119828374 seconds)
    (40/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.327145851 seconds)
    (41/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.89576864 seconds)
    (42/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.023100415 seconds)
    (43/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.877954476 seconds)
    (44/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.895174526 seconds)
    (45/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.528083534 seconds)
    (46/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.073774815 seconds)
    (47/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.958115103 seconds)
    (48/309) benchmarking ("sort", Float32, false)...
    done (took 5.605999361 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.96883252 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.184033299 seconds)
    (51/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.037359075 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.070751192 seconds)
    (53/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.326507518 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.999466713 seconds)
    (55/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.912830797 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.140169944 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.014620249 seconds)
    (58/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.279188305 seconds)
    (59/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.989649054 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.911395734 seconds)
    (61/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.91930149 seconds)
    (62/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.374340393 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.326970093 seconds)
    (64/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.026476798 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.954026442 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.227392374 seconds)
    (67/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.89393965 seconds)
    (68/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.411900975 seconds)
    (69/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.297517077 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.195491778 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.18708107 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.067763866 seconds)
    (73/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.894672444 seconds)
    (74/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.637513886 seconds)
    (75/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.347161988 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.170226437 seconds)
    (77/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.482658457 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.064182786 seconds)
    (79/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.053292794 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.878701015 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.830992604 seconds)
    (82/309) benchmarking ("sort", Int8, false)...
    done (took 4.80123153 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.646582124 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.988181533 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.980232395 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.956713346 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.112511063 seconds)
    (88/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.532506458 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.896315669 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.927173071 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.991174248 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.918409455 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.138290627 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.138592044 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.469752898 seconds)
    (96/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.832826548 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.197717303 seconds)
    (98/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.071779204 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.184945758 seconds)
    (100/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.010511354 seconds)
    (101/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.247421784 seconds)
    (102/309) benchmarking ("sort", Float64, false)...
    done (took 5.664148996 seconds)
    (103/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.881894399 seconds)
    (104/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.022648093 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.550145407 seconds)
    (106/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.042543434 seconds)
    (107/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.938646299 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.127385241 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.852478605 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.897688158 seconds)
    (111/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.234061147 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.518940428 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.896239868 seconds)
    (114/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.811865049 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.892147661 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.120174717 seconds)
    (117/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.927768838 seconds)
    (118/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.026178354 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.11606517 seconds)
    (120/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.924339629 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.186769373 seconds)
    (122/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.083530819 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.129762685 seconds)
    (124/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.048025139 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.924462567 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.145634708 seconds)
    (127/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.92339174 seconds)
    (128/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.980141612 seconds)
    (129/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.011593463 seconds)
    (130/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.078977381 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.347436184 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.119954558 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.149049153 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.882522099 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.967937786 seconds)
    (136/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.292793878 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.884369725 seconds)
    (138/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.703632798 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.188615767 seconds)
    (140/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.615994304 seconds)
    (141/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.929908724 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.042223156 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.998663388 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.138647898 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.230869929 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.991366717 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.280483425 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.883714932 seconds)
    (149/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.149588265 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.123853753 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.926057003 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.89909573 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.902859916 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.093798923 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.040236671 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.955372129 seconds)
    (157/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.887067859 seconds)
    (158/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.69583569 seconds)
    (159/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.969484749 seconds)
    (160/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.147701507 seconds)
    (161/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.964917949 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.922892104 seconds)
    (163/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.003423197 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.006197805 seconds)
    (165/309) benchmarking ("sort", BigInt, false)...
    done (took 6.902037088 seconds)
    (166/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.36257603 seconds)
    (167/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.139602897 seconds)
    (168/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.166060706 seconds)
    (169/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.948175633 seconds)
    (170/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.214096571 seconds)
    (171/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.763230175 seconds)
    (172/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.043030124 seconds)
    (173/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.902601565 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.896519893 seconds)
    (175/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.205510283 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.003080032 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.887462746 seconds)
    (178/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.995636392 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.950721885 seconds)
    (180/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.893174647 seconds)
    (181/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 3.329824865 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.932272944 seconds)
    (183/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.064391198 seconds)
    (184/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.980685553 seconds)
    (185/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.870603222 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.044049499 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.876381248 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.01485744 seconds)
    (189/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.899926389 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.020509708 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.993644417 seconds)
    (192/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.911846351 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.899812573 seconds)
    (194/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.913131722 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.932614659 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.856586391 seconds)
    (197/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.32360531 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.376906559 seconds)
    (199/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.99489258 seconds)
    (200/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.192704624 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.578919723 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.065329949 seconds)
    (203/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.891913563 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.044369921 seconds)
    (205/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.926803489 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.96015383 seconds)
    (207/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.323263676 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.905443268 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.147771285 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.240362469 seconds)
    (211/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.819840257 seconds)
    (212/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.417368409 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.279079452 seconds)
    (214/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.312899274 seconds)
    (215/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.072718503 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.723510743 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.100908806 seconds)
    (218/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.918767359 seconds)
    (219/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.927179557 seconds)
    (220/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.912116169 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.901758357 seconds)
    (222/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.048697041 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.88789512 seconds)
    (224/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 3.532969774 seconds)
    (225/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.196730681 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.926638763 seconds)
    (227/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.924025906 seconds)
    (228/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.983614869 seconds)
    (229/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.018570805 seconds)
    (230/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.925274137 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.98574949 seconds)
    (232/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.99518831 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.07570791 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.159884335 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.78199444 seconds)
    (236/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.262441701 seconds)
    (237/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.627670336 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.004419299 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.066860145 seconds)
    (240/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.906352474 seconds)
    (241/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.99227043 seconds)
    (242/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.243536632 seconds)
    (243/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.972668388 seconds)
    (244/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.078782321 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.00757829 seconds)
    (246/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.244168678 seconds)
    (247/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.890491211 seconds)
    (248/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.633735309 seconds)
    (249/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.902240582 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.682790269 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.273376403 seconds)
    (252/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.935929311 seconds)
    (253/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.419117576 seconds)
    (254/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.019179956 seconds)
    (255/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.894665646 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.12055751 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.071248743 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.987161001 seconds)
    (259/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.358448364 seconds)
    (260/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.492728532 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.586426372 seconds)
    (262/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.094120929 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.303429638 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.579189203 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.937086332 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.170216931 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.180300214 seconds)
    (268/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.906093103 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.316053318 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.761134116 seconds)
    (271/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.399176771 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.20265982 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.79590002 seconds)
    (274/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.049656633 seconds)
    (275/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.044637889 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.191628319 seconds)
    (277/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.924270759 seconds)
    (278/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.908861609 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.925986985 seconds)
    (280/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.0168993 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.928073484 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.873487358 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.908458862 seconds)
    (284/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.04972214 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.011369658 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.000362653 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.906897006 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.117544026 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.233295813 seconds)
    (290/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.091939606 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.65885791 seconds)
    (292/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.192718096 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.732682815 seconds)
    (294/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.992678132 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.907279951 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.911122582 seconds)
    (297/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.030372869 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.94283986 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.940976391 seconds)
    (300/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.146676328 seconds)
    (301/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.93849154 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.972206917 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.927091497 seconds)
    (304/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.041656287 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.186018499 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.910211181 seconds)
    (307/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.901263793 seconds)
    (308/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.018222953 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.659315879 seconds)
  done (took 1018.018844964 seconds)
done (took 1020.123720355 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.957104248 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.944244705 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.925029055 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.950047574 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.037849235 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.955201062 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.93849311 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.928802098 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.974309904 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.978084824 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.923027116 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.955379779 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.926172231 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.925042332 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.925537768 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.93982517 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.24464185 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.956732178 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.946551769 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.936139124 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.943658382 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.926844195 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.976480003 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.952854146 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.930530095 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.92983062 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.931060421 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.947734476 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.040573957 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.926330054 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.93242837 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.938749754 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.247410526 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.957900011 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.924171305 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.948471781 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.939953613 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.939847512 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.930122149 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.958812691 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.338977322 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.967776351 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.92953094 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.929938761 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.928864902 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.935509417 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.927619991 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.933576981 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.943547712 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.940361302 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.329691672 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.982271742 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.932842271 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.929901862 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.940954875 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.930964636 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.934448939 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.945457667 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.948113427 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.944044702 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.232719293 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.96385286 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.931360391 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.944974576 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.935594256 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.36445523 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.964889962 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.934290915 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.337830762 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.974375206 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.366885096 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.977118477 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.931448095 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.946245934 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.962977102 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.248640135 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.954202699 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.930582387 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.938493325 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.926325116 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.94129362 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.945262096 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.935509037 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.933528643 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.944841768 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.959453231 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.940569495 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.932766631 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.940046186 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.949463645 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.935647712 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.942424627 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.939120113 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.926356448 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.941539183 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.93497913 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.935013469 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.932444867 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.935550716 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.94057003 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.339506136 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.986935572 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.931494211 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.927822929 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.932105121 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.945527282 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.34180943 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.972670041 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.956630798 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.980242882 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.93282206 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.234381679 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.963025995 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.947381175 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.946178208 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.935671829 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.928521133 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.236288169 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.364945903 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.985216783 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.935986319 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.928569062 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.949464472 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.935804529 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.931378195 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.249644609 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.964520119 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.949023784 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.054693192 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.94476453 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.963416321 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.929649171 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.939445999 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.963817405 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.949539814 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.967145601 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.937425342 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.949865126 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.950316979 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.932228097 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.944257388 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.944511685 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.936246915 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.938786094 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.929120372 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.963302847 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.945160319 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.946030306 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.956853962 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.051668629 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.934330976 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.235700088 seconds)
done (took 303.342502398 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.999385968 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.920497736 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.025032293 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.92585728 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.005779086 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.012437375 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.923492365 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.922679905 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.92308639 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.303758026 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.922974609 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.924834417 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.92136637 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.923610038 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.00884811 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.925071504 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.923899229 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.265238159 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.92588986 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.999293584 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.925041753 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.927718646 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.927540768 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.301523354 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.926968676 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.923827315 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.998619348 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.926681999 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.266238342 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.921381965 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.927017029 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.265251164 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.017172593 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.943522035 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.937895975 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.932988091 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.009073705 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.930478414 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.008441209 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.007931038 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.027185172 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.967815473 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.925479141 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.924200579 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.93208451 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.931251405 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.924585297 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.956188984 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.921944758 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.928750822 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.267426349 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.936421764 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.936047221 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.925880101 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.925257523 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.951050276 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.927038738 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.928836038 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.019549887 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.933976916 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.991059344 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.304208217 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.305517693 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.929821956 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.924676377 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.930220257 seconds)
  done (took 188.154322938 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.995953886 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.006681808 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.995779701 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.93423354 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.980184653 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.995852327 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.935447044 seconds)
  done (took 15.695562907 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.935483859 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.928864631 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.981567679 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.982434222 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.930628034 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.077429566 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.929886006 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.940693717 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.928512189 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.982620404 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.930617787 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.930735836 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.940015078 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.929969051 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.981588706 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.941662704 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.046497056 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.931245943 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.932007102 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.08334373 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.927175423 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.936902286 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.98555626 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.94120106 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.934632179 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.936417962 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.514382082 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.931156748 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.926880031 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.930227831 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.929547283 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.970891999 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.931434952 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.924847834 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.928967619 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.046827088 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.930657277 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.930732218 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.931126642 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.931974888 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.931808276 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.930297616 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.931493389 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.927800951 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.931031915 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.953003754 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.93281965 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.93104132 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.931265732 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.930852611 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.987083174 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.933074007 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.929537895 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.929772003 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.986013571 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.939180075 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.932307564 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.92906249 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.933035414 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.93061286 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.08331624 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.982837292 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.932502302 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.983305406 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.932110826 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.934601844 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.935608939 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.932634579 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.031784073 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.934030678 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.985825099 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.929744603 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.088603667 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.953768413 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.935880496 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.937268843 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.936512309 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.933319714 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.931729895 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.938769595 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.930219231 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.935420826 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.940317764 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.933951244 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.929113348 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.046335635 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.039848288 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.929338424 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.947443735 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.939856806 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.929848209 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.987380559 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.932855785 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.936409932 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.991190591 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.050585214 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.987780127 seconds)
  done (took 211.945000595 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.939175832 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.939997578 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.93583993 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.948878144 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.932853459 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.93220903 seconds)
  done (took 13.484821781 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.935737861 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.935293623 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.931325093 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.93330989 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.935937753 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.9345792 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.936210775 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.937145407 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.938352298 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.93388194 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.933451084 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.933922543 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.935585596 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.93445784 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.935857483 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.934922662 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.934491003 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.930393196 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.93252942 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.935651298 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.087306722 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.934839738 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.934590035 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.939170002 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.939462618 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.935144773 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.941013937 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.935622331 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.933505721 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.944670766 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.93864986 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.935700599 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.934360621 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.943726384 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.939977403 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.935808163 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.940396956 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.936503787 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.931238274 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.938277771 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.936824956 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.935880277 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.934358552 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.9373679 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.93948478 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.94105199 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.941348604 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.942754287 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.935670192 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.936669967 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.940026523 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.93660773 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.938182697 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.936628529 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.93904363 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.943799412 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.940744533 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.938927675 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.937213115 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.938157271 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.93703664 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.936808224 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.938490939 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.944415425 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.944053767 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.938092184 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.939073141 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.941628705 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.937629908 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.936930711 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.940095975 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.936076143 seconds)
  done (took 142.496896469 seconds)
done (took 573.644333902 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.075891927 seconds)
  done (took 8.93594305 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.068970015 seconds)
  done (took 8.96978545 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.429819843 seconds)
  done (took 10.301568803 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.950533703 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.96882107 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.944628309 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.9476389 seconds)
  done (took 29.69779884 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.986183051 seconds)
  done (took 8.85780486 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.967289204 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.93773078 seconds)
  done (took 15.807370401 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.09522235 seconds)
  done (took 8.962552333 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.107240138 seconds)
  done (took 9.007710741 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.962868298 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.973274514 seconds)
  done (took 15.819889301 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.923236864 seconds)
  done (took 8.790589966 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.617351994 seconds)
  done (took 11.58142806 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.960691868 seconds)
  done (took 8.933158762 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.972818889 seconds)
  done (took 8.845232986 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.017147027 seconds)
  done (took 8.88642815 seconds)
done (took 165.256259844 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.943460433 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.941660399 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.93770432 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.939324164 seconds)
  done (took 29.633501935 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.979643304 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.980735774 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.983582847 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.986786744 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.984595495 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.980928483 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.972949924 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.971408402 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.992284553 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.985392398 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.97980577 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.984243288 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.9779036 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.971225224 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.983157271 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.984908336 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.992412089 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.983605609 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.972745421 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.983522811 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.948649619 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.993380636 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.984218601 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.948278518 seconds)
  done (took 49.375130562 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.146014859 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.021386824 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.100878354 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.998624217 seconds)
  done (took 10.139658896 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.999651119 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.001029634 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.012137755 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.051869583 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.076166017 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.008238067 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.978177346 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.968882795 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.953951861 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.00284173 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.077942388 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.996805373 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.087942603 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.946489733 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.152288966 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.94826661 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.947839509 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.002776335 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.049827045 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.081004512 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.948291097 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.002709246 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.004002122 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.997600428 seconds)
  done (took 50.168996095 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.945363514 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.955231505 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.954936901 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.949653677 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.953296509 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.949002924 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.955308221 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.950031477 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.968751596 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.948130559 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.948175282 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.947473615 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.949303532 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.948260336 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.948062227 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.964104268 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.961848602 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.950551952 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.95169968 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.954942362 seconds)
  done (took 40.923969419 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.942595042 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.798982433 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.296036429 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.199878651 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.946011164 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.939317461 seconds)
  done (took 31.994365988 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.964001271 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.956970919 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.947662326 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.010898951 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.088912442 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.95054309 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.949964171 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.961792818 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.999733622 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.011123577 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.968434021 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.977203923 seconds)
  done (took 25.662111458 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.946840416 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.944045273 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.944941666 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.95964628 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.961300825 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.959399482 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.956891985 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.942242328 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.964376961 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.969921327 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.961971445 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.962327409 seconds)
  done (took 45.35122078 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034404741 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.835781094 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.000683262 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.664219083 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.475182786 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156151112 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.474443412 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.290292244 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.943755862 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220101296 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.987745991 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195950321 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202000767 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945317659 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.010663118 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.428506901 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244799139 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176261004 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.970221216 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.658398 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071541149 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.466888034 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.734077195 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.085626473 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.154867712 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.077164826 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.208105474 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.898356965 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080931562 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98422975 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954425375 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.943737901 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218021907 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324819139 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072603834 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953957397 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.610470504 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.65798522 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.934097775 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.660010935 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.900150738 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.080453508 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953132647 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941719927 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.880022981 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4669973 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285972732 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.943580825 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.642647202 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.945407981 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951769065 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03546894 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.944490527 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.756806354 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894040983 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.218650891 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.937295979 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943843083 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.509533888 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.056287388 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.569615601 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.886009228 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.036425953 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.716180211 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.41925667 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.087813686 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.94719266 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.94630883 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874675003 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.700607701 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073757224 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.085364284 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.958238987 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.595116309 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261273541 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.002060801 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.027886971 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238825006 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.675487517 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.979295113 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174024291 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.892001994 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878387868 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.802640115 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.874648077 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22105865 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983200655 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.619788006 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982504109 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.294173009 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.954474055 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966845582 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951518336 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.171213322 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.828108554 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943992219 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.717155498 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237060823 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966222942 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.284773248 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87778426 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.945339646 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205330496 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.158434751 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.056354869 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.537929943 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110282425 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943150882 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.031232989 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.750774861 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.056780439 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.229901347 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007587373 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.056370534 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081695243 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.901131351 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257703052 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972706543 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.114779529 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.969199876 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214463328 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.273058571 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.196577713 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030720172 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.950783802 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.949647915 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.7305078 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.577957611 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.173958981 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.954245906 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337838422 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.060705878 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.951633355 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885354253 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.60558817 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.94909635 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.059169877 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.174247788 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.768419164 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.325346143 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879370895 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.092657523 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.056256013 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.168500966 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.601057356 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.027836467 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2065844 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320617715 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.159340695 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057791157 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961361407 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064816321 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970700083 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.251807793 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.305255154 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.952409482 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.951186904 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.739944011 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.024390035 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947516947 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.951918434 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.747962253 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234834151 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974197569 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.94459576 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.883390722 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.959983321 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029943981 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950497855 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959425878 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.475581548 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.703060105 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.955883518 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.59118666 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168232095 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957768546 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.724751519 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140188338 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.031359053 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.23219357 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010944751 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.884159349 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.65084291 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.649365886 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946582762 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.88095381 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.947271199 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954999615 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961267891 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.149952277 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.238424983 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.993781717 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.726767698 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.069046866 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959932623 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.954922377 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95085344 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.472941519 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.074901875 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.466213136 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.062293963 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085628009 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.962179415 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.882037288 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.953360632 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.953632107 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.947054045 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.902469134 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003868051 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.720030098 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411360081 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.207808605 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.607086923 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966344608 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.743227047 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.089023281 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.973113294 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.723200662 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926374797 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.039719884 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012211424 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.95940311 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.731873522 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.732071456 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.521344223 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274357748 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.270375547 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3959375 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.325220613 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.273424716 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.291580241 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182284665 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.477740748 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.012133969 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30090995 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893902278 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039295378 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.606867171 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.313152026 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964985126 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179566032 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352231503 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.794241534 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120801739 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163881079 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984516563 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.758602709 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.981166396 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.472880738 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106477491 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.806909489 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188040227 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298737203 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.733181979 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.07065629 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.952102188 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.650608825 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03925222 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.660006806 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.313397238 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358756761 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.129081104 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45914666 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.953473017 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.399351543 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308566657 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.156165873 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.144299186 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886457758 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.963674195 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.962477663 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.954127631 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.936499257 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.825226346 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.208177122 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963897029 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189662825 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.101629459 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.322686694 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.856412909 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.960225695 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951165646 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264753161 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.627063029 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190216753 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.276897179 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.527305156 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961399302 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.88893323 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890331156 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.655552829 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.954597883 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.931282643 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186615665 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.066861914 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908197544 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326027581 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266134605 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.210878047 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.971660424 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.238841235 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231664191 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.687197367 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982062949 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.056421283 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.734276416 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.674463779 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.177832995 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.189534408 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787035206 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.182957642 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.021445965 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.933545497 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.953781809 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167501541 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.17859054 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.020355472 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212947399 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.679587171 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.970807888 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341450184 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017856657 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.992309916 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.180793863 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.047904008 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969862813 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034939817 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964456431 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.966262383 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.96881845 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007989248 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.990498955 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.095391194 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.971476643 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047145824 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.089663783 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.549751705 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.96268859 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240584792 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336207201 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.294894729 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020774839 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.955765535 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956481708 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.887157122 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092816585 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.401730698 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233932824 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.085027328 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.09579063 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980192682 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.741392428 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.235979163 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26364695 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230819648 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.85210925 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95890413 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.043523123 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.183830253 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968133802 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.171771044 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193835945 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289868022 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433335242 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.087172728 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402557585 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233906437 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.336394404 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.959766955 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549968637 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.965654767 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.710842029 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.998913395 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.980836138 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252026131 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971109468 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344122027 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.98319942 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.153651265 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.410116284 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.746871383 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32623151 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.954561694 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.020119741 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248385345 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368279726 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274659797 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036519708 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969595193 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.655066885 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09520682 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.830421043 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.192932481 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.960321464 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169517037 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.673217042 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.971137446 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251731645 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274561894 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.957434028 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.861655233 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998315615 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.968334684 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.180253905 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.235398264 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212237099 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972732912 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.955452736 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.775791793 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248042809 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021600265 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890938919 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.961676349 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061631631 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207366344 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978628528 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.476153075 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.66166679 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267057503 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.882147064 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980619027 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359864099 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411619799 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300938197 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.490249643 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197202188 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.514985521 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.788012838 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.331931725 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.964585565 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369258226 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.331814339 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.961429616 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.456492794 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070316066 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.248776104 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.284368007 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.969145435 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788568158 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.007430236 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179864529 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560792375 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.898616492 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.959170696 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.020208784 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.954158329 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.088722518 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96714349 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.885443294 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80775094 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.791954828 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449449974 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.961431333 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.028019052 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.758651156 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.515579921 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061067884 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114987483 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961948816 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.680552855 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.250216725 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.213073689 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.46318212 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.023823018 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.963068552 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957771626 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.889926661 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.152880176 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.155768649 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271572595 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.292752191 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.065507198 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.963380678 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.174903652 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17232432 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.988346367 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124581211 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326398331 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064579823 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.889662208 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.674142803 seconds)
  done (took 1727.325929818 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.966297394 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.971297378 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.965053305 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.994582444 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.983575811 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.97579623 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.964643233 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.960101991 seconds)
  done (took 57.669996474 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.956255154 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.171244965 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.965082441 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.957043074 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.981782342 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.957274908 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.151116647 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.966483648 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.970715999 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.966486396 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.957866346 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.963924791 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.283106991 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.979017597 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.955100931 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.980814748 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.970026077 seconds)
  done (took 76.027551045 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.957402619 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.124854954 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.975578311 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.978280378 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.821259924 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.963892487 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.871193062 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.961676266 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.961294401 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.120990515 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.28836514 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.007355987 seconds)
  done (took 90.918757717 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.972886889 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.963409486 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.96600616 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.963154273 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.96471441 seconds)
  done (took 11.723670271 seconds)
done (took 2248.794062485 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.317666849 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.181881956 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.194702813 seconds)
  done (took 6.263355889 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.105363729 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.155741011 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.274970489 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.297257226 seconds)
  done (took 10.722941523 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.254296698 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.329806116 seconds)
  done (took 6.469966633 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.2945216 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.979817574 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.378847604 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.956015699 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.955905332 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.956409327 seconds)
  done (took 22.760908873 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.961602589 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.96450241 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.963362631 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.96521693 seconds)
  done (took 9.740631022 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.943515147 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.679754322 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.941734182 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.956262453 seconds)
  done (took 21.408992752 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.710878557 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.086857155 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.705621394 seconds)
  done (took 9.389611569 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.573771981 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.591021115 seconds)
  done (took 10.051703579 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.212496778 seconds)
  done (took 4.098778746 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.993584527 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.237061195 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.529381718 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.527245012 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.613580629 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.259087309 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.307990073 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.196687191 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.408300739 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.451211214 seconds)
  done (took 26.41279711 seconds)
done (took 143.175962829 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.511053308 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.984750335 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.16072823 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.331886602 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.198290115 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.161768423 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.179932135 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.338464127 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.861962911 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.842657913 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.328009117 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.198764501 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.136090648 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.981836322 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.141175111 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.981481554 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.195526143 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.341927868 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.011061048 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.226649726 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.19114067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.974645036 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.171597089 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.992235496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.196498436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.118389831 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.520618053 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.9836843 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.158747586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.535097142 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.142232449 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.374302159 seconds)
  done (took 171.360731116 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.963246977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.9606394 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.960599536 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.959129948 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.412237925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.962649879 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.960839902 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.961348089 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.252869097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.236361939 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.961454532 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.400734752 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.963296106 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.959874819 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.962280204 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.959877565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.434471488 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.961059193 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.959715962 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.959059445 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.959753809 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.238176551 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.962340623 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.244695543 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.398861874 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.966039588 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.960872216 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.969147995 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.971286319 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.970310533 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.971509446 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.960442933 seconds)
  done (took 211.617962855 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.96066368 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.96003241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.959016629 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.957274981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.958413651 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.955097759 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.958068 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.958332797 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.431174329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.437175612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.963544096 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.967672147 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.968969346 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.957336138 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.96869173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.95504193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.968097673 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.965342038 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.968283627 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.968137884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.972992383 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.644312129 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.971069951 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.642232157 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.984260493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.966504809 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.954997492 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.970264187 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.97505641 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.96977977 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.974094869 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.955459188 seconds)
  done (took 223.067104347 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.147169684 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.961368579 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.964096969 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.880574894 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.961397578 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.961863255 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.968522036 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.145123355 seconds)
  done (took 19.896401143 seconds)
done (took 627.836765792 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.442413785 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.282609898 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.147924955 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.983791233 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.256601148 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.021548124 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.980592766 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.051821816 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.704942053 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.057458222 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.636803252 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.002175032 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.726121091 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.011154547 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.103881338 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.041421994 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.528241853 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.622047549 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.159256968 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.073951542 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.155929685 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.923362843 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.065105711 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.755860801 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.748896484 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.978085938 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.151736059 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.534465108 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.990205916 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.145448581 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.774983883 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.382314531 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.996264491 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.978780475 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.036401736 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.014977334 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.331666218 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.994634641 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.106917728 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.727062235 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.06828708 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.596095566 seconds)
  done (took 107.176628446 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.953696407 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.952076534 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.952113897 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.951839873 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.954545752 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.951295932 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.950117819 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.951569663 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.952975232 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.95171168 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.952441311 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.953103054 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.952429381 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.95319519 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.954041461 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.95143096 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.952047516 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.954232808 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.951680346 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.953296133 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.95343889 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.95237965 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.965033077 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.953773606 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.952703392 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.952730805 seconds)
  done (took 52.6783652 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.965938057 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.133855013 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.211139011 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.985619445 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.965117932 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.968792508 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.984406041 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.97272534 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.968304836 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.968501568 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.072677827 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.970777725 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.984144781 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.208982753 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.982047731 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.963642394 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.965164761 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.965468993 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.139710807 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.981872822 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.985489251 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.969833355 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.984869115 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.980500397 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.966892963 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.965983673 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.96854019 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.41051234 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.976284167 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.070615014 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.026011287 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.990553369 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.335618703 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.219302394 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.022016809 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.976504772 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.96751972 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.076283903 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.972844904 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.967027739 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.98537947 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.974148139 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.206830834 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.461685031 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.980590674 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.967130234 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.421114287 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.083759866 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.005525711 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.978440107 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.210377377 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.984055192 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.967535766 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.967694867 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.003509271 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.972780116 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.967324771 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.269299715 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.979015384 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.985600545 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.971761056 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.967764296 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.144318763 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.978048343 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.133302643 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.976677762 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.973083461 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.96943328 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.209577835 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.985157161 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.466573015 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.981991455 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.967772247 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.073325049 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.13605135 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.448578476 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.981060954 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.144844164 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.355173546 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.993824662 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.975711644 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.399297029 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.997801439 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.974706953 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.969593773 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.969924858 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.969510667 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.013799967 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.985126026 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.398887362 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.469302583 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.282641692 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.995598549 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.982804951 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.969202406 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.267832473 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.976211915 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.968721599 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.202429349 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.476855822 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.983480341 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.976297172 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.458120339 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.986276149 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.988459891 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.979998822 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.213730244 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.986579248 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.015371063 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.970213344 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.975780698 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.97310429 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.988428496 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.977836883 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.970397219 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.442669038 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.095784816 seconds)
  done (took 243.543109113 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.963946288 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.964768579 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.965366299 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.966097382 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.964148689 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.968573736 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.970422791 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.964464042 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.969981207 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.964180416 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.964301352 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.965783179 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.968345822 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.992488922 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.982738096 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.982835525 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.579003667 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.976281618 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.975513765 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.981590667 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.632937148 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.984804916 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.976066624 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.984187762 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.97670799 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.974966211 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.061817855 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.981755693 seconds)
  done (took 170.500001515 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.98193553 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.099860918 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.001632642 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.010250989 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.98813546 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.979945092 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.005006125 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.995540706 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.98652256 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.979366756 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.980061226 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.044071161 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.993587688 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.082599253 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.011964761 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.012683619 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.086011847 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.987948784 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.979829754 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.979928002 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.011890623 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.976230946 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.044560349 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.112104758 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.003444422 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.10117833 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.988410807 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.983567078 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.981899239 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.102484922 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.998607961 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.043385253 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.012491398 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.998949001 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.102826822 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.100493285 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.0887686 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.011209174 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.985971793 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.980756754 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.983021375 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.971210262 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.100645547 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.000678094 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.983951148 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.091466115 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.001885131 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.984580169 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.991671599 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.981249127 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.997899546 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.999401109 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.04955223 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.116356871 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.017302312 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.007567175 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.008209425 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.277635764 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.991020725 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.084461318 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.976675039 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.102069663 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.003333201 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.972025218 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.984206644 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.989879108 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.012315916 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.014481048 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.087004504 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.991898425 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.084500117 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.017767089 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.989012938 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.982745233 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.984566483 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.102275301 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.102497256 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.018346193 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.020207959 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.01572485 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.979353588 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.985007245 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.975792625 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.002952721 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.989171143 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.104298918 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.103887699 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.992452505 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.986770716 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.988645296 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.988395121 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.012632126 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.109789319 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.019439439 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.082172497 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.052746965 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.061413786 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.001498746 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.998124865 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.987635874 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.050967847 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.00188196 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.996872481 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.327986282 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.055912374 seconds)
  done (took 214.670743245 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.438206941 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.039542021 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.041429593 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.306810918 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.419003874 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.876773822 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.031775895 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.033143871 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.057674042 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.220870608 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.107003799 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.055100622 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.020687045 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.006446686 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.031539103 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.053467383 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.04124304 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.369251521 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.159128886 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.111437046 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.015035338 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.343669957 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.356763566 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.4217857 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.069698457 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.39239679 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.723219201 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.180318821 seconds)
  done (took 64.839185376 seconds)
done (took 855.290872468 seconds)
SAVING RESULT...
DONE!
