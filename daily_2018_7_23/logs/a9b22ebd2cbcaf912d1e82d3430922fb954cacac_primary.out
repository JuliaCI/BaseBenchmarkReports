cset: moving following pidspec: 31158
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.372322456 seconds)
loading group "string"... done (took 0.508091793 seconds)
loading group "linalg"... done (took 8.541628532 seconds)
loading group "parallel"... done (took 0.174424704 seconds)
loading group "find"... done (took 1.287044498 seconds)
loading group "tuple"... done (took 2.017662444 seconds)
loading group "dates"... done (took 1.331380597 seconds)
loading group "micro"... done (took 0.205370249 seconds)
loading group "io"... done (took 0.567205687 seconds)
loading group "scalar"... done (took 41.223049043 seconds)
loading group "sparse"... done (took 12.758678063 seconds)
loading group "broadcast"... done (took 1.131084831 seconds)
loading group "union"... done (took 14.090689504 seconds)
loading group "simd"... done (took 4.856054595 seconds)
loading group "random"... done (took 9.742160667 seconds)
loading group "problem"... done (took 2.126394704 seconds)
loading group "array"... done (took 23.364627968 seconds)
loading group "misc"... done (took 1.07310178 seconds)
loading group "sort"... done (took 3.530270047 seconds)
loading group "collection"... done (took 20.871828396 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.606196592 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133929254 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.144664834 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.173448932 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200438129 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134335624 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154303297 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.459612534 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.014446484 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202127785 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13969914 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.504130041 seconds)
done (took 5.622296994 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.225407356 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081991069 seconds)
    (2/2) benchmarking "String"...
    done (took 0.126123864 seconds)
  done (took 0.909837126 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073621347 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171390695 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091732657 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107227045 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10760323 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090498884 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107898524 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107880468 seconds)
  done (took 1.48798463 seconds)
done (took 3.414860282 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.740616443 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.846757079 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.476736504 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.126836016 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.15373847 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127948118 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.300076181 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.143899917 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.118509162 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.111291211 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173990469 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.38000409 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.475009166 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.971212018 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090381644 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.123914478 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.077753598 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.737019245 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077296021 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114595805 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.502411336 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.10437303 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.112214103 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124725245 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.203219513 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111873558 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178231504 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106828424 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664763307 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099600853 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180451828 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.093935641 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.156482646 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.209072279 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.091978285 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.089319616 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681296464 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.18620603 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.106874685 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.094351251 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679137878 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075749093 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189922003 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103960554 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.10721963 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186219052 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.097638676 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.090616596 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08021987 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100833938 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156357221 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.449631909 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103389741 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.1419691 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092107916 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.733036284 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091239946 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152161871 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.120990452 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.106984835 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.079923304 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.104814036 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154145789 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096021248 seconds)
  done (took 19.504677437 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113295885 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136788197 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091254271 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13707128 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135902756 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076161094 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097076287 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073802282 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123149461 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17915783 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136109667 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141288888 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072399065 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091790882 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097610796 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246269198 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11801954 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099824954 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094119236 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086434482 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136204963 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.091521825 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107101988 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106261538 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164838719 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201340522 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105914292 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120429749 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090853363 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095991171 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139719809 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15638941 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073287757 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09033246 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175231313 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102621745 seconds)
  done (took 5.024254037 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19223409 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098759571 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.198417217 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.170866639 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142164946 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158985995 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103463199 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259508007 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.167136831 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1627 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125962555 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112688025 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07584835 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.093289218 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075738131 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.704592822 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164894726 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.143636615 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120389599 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09968665 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07854964 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.725196193 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081648051 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093140589 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079987896 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085907197 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165165993 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080933859 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.324754962 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.081247326 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.114506552 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082985024 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.111302022 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128831866 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126396679 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.130980553 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081585831 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.094645069 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.193457594 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086000924 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09269829 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101148167 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130248805 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131216081 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095117516 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086570692 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.241833323 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078101199 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111722908 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.006031876 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.209457924 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108703475 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.107686916 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07531127 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.333466517 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113405423 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079488219 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095445075 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283715411 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114001916 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093520163 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07466384 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099664399 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076266136 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094869422 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081717188 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.393142272 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.093341367 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.150761312 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.958694579 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094693036 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099766111 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08184892 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099466155 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097412398 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.092921844 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07745346 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074187282 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093927327 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079631364 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112087137 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097082608 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076151502 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157736375 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096382043 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113583381 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12084198 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080684585 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074899432 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126261284 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094278301 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076299426 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097029373 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119038971 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101635978 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110379803 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09473129 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.123033555 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092934218 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.174785769 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093637054 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103394763 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096643605 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124562689 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113900528 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076064714 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097828681 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073784855 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09423194 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142715565 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090486238 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076298755 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.095245775 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089079897 seconds)
  done (took 23.29354997 seconds)
done (took 48.525849213 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.379643926 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106980851 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107201481 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106165161 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105149736 seconds)
  done (took 1.585402819 seconds)
done (took 2.34317185 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314070192 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.192362369 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08279456 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168351773 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100340567 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174671028 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157383247 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114338822 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.185603466 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096566536 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163346781 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096757889 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083246859 seconds)
  done (took 2.71246867 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088491767 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113320103 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077245609 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086055893 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08861635 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086579353 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102505087 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106863881 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102734602 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081427145 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087566843 seconds)
  done (took 1.775631134 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087135825 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093313019 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093122561 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085634159 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087174888 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08634076 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102896867 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096755687 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103196218 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081253751 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087249805 seconds)
  done (took 1.756307138 seconds)
done (took 6.992138996 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.075626427 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.604202158 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.098320676 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.168965005 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.324714427 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19332355 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.630192567 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131669762 seconds)
  done (took 16.176300718 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.123783801 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093728042 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076987011 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093542958 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078452077 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093799439 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077635464 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091207606 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076225309 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078785295 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095337577 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076407852 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091453438 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076983212 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094223537 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074908477 seconds)
  done (took 2.210960462 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112041463 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110645249 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098728044 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084371384 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097704494 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079636323 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.0995429 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081010701 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095220799 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079936912 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100873899 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082257665 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097861936 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.077509747 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09735176 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.101906027 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078338149 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.09863841 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.083183684 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09968914 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083848663 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096114841 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.081857008 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100602317 seconds)
  done (took 3.079571228 seconds)
done (took 22.221273579 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162955213 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080514827 seconds)
  done (took 1.002881312 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097216433 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114237763 seconds)
  done (took 0.979279713 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102576162 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092258822 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130721171 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09470078 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094283098 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077617773 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126591938 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094306326 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077136907 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.077768211 seconds)
  done (took 1.736878452 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080805604 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080677943 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101811891 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.114382155 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087746969 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094269272 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081411501 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096879302 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082151016 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092662599 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084506987 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114230993 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101661111 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097115764 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097050546 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083384139 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103683555 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098013082 seconds)
  done (took 2.459743299 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076483151 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079173963 seconds)
  done (took 0.920515023 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.078893335 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075538889 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095650783 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09646274 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075521864 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.074042271 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092290872 seconds)
  done (took 1.355808952 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.464960793 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.178987973 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318051198 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110623485 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129427416 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.338012519 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.130234992 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.109094438 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109078109 seconds)
  done (took 2.695580329 seconds)
done (took 11.914504829 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.086867883 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.129384295 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.470482571 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111056663 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.073362354 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.141052571 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.250060876 seconds)
done (took 2.03086862 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332292415 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117641106 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085050707 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074762724 seconds)
  done (took 1.376531677 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075542829 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080649248 seconds)
  done (took 0.92755995 seconds)
done (took 3.078694732 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074245945 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07394755 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089236099 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073457957 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.088830511 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07182436 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073736183 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090637404 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.074084203 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.091280614 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074348817 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.12475051 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070649432 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070792742 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091581057 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071927627 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090221045 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071760451 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.193268566 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091567878 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07207427 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088826888 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071547897 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071514952 seconds)
  done (took 2.861078743 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100644912 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091913401 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081029326 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097048203 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078339821 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097596374 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080890607 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091078591 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081431674 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092946878 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078530022 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094836879 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077754441 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095748674 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077357995 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094987249 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.080342285 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091321046 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077816432 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09508601 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.079815326 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092107981 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.078932592 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097212023 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078375777 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094828971 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076831509 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.092462165 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080546693 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095299963 seconds)
  done (took 3.39877361 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080024756 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071536722 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088947747 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083130175 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088379828 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.075971568 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.089867166 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.072461358 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.076749246 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089489916 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077848074 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.08880985 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.072158824 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077175983 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093949658 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079495856 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107490876 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07285215 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090180144 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076315944 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.095292547 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.072049231 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.075081503 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.090314051 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071851603 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089678725 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.072661912 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.072123976 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089444366 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07274839 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093689645 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.078977496 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071763373 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101494515 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.078540068 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.087833975 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08081799 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088604289 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076833937 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.071823926 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089182771 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072330071 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089574108 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.082867725 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092069222 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073720081 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.072688914 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093241131 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076139769 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097033929 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072327676 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.072330604 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094929599 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078209952 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095153702 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071878599 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090454529 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071913147 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.076234397 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088372152 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072030079 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088430343 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07822747 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09011588 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095936759 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100343741 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.071782538 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077102397 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093092728 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080051972 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094230747 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.089950932 seconds)
  done (took 6.74640385 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077063409 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100014296 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073441236 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074195126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087529587 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073622523 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096428325 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073368309 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091524394 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090652536 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090227158 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073432279 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09108686 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076380792 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073218957 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090923687 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08274697 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08739107 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072955485 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092722923 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072801363 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095966382 seconds)
  done (took 2.621538495 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217320727 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101077335 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135525936 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09123022 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110728598 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109209287 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080486248 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099354806 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080190403 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099348273 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083767761 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097050056 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109994962 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082749984 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100281521 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084345076 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09701854 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084195492 seconds)
  done (took 2.647152366 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088804227 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092819343 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.0990845 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09286468 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076947778 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095271548 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08151118 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108388385 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078363727 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093289078 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085904497 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094490153 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078036497 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09379585 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078268018 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092883447 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.077073172 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074963732 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103460035 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099577563 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082557384 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103390911 seconds)
  done (took 2.758746979 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093138982 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095319615 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096106788 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096989137 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075046884 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095068752 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.082878662 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092259247 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085300342 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095342788 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075913599 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094107046 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083249704 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093108722 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.081828189 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092927361 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077261726 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092422775 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077173783 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075213582 seconds)
  done (took 2.538862496 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116547432 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107076705 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089315893 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117865902 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089491579 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110115665 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118508964 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089646913 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107309378 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102983905 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10669423 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090467682 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119031687 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114498799 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090432732 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118610576 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11822539 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100780344 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107269639 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089742522 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120473676 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108156862 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101844646 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107330087 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090209831 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107399817 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089605626 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1139059 seconds)
  done (took 3.735666227 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074669807 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075268313 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090144118 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072860189 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.073369501 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09029469 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072699349 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090827331 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075900214 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072223388 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.092826058 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.075024934 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092191427 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074787255 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074967477 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092352663 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075107609 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089592642 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07244035 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072278637 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092905935 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074568908 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092209056 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073275449 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072105353 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091821442 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073087977 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090119296 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074705761 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072754163 seconds)
  done (took 3.198863368 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083781169 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098163554 seconds)
  done (took 0.977721025 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.0730733 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110104931 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072520225 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079653151 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09936276 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076326976 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103110826 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098178189 seconds)
  done (took 1.503364038 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099781642 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113545626 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081588465 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105755147 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094149693 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.111974604 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155845725 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.081806631 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.101964636 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076174354 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112510847 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075359694 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083434384 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098565954 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.086303902 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107552342 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.076930298 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103125235 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084460926 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095730429 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082906626 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109498317 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086475392 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100728213 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078535239 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10592684 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08968478 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106181458 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081567046 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105825783 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083465147 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08749462 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080825036 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100263153 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077335103 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111307023 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093443897 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09924354 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085823131 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099672163 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085842828 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091862495 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086941227 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.100879457 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088649013 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099468448 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082454018 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092183013 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.077501139 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.09742407 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.075353686 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079598407 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.087991051 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085816607 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103053097 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112820706 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.07846576 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.080721009 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.098765807 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079792196 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.100379597 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080793254 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10483775 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080039334 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102581277 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086178033 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101363919 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074768816 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088085764 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.076905364 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.102482561 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100942465 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.104827079 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082245597 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100717426 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077757875 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100490993 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082896284 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102317219 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087092733 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098585155 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083520885 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105078696 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079940073 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.098066213 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.083073594 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.077337297 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097425555 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077313197 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113397957 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079049989 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094272439 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077775011 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.104268439 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081462863 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097712264 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.077107943 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104287905 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070688307 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.09978091 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082346496 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100544705 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088764817 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099460156 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08199082 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.103158754 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087029703 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098691977 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.079887824 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.073409567 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100813963 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.079129987 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.103248591 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070982076 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099106857 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.080913732 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099744505 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.087018948 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096309386 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081544416 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104243528 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.0878008 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096381373 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.072654366 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.0811403 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098638546 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085829215 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105728224 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078996197 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092856139 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075093437 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102696157 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081763168 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.101329776 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083363162 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100447073 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.071055754 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096100894 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081753152 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10488585 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080019238 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.100607742 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.085691046 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102352104 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.07955924 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.104159032 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.079797234 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077619021 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103715594 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080668059 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093063127 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086365808 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097892491 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.079399 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.098643647 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086731487 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099813313 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082672565 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096263614 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08112482 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100808146 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.07705699 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099703824 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079583483 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.106612002 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.080716222 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075816361 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092067262 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.083567311 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096048941 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080458541 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.094512639 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.081956707 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100460062 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.0776287 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.079989718 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.098625287 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094605172 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108443769 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082876312 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.101532241 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088962066 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099118919 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.0827894 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098849425 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08410065 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099781532 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08668822 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.101767432 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082693219 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.098469357 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073021432 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101502942 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08746598 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.094726864 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077143744 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.076167065 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.0997309 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.08859331 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099993964 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083646849 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096912814 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083656125 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105200257 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.081416153 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098980494 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077292703 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098837372 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086070245 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.082841571 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102638477 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106285564 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083159479 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0755197 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104575724 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077841548 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103263102 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.075563674 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.095431031 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.078232113 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101434889 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.079441385 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.09746426 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.071192347 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086584111 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104781102 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082484969 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.095071889 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081588344 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107488117 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.080406562 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102203142 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.082002653 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.102633523 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095147887 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.095859496 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080858133 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.107415982 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081338631 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088692422 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.084373936 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097313606 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.077287132 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097763123 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080045296 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081119158 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110120523 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.082917882 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.089223401 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.081395853 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098087169 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077637999 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093976902 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08663768 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.100245215 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081111974 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108388126 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083928737 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100876118 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083610839 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098677047 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.08239618 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101460088 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082801529 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082997678 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.098213118 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.076937311 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.100239015 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.076546794 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096338686 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080786759 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099427707 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082347458 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101438811 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080533311 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104093023 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082300558 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100187463 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098239491 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.096933427 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.077622392 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101716657 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084651005 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099580642 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08123513 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093825792 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087239616 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098977656 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088098681 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098831973 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.073158136 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.081322172 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.099152604 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083212588 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101439904 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083488876 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.09756978 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081232881 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.099637809 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089920073 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096255394 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088174042 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101776142 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083408307 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.099852886 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083160273 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099220344 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077340594 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.080991959 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101176734 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082594007 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099339616 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.083696465 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.100600998 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.080480978 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098227045 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083030816 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100532062 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083348702 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.089293411 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.077935159 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.077551387 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100263719 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084871907 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100782529 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.079223357 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098975168 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083476658 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097686151 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.073427767 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102600578 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083660668 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.1010402 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090680407 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.095957023 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.081936111 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109191677 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071675834 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.07943708 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096740407 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.077914158 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105094065 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.082854924 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.105805197 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083420764 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.09660903 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.07487534 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10160764 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080556893 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.071816518 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.0965881 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084149216 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.098300206 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080910504 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10122723 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085026797 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102815238 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086403302 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099212673 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081479259 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100156953 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07445054 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.077760681 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.095502384 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.082314408 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101667663 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078665188 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.092240348 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081189155 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100108032 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.081973721 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.080565731 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.099472676 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086689491 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100633131 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082151212 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106625519 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.071368088 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.100806863 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081294597 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099685718 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.077997205 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.101271013 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083297331 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101421436 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.08622319 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10023024 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08399799 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081267907 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097133781 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081814481 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099858682 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082312921 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096406494 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084381717 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106227843 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078171167 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.100619693 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082789383 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.098137278 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08347832 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102249804 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082163095 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083915518 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102381463 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.082024265 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.10427091 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.081132142 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101191128 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082973574 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.099158572 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086431952 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095553253 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089006723 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102088077 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083823866 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.098868247 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078685689 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099966398 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08197625 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080338164 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107024658 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084124245 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097842352 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.077670551 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096621867 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082355276 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1066995 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088448791 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.100430331 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084298931 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095020182 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.07457316 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102065931 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.078757363 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.080585974 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103209641 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085762384 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.101347277 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07845169 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098691552 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.086699914 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10468879 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.083604134 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.096736548 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084697835 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10276919 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.083203385 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.098436086 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082175711 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101964827 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.084144096 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099019287 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078621313 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108797565 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087257211 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103006665 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.081509222 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103746392 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082314945 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076256182 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102981955 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084788906 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103283847 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.081702125 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101522045 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092132105 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.09749375 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.081709138 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107193657 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081673019 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106958834 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077332792 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101589098 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084973167 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103356928 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077211963 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.097276271 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079774578 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.081960521 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097059162 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076708072 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111981375 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087601602 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.102105253 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080590757 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099349275 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077939585 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095641152 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.078859811 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103427147 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.081490581 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.108855494 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079610435 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.0786103 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095780006 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08223027 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102461159 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.084584715 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094371431 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077771233 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.078153756 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103876154 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107892436 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081374154 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082196975 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102459208 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.083781021 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098063077 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089076131 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093476039 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084575549 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112356557 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083506749 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103633751 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.085574341 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108590104 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084468419 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096422779 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084827324 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102687632 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084484139 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.1040323 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084392736 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117247134 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084371874 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.097561141 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081613832 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.101387048 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.080717491 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.108629741 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08584336 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103040714 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085170487 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.081243724 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104652146 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088670825 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104728832 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.083041213 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.103270662 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.080857493 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101417594 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080455205 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100351782 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084345364 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103840682 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082240109 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103930592 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.0792238 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111488556 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.089409751 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102928516 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.075258694 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079058685 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099212506 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077691725 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104374226 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077211902 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099675112 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081075595 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080449035 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104767425 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083754305 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10200664 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08481785 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100950468 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072148823 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10465438 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08401064 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104458181 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.075468179 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101799484 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084519232 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.10564517 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08852503 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099251967 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.083354193 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080947045 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104284415 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.076007292 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.10462369 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081404832 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.099321256 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.079104887 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10028021 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084747956 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103023663 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084207648 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103722141 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.082711559 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.086792341 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105094732 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.075113805 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.0950415 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.084977189 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098201775 seconds)
  done (took 55.048919752 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122043763 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102547117 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073558477 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092692019 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120104142 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078316077 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072832224 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097089767 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078291314 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107008868 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074004081 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091701619 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115951399 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101333938 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11861375 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107200736 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073627525 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096276429 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073594341 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096247238 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094794989 seconds)
  done (took 2.82863897 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.098598851 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111811175 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089705426 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116419013 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104194035 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092017881 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109323781 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111572098 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095866555 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106561699 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114619135 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092007808 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105684406 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105742709 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087423896 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108164797 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095072693 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104906014 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112478633 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089905332 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108410594 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109416983 seconds)
  done (took 3.112912451 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086574659 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.08104218 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106576528 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.073082198 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101323669 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.073648245 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.106105565 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.075313116 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105122418 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.082998001 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.079096702 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.100709175 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087218274 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.092722279 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.079663826 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095210332 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.08647798 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.080611733 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102494789 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.075283003 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.120988964 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.095424913 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.077145258 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.078720993 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.110976797 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.082231616 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101182293 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.081931762 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.09841051 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082654183 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.094049342 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084269189 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104609374 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.079379592 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.078886642 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101199111 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082635657 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094467322 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.079045917 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.103779133 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.07708008 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.081754432 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108493189 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.077969998 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094794139 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083257513 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100826896 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.074027895 seconds)
  done (took 5.145818991 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.113387435 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130391607 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101506633 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14101554 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.116823084 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092028161 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102738424 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139511551 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076686554 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.101531761 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.100034176 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116209212 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103006321 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089453626 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100891452 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081767985 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104052601 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077350216 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106588231 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.077744842 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106734343 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.085186632 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115709155 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.113460752 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086638505 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099645332 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.07791789 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107238575 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111589132 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.088774329 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107458439 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089284696 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.116468568 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.098747283 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078099713 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10291228 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.098157172 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102649579 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085022705 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096335543 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.083604221 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108361256 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.084110411 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119784836 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10251653 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084282378 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100722027 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.07640762 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11335117 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.083715817 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112517088 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115283389 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086909493 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103006534 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.0875664 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117159387 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101885972 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081419438 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10556734 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095756605 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095529239 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087050349 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115196547 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102848788 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091582337 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115703592 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102974718 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086622121 seconds)
  done (took 7.791985647 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110327445 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106716733 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098884232 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119533073 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10736784 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08798616 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106062185 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.086967597 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108006454 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114096178 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087431228 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155112564 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.103584741 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094318429 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107058931 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.086664949 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106498536 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088024947 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106863914 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086772796 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.108383832 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118171598 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087372347 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118996615 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120352908 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085343753 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107357925 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087678178 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119822535 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10735962 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100295853 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.107928548 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106821907 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099773552 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121473155 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107027748 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082195157 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106852392 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.087262295 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106917825 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084508345 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119595451 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087402692 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105560454 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105951469 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088115106 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119339549 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.120148332 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094734765 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114753775 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.087589213 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120770903 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107013414 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088273604 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119665884 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127060725 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120069226 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098652465 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107689512 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119822625 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099843138 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127575703 seconds)
  done (took 7.378002069 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110902478 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113520341 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.1194514 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.075205923 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096322786 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087919283 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096286298 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.077008717 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114129574 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093354894 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117782223 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105605275 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090350362 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116830063 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105462386 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090472473 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106396658 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087395567 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113510959 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106373439 seconds)
  done (took 2.882952592 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.086771852 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119682353 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.079569609 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106805981 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.081659652 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106297403 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.080854921 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10208694 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080636609 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101188504 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092508918 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111419906 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080083472 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106390481 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111532415 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086863552 seconds)
  done (took 2.394416295 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.10007822 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120240706 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12336664 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083603227 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07671981 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104456576 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081212967 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094626126 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075933851 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106710974 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085180727 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104881017 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082279083 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.096520747 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.07968553 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084589027 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095402467 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082167223 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101915286 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103250825 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104884105 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.080995506 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103917941 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.080611671 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101936832 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084431986 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106434356 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076138346 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097852098 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082042735 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102010673 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.086315332 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096123378 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083651074 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.096980207 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.076928439 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101271092 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083577775 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.104483645 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.081892482 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.097232218 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.082202332 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.080885471 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101516202 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.074050475 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102339073 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075163838 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104612874 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.080589105 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101779655 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082230324 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107465658 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08586088 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110451009 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089669116 seconds)
  done (took 5.956145977 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094020034 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102873449 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084183336 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097100999 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083194313 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086099037 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10500192 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.081451068 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102330477 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077119972 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102068829 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.083816676 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101046585 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084733383 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101846727 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083936384 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094241407 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.082040291 seconds)
  done (took 2.515417076 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085181506 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078511079 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107573939 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079010645 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.098895256 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081759085 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095767724 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077628317 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097616405 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.079271365 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078762929 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102041022 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077747208 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.102171559 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079512759 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098375088 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081065275 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07691112 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100193982 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074625541 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100959378 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077690107 seconds)
  done (took 2.800254467 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.096380621 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.130395765 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.093102932 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.141219267 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.082642112 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.104998733 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.092428825 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.103968957 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.12136671 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.083850466 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.082058272 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.10508083 seconds)
  done (took 2.108092838 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102976422 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135998734 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07981928 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102114176 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093718486 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105997263 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084155675 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105846987 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118832002 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098415176 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105007256 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119063638 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097080131 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11676117 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11330349 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092826477 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105990555 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104430593 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080800388 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126996835 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083211992 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118753574 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105125211 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085956516 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104697816 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096151651 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118438519 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117587116 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104281892 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098633886 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11371955 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084522016 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118080734 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118654071 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081256405 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118456688 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104589667 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125744038 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093521143 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116419689 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082198027 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113924764 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118144443 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091771234 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119241949 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103297622 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092825551 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104970347 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084953099 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132689624 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114564694 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116999085 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094018558 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118918091 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117529193 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132998176 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116738742 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096713494 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113535311 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117488071 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096762726 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114797747 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117102525 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119020293 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092744581 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118226959 seconds)
  done (took 7.912459778 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119263407 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102359794 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085169929 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122342029 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117048351 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085239796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106149559 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085300575 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106705462 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080820067 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151091376 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10685845 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115935483 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096755883 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106294171 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105500754 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085681751 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116506608 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08215681 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133207605 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105008608 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115977239 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097132644 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118409317 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118449554 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094177817 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106523843 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105601907 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086641444 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105513185 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092535517 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105250961 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11706873 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081593752 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117100458 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085725381 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106101969 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092189309 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107235163 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114023285 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096986615 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128504738 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105239119 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084742306 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120665751 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105282253 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085831851 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102635358 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086179127 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102020326 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098632728 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119673589 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120078071 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117514455 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085388556 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106435102 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084604395 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105989517 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085191494 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115665663 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116806637 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086040551 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135991798 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105462578 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08537275 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118327413 seconds)
  done (took 7.76276942 seconds)
done (took 149.399350793 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098411869 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136311529 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09534874 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164014529 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080091385 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135268734 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114136221 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.115370009 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080604331 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079191934 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101411158 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.083475508 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166875857 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080847312 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.100363695 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.084268131 seconds)
  done (took 2.588486475 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176142655 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.28113935 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100057724 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10748787 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086806297 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10410072 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086018196 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107169121 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082643564 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.111907606 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08285163 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.103313846 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.09213711 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103695857 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082893548 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102892794 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.092236196 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102389245 seconds)
  done (took 2.887887262 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112119909 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145057234 seconds)
  done (took 1.137425917 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117826866 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18093991 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.291786522 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.133607637 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.367151375 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.124515752 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156086803 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.099950317 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196904651 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126160865 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124411634 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.086583249 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133465349 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.113469578 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.090262697 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.10711174 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.112883397 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110651038 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.087334622 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109435054 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.132990282 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087500792 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.112378807 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088797156 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18228265 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123360776 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107790227 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087950873 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.107651342 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088410954 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112104057 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100601198 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123070464 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.163700966 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.113306449 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.160375971 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116038863 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085936204 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109533487 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085436054 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.111803887 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.112579721 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101787527 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.106549778 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087206661 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.114238935 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087944766 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.107768459 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.093932641 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117277265 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115320579 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092321987 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.180873234 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096855185 seconds)
  done (took 7.565095624 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.782107697 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147921945 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085949402 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.886475388 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111811687 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123295888 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.788397779 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106548779 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228012028 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.802730804 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098318166 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121621981 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22496891 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.248351932 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.137070226 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311183829 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.688886168 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096655571 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.133462153 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.144378149 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092673046 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13374057 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125318708 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.449879257 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.087065638 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106096747 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091449326 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117317479 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.156225954 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085721177 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109865696 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174640186 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.261331414 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.19784143 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.087220862 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105701829 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084799642 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167914819 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264846476 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212904142 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.148685856 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103620238 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084265638 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119415967 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125690818 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082364512 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158177175 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.168867371 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190515684 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08957387 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117160799 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095004726 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118253939 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158297908 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081870338 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.333439664 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.336893722 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083316251 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117389319 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122586615 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238184073 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107492259 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20074189 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134371362 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212314263 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08445878 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784075675 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163708613 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083623887 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11603625 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.091453688 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113427768 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116841789 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164749542 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.366215989 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121107375 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109659412 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085623013 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.202659994 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107006088 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.083997956 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158640489 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110060387 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092964893 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122011511 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12004712 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169309653 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247287714 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119835167 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0937938 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112925258 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.097830284 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109193908 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209624951 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217086419 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.156268398 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209620084 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118176346 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161839763 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163138411 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117535382 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168531395 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091417557 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124397977 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12044247 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189324395 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.137930546 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107992009 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090610946 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115533015 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.140445712 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089585596 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115187878 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166169568 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.482568984 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.1623614 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.104930485 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089958905 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115897732 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15912621 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093366562 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262208021 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116714979 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165006263 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091568499 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104911079 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095780214 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.158124002 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121351885 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117121541 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096802564 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115872149 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.247638355 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217551537 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099524799 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236860685 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174332624 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094130806 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169887828 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117019182 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166175672 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116641944 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095842989 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109440871 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.744981045 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121643884 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.113801387 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091614374 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191697623 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084910418 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11024974 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085255931 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103986818 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.761641522 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110734712 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083139942 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.109078543 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094221088 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115402134 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092244289 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112434731 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158917287 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230324084 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097441415 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115784816 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085522854 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15751603 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.111302605 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085313822 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.108045394 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085983771 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116721517 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090114262 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109351015 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169368577 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156415757 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218011563 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.552332072 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107576408 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086695503 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228098979 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084978731 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304123774 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115607968 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201526056 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16347252 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105466237 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.33545266 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164861272 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190445256 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.090122297 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168095639 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105048177 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092682183 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158443115 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.108028007 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091380351 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177851634 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100633897 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12043338 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.145593777 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08624926 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224504702 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.104319333 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167616329 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088002229 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118540966 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304695989 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085966972 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12711311 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158735294 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089543367 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108456929 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.695719038 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107841438 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.097069478 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115182306 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.19802013 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18479649 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09423464 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114626992 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096488093 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179751806 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206871362 seconds)
  done (took 42.844581961 seconds)
done (took 57.901948615 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.303753799 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.254908559 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.252794066 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.213171767 seconds)
  done (took 2.007395613 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173768543 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.12360618 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.142260042 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10473425 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.12595582 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104716611 seconds)
  done (took 1.682949069 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.424645152 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.354502794 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.327161217 seconds)
  done (took 2.018743987 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.244119209 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.263784829 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.316439645 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.394841795 seconds)
  done (took 2.237283601 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199666292 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.098194289 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118702027 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111881498 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165175455 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.19321247 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.114869166 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.146391174 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.125618409 seconds)
  done (took 2.232420429 seconds)
done (took 11.09214596 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.143066014 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.231827667 seconds)
    (3/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.255318337 seconds)
    (4/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.240419046 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.157269044 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.1537495 seconds)
    (7/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.264460407 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.122786292 seconds)
    (9/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.141525623 seconds)
    (10/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.157531995 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098398491 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115215665 seconds)
    (13/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.212616009 seconds)
    (14/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.232542545 seconds)
    (15/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.09562386 seconds)
    (16/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.179906242 seconds)
    (17/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.20060568 seconds)
    (18/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.218444684 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12098816 seconds)
    (20/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.1981387 seconds)
    (21/286) benchmarking ("sort", Int8, true)...
    done (took 0.225311739 seconds)
    (22/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.231156397 seconds)
    (23/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122108567 seconds)
    (24/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.147880486 seconds)
    (25/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.104086449 seconds)
    (26/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.094513893 seconds)
    (27/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.092696002 seconds)
    (28/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.177759537 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.139287727 seconds)
    (30/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.133161005 seconds)
    (31/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.179462589 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.149304528 seconds)
    (33/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110667499 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.228645062 seconds)
    (35/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.254942464 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.140891835 seconds)
    (37/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098389951 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118667022 seconds)
    (39/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.221522817 seconds)
    (40/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123881441 seconds)
    (41/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.176061008 seconds)
    (42/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119795311 seconds)
    (43/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089083285 seconds)
    (44/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117322216 seconds)
    (45/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.108525126 seconds)
    (46/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.190285157 seconds)
    (47/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.233978846 seconds)
    (48/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.196005008 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114783278 seconds)
    (50/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099124764 seconds)
    (51/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.160635675 seconds)
    (52/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.240023761 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095084976 seconds)
    (54/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.194034936 seconds)
    (55/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.093638523 seconds)
    (56/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157250449 seconds)
    (57/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.20715807 seconds)
    (58/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.121874027 seconds)
    (59/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.1132344 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109546142 seconds)
    (61/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.089378104 seconds)
    (62/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.227331439 seconds)
    (63/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.121459768 seconds)
    (64/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098186533 seconds)
    (65/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.099130619 seconds)
    (66/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100361453 seconds)
    (67/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111666409 seconds)
    (68/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090188198 seconds)
    (69/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.122893698 seconds)
    (70/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.101356376 seconds)
    (71/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115979668 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.082902948 seconds)
    (73/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.11145323 seconds)
    (74/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.085505521 seconds)
    (75/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.163091823 seconds)
    (76/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077290809 seconds)
    (77/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12246919 seconds)
    (78/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112938987 seconds)
    (79/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120604212 seconds)
    (80/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.182955573 seconds)
    (81/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.072334038 seconds)
    (82/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.09617823 seconds)
    (83/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.115146773 seconds)
    (84/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.181125651 seconds)
    (85/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.12189011 seconds)
    (86/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.095653539 seconds)
    (87/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.116557986 seconds)
    (88/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.102886221 seconds)
    (89/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.199070249 seconds)
    (90/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.071743038 seconds)
    (91/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.180859637 seconds)
    (92/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.178592779 seconds)
    (93/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.191333613 seconds)
    (94/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.172012872 seconds)
    (95/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.18164295 seconds)
    (96/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082480694 seconds)
    (97/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.194881495 seconds)
    (98/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.087956697 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119285161 seconds)
    (100/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.149258914 seconds)
    (101/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.073721627 seconds)
    (102/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.116243621 seconds)
    (103/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.169736812 seconds)
    (104/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.115021613 seconds)
    (105/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097866343 seconds)
    (106/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.189009547 seconds)
    (107/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.194706258 seconds)
    (108/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.076678562 seconds)
    (109/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.111247744 seconds)
    (110/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.082483004 seconds)
    (111/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.098636348 seconds)
    (112/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.099501076 seconds)
    (113/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.155012733 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.181422767 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09703152 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119603318 seconds)
    (117/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07171039 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.112397331 seconds)
    (119/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.081983795 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.120090403 seconds)
    (121/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072221119 seconds)
    (122/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.079761279 seconds)
    (123/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135444842 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090757923 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.139712001 seconds)
    (126/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.095347408 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096333942 seconds)
    (128/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071754328 seconds)
    (129/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118370689 seconds)
    (130/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072215101 seconds)
    (131/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115845517 seconds)
    (132/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.075101009 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.106478056 seconds)
    (134/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092710921 seconds)
    (135/286) benchmarking ("sort", BigInt, true)...
    done (took 0.241578764 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.114395381 seconds)
    (137/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084275733 seconds)
    (138/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117491164 seconds)
    (139/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.1083263 seconds)
    (140/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.096066063 seconds)
    (141/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.071878052 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119347475 seconds)
    (143/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155895209 seconds)
    (144/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111461678 seconds)
    (145/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.072715273 seconds)
    (146/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135090179 seconds)
    (147/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.204778394 seconds)
    (148/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.073434055 seconds)
    (149/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115477971 seconds)
    (150/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.133272761 seconds)
    (151/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115106167 seconds)
    (152/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.071835935 seconds)
    (153/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.080139606 seconds)
    (154/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.110630245 seconds)
    (155/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092097623 seconds)
    (156/286) benchmarking ("sort", Float64, false)...
    done (took 0.16864985 seconds)
    (157/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.081896795 seconds)
    (158/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116310407 seconds)
    (159/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.088690343 seconds)
    (160/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.171181283 seconds)
    (161/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.111255882 seconds)
    (162/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091326699 seconds)
    (163/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.155608129 seconds)
    (164/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095055057 seconds)
    (165/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109334657 seconds)
    (166/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.090736212 seconds)
    (167/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.121794149 seconds)
    (168/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089130048 seconds)
    (169/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121563207 seconds)
    (170/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.097934808 seconds)
    (171/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.11597007 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089701504 seconds)
    (173/286) benchmarking ("sort", Float32, true)...
    done (took 0.236968516 seconds)
    (174/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112025353 seconds)
    (175/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098221099 seconds)
    (176/286) benchmarking ("sort", Int8, false)...
    done (took 0.190100749 seconds)
    (177/286) benchmarking ("sort", Bool, true)...
    done (took 0.229432876 seconds)
    (178/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.113090802 seconds)
    (179/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.083643727 seconds)
    (180/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110794946 seconds)
    (181/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072271006 seconds)
    (182/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.072291754 seconds)
    (183/286) benchmarking ("sort", Float64, true)...
    done (took 0.236512744 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.114030652 seconds)
    (185/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.193013609 seconds)
    (186/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075427303 seconds)
    (187/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.088194601 seconds)
    (188/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.111880918 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099549332 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120402278 seconds)
    (191/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.08402604 seconds)
    (192/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111510825 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.07605621 seconds)
    (194/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.096158167 seconds)
    (195/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.072179874 seconds)
    (196/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167309851 seconds)
    (197/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075021802 seconds)
    (198/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.178232217 seconds)
    (199/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.13776616 seconds)
    (200/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.085869226 seconds)
    (201/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.110269021 seconds)
    (202/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.11194872 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.109157746 seconds)
    (204/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084116 seconds)
    (205/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.083838088 seconds)
    (206/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110346846 seconds)
    (207/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.096966314 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.11224749 seconds)
    (209/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.161429056 seconds)
    (210/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075985344 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.114481171 seconds)
    (212/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091949626 seconds)
    (213/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111348629 seconds)
    (214/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.101445451 seconds)
    (215/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.098831778 seconds)
    (216/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.074062862 seconds)
    (217/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.088993943 seconds)
    (218/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.09708815 seconds)
    (219/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.076093508 seconds)
    (220/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113274347 seconds)
    (221/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.071419582 seconds)
    (222/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162546413 seconds)
    (223/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093022489 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.114175143 seconds)
    (225/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075697532 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.115573523 seconds)
    (227/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072682165 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.113515555 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084448719 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13253972 seconds)
    (231/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091237381 seconds)
    (232/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.080733869 seconds)
    (233/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096641909 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.091342003 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115459127 seconds)
    (236/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.084113343 seconds)
    (237/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110360969 seconds)
    (238/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.133810125 seconds)
    (239/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121620455 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09054348 seconds)
    (241/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.095731424 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098422571 seconds)
    (243/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.098560863 seconds)
    (244/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.096197514 seconds)
    (245/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111486462 seconds)
    (246/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.08999872 seconds)
    (247/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.073036235 seconds)
    (248/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.096509574 seconds)
    (249/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.109412492 seconds)
    (250/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.131323087 seconds)
    (251/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083691954 seconds)
    (252/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.098657571 seconds)
    (253/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089549578 seconds)
    (254/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.180058389 seconds)
    (255/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.078094465 seconds)
    (256/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11432624 seconds)
    (257/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.152533099 seconds)
    (258/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.090470409 seconds)
    (259/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.101274215 seconds)
    (260/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.071961933 seconds)
    (261/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075243209 seconds)
    (262/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.166044274 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093999409 seconds)
    (264/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.097330376 seconds)
    (265/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092301925 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.114199737 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.083967731 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.114434561 seconds)
    (269/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185570122 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084603171 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12228933 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.162063101 seconds)
    (273/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.099453799 seconds)
    (274/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.07216235 seconds)
    (275/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.09865464 seconds)
    (276/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.090108721 seconds)
    (277/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092873455 seconds)
    (278/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.106994915 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090201775 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.110024727 seconds)
    (281/286) benchmarking ("sort", Float32, false)...
    done (took 0.172256746 seconds)
    (282/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075925692 seconds)
    (283/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.073805638 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.109543394 seconds)
    (285/286) benchmarking ("sort", BigInt, false)...
    done (took 0.224275045 seconds)
    (286/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.084557674 seconds)
  done (took 36.493704511 seconds)
done (took 37.416325522 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097753329 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149563119 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094762248 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138479903 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097675538 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.124394106 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092329918 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.12090427 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.097672748 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123015481 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096626504 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102453283 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094919474 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118933884 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096010812 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139287291 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.09686199 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.11464252 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.087162365 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.109704623 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.085985027 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111290435 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.087708053 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102616693 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094636597 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116143744 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090193525 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118672571 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087569042 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109019275 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085498924 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.114974961 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085581565 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096753051 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.113362523 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.086392119 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119323421 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093796627 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113201018 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088366725 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115438621 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087120562 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114525961 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.092907265 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.112487931 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.086317378 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.111336631 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098391824 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141679572 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088187573 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.117580315 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09372961 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.119008488 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.090951356 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.085122597 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.110878778 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.087956965 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140020698 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.110792442 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087859696 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.09189213 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.115420794 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.085771301 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.11163186 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.087279086 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117882405 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.094480161 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111203804 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094339904 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114205402 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083090356 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.111713214 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.086234736 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084786139 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.11699219 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094278556 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.106906588 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.087540631 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.115252636 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.088708388 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10950833 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085682999 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.089134916 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11160319 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085963569 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102820417 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.084706039 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.113482503 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086827861 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.111505865 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.090417008 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.114302343 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088285238 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120219609 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086279338 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.113009908 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087456606 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087534531 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112787441 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085785124 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.107270493 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085861126 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.116025898 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.084420582 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.111610871 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097205637 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109349385 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.089871143 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08603857 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110491939 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124437666 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.093297068 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087663181 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112812073 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084799843 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11379832 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08478681 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109343561 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085964747 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111447144 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.088903636 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11191331 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086027365 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.114241856 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.097724818 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.084102712 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.109775266 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08600244 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111466967 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.107481155 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111771789 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.085573716 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111485884 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08252115 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08551081 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.10932454 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.090364039 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109555535 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.087501324 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110935493 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.086793088 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.113217294 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.088190652 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112029524 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085104697 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.105147539 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090427494 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086464255 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112997667 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08726005 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111850568 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08325496 seconds)
done (took 16.378649842 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094893321 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185480632 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145735977 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.147511634 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.120615017 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.129607709 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123368863 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117849288 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.120298998 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141097621 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.143835795 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108908849 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148731283 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.094371664 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.129615014 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.119414058 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09333242 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.128822852 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.15271388 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.114319471 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145098383 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120211345 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.115011221 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138872731 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117702579 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114755453 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.123065118 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094840439 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121368874 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.135929029 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.11033969 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.121996399 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.095922677 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131134819 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101781371 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119030199 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.129514924 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090168081 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.119750129 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.09387893 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133912006 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105575029 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.115366556 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.126521077 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094750841 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123141216 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093595176 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117842628 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095019639 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113561919 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100540673 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140562834 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.120548493 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.096710438 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.12278142 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.094854133 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121799788 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122503661 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.096689586 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122572768 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.095055364 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.122829998 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.099742626 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.136603379 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.119511533 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.095904563 seconds)
  done (took 8.79577339 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110417461 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.147120972 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100528601 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.125935464 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.121519279 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082855093 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.083409058 seconds)
  done (took 1.755944157 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084999404 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139150042 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116881329 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141547708 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108678314 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.145970281 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126806528 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085010133 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133587822 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094713729 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136991203 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164748529 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085697446 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12265714 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11909507 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.109664182 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118993207 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109764124 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092645728 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142058771 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114647488 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.105853748 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.123233758 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085808012 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.133533522 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.087068535 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175637595 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121286336 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084758424 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091381908 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115193623 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.180812561 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106004884 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.120502663 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0833256 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137552378 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.132262205 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088856596 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.134125106 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.090095093 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.131184858 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091849461 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117838386 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090478331 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117733068 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100147694 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121266123 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.094129353 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114750734 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113456397 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.121650835 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.132425724 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.086766477 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.089424583 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.120624657 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091199637 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124268238 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089636426 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.137970009 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117225151 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110840563 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135911842 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106923169 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136791854 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128144362 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10667968 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.132000741 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.089459434 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118248245 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092649483 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13707114 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.0891188 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.122098334 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101239291 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120695819 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112552702 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138507324 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089320928 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.122857631 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089383419 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113550137 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086498666 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.13888296 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088770424 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113113435 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102848395 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123641651 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090545974 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114257385 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.133114195 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.089771944 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.12244831 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096137117 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11591645 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100286397 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.139937823 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.122064692 seconds)
  done (took 12.056532055 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089101946 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087647457 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117739388 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088129238 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.113059009 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087719529 seconds)
  done (took 1.571909668 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116447242 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115782444 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102155783 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118869673 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.129238429 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135549653 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135728785 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095488117 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.131614381 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.100546478 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135889584 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112263901 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.140776079 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119533078 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109753495 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119453733 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.111016569 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115968245 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.100170426 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115904184 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.10391338 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119004342 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089805807 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134857159 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.0943614 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120312816 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093643279 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126827143 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.100476312 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121213566 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118089122 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.093604117 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.119240195 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.095876775 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136043324 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093576201 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115229047 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.095726645 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121419886 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.09424017 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.138129636 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089987747 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12529942 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096457528 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122521617 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.094201587 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121700557 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093329377 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136420519 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096319472 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121683562 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.093663841 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119311026 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095958317 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120263679 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122601575 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095494489 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136724568 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.093340208 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120402652 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090726044 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122010367 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096067397 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120677172 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094977985 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12228866 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093525655 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115572562 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09053845 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119565419 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095610146 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116091407 seconds)
  done (took 9.059499236 seconds)
done (took 34.214844837 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.67231669 seconds)
  done (took 1.660149248 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.819488867 seconds)
  done (took 1.807621539 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.922075877 seconds)
  done (took 17.937608996 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.463924498 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.556541958 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.966650951 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159384112 seconds)
  done (took 3.136553644 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.957490032 seconds)
  done (took 1.971784679 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.29064635 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234172622 seconds)
  done (took 1.52120609 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.809089121 seconds)
  done (took 1.814455538 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.503952886 seconds)
  done (took 2.503201966 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.341333077 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16998298 seconds)
  done (took 1.522601474 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.562707225 seconds)
  done (took 1.572769254 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.844975891 seconds)
  done (took 15.852890661 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237919656 seconds)
  done (took 1.257264391 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291832286 seconds)
  done (took 1.300825325 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.523267315 seconds)
  done (took 4.529548733 seconds)
done (took 59.38588233 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098454106 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.100101265 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.126408156 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.097179774 seconds)
  done (took 1.422881765 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102165446 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119449943 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.097531457 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11937688 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101126847 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120172863 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.092895944 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.163863494 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.093111513 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.121817311 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.094224352 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119257586 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.095023203 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120207067 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091328311 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.121613671 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.097382191 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120629605 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.095516267 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120750015 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.091588495 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.12109333 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.09631782 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117960266 seconds)
  done (took 3.651493533 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097491571 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090444046 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.119410295 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.09016677 seconds)
  done (took 1.414713284 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10029486 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132077202 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105630269 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125635836 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.107125215 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132345247 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.089412285 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115262419 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.091534857 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12589146 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091334349 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.136925091 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105313457 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.111779267 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101521718 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112782095 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086009183 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132800602 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098768724 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12595441 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088604829 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124587073 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096480928 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129971111 seconds)
  done (took 3.68784312 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170196408 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127887597 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138665883 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09504362 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163804611 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.114690666 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114555272 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140112311 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08796405 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.125216542 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.091778911 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166646735 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.098099061 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11750679 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.088223863 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.121979263 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097873971 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123929002 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091423112 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128109696 seconds)
  done (took 3.418598766 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098136447 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.090325748 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.110970988 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088133271 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12256591 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092517699 seconds)
  done (took 1.623966725 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.085727609 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084418046 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111834276 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.083571013 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115246901 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084608279 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083725804 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111356671 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084757712 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.110761442 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.084606284 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.084045346 seconds)
  done (took 2.15105611 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.375229119 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.11379617 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.090524762 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113007264 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.0928881 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114466829 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101367063 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.115171929 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117988336 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.114484675 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.087411302 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.1179073 seconds)
  done (took 2.579568189 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204100896 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093766295 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259462276 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345934995 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152894231 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161886121 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276582757 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160526738 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1808269 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134360477 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190374737 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12759631 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150388416 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175569691 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13701097 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.174752166 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171591137 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196825347 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118854573 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22615067 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16094878 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164797207 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148729312 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148027243 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135717858 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156153227 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.090973909 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126194749 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170120823 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167593682 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171266515 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147609207 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109536313 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222649141 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209532399 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176426661 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299913235 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129429616 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.188691551 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.181268268 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221603067 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137573746 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1920344 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151981962 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126832664 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177469268 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127244794 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177230146 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128688635 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138370699 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181291386 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173821783 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.177621021 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133968761 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301770586 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143542738 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116826544 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17905157 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182850957 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184784904 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164581458 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117102612 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183005527 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176905125 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175433364 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143076479 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.165307518 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095494186 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17044707 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1907079 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173337247 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160285559 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.209681738 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10481161 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161472531 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166765992 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149783596 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175718846 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158263808 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.09233479 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148013871 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134312731 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098232632 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.185351178 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093712172 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225202861 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105062144 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.187118166 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200357544 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156948227 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158803873 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162792715 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16220509 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115974623 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.117699049 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144337733 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155696172 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126466217 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130384693 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153924513 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112249529 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125034709 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14960594 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.093098503 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15778386 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132863234 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162786577 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133233714 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126665054 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161893183 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146653992 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126603284 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16687297 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18108409 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130900326 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129208927 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189674669 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126824819 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.1312632 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17043849 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182120148 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.163841834 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134439822 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165482245 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188511225 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11038439 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185426442 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13759308 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130690554 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.119361648 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156672714 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152597641 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154612282 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099418285 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.149984334 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188064065 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124867646 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10593388 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170922903 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124698411 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126841799 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111656434 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132809293 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111064071 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144395508 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134017817 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153663597 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128627295 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150534872 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155951414 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139283109 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187974736 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130544347 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.156976075 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116134809 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117774008 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.175367713 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181259272 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098746496 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193033227 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.165436092 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221552473 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162770821 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101629806 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174188358 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126695414 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.089248328 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164376579 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159446359 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159250897 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179779662 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189939734 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163700772 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150121604 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146488967 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162906 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170648364 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153834091 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114881531 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159367878 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163937328 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120190098 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094027791 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124461307 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111415222 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12854051 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102234346 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205019685 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132921455 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212678618 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157209337 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111001536 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17756219 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123946472 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162020317 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.169248843 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108486383 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179657012 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177642686 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164382754 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14055412 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172902757 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.090274447 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121977989 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131028586 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135201108 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129965905 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131232696 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112195673 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179280653 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171377861 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147969249 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224212415 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164742572 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186353189 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.092001061 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161476504 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166923526 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127216194 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179709133 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130047814 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.128878853 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172613911 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139499923 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184614299 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160880308 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166106316 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194583297 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.155385425 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128028884 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119366308 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161605101 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138722512 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163511994 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115126868 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132973328 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152481871 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102812629 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122788635 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176997724 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142142383 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177286711 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153995046 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17032143 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124018571 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112882936 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158123114 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142753361 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.087561248 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166790524 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182487335 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141096684 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155589998 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170821579 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1266827 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.279954859 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210081151 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180420553 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104237642 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140685796 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158390034 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155978825 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159335278 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145880472 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140690651 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177053975 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155013595 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140076502 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104312121 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145434132 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147465283 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.120007965 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.130439862 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150378995 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.111864642 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20992125 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110973298 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154780033 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162735666 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14501688 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119276201 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140921646 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198038947 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157250124 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175713156 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152673592 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.160875023 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19708657 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09405926 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127492399 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.096003711 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175160436 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131332989 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130627419 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.209508054 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194754435 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156261232 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163950685 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107027623 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118946777 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156711212 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118756253 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222890623 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11083337 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.131235439 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185786494 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.148747988 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098981771 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160396584 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283348022 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140681944 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171313342 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.086597407 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275088948 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119527971 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100988534 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157527053 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167565308 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136322566 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154631143 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158501233 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142143624 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157052629 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134740938 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185314922 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200522445 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16794609 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171850102 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.139849396 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126163447 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159720098 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171223349 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141108797 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142455707 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129979709 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178194217 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.212143765 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102792702 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160699322 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161115554 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157574647 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170560834 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102585181 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224338884 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100310216 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164196321 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138971425 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092274345 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155285346 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.182058016 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130795644 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172368033 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155089464 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101025943 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124295079 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148769821 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127058022 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138937235 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126678641 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175889993 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094240083 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160276893 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17666888 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099714106 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151734684 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14341871 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134555883 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111740247 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143744641 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133467501 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139612007 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175348767 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128256666 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173286744 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175404649 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161341275 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157209687 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112827015 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664822192 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.096896355 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177825548 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144081895 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18052967 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145779291 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165385313 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157808191 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117373225 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165568317 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14662223 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219226524 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164244518 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155465992 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099595435 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143534659 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140760459 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.099757911 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149637916 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161201675 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110267183 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134343607 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156450605 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141399258 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.112538946 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134949901 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180629786 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115519883 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207084525 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146953015 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134881224 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165102921 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170751277 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128876107 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158691318 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1684516 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110374977 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148837756 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128497826 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103913533 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178212018 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092965274 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15694604 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158923247 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157525516 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160726099 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.103093417 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157038393 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140792946 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159615022 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099389342 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152996616 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15459365 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131067181 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.09754871 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152111632 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15749064 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155117572 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094816452 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.144099881 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174864532 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123271351 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130798036 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281759855 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127213085 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215264244 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.119459253 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132788818 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112214144 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152015765 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152306675 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156480832 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.097422162 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130111584 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.12961001 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.175730265 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.12358211 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155500169 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182688483 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15831684 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197124059 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13378322 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.234653369 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136658942 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153319753 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099166663 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128346877 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111951708 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131859149 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141086252 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188912002 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176640694 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149453599 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.112329788 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12557158 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.09606916 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132247723 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158344919 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123885991 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155482426 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142651778 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.087892913 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141025647 seconds)
  done (took 74.288109705 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145492275 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.128561777 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145826473 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.193173731 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163889458 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239709217 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.20320835 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223131763 seconds)
  done (took 2.553241085 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.097687278 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154789642 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137109632 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121030867 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.089181708 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.329098336 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.133912696 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120621739 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.117555819 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.134152451 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.11363977 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.531548206 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121442247 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.119830259 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.084706071 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.111576142 seconds)
  done (took 3.614827514 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.202441544 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.531873368 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.994285387 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.225895001 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.220263666 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.170693808 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.721718196 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.179593812 seconds)
  done (took 12.358007849 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118316954 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.11000649 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.160109156 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.160492954 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.11654434 seconds)
  done (took 1.778724975 seconds)
done (took 115.547018822 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092784615 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.094577162 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122200894 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096682722 seconds)
  done (took 1.504960317 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.107184585 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078744388 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109500061 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076745056 seconds)
  done (took 1.485427009 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.41815706 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.076549198 seconds)
  done (took 1.641297331 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112881072 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131679008 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103719335 seconds)
  done (took 1.467734132 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099817832 seconds)
  done (took 1.216457711 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.095879656 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097174746 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.139152085 seconds)
  done (took 1.448705998 seconds)
done (took 9.879425175 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109611162 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.430870259 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.382869682 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13533167 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.690167233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.406108014 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.041062679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154000662 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16516538 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.08747502 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134037876 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.666802524 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.016886174 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33846893 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002486634 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.336678523 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699559489 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089973387 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124593928 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088960566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.049560115 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086683471 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117803507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09001653 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.696868969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.392581774 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116198117 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.350663433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114944607 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093928416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.37432839 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116462769 seconds)
  done (took 16.80540191 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093293952 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175725862 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095574284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118686482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.091931172 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117527728 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098635795 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.129452346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179169431 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087904488 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134443049 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.088017952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.094003884 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117786832 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107693352 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116738751 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090991828 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118732268 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095046004 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11830209 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107438758 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116068843 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090403421 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117660892 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088027018 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100489251 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117062174 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100757486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116773726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093828856 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119775268 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089584599 seconds)
  done (took 4.646912622 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138680521 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186770757 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.124180425 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122458893 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167641605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089735363 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200603319 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155713854 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181544689 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087755067 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134932638 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.088119662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153165855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088712181 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137526773 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08839399 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120045555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090517198 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124104318 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090511982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136666725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087741873 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118660143 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091028862 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11711291 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102857257 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088869359 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130124641 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116396126 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0951512 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092460663 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118118798 seconds)
  done (took 4.991931774 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095985981 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.096855422 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133733389 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.133764039 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090187168 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.095389694 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.125815655 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091633709 seconds)
  done (took 1.984277848 seconds)
done (took 29.54311588 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105916221 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093990417 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130872945 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100452894 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127487851 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101668316 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115923703 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099636209 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.128982809 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.097096835 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103155683 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116068997 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089078491 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115107319 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.100410377 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121638188 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.104508705 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097170415 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.137615196 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132648685 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.089729629 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099818774 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126742333 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.107834286 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.138548564 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.137404411 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.104677654 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.093963462 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118708304 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.089922934 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131582106 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111320129 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12003121 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106082067 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122315757 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092836011 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.088409918 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.118865639 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.104051092 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.128631825 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.094489694 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128463526 seconds)
  done (took 5.785864105 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.115642117 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.161446094 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.089174474 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.118699146 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089631033 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.157238251 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.124384052 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.118843255 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089479633 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.142847148 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.113893897 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.119069034 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.089070496 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.118501464 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.087865919 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.089535618 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.140845451 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.141786725 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.119961642 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.148760354 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.163327829 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.122112084 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.15369226 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.113048886 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.160390409 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.154154393 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.110506025 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.155107815 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.145562429 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.087714686 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.148236325 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.12102874 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.118722237 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.08897814 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.158827072 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.124739853 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.147030652 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.158887716 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.120017307 seconds)
  done (took 6.054979429 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.096536306 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102180412 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138839604 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182495164 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.126421678 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.127332492 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098786365 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13685843 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105567711 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118247695 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.091338031 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149317255 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108447661 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126352136 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.08958772 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102407389 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137924994 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090362344 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122842029 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107861122 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136663444 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102929656 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13123907 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.099510056 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117826591 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096964256 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120959657 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.103842429 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123328978 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096426222 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121186409 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.092797152 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121528962 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.100303517 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.09229372 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125338355 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140247524 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097537596 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.09761254 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119639311 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100415938 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122960382 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.110611588 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.157753169 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.08881909 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125900295 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095305742 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126533782 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087278727 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13566522 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098960925 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11794998 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.104025361 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118657233 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088000289 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132390729 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.09027537 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09207949 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.125698171 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095464962 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138059567 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093884674 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133498966 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.090805745 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125041471 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.089341972 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088872769 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.124283195 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140162361 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.092759541 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158582799 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.089356644 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123765788 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.09636487 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.093905582 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127981988 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.089249844 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133466395 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099182422 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123492928 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.099887062 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.121878855 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.092961751 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106453067 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.13445425 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125612662 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094908087 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125439875 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092949358 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090381976 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131680856 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092511726 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.1229316 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.105230175 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119530543 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091848825 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.1256493 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093733041 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.087666056 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131864385 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.093813957 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117836553 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.0992131 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119253635 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093020588 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12722422 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.092895476 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118153564 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.09355162 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124325107 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088782768 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.091466325 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123192232 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091502751 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131593025 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.096753523 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121968744 seconds)
  done (took 14.218273519 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.233966797 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215566448 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190579499 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.298958606 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.109686651 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145490138 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211440178 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.163828433 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089185033 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158978544 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178339589 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186569513 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.17596256 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.194377599 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171399523 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.089610462 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.138572231 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14077639 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.244786716 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.263285486 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.139206822 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103278904 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161529849 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159919578 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107765144 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135071082 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141996301 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.109635682 seconds)
  done (took 5.805138166 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106533778 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154596332 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096914561 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145111166 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147046601 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090077965 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.094497937 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120296233 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102966949 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135233796 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091279686 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126593208 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.095403434 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130496293 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.089520065 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.129190017 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.099684331 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.129128534 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.092332689 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.123100204 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.102089131 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.138606388 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.09394902 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12191668 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105397479 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122092013 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091992138 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141357265 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128924515 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115267161 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.116897032 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.097874031 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133817358 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.089979014 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.092121403 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.122288873 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.092124936 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.121871431 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091199798 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087098773 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119558481 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.080833201 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122222526 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.104691732 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126402307 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088613174 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124852367 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.094419381 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127696742 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086280428 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.091855991 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122519852 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.093758144 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130692683 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.092656515 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127423793 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092943588 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.122905052 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098189142 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.122727183 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086129735 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090705574 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126330834 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094118922 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127714545 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.09590561 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.121502793 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091560329 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.124359037 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096439086 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.091812813 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128198114 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.086182721 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.121228132 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098973834 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128579241 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093332 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121741967 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092002432 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.089257508 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.108898481 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088710775 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.107181073 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.094490666 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088291407 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121043728 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.091766473 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124778878 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136470962 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098555973 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096471543 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120188109 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092384396 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124504477 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088152304 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124440172 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.107145792 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.1395437 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089040915 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118202934 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105077556 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.122023353 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.088144902 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.082098015 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130935226 seconds)
  done (took 12.631599562 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129786069 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.17059406 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.120779313 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.109796563 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154991564 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.131409538 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128873682 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.096488987 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.121657292 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.10889962 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124459226 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.099193275 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123232596 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103954867 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16285439 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099372375 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121427884 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103723512 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125463904 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.143224119 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.140017431 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.159459176 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.130231442 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124352795 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095841092 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.157999092 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164646422 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10334778 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132784226 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131226598 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134114162 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164655705 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.131495932 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.125773788 seconds)
  done (took 5.535142874 seconds)
done (took 51.157430343 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.274880785 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.444174805 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.217032368 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.222706187 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.244269251 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.241070966 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.214279944 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.412193826 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.99109035 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.215824104 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.213278037 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.214867675 seconds)
done (took 28.054030469 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.307528004 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.385056678 seconds)
    (2/2) benchmarking "String"...
    done (took 1.543268642 seconds)
  done (took 4.073725641 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.21471262 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.216361479 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.462706127 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.216406328 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.234498175 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.231476484 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.225264538 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.22273098 seconds)
  done (took 15.953930085 seconds)
done (took 25.695470495 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.303905297 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.411359064 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.470716496 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.237573375 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.235622202 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.219973359 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.221839594 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.266823515 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.225182785 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.216131848 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.222109212 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.481275006 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.25033231 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.595866735 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.220757417 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.231180685 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.235091835 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.443309609 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.227904694 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.269048841 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.204581065 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.226947016 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.230922357 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.236562181 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.230351594 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.232503951 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.244410589 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.217690332 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.399673978 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.221143315 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.258392135 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.220311859 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.235514851 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.225980755 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.328616642 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.240428936 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.388017009 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.226699229 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.212307144 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.218677054 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.399734657 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.626366533 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.2200951 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.232980332 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.218321514 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.290650619 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.210228802 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.941655186 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.224647949 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.221618977 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.222250505 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.595027929 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.22331711 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.220656771 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.228698971 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.447091685 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.248902831 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.2468863 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.255462027 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.222935593 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.219900021 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.218149113 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.23694549 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.234122505 seconds)
  done (took 144.539341412 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.219986708 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.224726681 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.224304614 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.243977497 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.222744644 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.225170374 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.222728554 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.222219334 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.226590304 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.254775781 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.219705459 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.224954652 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.226078974 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.200172219 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.225526433 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.242755191 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.225211856 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.241729933 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.241407909 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.220747677 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.245808848 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.222399701 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.225950301 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.22764621 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.26161851 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.297526374 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.253935882 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.248278843 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.218611918 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.220980618 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.269190326 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.23020186 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.853065426 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.07262321 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.236570931 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.246176218 seconds)
  done (took 81.036503611 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.221334498 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.223424123 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.22324679 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.255481632 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.221155092 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.809471409 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794461624 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.93158073 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.339827078 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.548645283 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.49349095 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.221863511 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317689778 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.235517694 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.22387931 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.23848611 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.249355544 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.223593954 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.223207611 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.811832881 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.24144498 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.356969165 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.403998177 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.24011906 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256639573 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.621502539 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222956367 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257475856 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.473701349 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.559528765 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.271119283 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.223103305 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.223543949 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.58136033 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339579955 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.22614199 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257045756 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.224082754 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.507825404 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.223539714 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.225081705 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.22892929 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.884352225 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.224067923 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.814698065 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.228220241 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.164208551 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.225389409 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.224526869 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.147492349 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.860336826 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.224401731 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.224453216 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.226596603 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.226330449 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.225120201 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.227381441 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.259010277 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.124578089 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.323008007 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.225229561 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.229176312 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.258969871 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.223752447 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.225932717 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226359616 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.46228182 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.282866336 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.337697719 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.396034859 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.818301056 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.22983579 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322655287 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346751835 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.227634916 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.225524399 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.227241461 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.22590789 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.337501348 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.226076472 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.649098534 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.403506858 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.243007307 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.559354207 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.323732745 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.226583232 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.623769153 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.230049648 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.227240196 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.971860527 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.22754404 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32609279 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.227209437 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.230047634 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.226153267 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.651576107 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80088004 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.481783752 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.230614518 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.4441349 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.231221562 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.665803712 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.790839464 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.90294666 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.229333229 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.344802713 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.406571861 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.246309355 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.227883942 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.55914775 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.227156538 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.286529224 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.228892183 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.626766772 seconds)
  done (took 369.299353313 seconds)
done (took 596.020953364 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.860027359 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.85559277 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.964572383 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.846246004 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.808577278 seconds)
  done (took 10.491528317 seconds)
done (took 11.648085032 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.423909285 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.424959909 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.295804526 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.422479698 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.758178951 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.442848556 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.414855702 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.254543169 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.34182015 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.318412851 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.335795745 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28926919 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.266168056 seconds)
  done (took 19.14560958 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.569261151 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.22956032 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297391906 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.564349971 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268787314 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.572327094 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.436236439 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.248255888 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.459377364 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246840457 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244541301 seconds)
  done (took 18.297730864 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.612523061 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.232014825 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29899558 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.58861464 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.271166204 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.603977361 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.44295775 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.262296585 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433789547 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265178214 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2470723 seconds)
  done (took 18.41803241 seconds)
done (took 57.01885919 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.269482513 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.402155757 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.260107296 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.243657157 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.237242439 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.241038034 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.24394023 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.241122556 seconds)
  done (took 11.297679446 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.239873846 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.239926215 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.244373269 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.238677678 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.242069372 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.239180468 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.241837793 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.239953029 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.239843795 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.242450855 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.244603059 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.240495484 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.239714428 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.241885817 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.24148739 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.242844745 seconds)
  done (took 21.017957418 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.239032286 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.242858772 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.242079467 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.241106301 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.240095114 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.241403075 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.240840961 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.241271004 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.240893497 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.242412406 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.242812371 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.240562446 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.242598702 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.238683556 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.240679706 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.241332896 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.239965134 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.241478288 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.244789015 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.240061561 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.24100688 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.241065708 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.240940028 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.242630236 seconds)
  done (took 30.955263062 seconds)
done (took 64.430912728 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.23425061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.247989472 seconds)
  done (took 5.644596821 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.29985292 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.302236944 seconds)
  done (took 3.764889747 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.242912384 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.245050545 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.24586153 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.244988963 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.244002468 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.246509486 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.246298642 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.247106961 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.24327689 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.244998379 seconds)
  done (took 13.615226563 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.24183912 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.245489211 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.242279374 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.246848083 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.243146536 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.242662086 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.2428791 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.245774657 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.24747757 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.241876504 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.244534804 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.242739191 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.246293516 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.245293453 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.245903405 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.242918394 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.241609586 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.242241587 seconds)
  done (took 23.55519564 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.257880643 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.26331648 seconds)
  done (took 3.685494433 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.371830018 seconds)
    (2/7) benchmarking "second"...
    done (took 1.285003589 seconds)
    (3/7) benchmarking "month"...
    done (took 1.364110831 seconds)
    (4/7) benchmarking "year"...
    done (took 1.339843755 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.286697809 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.264803489 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.285234855 seconds)
  done (took 10.362742626 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.245508804 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.462589381 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.574254524 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.827015096 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.248845683 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.251956526 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.111572771 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.251544183 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.251246353 seconds)
  done (took 14.389783352 seconds)
done (took 76.181491265 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.240874803 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.253793636 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.24537275 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.251018545 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.582738746 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.260832212 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.238247622 seconds)
done (took 16.23782796 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.237044565 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.234301879 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.231737398 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.248978441 seconds)
  done (took 10.116951594 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.237363989 seconds)
    (2/2) benchmarking "read"...
    done (took 1.555635605 seconds)
  done (took 4.958556978 seconds)
done (took 16.241935869 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246401986 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.249514506 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.246118938 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.249566665 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.24845958 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.244986416 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.246903743 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.24807255 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.25035902 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.247640315 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24669056 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.249152725 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248202327 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246494348 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249860111 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.245912978 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248733776 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244603613 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.250437928 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247139783 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.246908894 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.245800478 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.245324057 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.24568186 seconds)
  done (took 31.105653353 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.246433845 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.245477376 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.246822091 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.247524814 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.246086449 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.247952516 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.246227214 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.247272334 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.248663394 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.25252793 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246952693 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.246820759 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.24809378 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.24791562 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248523666 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.245831716 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.24903266 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245955574 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248441277 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.250161057 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.25025667 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244973618 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.248296695 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248230723 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.246621735 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247116059 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.247841689 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.24720324 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250542382 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.245410516 seconds)
  done (took 38.59920818 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.252743293 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.256169465 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.250197205 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.25094857 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.249392167 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.247547146 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.251347771 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.251373634 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.248252836 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.250038156 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.249175479 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.249182553 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.248855089 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.252658239 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.25249948 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.252282751 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.252373721 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.252268111 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.252561477 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.250138172 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.25145466 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.252161579 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.25222992 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.251569458 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.251722797 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.251276668 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.253794732 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.25199875 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.251688827 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.251106722 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.248778894 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.250217951 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.250588435 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.251164537 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.251450343 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.254772047 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.256692003 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.258613542 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.251975249 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.251770909 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.251632178 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.251999016 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.25104027 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.248605072 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.250218823 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.252289819 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.25206694 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.253636278 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.254421426 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.252189548 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.253605038 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.251280029 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.251955255 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.252062966 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.253134831 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.254144555 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.256693128 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.252846874 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.255670029 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.255615341 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.256142725 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.252736072 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.256582569 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.253002171 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.25573156 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.253343126 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.254509745 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.253517044 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.253774628 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.256723822 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.255572551 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.258797309 seconds)
  done (took 91.35428413 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.252897524 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.255442056 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.25541735 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.253650768 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250009101 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.254335518 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.25252443 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255859061 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252309344 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.25341033 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252640785 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.254146184 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252565303 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.254727186 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256049844 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.25492925 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.254704499 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2548595 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.257200081 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254940027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256625118 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.253026244 seconds)
  done (took 28.768537401 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254081632 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257708367 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.253095529 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.256892515 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255077517 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254009758 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.255661743 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.254843823 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254141631 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252137394 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253925076 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25564932 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256249906 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253628848 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255587409 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.255945244 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256779686 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.257532639 seconds)
  done (took 23.769364851 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.255487176 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.257111128 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.25605381 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.254294734 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.254226064 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.258118633 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253125074 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.25862859 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.255563435 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.253448306 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.257328731 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255381711 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.256901317 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254443514 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257241449 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.256147594 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.256415255 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253339751 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255752514 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25356107 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.254821921 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260281889 seconds)
  done (took 28.804999357 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.256891334 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.256734895 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.256124649 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.253647557 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.257423874 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.254302953 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.25539633 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.252526013 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.25902353 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.26089106 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256254327 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.258791159 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.254101735 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.254658417 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.259667279 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257812446 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.260446037 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.255252795 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256635644 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.256863938 seconds)
  done (took 26.310033418 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260079393 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260987349 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258488818 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260775232 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257585946 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25918141 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257864998 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.258550425 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258715905 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.257670203 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257979368 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258166645 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257027673 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.255919066 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258703611 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260765162 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260283708 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260176388 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261157912 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259061895 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.260290068 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261312827 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259088543 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.25681667 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258400478 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260851779 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260950192 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256912548 seconds)
  done (took 36.434711428 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259049842 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.261323239 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.258043411 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.256376848 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.262310073 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.256151972 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.258858073 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.263316118 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.260523088 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.260936531 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.264729203 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.263624895 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.262755274 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.264412797 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.264249219 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.261744243 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261523458 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.259698738 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256142645 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259588886 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.261704533 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262925072 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.263374834 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.260806874 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258040238 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.262596794 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25828903 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.260305083 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261768707 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.260146939 seconds)
  done (took 39.006009369 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.298447689 seconds)
    (2/2) benchmarking "in"...
    done (took 1.305904154 seconds)
  done (took 3.784755621 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.25687894 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264376951 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.263467929 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.260815054 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.258149578 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.262430847 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.262768094 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263337948 seconds)
  done (took 11.27143319 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.260928955 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.260943742 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.261902732 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.262108195 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.264904406 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.264647537 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274304368 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.281440395 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.264183876 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.262443408 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.26969799 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.27015444 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.269745348 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266157098 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.265031572 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266504765 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.266445224 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.262603187 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.264494358 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.264449598 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266210398 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269945471 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268953995 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.265854247 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.266679378 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.277542638 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.272306328 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.2657135 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269536959 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.269876602 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.269010226 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.265045731 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.270680525 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.262253229 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.265979476 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.267890851 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274388228 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287097943 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.272813791 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267913809 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266669986 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.262841141 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.267270123 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.266671358 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266507203 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.266835217 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.265420582 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.26388534 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.268385369 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.270649115 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.271218632 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264775974 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.262141083 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271949691 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.269237223 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275356322 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.284708603 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.270352533 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.278307284 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.278307162 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.278260328 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.274364549 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266608614 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.266427752 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276738524 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.28897309 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273882427 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.281333662 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.26577275 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.26717674 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.275150795 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281426974 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.292395569 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.264225909 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265618236 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.267617932 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.267267962 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269434117 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277367009 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.288613674 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.266482096 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268432097 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279712011 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.294474346 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.269149312 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.267147663 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.266282699 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.266627686 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.268150431 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277712439 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.28494702 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.266644045 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.267253268 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.269868696 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.271680736 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.266724687 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.26750577 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269590926 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.265934987 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.269077365 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267847593 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275212683 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.27814995 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268423795 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269740873 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.274922583 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.26969009 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269292289 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.277907191 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.269240328 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268711237 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.268696857 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.27595828 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.267958674 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271648158 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.276338039 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.268263954 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.268716815 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.270195372 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.27253551 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279388666 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.293755804 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.26929249 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.270264114 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.276471457 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.28328082 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269562752 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.274262851 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.271289808 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.265274483 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.266838204 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.275798262 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.274225127 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.271488213 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271015815 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273463733 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.267859655 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.271486948 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.270841926 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.27203355 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.273475139 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.273071342 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.2740191 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.274112249 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.273345271 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.273242262 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.27888851 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.274650748 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.27253869 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.275173034 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.270811923 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271627792 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.275041914 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.270850652 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.272589458 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.272790114 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.273812784 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.272145442 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274425168 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.271661417 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274988147 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.273250429 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278857874 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.272894607 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.278432847 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.27564468 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.271139976 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.27361612 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.274546141 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.274451738 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.277082072 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.274340572 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.277735423 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.279148093 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.272723491 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.27130433 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.276095404 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271289178 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272247716 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273087098 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.278752199 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.28213178 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.274256076 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.282899457 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.274438082 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272328166 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.273130544 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.273636052 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.2724876 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273552958 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.281008994 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.281487631 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289257509 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.299678284 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.278346474 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.277803945 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.276789423 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.27851167 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.279238277 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.274603373 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.276507211 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27375049 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275976971 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274618402 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.2788197 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.27485035 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.275279541 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.276907717 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.274615295 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.273551225 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277353277 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.276937783 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277394895 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.274396814 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275852915 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275812067 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.278958259 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.275507298 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.275722606 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.277331811 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.2769875 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.276638883 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.285284842 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.275241173 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27908316 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279029398 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.27943364 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.2765347 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.277010291 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.279869448 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.280563102 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283897412 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.296263478 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.279210885 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.285728049 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.298193968 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.278321322 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.282650865 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.278146695 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.274317922 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.280607192 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.284353881 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.277141638 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.27720051 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.278100414 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280347526 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277488562 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.285249185 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.277289593 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.278557066 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.278429385 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.281571491 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.277557994 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.281076867 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.281215877 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.280734577 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280985073 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279875554 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.280431129 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280530319 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.279973249 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.27814286 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.277249451 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282877939 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.287629541 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.284310089 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.28128979 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.284546309 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.284013071 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.285753034 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.281176447 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.279200316 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.282953977 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.294081604 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.304656541 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290412156 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.285112833 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.281120023 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289873324 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.283967843 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.284366903 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284292067 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28233583 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.280912692 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.282315439 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.279459916 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281748747 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.282102174 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284234483 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.284190472 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.284434932 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.282482087 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.283628239 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.281893431 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.282431361 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.281684545 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.283717119 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.281984809 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.287557949 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.285776612 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.285826042 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.285130012 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.29208089 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.303532373 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.284966125 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.285468644 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.283894926 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.283250539 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.284029915 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.281380173 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.286370483 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.290389993 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.287230466 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.291757043 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.285475969 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.293868553 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.283275151 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.287246607 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.288560453 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.281960851 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.283165503 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.285141102 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.282686629 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.29240024 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.301432269 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.287066301 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.288510488 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283413026 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.284451458 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.284709622 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.282763882 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.285480024 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.284622762 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.294948405 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.308276723 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.290504381 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289009834 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.285882978 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.285108088 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.285764945 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.285712017 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.287933303 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.284166933 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.287707497 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.287233495 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.285397001 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.285757383 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.285785372 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.286899115 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.283356171 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.286430592 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.294534926 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.307350243 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288599087 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.287089041 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.295708811 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289250989 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.295059554 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.305073815 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.288820341 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.287426218 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.287368687 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.289458843 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.286620745 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.288481939 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.288075458 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.288268448 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.292007802 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.284913821 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.292564457 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.289927944 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.2877965 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.288153022 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299426657 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.308758218 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.291386479 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.290700659 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.285693629 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.289868564 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.291013695 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.286870884 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.287341335 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.291727159 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.299953304 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.296576447 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.289338861 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.286055396 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.289568277 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.287290958 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.289156566 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.289391073 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.287833035 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.289806631 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.291523483 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.288319503 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292887191 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.291423105 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.290711976 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.291981562 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.291233658 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.301042939 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.288161463 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.291053841 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28989921 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.289763468 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.290545372 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.291394239 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.288427994 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.292022528 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290123469 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.292316324 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295530163 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.296513002 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.292250346 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.289825266 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.29040377 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.289132198 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.292375594 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289354601 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.290113826 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288545057 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.291576835 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.289956641 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.292676428 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.289878862 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.292086871 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.29092348 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.29241583 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.294677483 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.297828608 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.291744047 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.286633539 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.287800381 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291978902 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.290211556 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.291358357 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.298956375 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297046039 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.300835123 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.29999116 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.293491205 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.293587492 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294852439 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.297935666 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.291212252 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.292172631 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.288521169 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.292992551 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.292380243 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.294077052 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291489876 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.298617629 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.292345104 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.290722537 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.302421694 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.315201389 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.290713852 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.295699668 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.297717892 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.291841148 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.288991171 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.293410393 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.293064604 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.300386029 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.312669997 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291480784 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296066522 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.292182052 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.292887393 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.297744292 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291424253 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.294340865 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.289725013 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.293173217 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.292182742 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.294140642 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.29005564 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.293131809 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.293014207 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.297224879 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.300483444 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.290821363 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.297340708 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.294364426 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.293574171 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29345721 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.295575015 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.292390125 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.288900395 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.294931644 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294619117 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.296277571 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.294572983 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.292286373 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.296159272 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.29467984 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.293119374 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.300280682 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.305768936 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.302853308 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.2926107 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.293187647 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.29636122 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.297935023 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.293024564 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.293470501 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296109809 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.297692093 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.293857137 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295192618 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.294693558 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.299870637 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.311406259 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.317753717 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.296144519 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.296163555 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298075522 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.297027436 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.292820181 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.297011064 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.299272887 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.300486797 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.302399347 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.295640741 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302820879 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.316180918 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.297120179 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.301196257 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.300571803 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.304222498 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.296687723 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296560076 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.293696343 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.30198617 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.313339329 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.297945047 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.306730251 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.327511048 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.314946219 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.300130841 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.296510534 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298283512 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.297700178 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.30104451 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.297695463 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.298025531 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.29730668 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.296313199 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.30032956 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.303520287 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.302017949 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.301074037 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.298604566 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.299811066 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.301740135 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.294757024 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.298432605 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.298183314 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.299750517 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.297154213 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.299264062 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.298072289 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.312977122 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.327991682 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.299180845 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.297730301 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.298103094 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.304180699 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.304736004 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.31091802 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.307715338 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.299327812 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.299704834 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.302178724 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.301702869 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.297118521 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.300760922 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.301395095 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.300835971 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.297045784 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.312572101 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.305158604 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.309462789 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.301934063 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.300130383 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.298247342 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.299508618 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.299065842 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.300676747 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.302910062 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.302963989 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303506871 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.300634216 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.301380281 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.305244742 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.30794239 seconds)
  done (took 766.981302597 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299408076 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300850837 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.3007131 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.299995962 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297733635 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298062793 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297954312 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.299574644 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.299531195 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.299164287 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.297054271 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29835723 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300302454 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.297964062 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29744279 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.297444473 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299536133 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.299177397 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.298095303 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.299717363 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.300372568 seconds)
  done (took 28.498257489 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.30071506 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.300528052 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.30122382 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300469136 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29981554 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.301820108 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.300187255 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302923183 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.304510235 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299891209 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.303158502 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304467469 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.301936174 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.300820059 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301101397 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304125612 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.303051807 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301332438 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.302114479 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299892168 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303895457 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.300953659 seconds)
  done (took 29.856802947 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.304567085 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.304919909 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.303153137 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.299201653 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.30330339 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.301860377 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.304159043 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.30266922 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.302839392 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.306936853 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.305296424 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.305610137 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.312217329 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.30844145 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.307583026 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.305893642 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.30406292 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.302894581 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.304674985 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.301845257 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.312507332 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.302148161 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.302144848 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.305481444 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.303754886 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.304853611 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.305109441 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.30544693 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.307317748 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.307663536 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.303030328 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.307634325 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.307214312 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.306179506 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.307634553 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.309997019 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.304440928 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.302720786 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.304574729 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.316592301 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.326896644 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.306659708 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.315252295 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.308201544 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.307707065 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.314568113 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.316484091 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.307950078 seconds)
  done (took 63.945623375 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.310374149 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.31065159 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.307084596 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.30902146 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.310777639 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.309894458 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.31074994 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.310915496 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.30627775 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.309118981 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.309544574 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.309008001 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.307764761 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.311242901 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.312026368 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.310971126 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.308823846 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.309109842 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.309862221 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.309383492 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.308069881 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.311252123 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.310734624 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.309922388 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.311168279 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.308513181 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.307946067 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.311127395 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.310264526 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.30984313 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.311368586 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.311611588 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.311681104 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.307395331 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.310524966 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.313988249 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.312779146 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.30956622 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.312922965 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.308633227 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.313914404 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.312744553 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.312790077 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.314590239 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.311257266 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.311141163 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.311471022 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.310653206 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.31128697 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.312182828 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.314745859 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.311338046 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.313232753 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.309835036 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.314792687 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.315038674 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.312323917 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.312090199 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.315750075 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.311939454 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.311743129 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.312943319 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.311735654 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.314134486 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.315493094 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.313946196 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.313345374 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.31627783 seconds)
  done (took 90.391181316 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312654961 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.314258037 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314273792 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312636589 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.314867721 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.314755288 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.314397141 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.311839745 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.313721229 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.31575327 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315092165 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.316709493 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.313954113 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.315863212 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.313387971 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.3151751 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.314926508 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317329649 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.312838888 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315866326 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.314831705 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.314555765 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.315601962 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.315184741 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.316311688 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.315002251 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.31399908 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.315996068 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31576821 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.315039697 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.317181305 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.314696968 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.31448694 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.315745713 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.314064964 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.316698302 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.314035569 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317445921 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.313782181 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.314362631 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.315270618 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.315915878 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.3154904 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.314871972 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.315152734 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.31512598 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.314853554 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.315378196 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.3154514 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.314765487 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.31775016 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.317477623 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.315733625 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.316690172 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.314242055 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.3150412 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315062608 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.317038728 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314261347 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.315291563 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316215783 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.316497014 seconds)
  done (took 82.770053534 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316487118 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.315596289 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.313374847 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.315762478 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.316782484 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.313711113 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.317295227 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.31583323 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.316777096 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.315975209 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316824001 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313661535 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316501062 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315586729 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.311426351 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311925247 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312103895 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.312228685 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314152694 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.310952259 seconds)
  done (took 27.524275352 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.313045461 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.316186113 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.313787906 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312645556 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.313829878 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.311767283 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.314249061 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313081832 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310375943 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315853735 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.314589029 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.315138517 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313700727 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.313893227 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.319099338 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.313094195 seconds)
  done (took 22.253227854 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.311666142 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.313396873 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.312909307 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.314174598 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.311110266 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.312392305 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.313758871 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.310875465 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.311969312 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.316229935 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.315038141 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.313992373 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.314825635 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.313951897 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.313229769 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.312944889 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.313102441 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.312787701 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.314126954 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.315616415 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.312396889 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.310295437 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.3140737 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.313935155 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.311429188 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.312897134 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.311139906 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.311878877 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.312561014 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.313253432 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.312975557 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.311418169 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.310690419 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.311520421 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.312765271 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.311942782 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.313346422 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.314104405 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.313478525 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.316142495 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.315067909 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.313675871 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.314383673 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.313225976 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.311489704 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.314041857 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.310193301 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.312122706 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.312362666 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.311544405 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.313330123 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.313984313 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.314115529 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.313921437 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.313726659 seconds)
  done (took 73.449797928 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313971519 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.314229359 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.312182114 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.315206515 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312671547 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.310996572 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.315042196 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.313830796 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311871784 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.313872699 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.31317824 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.315464507 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312785918 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.315114663 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314128912 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314838625 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.311789273 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.312901607 seconds)
  done (took 24.875890539 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.313487133 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.313184595 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.317298667 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312531976 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.313470935 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316202207 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313430677 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.314653683 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314976868 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.312491934 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313793936 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.315494446 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31429779 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.316027066 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315385788 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31320685 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.316242265 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31505553 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313244151 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.313604884 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316346937 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316920953 seconds)
  done (took 30.152975465 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.316216933 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.315034328 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.316377036 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.33378925 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.335413294 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.316961155 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.317202059 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.315636527 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.337904967 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.368275123 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.364161036 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.336283015 seconds)
  done (took 17.206198915 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314731952 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316212002 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314704729 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31816431 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316924089 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314992442 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313107153 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315384648 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31747028 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315668613 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315719987 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318826793 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31728624 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314862291 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318884321 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318054119 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314123841 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315626462 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31554961 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317797879 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314214467 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319656284 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317699221 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317107465 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31612457 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317055126 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319649234 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315523069 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317008357 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319379768 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317487623 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317097129 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321086738 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318696597 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319266677 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320252531 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316271262 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320213037 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319348841 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319612406 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.32031498 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319949474 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3216581 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317685552 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319923176 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319059598 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318574655 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318412126 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318430118 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32161219 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320406213 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31811391 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320509095 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32021293 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322099494 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321596822 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318347111 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319161996 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321697147 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318092347 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318609309 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321330308 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32010023 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318763543 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320927043 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318426678 seconds)
  done (took 88.235567962 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3193414 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31988602 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320275736 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320756201 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319056992 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319079541 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319346148 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319409524 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319684821 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319436729 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323539374 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319664229 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32051568 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320027781 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319300991 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319488672 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320491161 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322850068 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319449313 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324157061 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320710785 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320601174 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321593317 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321790477 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320995504 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3241704 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320495044 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321267781 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321944565 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320199004 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320899639 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320175078 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320810264 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.32113169 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322005642 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321778645 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319817507 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322545632 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322128901 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323919144 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321371216 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322600909 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322908634 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322300793 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321098325 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321131551 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321246918 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32304958 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32284326 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322389439 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322026328 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322050347 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321794899 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32214299 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321874411 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322411882 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322683079 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320719195 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322071142 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323649939 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321614374 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322185716 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324184395 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321634271 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321226861 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3218168 seconds)
  done (took 88.448701059 seconds)
done (took 1794.964901674 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.487283097 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.443783645 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.321961726 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.33081424 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.322623628 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.343465811 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.334876715 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.322561281 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.322018775 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.322036478 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.32298911 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.508979343 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.37663007 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.323567081 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.322646525 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.415607758 seconds)
  done (took 27.061325443 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.352210459 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.32812244 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.446230414 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.344755858 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.351912977 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.517927913 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.386041949 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.328250776 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.506978346 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.376929184 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.331940612 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.352554726 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.327769963 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.32906538 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.345949303 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.515343159 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.588479101 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.337140905 seconds)
  done (took 29.306493713 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.793774669 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.328214356 seconds)
  done (took 5.362241738 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.34599303 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.328547127 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.328868479 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.324950032 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.321347579 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.321044506 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.327516241 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.321307169 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.333142071 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.460650935 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.330010741 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.338345452 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.350015553 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.330675384 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.324056978 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.365377496 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.510648507 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.325385659 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.322831236 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.332183487 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.328291807 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.426908945 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.368469323 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.324897528 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.458830397 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.332521799 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.336088979 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.337564281 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.461640372 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.324774835 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.325638693 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.329070858 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.328550875 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.233229306 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.86226786 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.325082951 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.35123853 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.338689481 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.32292116 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.475673808 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.330158717 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.334181181 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.320186796 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.851642587 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.461422033 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.44909568 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.344303458 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.335475149 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.332234701 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.391325719 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.334081263 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.328989145 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.371118329 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.106483065 seconds)
  done (took 85.069763272 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.328098583 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.319521652 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.497439165 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.339499761 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319491752 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320973351 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.345074037 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.616072638 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.333302191 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.32166063 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.673880037 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.873889469 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.343162488 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.380316261 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.164116976 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.368970094 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321636093 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.320451822 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.322286585 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.325108605 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868863261 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32154765 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.322211053 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.587252514 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.360639043 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.82347183 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.32294665 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.327853062 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.323003304 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.322850262 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.828700148 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.341160477 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.383135194 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.325207552 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.586431268 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.698921893 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.662753111 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.32856924 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.339176178 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.322977373 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.341135149 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.819767464 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.681625743 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.323418645 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.338297889 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.82384176 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.325070016 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.331531706 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.332569553 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.577610629 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.323380309 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.324396533 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.322240552 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.324072439 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.323903691 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.390037595 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.394690183 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.821096601 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.324218154 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.324353904 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.345442948 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.326762238 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.336601127 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.328339011 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.325613998 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.683879219 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.470180504 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.331540572 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.681134316 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.824096398 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.339716261 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.896925227 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.33818824 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.345243726 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.334584608 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.323358352 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.343611536 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.816155852 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.348605282 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.323243566 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666733295 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.327261412 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.643393866 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.337477201 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.322305835 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899247528 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.33333694 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.327279672 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.322950021 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.324089892 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.325247484 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.329652722 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.58941618 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.342978955 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.324159276 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.322547726 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.325238946 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.334664491 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.324022861 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.327954287 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.894752051 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.338807993 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.323303961 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.330242633 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.322441551 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.328643359 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.325527444 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.324956005 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.586109918 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.322103725 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.324022208 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.323373738 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.322608153 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.325150553 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.571633013 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.326822168 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.628937129 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.326869633 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.322115762 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.329406369 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320990577 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.323471964 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.322979944 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.331979478 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.241940564 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.623375731 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.341009792 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.323464195 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.324246869 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.324016913 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.342439319 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.323834681 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.344216693 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.324885684 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.068785176 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.356674391 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.348066898 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.323987733 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.329726994 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.325623545 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.333096715 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.324567487 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609688515 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.586603404 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.505548704 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.326982688 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.324405715 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.055317662 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.396180546 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505513806 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.341805125 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.324943286 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566621552 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.528294792 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.327549208 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.324778116 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.328957302 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.581440039 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.325516526 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.621087805 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.849161712 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.342232909 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.325372177 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.072947639 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.0554795 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.326664286 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.324672703 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.647203923 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.340351554 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.325800586 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.324129853 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.324369344 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.324803505 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.33033817 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.328083789 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.32606423 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.325206653 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.460428322 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.515898286 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.343480083 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.332049457 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815126244 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.412772433 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.326757673 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.334357047 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.3273211 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.327376714 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.403291064 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.326701558 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.3356904 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.327763292 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.337367035 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.878273311 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.326701788 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.327695984 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.519775253 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001713984 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.342471951 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.327339348 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.328282613 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.200162504 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.840066134 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.351694392 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.631425005 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.336804035 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.36576464 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.326545946 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.432616122 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.843294493 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.332369218 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.327524943 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960846879 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.342393754 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.855660452 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.327529693 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.328924887 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899899422 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.342345738 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.329874442 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.329294255 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.339130442 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.636023947 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.328135389 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.348694965 seconds)
  done (took 496.293453798 seconds)
done (took 644.3310649 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.328721836 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.331083001 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.320845866 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.334585823 seconds)
  done (took 10.563166795 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.336588996 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334896896 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.334354985 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.336421351 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.339029541 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.336382577 seconds)
  done (took 9.265112258 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.32740766 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.337035602 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.334286851 seconds)
  done (took 8.247952489 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.538183045 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.348147148 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.662505263 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.347660349 seconds)
  done (took 9.144084649 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.333908551 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.335846257 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.337227392 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.335810969 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.337039728 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.336317641 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.334492714 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.335310341 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.336913005 seconds)
  done (took 13.270873874 seconds)
done (took 51.739578109 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.329718869 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.328762582 seconds)
    (3/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.314346114 seconds)
    (4/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.514261536 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.966055366 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.737436314 seconds)
    (7/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.3313679 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.597368453 seconds)
    (9/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.372064245 seconds)
    (10/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.328462256 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.369764951 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.356493811 seconds)
    (13/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.315640912 seconds)
    (14/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.318083527 seconds)
    (15/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.45325542 seconds)
    (16/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.938612706 seconds)
    (17/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.322485184 seconds)
    (18/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.316193637 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.372157797 seconds)
    (20/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.319132661 seconds)
    (21/286) benchmarking ("sort", Int8, true)...
    done (took 2.344542486 seconds)
    (22/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.332322644 seconds)
    (23/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.353805717 seconds)
    (24/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.333007534 seconds)
    (25/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.585328886 seconds)
    (26/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.332840783 seconds)
    (27/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.412091469 seconds)
    (28/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.319175268 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.73225806 seconds)
    (30/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.956057589 seconds)
    (31/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.706263982 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.34286457 seconds)
    (33/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.390365596 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 2.33213377 seconds)
    (35/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.316152848 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.246316425 seconds)
    (37/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.416127668 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.436599442 seconds)
    (39/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.322333528 seconds)
    (40/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.334858666 seconds)
    (41/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.356730471 seconds)
    (42/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.34099594 seconds)
    (43/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.438245326 seconds)
    (44/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458232088 seconds)
    (45/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.334907183 seconds)
    (46/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.337444727 seconds)
    (47/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.291976792 seconds)
    (48/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.344894892 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.442873116 seconds)
    (50/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.357722756 seconds)
    (51/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.320118251 seconds)
    (52/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.347206263 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.603014763 seconds)
    (54/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.319627176 seconds)
    (55/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.311078304 seconds)
    (56/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.324888737 seconds)
    (57/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.319717162 seconds)
    (58/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.363238095 seconds)
    (59/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.195786536 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.407697264 seconds)
    (61/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.333691348 seconds)
    (62/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.35090082 seconds)
    (63/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.332251949 seconds)
    (64/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.373542131 seconds)
    (65/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.320168553 seconds)
    (66/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.333628147 seconds)
    (67/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.397041476 seconds)
    (68/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.341160828 seconds)
    (69/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.342380319 seconds)
    (70/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.417370963 seconds)
    (71/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.417492377 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 2.334395947 seconds)
    (73/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.344532012 seconds)
    (74/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.464009346 seconds)
    (75/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.332037303 seconds)
    (76/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.325670141 seconds)
    (77/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.469630107 seconds)
    (78/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.373627995 seconds)
    (79/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.359395378 seconds)
    (80/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.57390775 seconds)
    (81/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.323110427 seconds)
    (82/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.381823319 seconds)
    (83/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.346426395 seconds)
    (84/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.321710017 seconds)
    (85/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.178694496 seconds)
    (86/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.321326802 seconds)
    (87/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.3333246 seconds)
    (88/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.335463879 seconds)
    (89/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.692022792 seconds)
    (90/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.156178736 seconds)
    (91/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.331469353 seconds)
    (92/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.32172362 seconds)
    (93/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.461520166 seconds)
    (94/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.319754425 seconds)
    (95/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.211820008 seconds)
    (96/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.324488737 seconds)
    (97/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.330023331 seconds)
    (98/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.398936972 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.531800649 seconds)
    (100/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.324929297 seconds)
    (101/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.3565669 seconds)
    (102/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.356480726 seconds)
    (103/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.324928651 seconds)
    (104/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.351201912 seconds)
    (105/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.488126173 seconds)
    (106/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.322847778 seconds)
    (107/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.859169092 seconds)
    (108/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.327977588 seconds)
    (109/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.360213659 seconds)
    (110/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.700517768 seconds)
    (111/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.323063823 seconds)
    (112/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.347730636 seconds)
    (113/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.706578195 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.855509706 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.358731409 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.614447162 seconds)
    (117/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.92612176 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.082813461 seconds)
    (119/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.37910164 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.640731996 seconds)
    (121/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.32373527 seconds)
    (122/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.341990952 seconds)
    (123/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.199135826 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.363417134 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.253988866 seconds)
    (126/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.326503239 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.466122125 seconds)
    (128/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.325423684 seconds)
    (129/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.336812016 seconds)
    (130/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.325135403 seconds)
    (131/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.379629361 seconds)
    (132/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.326980164 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.086893234 seconds)
    (134/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.365069211 seconds)
    (135/286) benchmarking ("sort", BigInt, true)...
    done (took 2.338185023 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.965308433 seconds)
    (137/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.456895852 seconds)
    (138/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.35358479 seconds)
    (139/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.357649692 seconds)
    (140/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.526198962 seconds)
    (141/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.525769716 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.363722181 seconds)
    (143/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.328783426 seconds)
    (144/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.349186795 seconds)
    (145/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.856480572 seconds)
    (146/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.339463975 seconds)
    (147/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.325405167 seconds)
    (148/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.324871045 seconds)
    (149/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.092914689 seconds)
    (150/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.129390142 seconds)
    (151/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.365070614 seconds)
    (152/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.598437476 seconds)
    (153/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.092759561 seconds)
    (154/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.850582292 seconds)
    (155/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.365017516 seconds)
    (156/286) benchmarking ("sort", Float64, false)...
    done (took 2.33849897 seconds)
    (157/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.325982172 seconds)
    (158/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.3727941 seconds)
    (159/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.340997442 seconds)
    (160/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.401164714 seconds)
    (161/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.424350508 seconds)
    (162/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.363455472 seconds)
    (163/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.740673119 seconds)
    (164/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.4255518 seconds)
    (165/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.338429428 seconds)
    (166/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.190335114 seconds)
    (167/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.532486497 seconds)
    (168/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.445094783 seconds)
    (169/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.381115688 seconds)
    (170/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.33940366 seconds)
    (171/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.137217145 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.753362225 seconds)
    (173/286) benchmarking ("sort", Float32, true)...
    done (took 2.355303857 seconds)
    (174/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.422908693 seconds)
    (175/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.350378524 seconds)
    (176/286) benchmarking ("sort", Int8, false)...
    done (took 2.339331694 seconds)
    (177/286) benchmarking ("sort", Bool, true)...
    done (took 2.339232902 seconds)
    (178/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.425071818 seconds)
    (179/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.089631968 seconds)
    (180/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.399018975 seconds)
    (181/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.822801813 seconds)
    (182/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.994449916 seconds)
    (183/286) benchmarking ("sort", Float64, true)...
    done (took 2.340850966 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.194364103 seconds)
    (185/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.327988054 seconds)
    (186/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.346058799 seconds)
    (187/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.355906941 seconds)
    (188/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.463946693 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.33596372 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.560080868 seconds)
    (191/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.327400595 seconds)
    (192/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.350674094 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.328208701 seconds)
    (194/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.326835483 seconds)
    (195/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.174761242 seconds)
    (196/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.336757255 seconds)
    (197/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.330361769 seconds)
    (198/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.329635144 seconds)
    (199/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.37232463 seconds)
    (200/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.367493951 seconds)
    (201/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.360966885 seconds)
    (202/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.340787321 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.366581612 seconds)
    (204/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.355352257 seconds)
    (205/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.55216512 seconds)
    (206/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.36061992 seconds)
    (207/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.37070531 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.384054207 seconds)
    (209/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.465434132 seconds)
    (210/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.326789118 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.266709089 seconds)
    (212/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.346432255 seconds)
    (213/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.479856849 seconds)
    (214/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.344753415 seconds)
    (215/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.346353325 seconds)
    (216/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.331148689 seconds)
    (217/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.344903782 seconds)
    (218/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.330408509 seconds)
    (219/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.329562108 seconds)
    (220/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.44264202 seconds)
    (221/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.718377652 seconds)
    (222/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.345052058 seconds)
    (223/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.370606074 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.256038804 seconds)
    (225/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.345065985 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.346609668 seconds)
    (227/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.272534133 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.762012968 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.568779607 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.39294123 seconds)
    (231/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.372416315 seconds)
    (232/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.33863522 seconds)
    (233/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.33162656 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.694103012 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.38580991 seconds)
    (236/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.193049808 seconds)
    (237/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.444296154 seconds)
    (238/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.335791931 seconds)
    (239/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.071944576 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.941640951 seconds)
    (241/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.216836506 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.733623832 seconds)
    (243/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.333507173 seconds)
    (244/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.072585061 seconds)
    (245/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.378359928 seconds)
    (246/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.840393401 seconds)
    (247/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.335658493 seconds)
    (248/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.333378274 seconds)
    (249/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.365343595 seconds)
    (250/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.36445703 seconds)
    (251/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.794140932 seconds)
    (252/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.33506994 seconds)
    (253/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.426146711 seconds)
    (254/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.368211368 seconds)
    (255/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.360555584 seconds)
    (256/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.4496148 seconds)
    (257/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.348670027 seconds)
    (258/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.362541511 seconds)
    (259/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.349983226 seconds)
    (260/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.564384807 seconds)
    (261/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.339760695 seconds)
    (262/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.380818385 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.430870796 seconds)
    (264/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.335918752 seconds)
    (265/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.375128909 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.354774985 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.431056106 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.210966374 seconds)
    (269/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.459167368 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.459557177 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.347420281 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.449750037 seconds)
    (273/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.335094638 seconds)
    (274/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.979424803 seconds)
    (275/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.340528821 seconds)
    (276/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.511008653 seconds)
    (277/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.378504602 seconds)
    (278/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.348782769 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.703225063 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.407811111 seconds)
    (281/286) benchmarking ("sort", Float32, false)...
    done (took 2.350409797 seconds)
    (282/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.336671951 seconds)
    (283/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.338359389 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.373522225 seconds)
    (285/286) benchmarking ("sort", BigInt, false)...
    done (took 2.351334275 seconds)
    (286/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.251129299 seconds)
  done (took 568.839403097 seconds)
done (took 570.089266659 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.386919779 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381306361 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.360819253 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.383682796 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.474607314 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.53888899 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.372708522 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.364696802 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.411608404 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.412243438 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.362626104 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.540293325 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.364727315 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.36211121 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.362563679 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378814779 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.351032245 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.362183671 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.381065544 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.374060253 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.380832989 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.361730051 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.41425144 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.538721574 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.366078709 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.36477105 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.366831524 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.38282472 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.476678378 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.367262704 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.366403974 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.374649069 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.352087234 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.361054789 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.360569881 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.385229289 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.375754579 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.374482161 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.369408066 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.395749056 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.354061264 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.361322442 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.36690952 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.364847921 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.365458835 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.370523903 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.367689307 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.370153949 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378658556 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380617596 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.367938916 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.377570563 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.367033675 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.365990236 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.380627533 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.365612158 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.370386558 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382351864 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.385041223 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383688333 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.36557451 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.370000479 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.369573246 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.380942448 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.372386805 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.353111535 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.36211218 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.372364232 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.354899289 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.370458338 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.353759677 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.372401075 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.367317117 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.379878538 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.39792912 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.356121621 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.360005142 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.367561038 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.373166586 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.36496929 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.377441989 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380303619 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.370679693 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.36943435 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382909214 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.543650993 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.378193333 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.369278287 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.375696782 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.386756723 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.374573441 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.378985713 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.371323452 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.363429682 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.377703316 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.371742959 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.371191992 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.37189664 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.37369059 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.380775441 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.359413948 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386888651 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.365811729 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.364868707 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.369006423 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.384165204 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.358363539 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.369028818 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.391620978 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.416476768 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.371043605 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.373646488 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.373308537 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388300946 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.380199496 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.373089639 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.364921798 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.368697651 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.359400663 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.401434881 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.371284791 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.371054731 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388112697 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.372053089 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.36812225 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.362407818 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.37066421 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386595798 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.491007329 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.381519844 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.401591977 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.368558388 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.373869342 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.405844713 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387682295 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.402138732 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.374451196 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3874678 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.385473379 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.369755209 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.381943973 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.383386067 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.374211301 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.379022738 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.36861824 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.407600034 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386010946 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385738671 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.393864955 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.493190684 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.37246206 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.371511119 seconds)
done (took 227.334251942 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.431732304 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.36835888 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.450220515 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.368065224 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.469017994 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.468445985 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.366920491 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.366926425 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.366704739 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.741845782 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.365891306 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.367179189 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.369343995 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.364358945 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.454659669 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.368235586 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.365231861 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.709875528 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.367132967 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.4383628 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.367176638 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.366159883 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.368461001 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.749610789 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.366915087 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.366461699 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.438130424 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.36847276 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.713892896 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.364210125 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.368520878 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.718381106 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.460692903 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386356613 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.380132897 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.377106376 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.469445811 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.385667362 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.452554299 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.450534977 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.451459912 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.397310811 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.363561031 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.370136237 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.37067098 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.369789271 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.366735889 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.396331896 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.369601346 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.368733461 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.709033896 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.379544548 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.378814909 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.370418112 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.367796973 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.389824187 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.402024192 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.372202781 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.461528704 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.371452125 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.432716438 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.750547771 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.752804865 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.37144469 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.367671963 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.369641014 seconds)
  done (took 106.835097545 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.436726975 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.444426964 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.484186832 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.371620302 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.421335779 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.490019633 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.371169387 seconds)
  done (took 11.29811442 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.377869884 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.378057045 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.42282129 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.41995732 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.36926838 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.583769922 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368978917 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.382912223 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.372632459 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.447586654 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.369514057 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370092453 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.376341514 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.366169088 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.42037647 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.383871964 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.484998425 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.371729117 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.369565867 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.522521826 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365912327 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.377529651 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.445388884 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.380868434 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.369002317 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.375947581 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.312261685 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.368558893 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370855769 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.368594241 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366083508 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.468962834 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368924978 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.366631407 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366520649 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.532074306 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.368586911 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368457316 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.371038898 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.371942717 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.36988928 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.371821072 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.368589675 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.367537976 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.368389226 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.393839427 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.365173809 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.369961198 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.37180851 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368338582 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.445388117 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.36818595 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.366625275 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.367907799 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.44722112 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378717918 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.368318758 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.365846345 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371770988 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367788543 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.523678883 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.41834627 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.37030433 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.41672054 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372357426 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.370127246 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.371338283 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.36860341 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.461317407 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.368520334 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.420692627 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.369251256 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.5914179 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.395269346 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374171083 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.373763558 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.374241296 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372973112 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.368370723 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.376780762 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.366618585 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.372573802 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.377668266 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367128526 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367288122 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.554467029 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.529361602 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.366807916 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383342025 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.37680907 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.369466483 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.445643353 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.37212003 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.370550883 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421553016 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.489954458 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.448955157 seconds)
  done (took 141.727671427 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.375084164 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.378782478 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.377101141 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.394287834 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.37142466 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370763611 seconds)
  done (took 9.546527255 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.376351704 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.37272257 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.373519924 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.372807395 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.373343343 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.369495719 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.369779896 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375012816 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.375707818 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.37143337 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.370418732 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.373418289 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.371058704 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.370266163 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.369838815 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.375193189 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.372734845 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.37081776 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.373110709 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372562808 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.372162219 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.370653266 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373769037 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.37803109 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.378199948 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.37360821 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382861515 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.375215378 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.375680696 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.37858359 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.377351315 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.371649074 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.375801366 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.380711775 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.375413296 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.377492938 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375698493 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.374875881 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.369118771 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.376216261 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.374665706 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374493128 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.372022547 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.377292182 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.377297347 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.380873978 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.377699676 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380599982 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.374218871 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.374858789 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.375769837 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.375155824 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.373713441 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.374840726 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.37901788 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395236955 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.375682886 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.374315613 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.37022861 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.376967853 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.376905621 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.376447261 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.379150511 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.378453388 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.373219787 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.370319444 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.379717776 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.37541853 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375309315 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.376649989 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.378200755 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.370446355 seconds)
  done (took 101.289469754 seconds)
done (took 371.972011171 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.801861252 seconds)
  done (took 4.087302182 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.472606032 seconds)
  done (took 3.757622808 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.59762607 seconds)
  done (took 21.89338667 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.428767174 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.393227375 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.385718605 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.374972995 seconds)
  done (took 10.867269896 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.594131198 seconds)
  done (took 3.880489583 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.379733241 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.37707273 seconds)
  done (took 6.044509717 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.678367196 seconds)
  done (took 3.963641835 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.845798256 seconds)
  done (took 4.141809757 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.395443814 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.388630741 seconds)
  done (took 6.079884563 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.37118816 seconds)
  done (took 3.657346227 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.331399626 seconds)
  done (took 17.617765376 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.372180769 seconds)
  done (took 3.662139099 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.391630921 seconds)
  done (took 3.67724565 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.818994461 seconds)
  done (took 6.103298715 seconds)
done (took 100.719105836 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.368623925 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.376037748 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.375478283 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.371989639 seconds)
  done (took 10.777004434 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.410611051 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.411377425 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.416095556 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.423436896 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.416989942 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.413840447 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.403904548 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.404487668 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.421829988 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.414604618 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.430827582 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.420209844 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.431351662 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.417675285 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.415313924 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.416479947 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.421987004 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.413682676 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.422295485 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.417242086 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.37890312 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.42628267 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.41541279 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.381403367 seconds)
  done (took 35.232913371 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.899637337 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.45011449 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.532180318 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.433470975 seconds)
  done (took 7.600792448 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.432543753 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.436388061 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.447467399 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.485722049 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.513492595 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.444037962 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.408978838 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.402578221 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.391023695 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.434951177 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.510029237 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.448671249 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.53732002 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.381135291 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.576925317 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.380647076 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.381854594 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.432741733 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.48574404 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.504613131 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.383249896 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.43096822 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.438393681 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.451251164 seconds)
  done (took 36.02861462 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.380337286 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.399006537 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.380213302 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.380297356 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.390234214 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.381458441 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.381147756 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.382550101 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.381266336 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.385792317 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.381344995 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.394475902 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.380472217 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.381660078 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.388628555 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.383522389 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.388165668 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.380174382 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.381658611 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.389944244 seconds)
  done (took 28.980663408 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.372078635 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.375030656 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.72459753 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.631786745 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.377846634 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.380079951 seconds)
  done (took 14.150721744 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.447963742 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.588492511 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.385761679 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.733552522 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.812376365 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.384903781 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.383774422 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.623098922 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.929201034 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.9227451 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.442261436 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.452434552 seconds)
  done (took 20.3989029 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.388612911 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.382393669 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.390016086 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.398115038 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.437512197 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.386332431 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.391636609 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.374429445 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.443874555 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.43866094 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.385857224 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.437145981 seconds)
  done (took 22.146702726 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463117424 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377544845 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.38479194 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404121634 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379164327 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59168202 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393330818 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.089098097 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.398288694 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653001386 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37673475 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466681145 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.635620492 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381967961 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381778807 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.373224511 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606982463 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864924474 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379055724 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378885169 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411579102 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390138409 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394448066 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596680576 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593975032 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381168146 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.638459027 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381592619 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659003474 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39562522 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390909764 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378788018 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653166697 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051342418 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493881391 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593389178 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403332958 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382993227 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.38780242 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.381338921 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414993412 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383008433 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390304532 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381427405 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380560124 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384057848 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098050533 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.40266027 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.378461093 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381353033 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639830446 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481849597 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.385470992 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382875266 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460160723 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384419937 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.383266175 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48096689 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952565123 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383114263 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39480044 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.388698683 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392960838 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383041076 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005489407 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.388526168 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.38745993 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385130671 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382244627 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382980218 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402252167 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384207985 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.406010451 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385432645 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074880231 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387799862 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384513405 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923963108 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384436157 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.384062975 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608661921 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381482957 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383612852 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.380957922 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382903614 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080572597 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390488644 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.370320163 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424883861 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094504548 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.614674037 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410426979 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408072533 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.608538267 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.36923979 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384565648 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.38266337 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384738214 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402820134 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.097940403 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401407784 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.384667694 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63928056 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.594296027 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390502567 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.387396945 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879228613 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409953878 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.404017474 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385676189 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.600453237 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.969808269 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40124522 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384424736 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405886773 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385758236 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117635105 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401154567 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.393562376 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390128072 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649205662 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.171743681 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387524357 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453416714 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390601241 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386886108 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385102902 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390951395 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38575601 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.591578447 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418430288 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.397018215 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.383944223 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387377779 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.382630929 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418922342 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.387404938 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610829466 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384277099 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661855095 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386016626 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385087506 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384264867 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.611467528 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.390677482 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.393092778 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64672688 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400462625 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399350769 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400011623 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407678803 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486761073 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409606407 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.387047985 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646508046 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.391980983 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.391900725 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385528579 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405378026 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396948353 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.393604032 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38828763 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971400487 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364006919 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395617099 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.277912723 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.405291147 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458112088 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395320817 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.601872956 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.389719958 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411304856 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.392847686 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.396440963 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6160917 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398434533 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.386756622 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47286708 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.879337023 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99331893 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404076934 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.390426743 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.386814789 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.387799051 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387786983 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384949451 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390818589 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.599731008 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405580908 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393165028 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.990996634 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391024302 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390485082 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.397262919 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404356032 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.395875521 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389966026 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.383834041 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393755593 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395638797 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.400679904 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53392538 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.404646843 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387756411 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.904173381 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395654674 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390970202 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388983452 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42571957 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390058709 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206138663 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645872872 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393049728 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641550561 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393202233 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.41091986 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.390793278 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395840077 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392784037 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.427340637 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41744624 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.403527643 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388413636 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395617212 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954343799 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119429818 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926972902 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404867615 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.398772754 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396594176 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113286539 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409095825 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39210444 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627258325 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114462579 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407472288 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874916064 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.407611643 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16926463 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653382975 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625798938 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392868655 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.394912568 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659524495 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609844081 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427110172 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39210383 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394150839 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.379287597 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953107107 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411047501 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473587342 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112369488 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413191737 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394623848 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.465844282 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.39413357 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827756692 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414423257 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39441921 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394600036 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410182552 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210472124 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400042413 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395233465 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018030011 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395732086 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.893425713 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414209926 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611988767 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.411523087 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.402742449 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.393969152 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.398394526 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.649073306 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650978705 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401964326 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396543988 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959892681 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.300637977 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.40176428 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395326636 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129523247 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396558467 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683214167 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.409754838 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.404081789 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397594237 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394813587 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394883309 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.394173132 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403293896 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371021268 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879127773 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.402011478 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396563285 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410250294 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244273076 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652463402 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.41034957 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.984256231 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623380099 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403104774 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418054592 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.40019627 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401773436 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.384759564 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396178794 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.635170628 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451441744 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621873959 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39643411 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.410582209 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.41880352 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610950353 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398435202 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398786308 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645491458 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.398061744 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.405524713 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110326851 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426165871 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410930465 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400188569 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404425195 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437420385 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470348884 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613967499 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.410508558 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.40880379 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812066891 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434498481 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403758112 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.414425959 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49561513 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39769977 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.410936033 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.17490737 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993428256 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143313464 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.995078074 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670586893 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403898242 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398275089 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400869465 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547419662 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400975104 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674282628 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397764229 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.419663376 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426854907 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399213752 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41581247 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618508158 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674271055 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399136822 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400446579 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404355954 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.401629899 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413249688 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.61241011 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895181217 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949838967 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402371928 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414342508 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.127828062 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692669124 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401672332 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403268007 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402968197 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.412154354 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.403976087 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.407331277 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40735095 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55138696 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654049561 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082545594 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.436873287 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.430051857 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.176936261 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40315992 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.659442092 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397010943 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.62109852 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999687837 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11048425 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670037611 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470873709 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619744794 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.401893417 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551854421 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.410302606 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399887982 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40518307 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269075671 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.402645292 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.414134363 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000099151 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670465225 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.404980358 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.409644515 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428764663 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.415079638 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62763196 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124397555 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.629834356 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41294377 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411523013 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40508642 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000953135 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674899543 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406105567 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.409021882 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649729256 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642747804 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435622145 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.884965181 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.402037308 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969965669 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.380096642 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425456198 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413098821 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11513223 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004406412 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.404816702 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914025002 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409309204 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416278228 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68253946 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.411433228 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410108539 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68658317 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.409968273 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422168046 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627234568 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.000971997 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17518735 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.419745289 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419011874 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.415122685 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408361234 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45431565 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406783131 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413157558 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.838536568 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.429256652 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408221769 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418350441 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.405803396 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413471471 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.406993854 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408084165 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.412406281 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.401134118 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.408242872 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413591405 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511095929 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976831342 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428637465 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.085365267 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.739282188 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.665456204 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411131175 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.41412235 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.410175846 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409510849 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409290599 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407930611 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422085247 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959194625 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.408509046 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.438201755 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411776455 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.626191332 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621870218 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408985379 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628504617 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415696896 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441891583 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.395615794 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406487466 seconds)
  done (took 981.760354555 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.436075021 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.45923912 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.45801391 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.44995108 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.449588614 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.457641277 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.490066285 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.432338352 seconds)
  done (took 20.955880952 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.416830209 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.421218108 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.407325821 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.422051778 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.41178326 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.879200032 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.440056073 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.419685724 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.42098853 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.413870329 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.422355772 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.069645917 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.421251592 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.410288143 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.415612271 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.419124158 seconds)
  done (took 33.144172751 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.389559786 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.549792185 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.328876621 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.451037706 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.409436183 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.412045095 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.638977181 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.434474013 seconds)
  done (took 26.936529265 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.423555282 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.423330927 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.427137107 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.423812061 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.426823449 seconds)
  done (took 8.450564929 seconds)
done (took 1247.851351462 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.418381597 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.41849964 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.415392776 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.418913414 seconds)
  done (took 6.995009603 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.401597679 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.402398256 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.406479407 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.418091659 seconds)
  done (took 9.953308567 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.118562239 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.062012552 seconds)
  done (took 5.506122408 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.41457997 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.173991403 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.149115224 seconds)
  done (took 8.064812799 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.711266466 seconds)
  done (took 3.035601295 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.826962181 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.781827692 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.607898372 seconds)
  done (took 6.541700758 seconds)
done (took 41.421706982 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.422770725 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.66747393 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.570908473 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.416883593 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.575311007 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.570192348 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.219791407 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.413205631 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.434614765 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.414419511 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.418185455 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.575926145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.131761198 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.66523483 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.131502579 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.665737138 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.577652569 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.417378463 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.43090352 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415733006 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.217774725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.422513248 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.414927462 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.426079818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.575688309 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.562758803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.417803844 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.679391333 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.41572127 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.414458762 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.561386304 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.423147987 seconds)
  done (took 83.994012938 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.416104142 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.416881676 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.418555488 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.416626479 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.420816637 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.417265678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.41774042 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.413993598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.423688539 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.418374913 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414051397 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.422342573 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.418314975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.428294103 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.419124461 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.430108704 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.413613238 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.417285265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.416785217 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.432411212 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.420352795 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.417619566 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.430602816 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.416233578 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.418613559 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.416302444 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.437106135 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.428294139 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.4160894 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.420970426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.421797403 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.435503526 seconds)
  done (took 78.801348419 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.419030882 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.445428537 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.417747522 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.414652355 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.430380949 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.417958735 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.418336909 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416943318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.442550155 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.427875524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416396076 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.434673338 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.417919719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.416879152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.436078169 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.423479117 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.421251566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.434891966 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.419000021 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.417634851 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.43410606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.427503382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417584743 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.428190333 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.417808607 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.437448891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.419403584 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.419865565 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.431980624 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.420305086 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.421836303 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.419129763 seconds)
  done (took 78.915825291 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.613135675 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.425592432 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.428655691 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.359770893 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.429818015 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.424864573 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.419528247 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.616195733 seconds)
  done (took 15.048998007 seconds)
done (took 258.085856409 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.419386421 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.421524506 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.629805987 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.454313557 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.417174034 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.471793039 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.449573626 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.624650204 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.389204174 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.630425653 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.439549162 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.447069253 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.418714636 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.463115693 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.705282407 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.55909092 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.354265242 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.424946892 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.770845243 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.455206828 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.700032997 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.433366393 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.62959971 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.379442377 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.444424736 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.42311272 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.421557983 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.338536132 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.462663619 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.77476188 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.432260736 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.409557767 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.490675132 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.497100368 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.557162592 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.548536601 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.441274332 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.490377674 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.632106092 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.422521229 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.438592086 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.204466893 seconds)
  done (took 84.850257489 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.430446226 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.541694991 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.430191849 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.429260126 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.42865848 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.538952428 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.514786845 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.432898765 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.429632715 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.430519384 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.431514333 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.432518714 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.430051412 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.430754602 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.42926584 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.431300668 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.431504366 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.432754776 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.43102715 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.467122137 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.54136534 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.431976343 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.423320861 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.431970204 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.516864428 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.538481858 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.431935222 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.425988718 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.464943158 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.433847649 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.433002593 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.471826666 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.432226995 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.434900742 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.538216297 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.517061777 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.43324432 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.434029464 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.541526421 seconds)
  done (took 58.168928101 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.431698868 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.684900481 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.863697362 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.444558847 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.435027543 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.438994034 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.511543841 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.436258724 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.434328211 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.435559354 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.593209363 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.43766862 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.465175979 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.888977134 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.440530222 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.434800925 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.435280595 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.431943795 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.688440414 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.444343734 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.531102178 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.435903539 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.513186011 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.442629647 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.45343011 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.434834552 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.438798299 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.023279749 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437914072 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.591778389 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.222142018 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.510926078 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.95982597 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.862561595 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.223531156 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.442347816 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.43797524 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.588279988 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.438168373 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.438953173 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.510376028 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.435873578 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.863691616 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.118368102 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.453088354 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.436219738 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.053662488 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.594026395 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.680566451 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445178063 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.894334335 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.438643015 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.435107394 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.43643209 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.679773188 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.44364226 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.4366497 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.061193332 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.461815608 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.512637558 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.436509741 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.437663292 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.695623189 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.440879622 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.690434712 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.439403881 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.444638231 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.457054364 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.866889205 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.438394469 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.145717231 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.456511977 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.437617403 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.590383858 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.68890983 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.081468368 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.442958453 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.699718483 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.975790947 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.514087984 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.441817959 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.015627101 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.518614611 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.443436235 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.438739883 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.440088836 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.438147928 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.481862175 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.515393528 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.067902323 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.134808207 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.075216121 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.533391931 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.453113925 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.438838921 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.049701196 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.451842035 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.439616841 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.863600246 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.148525965 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.460348998 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.445741848 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.133134281 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.460681874 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.522137831 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.447117798 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.878488279 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.450030134 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.487370975 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.441975426 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.449372732 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.462960405 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.518486509 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.445265952 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.442647048 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.111952414 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.617578859 seconds)
  done (took 189.083228635 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.434312061 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.451155446 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.441884349 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.432392241 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.435501733 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.442090794 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.435257559 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.437330889 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.440100237 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.434673672 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.437860143 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.438739788 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.43282045 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.462631679 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.447518814 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.444294486 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.436235465 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.435940713 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.437060119 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.437789205 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.438611352 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.463266296 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.437319989 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.43872838 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.436965465 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.436482905 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.454590751 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.438258126 seconds)
  done (took 65.686912216 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.44418146 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.999641952 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.444019833 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.575942794 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.468345692 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.442116469 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.574675462 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.506216466 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.450941374 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.442124011 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.441854653 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.744256543 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.446815457 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.951335915 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.633581129 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.58009742 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.946911394 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.461125684 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.440687796 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.442695484 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.577258298 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.460199508 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.74536308 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.998627772 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.44580238 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.001478279 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.435872738 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.447308784 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.445197312 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.001648629 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.442699105 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.746717094 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.520798362 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.505753509 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.007805213 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.953442643 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.968560332 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.593869899 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.449082148 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.446001996 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.444766868 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.436627843 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.005209721 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.4460144 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.446436156 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.000016205 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.462468684 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.448299572 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.451244763 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.444572408 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.50695702 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.504931131 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.748315682 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.009786239 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.521932869 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.45903233 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.57883563 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.835468307 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.447364448 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.955946879 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.436918247 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.010510268 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.46574071 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.437739863 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.445684836 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.452895693 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.595660559 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.580214745 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.9577953 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.465313326 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.956007902 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.64264484 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.449690892 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.447046755 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.449136452 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.017961829 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.962707346 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.611724409 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.586758647 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.646408662 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.444077367 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.449243161 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.43852144 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.526335899 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.447163093 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.01956015 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.979582536 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.466803894 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.444947608 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.448809136 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.449605174 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.624976755 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.019096692 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.528220381 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.95432323 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.774597049 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.763307556 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.45134202 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.508476059 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.462152104 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.753095897 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.44999745 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.50343982 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.892639351 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.758435048 seconds)
  done (took 171.313072482 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.695222478 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.467374864 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.540948875 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.601220499 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.061691133 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.057346848 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.445330633 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.570532063 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.564057795 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.707862955 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.448198229 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.541500972 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.673281589 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.52666799 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.172789932 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.527189712 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.542633154 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.609709185 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.598436584 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.444653361 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.083816595 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.754902674 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.641383972 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.466522079 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.556620555 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.203586583 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.030935038 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.039261356 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.625697676 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.446669249 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.965259363 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.44194049 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.377350012 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.115590314 seconds)
  done (took 66.900849332 seconds)
done (took 637.335924156 seconds)
SAVING RESULT...
DONE!
